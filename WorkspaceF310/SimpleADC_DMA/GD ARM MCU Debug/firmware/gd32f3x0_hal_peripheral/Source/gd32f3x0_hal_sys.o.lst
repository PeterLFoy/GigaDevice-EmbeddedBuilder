   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_sys.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NVIC_SetPriority,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NVIC_SetPriority:
  24              	.LFB110:
  25              		.file 1 "../firmware/cmsis/inc/core_cm4.h"
   1:../firmware/cmsis/inc/core_cm4.h **** /**************************************************************************//**
   2:../firmware/cmsis/inc/core_cm4.h ****  * @file     core_cm4.h
   3:../firmware/cmsis/inc/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../firmware/cmsis/inc/core_cm4.h ****  * @version  V3.30
   5:../firmware/cmsis/inc/core_cm4.h ****  * @date     17. February 2014
   6:../firmware/cmsis/inc/core_cm4.h ****  *
   7:../firmware/cmsis/inc/core_cm4.h ****  * @note
   8:../firmware/cmsis/inc/core_cm4.h ****  *
   9:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
  10:../firmware/cmsis/inc/core_cm4.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:../firmware/cmsis/inc/core_cm4.h **** 
  12:../firmware/cmsis/inc/core_cm4.h ****    All rights reserved.
  13:../firmware/cmsis/inc/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:../firmware/cmsis/inc/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:../firmware/cmsis/inc/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:../firmware/cmsis/inc/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:../firmware/cmsis/inc/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:../firmware/cmsis/inc/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:../firmware/cmsis/inc/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:../firmware/cmsis/inc/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:../firmware/cmsis/inc/core_cm4.h ****      to endorse or promote products derived from this software without
  22:../firmware/cmsis/inc/core_cm4.h ****      specific prior written permission.
  23:../firmware/cmsis/inc/core_cm4.h ****    *
  24:../firmware/cmsis/inc/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:../firmware/cmsis/inc/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:../firmware/cmsis/inc/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:../firmware/cmsis/inc/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:../firmware/cmsis/inc/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:../firmware/cmsis/inc/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:../firmware/cmsis/inc/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:../firmware/cmsis/inc/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:../firmware/cmsis/inc/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../firmware/cmsis/inc/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:../firmware/cmsis/inc/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:../firmware/cmsis/inc/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:../firmware/cmsis/inc/core_cm4.h **** 
  37:../firmware/cmsis/inc/core_cm4.h **** 
  38:../firmware/cmsis/inc/core_cm4.h **** #if defined ( __ICCARM__ )
  39:../firmware/cmsis/inc/core_cm4.h **** #pragma system_include  /* treat file as system include file for MISRA check */
  40:../firmware/cmsis/inc/core_cm4.h **** #endif
  41:../firmware/cmsis/inc/core_cm4.h **** 
  42:../firmware/cmsis/inc/core_cm4.h **** #ifdef __cplusplus
  43:../firmware/cmsis/inc/core_cm4.h **** extern "C" {
  44:../firmware/cmsis/inc/core_cm4.h **** #endif
  45:../firmware/cmsis/inc/core_cm4.h **** 
  46:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  47:../firmware/cmsis/inc/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  48:../firmware/cmsis/inc/core_cm4.h **** 
  49:../firmware/cmsis/inc/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:../firmware/cmsis/inc/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:../firmware/cmsis/inc/core_cm4.h **** 
  52:../firmware/cmsis/inc/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:../firmware/cmsis/inc/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:../firmware/cmsis/inc/core_cm4.h **** 
  55:../firmware/cmsis/inc/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:../firmware/cmsis/inc/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:../firmware/cmsis/inc/core_cm4.h **** 
  58:../firmware/cmsis/inc/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:../firmware/cmsis/inc/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:../firmware/cmsis/inc/core_cm4.h ****  */
  61:../firmware/cmsis/inc/core_cm4.h **** 
  62:../firmware/cmsis/inc/core_cm4.h **** 
  63:../firmware/cmsis/inc/core_cm4.h **** /*******************************************************************************
  64:../firmware/cmsis/inc/core_cm4.h ****  *                 CMSIS definitions
  65:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
  66:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup Cortex_M4
  67:../firmware/cmsis/inc/core_cm4.h ****   @{
  68:../firmware/cmsis/inc/core_cm4.h ****  */
  69:../firmware/cmsis/inc/core_cm4.h **** 
  70:../firmware/cmsis/inc/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:../firmware/cmsis/inc/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:../firmware/cmsis/inc/core_cm4.h **** 
  76:../firmware/cmsis/inc/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:../firmware/cmsis/inc/core_cm4.h **** 
  78:../firmware/cmsis/inc/core_cm4.h **** 
  79:../firmware/cmsis/inc/core_cm4.h **** #if   defined ( __CC_ARM )
  80:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for ARM Compil
  81:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         __inline                                   /*!< inline keyword for ARM Com
  82:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static __inline
  83:../firmware/cmsis/inc/core_cm4.h **** 
  84:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __GNUC__ )
  85:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for GNU Compil
  86:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                     /*!< inline keyword for GNU Com
  87:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
  88:../firmware/cmsis/inc/core_cm4.h **** 
  89:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for IAR Compil
  91:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                     /*!< inline keyword for IAR Com
  92:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
  93:../firmware/cmsis/inc/core_cm4.h **** 
  94:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TMS470__ )
  95:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for TI CCS Com
  96:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
  97:../firmware/cmsis/inc/core_cm4.h **** 
  98:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TASKING__ )
  99:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for TASKING Co
 100:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                     /*!< inline keyword for TASKING
 101:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
 102:../firmware/cmsis/inc/core_cm4.h **** 
 103:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __CSMC__ )      /* Cosmic */
 104:../firmware/cmsis/inc/core_cm4.h **** #define __packed
 105:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            _asm                                      /*!< asm keyword for COSMIC Comp
 106:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                    /*use -pc99 on compile line !< i
 107:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
 108:../firmware/cmsis/inc/core_cm4.h **** 
 109:../firmware/cmsis/inc/core_cm4.h **** #endif
 110:../firmware/cmsis/inc/core_cm4.h **** 
 111:../firmware/cmsis/inc/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
 112:../firmware/cmsis/inc/core_cm4.h **** */
 113:../firmware/cmsis/inc/core_cm4.h **** #if defined ( __CC_ARM )
 114:../firmware/cmsis/inc/core_cm4.h **** #if defined __TARGET_FPU_VFP
 115:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 116:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 117:../firmware/cmsis/inc/core_cm4.h **** #else
 118:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 119:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 120:../firmware/cmsis/inc/core_cm4.h **** #endif
 121:../firmware/cmsis/inc/core_cm4.h **** #else
 122:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 123:../firmware/cmsis/inc/core_cm4.h **** #endif
 124:../firmware/cmsis/inc/core_cm4.h **** 
 125:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __GNUC__ )
 126:../firmware/cmsis/inc/core_cm4.h **** #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 127:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 128:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 129:../firmware/cmsis/inc/core_cm4.h **** #else
 130:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 131:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 132:../firmware/cmsis/inc/core_cm4.h **** #endif
 133:../firmware/cmsis/inc/core_cm4.h **** #else
 134:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 135:../firmware/cmsis/inc/core_cm4.h **** #endif
 136:../firmware/cmsis/inc/core_cm4.h **** 
 137:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __ICCARM__ )
 138:../firmware/cmsis/inc/core_cm4.h **** #if defined __ARMVFP__
 139:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 140:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 141:../firmware/cmsis/inc/core_cm4.h **** #else
 142:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 143:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 144:../firmware/cmsis/inc/core_cm4.h **** #endif
 145:../firmware/cmsis/inc/core_cm4.h **** #else
 146:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 147:../firmware/cmsis/inc/core_cm4.h **** #endif
 148:../firmware/cmsis/inc/core_cm4.h **** 
 149:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TMS470__ )
 150:../firmware/cmsis/inc/core_cm4.h **** #if defined __TI_VFP_SUPPORT__
 151:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 152:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 153:../firmware/cmsis/inc/core_cm4.h **** #else
 154:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 155:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 156:../firmware/cmsis/inc/core_cm4.h **** #endif
 157:../firmware/cmsis/inc/core_cm4.h **** #else
 158:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 159:../firmware/cmsis/inc/core_cm4.h **** #endif
 160:../firmware/cmsis/inc/core_cm4.h **** 
 161:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TASKING__ )
 162:../firmware/cmsis/inc/core_cm4.h **** #if defined __FPU_VFP__
 163:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 164:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 165:../firmware/cmsis/inc/core_cm4.h **** #else
 166:../firmware/cmsis/inc/core_cm4.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 167:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 168:../firmware/cmsis/inc/core_cm4.h **** #endif
 169:../firmware/cmsis/inc/core_cm4.h **** #else
 170:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 171:../firmware/cmsis/inc/core_cm4.h **** #endif
 172:../firmware/cmsis/inc/core_cm4.h **** 
 173:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __CSMC__ )      /* Cosmic */
 174:../firmware/cmsis/inc/core_cm4.h **** #if ( __CSMC__ & 0x400)       // FPU present for parser
 175:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 176:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 177:../firmware/cmsis/inc/core_cm4.h **** #else
 178:../firmware/cmsis/inc/core_cm4.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 179:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 180:../firmware/cmsis/inc/core_cm4.h **** #endif
 181:../firmware/cmsis/inc/core_cm4.h **** #else
 182:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 183:../firmware/cmsis/inc/core_cm4.h **** #endif
 184:../firmware/cmsis/inc/core_cm4.h **** #endif
 185:../firmware/cmsis/inc/core_cm4.h **** 
 186:../firmware/cmsis/inc/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 187:../firmware/cmsis/inc/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 188:../firmware/cmsis/inc/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 189:../firmware/cmsis/inc/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 190:../firmware/cmsis/inc/core_cm4.h **** 
 191:../firmware/cmsis/inc/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 192:../firmware/cmsis/inc/core_cm4.h **** 
 193:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CMSIS_GENERIC
 194:../firmware/cmsis/inc/core_cm4.h **** 
 195:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 196:../firmware/cmsis/inc/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 197:../firmware/cmsis/inc/core_cm4.h **** 
 198:../firmware/cmsis/inc/core_cm4.h **** /* check device defines and use defaults */
 199:../firmware/cmsis/inc/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 200:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CM4_REV
 201:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_REV               0x0000
 202:../firmware/cmsis/inc/core_cm4.h **** #warning "__CM4_REV not defined in device header file; using default!"
 203:../firmware/cmsis/inc/core_cm4.h **** #endif
 204:../firmware/cmsis/inc/core_cm4.h **** 
 205:../firmware/cmsis/inc/core_cm4.h **** #ifndef __FPU_PRESENT
 206:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_PRESENT             0
 207:../firmware/cmsis/inc/core_cm4.h **** #warning "__FPU_PRESENT not defined in device header file; using default!"
 208:../firmware/cmsis/inc/core_cm4.h **** #endif
 209:../firmware/cmsis/inc/core_cm4.h **** 
 210:../firmware/cmsis/inc/core_cm4.h **** #ifndef __MPU_PRESENT
 211:../firmware/cmsis/inc/core_cm4.h **** #define __MPU_PRESENT             0
 212:../firmware/cmsis/inc/core_cm4.h **** #warning "__MPU_PRESENT not defined in device header file; using default!"
 213:../firmware/cmsis/inc/core_cm4.h **** #endif
 214:../firmware/cmsis/inc/core_cm4.h **** 
 215:../firmware/cmsis/inc/core_cm4.h **** #ifndef __NVIC_PRIO_BITS
 216:../firmware/cmsis/inc/core_cm4.h **** #define __NVIC_PRIO_BITS          4
 217:../firmware/cmsis/inc/core_cm4.h **** #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 218:../firmware/cmsis/inc/core_cm4.h **** #endif
 219:../firmware/cmsis/inc/core_cm4.h **** 
 220:../firmware/cmsis/inc/core_cm4.h **** #ifndef __Vendor_SysTickConfig
 221:../firmware/cmsis/inc/core_cm4.h **** #define __Vendor_SysTickConfig    0
 222:../firmware/cmsis/inc/core_cm4.h **** #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 223:../firmware/cmsis/inc/core_cm4.h **** #endif
 224:../firmware/cmsis/inc/core_cm4.h **** #endif
 225:../firmware/cmsis/inc/core_cm4.h **** 
 226:../firmware/cmsis/inc/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 227:../firmware/cmsis/inc/core_cm4.h **** /**
 228:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 229:../firmware/cmsis/inc/core_cm4.h **** 
 230:../firmware/cmsis/inc/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 231:../firmware/cmsis/inc/core_cm4.h ****     \li to specify the access to peripheral variables.
 232:../firmware/cmsis/inc/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 233:../firmware/cmsis/inc/core_cm4.h **** */
 234:../firmware/cmsis/inc/core_cm4.h **** #ifdef __cplusplus
 235:../firmware/cmsis/inc/core_cm4.h **** #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 236:../firmware/cmsis/inc/core_cm4.h **** #else
 237:../firmware/cmsis/inc/core_cm4.h **** #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 238:../firmware/cmsis/inc/core_cm4.h **** #endif
 239:../firmware/cmsis/inc/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 240:../firmware/cmsis/inc/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 241:../firmware/cmsis/inc/core_cm4.h **** 
 242:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group Cortex_M4 */
 243:../firmware/cmsis/inc/core_cm4.h **** 
 244:../firmware/cmsis/inc/core_cm4.h **** 
 245:../firmware/cmsis/inc/core_cm4.h **** 
 246:../firmware/cmsis/inc/core_cm4.h **** /*******************************************************************************
 247:../firmware/cmsis/inc/core_cm4.h ****  *                 Register Abstraction
 248:../firmware/cmsis/inc/core_cm4.h ****   Core Register contain:
 249:../firmware/cmsis/inc/core_cm4.h ****   - Core Register
 250:../firmware/cmsis/inc/core_cm4.h ****   - Core NVIC Register
 251:../firmware/cmsis/inc/core_cm4.h ****   - Core SCB Register
 252:../firmware/cmsis/inc/core_cm4.h ****   - Core SysTick Register
 253:../firmware/cmsis/inc/core_cm4.h ****   - Core Debug Register
 254:../firmware/cmsis/inc/core_cm4.h ****   - Core MPU Register
 255:../firmware/cmsis/inc/core_cm4.h ****   - Core FPU Register
 256:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
 257:../firmware/cmsis/inc/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 258:../firmware/cmsis/inc/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 259:../firmware/cmsis/inc/core_cm4.h **** */
 260:../firmware/cmsis/inc/core_cm4.h **** 
 261:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
 262:../firmware/cmsis/inc/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 263:../firmware/cmsis/inc/core_cm4.h ****     \brief  Core Register type definitions.
 264:../firmware/cmsis/inc/core_cm4.h ****   @{
 265:../firmware/cmsis/inc/core_cm4.h ****  */
 266:../firmware/cmsis/inc/core_cm4.h **** 
 267:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 268:../firmware/cmsis/inc/core_cm4.h ****  */
 269:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 270:../firmware/cmsis/inc/core_cm4.h ****     struct {
 271:../firmware/cmsis/inc/core_cm4.h **** #if (__CORTEX_M != 0x04)
 272:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 27;             /*!< bit:  0..26  Reserved                           *
 273:../firmware/cmsis/inc/core_cm4.h **** #else
 274:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 16;             /*!< bit:  0..15  Reserved                           *
 275:../firmware/cmsis/inc/core_cm4.h ****         uint32_t GE: 4;                      /*!< bit: 16..19  Greater than or Equal flags        *
 276:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved1: 7;              /*!< bit: 20..26  Reserved                           *
 277:../firmware/cmsis/inc/core_cm4.h **** #endif
 278:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Q: 1;                       /*!< bit:     27  Saturation condition flag          *
 279:../firmware/cmsis/inc/core_cm4.h ****         uint32_t V: 1;                       /*!< bit:     28  Overflow condition code flag       *
 280:../firmware/cmsis/inc/core_cm4.h ****         uint32_t C: 1;                       /*!< bit:     29  Carry condition code flag          *
 281:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Z: 1;                       /*!< bit:     30  Zero condition code flag           *
 282:../firmware/cmsis/inc/core_cm4.h ****         uint32_t N: 1;                       /*!< bit:     31  Negative condition code flag       *
 283:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 284:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 285:../firmware/cmsis/inc/core_cm4.h **** } APSR_Type;
 286:../firmware/cmsis/inc/core_cm4.h **** 
 287:../firmware/cmsis/inc/core_cm4.h **** 
 288:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 289:../firmware/cmsis/inc/core_cm4.h ****  */
 290:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 291:../firmware/cmsis/inc/core_cm4.h ****     struct {
 292:../firmware/cmsis/inc/core_cm4.h ****         uint32_t ISR: 9;                     /*!< bit:  0.. 8  Exception number                   *
 293:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 23;             /*!< bit:  9..31  Reserved                           *
 294:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 295:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 296:../firmware/cmsis/inc/core_cm4.h **** } IPSR_Type;
 297:../firmware/cmsis/inc/core_cm4.h **** 
 298:../firmware/cmsis/inc/core_cm4.h **** 
 299:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 300:../firmware/cmsis/inc/core_cm4.h ****  */
 301:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 302:../firmware/cmsis/inc/core_cm4.h ****     struct {
 303:../firmware/cmsis/inc/core_cm4.h ****         uint32_t ISR: 9;                     /*!< bit:  0.. 8  Exception number                   *
 304:../firmware/cmsis/inc/core_cm4.h **** #if (__CORTEX_M != 0x04)
 305:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 15;             /*!< bit:  9..23  Reserved                           *
 306:../firmware/cmsis/inc/core_cm4.h **** #else
 307:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 7;              /*!< bit:  9..15  Reserved                           *
 308:../firmware/cmsis/inc/core_cm4.h ****         uint32_t GE: 4;                      /*!< bit: 16..19  Greater than or Equal flags        *
 309:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved1: 4;              /*!< bit: 20..23  Reserved                           *
 310:../firmware/cmsis/inc/core_cm4.h **** #endif
 311:../firmware/cmsis/inc/core_cm4.h ****         uint32_t T: 1;                       /*!< bit:     24  Thumb bit        (read 0)          *
 312:../firmware/cmsis/inc/core_cm4.h ****         uint32_t IT: 2;                      /*!< bit: 25..26  saved IT state   (read 0)          *
 313:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Q: 1;                       /*!< bit:     27  Saturation condition flag          *
 314:../firmware/cmsis/inc/core_cm4.h ****         uint32_t V: 1;                       /*!< bit:     28  Overflow condition code flag       *
 315:../firmware/cmsis/inc/core_cm4.h ****         uint32_t C: 1;                       /*!< bit:     29  Carry condition code flag          *
 316:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Z: 1;                       /*!< bit:     30  Zero condition code flag           *
 317:../firmware/cmsis/inc/core_cm4.h ****         uint32_t N: 1;                       /*!< bit:     31  Negative condition code flag       *
 318:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 319:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 320:../firmware/cmsis/inc/core_cm4.h **** } xPSR_Type;
 321:../firmware/cmsis/inc/core_cm4.h **** 
 322:../firmware/cmsis/inc/core_cm4.h **** 
 323:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 324:../firmware/cmsis/inc/core_cm4.h ****  */
 325:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 326:../firmware/cmsis/inc/core_cm4.h ****     struct {
 327:../firmware/cmsis/inc/core_cm4.h ****         uint32_t nPRIV: 1;                   /*!< bit:      0  Execution privilege in Thread mode *
 328:../firmware/cmsis/inc/core_cm4.h ****         uint32_t SPSEL: 1;                   /*!< bit:      1  Stack to be used                   *
 329:../firmware/cmsis/inc/core_cm4.h ****         uint32_t FPCA: 1;                    /*!< bit:      2  FP extension active flag           *
 330:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 29;             /*!< bit:  3..31  Reserved                           *
 331:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 332:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 333:../firmware/cmsis/inc/core_cm4.h **** } CONTROL_Type;
 334:../firmware/cmsis/inc/core_cm4.h **** 
 335:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_CORE */
 336:../firmware/cmsis/inc/core_cm4.h **** 
 337:../firmware/cmsis/inc/core_cm4.h **** 
 338:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
 339:../firmware/cmsis/inc/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 340:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 341:../firmware/cmsis/inc/core_cm4.h ****   @{
 342:../firmware/cmsis/inc/core_cm4.h ****  */
 343:../firmware/cmsis/inc/core_cm4.h **** 
 344:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 345:../firmware/cmsis/inc/core_cm4.h ****  */
 346:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 347:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register 
 348:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[24];
 349:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Registe
 350:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RSERVED1[24];
 351:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register
 352:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[24];
 353:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Regist
 354:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED3[24];
 355:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register 
 356:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED4[56];
 357:../firmware/cmsis/inc/core_cm4.h ****     __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8
 358:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED5[644];
 359:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Reg
 360:../firmware/cmsis/inc/core_cm4.h **** }  NVIC_Type;
 361:../firmware/cmsis/inc/core_cm4.h **** 
 362:../firmware/cmsis/inc/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 363:../firmware/cmsis/inc/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 364:../firmware/cmsis/inc/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 365:../firmware/cmsis/inc/core_cm4.h **** 
 366:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 367:../firmware/cmsis/inc/core_cm4.h **** 
 368:../firmware/cmsis/inc/core_cm4.h **** 
 369:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 370:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 371:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 372:../firmware/cmsis/inc/core_cm4.h ****   @{
 373:../firmware/cmsis/inc/core_cm4.h ****  */
 374:../firmware/cmsis/inc/core_cm4.h **** 
 375:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 376:../firmware/cmsis/inc/core_cm4.h ****  */
 377:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 378:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register           
 379:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Re
 380:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register  
 381:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Rese
 382:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register       
 383:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register
 384:../firmware/cmsis/inc/core_cm4.h ****     __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Regis
 385:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and Sta
 386:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regi
 387:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register     
 388:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register   
 389:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Regist
 390:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register     
 391:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Registe
 392:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register    
 393:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register        
 394:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register    
 395:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register 
 396:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Reg
 397:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[5];
 398:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Reg
 399:../firmware/cmsis/inc/core_cm4.h **** } SCB_Type;
 400:../firmware/cmsis/inc/core_cm4.h **** 
 401:../firmware/cmsis/inc/core_cm4.h **** /* SCB CPUID Register Definitions */
 402:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 403:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 404:../firmware/cmsis/inc/core_cm4.h **** 
 405:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 406:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 407:../firmware/cmsis/inc/core_cm4.h **** 
 408:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 409:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 410:../firmware/cmsis/inc/core_cm4.h **** 
 411:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 412:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 413:../firmware/cmsis/inc/core_cm4.h **** 
 414:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 415:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 416:../firmware/cmsis/inc/core_cm4.h **** 
 417:../firmware/cmsis/inc/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 418:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 419:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 420:../firmware/cmsis/inc/core_cm4.h **** 
 421:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 422:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 423:../firmware/cmsis/inc/core_cm4.h **** 
 424:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 425:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 426:../firmware/cmsis/inc/core_cm4.h **** 
 427:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 428:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 429:../firmware/cmsis/inc/core_cm4.h **** 
 430:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 431:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 432:../firmware/cmsis/inc/core_cm4.h **** 
 433:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 434:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 435:../firmware/cmsis/inc/core_cm4.h **** 
 436:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 437:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 438:../firmware/cmsis/inc/core_cm4.h **** 
 439:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 440:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 441:../firmware/cmsis/inc/core_cm4.h **** 
 442:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 443:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 444:../firmware/cmsis/inc/core_cm4.h **** 
 445:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 446:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 447:../firmware/cmsis/inc/core_cm4.h **** 
 448:../firmware/cmsis/inc/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 449:../firmware/cmsis/inc/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 450:../firmware/cmsis/inc/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 451:../firmware/cmsis/inc/core_cm4.h **** 
 452:../firmware/cmsis/inc/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 453:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 454:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 455:../firmware/cmsis/inc/core_cm4.h **** 
 456:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 457:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 458:../firmware/cmsis/inc/core_cm4.h **** 
 459:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 460:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 461:../firmware/cmsis/inc/core_cm4.h **** 
 462:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 463:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 464:../firmware/cmsis/inc/core_cm4.h **** 
 465:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 466:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 467:../firmware/cmsis/inc/core_cm4.h **** 
 468:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 469:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 470:../firmware/cmsis/inc/core_cm4.h **** 
 471:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 472:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 473:../firmware/cmsis/inc/core_cm4.h **** 
 474:../firmware/cmsis/inc/core_cm4.h **** /* SCB System Control Register Definitions */
 475:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 476:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 477:../firmware/cmsis/inc/core_cm4.h **** 
 478:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 479:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 480:../firmware/cmsis/inc/core_cm4.h **** 
 481:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 482:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 483:../firmware/cmsis/inc/core_cm4.h **** 
 484:../firmware/cmsis/inc/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 485:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 486:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 487:../firmware/cmsis/inc/core_cm4.h **** 
 488:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 489:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 490:../firmware/cmsis/inc/core_cm4.h **** 
 491:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 492:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 493:../firmware/cmsis/inc/core_cm4.h **** 
 494:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 495:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 496:../firmware/cmsis/inc/core_cm4.h **** 
 497:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 498:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 499:../firmware/cmsis/inc/core_cm4.h **** 
 500:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 501:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 502:../firmware/cmsis/inc/core_cm4.h **** 
 503:../firmware/cmsis/inc/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 504:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 505:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 506:../firmware/cmsis/inc/core_cm4.h **** 
 507:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 508:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 509:../firmware/cmsis/inc/core_cm4.h **** 
 510:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 511:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 512:../firmware/cmsis/inc/core_cm4.h **** 
 513:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 514:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 515:../firmware/cmsis/inc/core_cm4.h **** 
 516:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 517:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 518:../firmware/cmsis/inc/core_cm4.h **** 
 519:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 520:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 521:../firmware/cmsis/inc/core_cm4.h **** 
 522:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 523:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 524:../firmware/cmsis/inc/core_cm4.h **** 
 525:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 526:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 527:../firmware/cmsis/inc/core_cm4.h **** 
 528:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 529:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 530:../firmware/cmsis/inc/core_cm4.h **** 
 531:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 532:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 533:../firmware/cmsis/inc/core_cm4.h **** 
 534:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 535:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 536:../firmware/cmsis/inc/core_cm4.h **** 
 537:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 538:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 539:../firmware/cmsis/inc/core_cm4.h **** 
 540:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 541:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 542:../firmware/cmsis/inc/core_cm4.h **** 
 543:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 544:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 545:../firmware/cmsis/inc/core_cm4.h **** 
 546:../firmware/cmsis/inc/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 547:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 548:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 549:../firmware/cmsis/inc/core_cm4.h **** 
 550:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 551:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 552:../firmware/cmsis/inc/core_cm4.h **** 
 553:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 554:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 555:../firmware/cmsis/inc/core_cm4.h **** 
 556:../firmware/cmsis/inc/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 557:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 558:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 559:../firmware/cmsis/inc/core_cm4.h **** 
 560:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 561:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 562:../firmware/cmsis/inc/core_cm4.h **** 
 563:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 564:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 565:../firmware/cmsis/inc/core_cm4.h **** 
 566:../firmware/cmsis/inc/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 567:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 568:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 569:../firmware/cmsis/inc/core_cm4.h **** 
 570:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 571:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 572:../firmware/cmsis/inc/core_cm4.h **** 
 573:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 574:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 575:../firmware/cmsis/inc/core_cm4.h **** 
 576:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 577:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 578:../firmware/cmsis/inc/core_cm4.h **** 
 579:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 580:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 581:../firmware/cmsis/inc/core_cm4.h **** 
 582:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_SCB */
 583:../firmware/cmsis/inc/core_cm4.h **** 
 584:../firmware/cmsis/inc/core_cm4.h **** 
 585:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 586:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 587:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 588:../firmware/cmsis/inc/core_cm4.h ****   @{
 589:../firmware/cmsis/inc/core_cm4.h ****  */
 590:../firmware/cmsis/inc/core_cm4.h **** 
 591:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 592:../firmware/cmsis/inc/core_cm4.h ****  */
 593:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 594:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[1];
 595:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regi
 596:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register    
 597:../firmware/cmsis/inc/core_cm4.h **** } SCnSCB_Type;
 598:../firmware/cmsis/inc/core_cm4.h **** 
 599:../firmware/cmsis/inc/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 600:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 601:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 602:../firmware/cmsis/inc/core_cm4.h **** 
 603:../firmware/cmsis/inc/core_cm4.h **** /* Auxiliary Control Register Definitions */
 604:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 605:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 606:../firmware/cmsis/inc/core_cm4.h **** 
 607:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 608:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 609:../firmware/cmsis/inc/core_cm4.h **** 
 610:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 611:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 612:../firmware/cmsis/inc/core_cm4.h **** 
 613:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 614:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 615:../firmware/cmsis/inc/core_cm4.h **** 
 616:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 617:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 618:../firmware/cmsis/inc/core_cm4.h **** 
 619:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 620:../firmware/cmsis/inc/core_cm4.h **** 
 621:../firmware/cmsis/inc/core_cm4.h **** 
 622:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 623:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 624:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 625:../firmware/cmsis/inc/core_cm4.h ****   @{
 626:../firmware/cmsis/inc/core_cm4.h ****  */
 627:../firmware/cmsis/inc/core_cm4.h **** 
 628:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 629:../firmware/cmsis/inc/core_cm4.h ****  */
 630:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 631:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Reg
 632:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register 
 633:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register
 634:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register  
 635:../firmware/cmsis/inc/core_cm4.h **** } SysTick_Type;
 636:../firmware/cmsis/inc/core_cm4.h **** 
 637:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 638:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 639:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 640:../firmware/cmsis/inc/core_cm4.h **** 
 641:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 642:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 643:../firmware/cmsis/inc/core_cm4.h **** 
 644:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 645:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 646:../firmware/cmsis/inc/core_cm4.h **** 
 647:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 648:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 649:../firmware/cmsis/inc/core_cm4.h **** 
 650:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Reload Register Definitions */
 651:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 652:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 653:../firmware/cmsis/inc/core_cm4.h **** 
 654:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Current Register Definitions */
 655:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 656:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 657:../firmware/cmsis/inc/core_cm4.h **** 
 658:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Calibration Register Definitions */
 659:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 660:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 661:../firmware/cmsis/inc/core_cm4.h **** 
 662:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 663:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 664:../firmware/cmsis/inc/core_cm4.h **** 
 665:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 666:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 667:../firmware/cmsis/inc/core_cm4.h **** 
 668:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 669:../firmware/cmsis/inc/core_cm4.h **** 
 670:../firmware/cmsis/inc/core_cm4.h **** 
 671:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 672:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 673:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 674:../firmware/cmsis/inc/core_cm4.h ****   @{
 675:../firmware/cmsis/inc/core_cm4.h ****  */
 676:../firmware/cmsis/inc/core_cm4.h **** 
 677:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 678:../firmware/cmsis/inc/core_cm4.h ****  */
 679:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 680:../firmware/cmsis/inc/core_cm4.h ****     __O  union {
 681:../firmware/cmsis/inc/core_cm4.h ****         __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit     
 682:../firmware/cmsis/inc/core_cm4.h ****         __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit    
 683:../firmware/cmsis/inc/core_cm4.h ****         __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit    
 684:../firmware/cmsis/inc/core_cm4.h ****     }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers   
 685:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[864];
 686:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register     
 687:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED1[15];
 688:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register  
 689:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[15];
 690:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register    
 691:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED3[29];
 692:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register
 693:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register 
 694:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control R
 695:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED4[43];
 696:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register      
 697:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register      
 698:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED5[6];
 699:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification 
 700:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification 
 701:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification 
 702:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification 
 703:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification 
 704:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification 
 705:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification 
 706:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification 
 707:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification 
 708:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification 
 709:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification 
 710:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification 
 711:../firmware/cmsis/inc/core_cm4.h **** } ITM_Type;
 712:../firmware/cmsis/inc/core_cm4.h **** 
 713:../firmware/cmsis/inc/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 714:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 715:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 716:../firmware/cmsis/inc/core_cm4.h **** 
 717:../firmware/cmsis/inc/core_cm4.h **** /* ITM Trace Control Register Definitions */
 718:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 719:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 720:../firmware/cmsis/inc/core_cm4.h **** 
 721:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 722:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 723:../firmware/cmsis/inc/core_cm4.h **** 
 724:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 725:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 726:../firmware/cmsis/inc/core_cm4.h **** 
 727:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 728:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 729:../firmware/cmsis/inc/core_cm4.h **** 
 730:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 731:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 732:../firmware/cmsis/inc/core_cm4.h **** 
 733:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 734:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 735:../firmware/cmsis/inc/core_cm4.h **** 
 736:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 737:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 738:../firmware/cmsis/inc/core_cm4.h **** 
 739:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 740:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 741:../firmware/cmsis/inc/core_cm4.h **** 
 742:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 743:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 744:../firmware/cmsis/inc/core_cm4.h **** 
 745:../firmware/cmsis/inc/core_cm4.h **** /* ITM Integration Write Register Definitions */
 746:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 747:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 748:../firmware/cmsis/inc/core_cm4.h **** 
 749:../firmware/cmsis/inc/core_cm4.h **** /* ITM Integration Read Register Definitions */
 750:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 751:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 752:../firmware/cmsis/inc/core_cm4.h **** 
 753:../firmware/cmsis/inc/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 754:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 755:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 756:../firmware/cmsis/inc/core_cm4.h **** 
 757:../firmware/cmsis/inc/core_cm4.h **** /* ITM Lock Status Register Definitions */
 758:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 759:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 760:../firmware/cmsis/inc/core_cm4.h **** 
 761:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 762:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 763:../firmware/cmsis/inc/core_cm4.h **** 
 764:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 765:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 766:../firmware/cmsis/inc/core_cm4.h **** 
 767:../firmware/cmsis/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 768:../firmware/cmsis/inc/core_cm4.h **** 
 769:../firmware/cmsis/inc/core_cm4.h **** 
 770:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 771:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 772:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 773:../firmware/cmsis/inc/core_cm4.h ****   @{
 774:../firmware/cmsis/inc/core_cm4.h ****  */
 775:../firmware/cmsis/inc/core_cm4.h **** 
 776:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 777:../firmware/cmsis/inc/core_cm4.h ****  */
 778:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 779:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register              
 780:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register          
 781:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register            
 782:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Regis
 783:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register          
 784:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register            
 785:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Regis
 786:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Registe
 787:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0         
 788:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0               
 789:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0           
 790:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[1];
 791:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1         
 792:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1               
 793:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1           
 794:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED1[1];
 795:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2         
 796:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2               
 797:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2           
 798:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[1];
 799:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3         
 800:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3               
 801:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3           
 802:../firmware/cmsis/inc/core_cm4.h **** } DWT_Type;
 803:../firmware/cmsis/inc/core_cm4.h **** 
 804:../firmware/cmsis/inc/core_cm4.h **** /* DWT Control Register Definitions */
 805:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 806:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 807:../firmware/cmsis/inc/core_cm4.h **** 
 808:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 809:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 810:../firmware/cmsis/inc/core_cm4.h **** 
 811:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 812:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 813:../firmware/cmsis/inc/core_cm4.h **** 
 814:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 815:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 816:../firmware/cmsis/inc/core_cm4.h **** 
 817:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 818:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 819:../firmware/cmsis/inc/core_cm4.h **** 
 820:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 821:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 822:../firmware/cmsis/inc/core_cm4.h **** 
 823:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 824:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 825:../firmware/cmsis/inc/core_cm4.h **** 
 826:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 827:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 828:../firmware/cmsis/inc/core_cm4.h **** 
 829:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 830:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 831:../firmware/cmsis/inc/core_cm4.h **** 
 832:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 833:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 834:../firmware/cmsis/inc/core_cm4.h **** 
 835:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 836:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 837:../firmware/cmsis/inc/core_cm4.h **** 
 838:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 839:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 840:../firmware/cmsis/inc/core_cm4.h **** 
 841:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 842:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 843:../firmware/cmsis/inc/core_cm4.h **** 
 844:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 845:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 846:../firmware/cmsis/inc/core_cm4.h **** 
 847:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 848:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 849:../firmware/cmsis/inc/core_cm4.h **** 
 850:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 851:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 852:../firmware/cmsis/inc/core_cm4.h **** 
 853:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 854:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 855:../firmware/cmsis/inc/core_cm4.h **** 
 856:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 857:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 858:../firmware/cmsis/inc/core_cm4.h **** 
 859:../firmware/cmsis/inc/core_cm4.h **** /* DWT CPI Count Register Definitions */
 860:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 861:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 862:../firmware/cmsis/inc/core_cm4.h **** 
 863:../firmware/cmsis/inc/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 864:../firmware/cmsis/inc/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 865:../firmware/cmsis/inc/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 866:../firmware/cmsis/inc/core_cm4.h **** 
 867:../firmware/cmsis/inc/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 868:../firmware/cmsis/inc/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 869:../firmware/cmsis/inc/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 870:../firmware/cmsis/inc/core_cm4.h **** 
 871:../firmware/cmsis/inc/core_cm4.h **** /* DWT LSU Count Register Definitions */
 872:../firmware/cmsis/inc/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 873:../firmware/cmsis/inc/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 874:../firmware/cmsis/inc/core_cm4.h **** 
 875:../firmware/cmsis/inc/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 876:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 877:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 878:../firmware/cmsis/inc/core_cm4.h **** 
 879:../firmware/cmsis/inc/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 880:../firmware/cmsis/inc/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 881:../firmware/cmsis/inc/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 882:../firmware/cmsis/inc/core_cm4.h **** 
 883:../firmware/cmsis/inc/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 884:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 885:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 886:../firmware/cmsis/inc/core_cm4.h **** 
 887:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 888:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 889:../firmware/cmsis/inc/core_cm4.h **** 
 890:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 891:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 892:../firmware/cmsis/inc/core_cm4.h **** 
 893:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 894:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 895:../firmware/cmsis/inc/core_cm4.h **** 
 896:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 897:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 898:../firmware/cmsis/inc/core_cm4.h **** 
 899:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 900:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 901:../firmware/cmsis/inc/core_cm4.h **** 
 902:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 903:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 904:../firmware/cmsis/inc/core_cm4.h **** 
 905:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 906:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 907:../firmware/cmsis/inc/core_cm4.h **** 
 908:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 909:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 910:../firmware/cmsis/inc/core_cm4.h **** 
 911:../firmware/cmsis/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 912:../firmware/cmsis/inc/core_cm4.h **** 
 913:../firmware/cmsis/inc/core_cm4.h **** 
 914:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 915:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 916:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 917:../firmware/cmsis/inc/core_cm4.h ****   @{
 918:../firmware/cmsis/inc/core_cm4.h ****  */
 919:../firmware/cmsis/inc/core_cm4.h **** 
 920:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 921:../firmware/cmsis/inc/core_cm4.h ****  */
 922:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 923:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size R
 924:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Reg
 925:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[2];
 926:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler R
 927:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED1[55];
 928:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register
 929:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[131];
 930:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Reg
 931:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Re
 932:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Coun
 933:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED3[759];
 934:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 935:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 936:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 937:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED4[1];
 938:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 939:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 940:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 941:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED5[39];
 942:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 943:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 944:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED7[8];
 945:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 946:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 947:../firmware/cmsis/inc/core_cm4.h **** } TPI_Type;
 948:../firmware/cmsis/inc/core_cm4.h **** 
 949:../firmware/cmsis/inc/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 950:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 951:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 952:../firmware/cmsis/inc/core_cm4.h **** 
 953:../firmware/cmsis/inc/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 954:../firmware/cmsis/inc/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 955:../firmware/cmsis/inc/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 956:../firmware/cmsis/inc/core_cm4.h **** 
 957:../firmware/cmsis/inc/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 958:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 959:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 960:../firmware/cmsis/inc/core_cm4.h **** 
 961:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 962:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 963:../firmware/cmsis/inc/core_cm4.h **** 
 964:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 965:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 966:../firmware/cmsis/inc/core_cm4.h **** 
 967:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 968:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 969:../firmware/cmsis/inc/core_cm4.h **** 
 970:../firmware/cmsis/inc/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 971:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 972:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 973:../firmware/cmsis/inc/core_cm4.h **** 
 974:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 975:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 976:../firmware/cmsis/inc/core_cm4.h **** 
 977:../firmware/cmsis/inc/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 978:../firmware/cmsis/inc/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 979:../firmware/cmsis/inc/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 980:../firmware/cmsis/inc/core_cm4.h **** 
 981:../firmware/cmsis/inc/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 982:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 983:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 984:../firmware/cmsis/inc/core_cm4.h **** 
 985:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 986:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 987:../firmware/cmsis/inc/core_cm4.h **** 
 988:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 989:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 990:../firmware/cmsis/inc/core_cm4.h **** 
 991:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 992:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 993:../firmware/cmsis/inc/core_cm4.h **** 
 994:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 995:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 996:../firmware/cmsis/inc/core_cm4.h **** 
 997:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 998:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 999:../firmware/cmsis/inc/core_cm4.h **** 
1000:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1001:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1002:../firmware/cmsis/inc/core_cm4.h **** 
1003:../firmware/cmsis/inc/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1004:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1005:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1006:../firmware/cmsis/inc/core_cm4.h **** 
1007:../firmware/cmsis/inc/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1008:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1009:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1010:../firmware/cmsis/inc/core_cm4.h **** 
1011:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1012:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1013:../firmware/cmsis/inc/core_cm4.h **** 
1014:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1015:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1016:../firmware/cmsis/inc/core_cm4.h **** 
1017:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1018:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1019:../firmware/cmsis/inc/core_cm4.h **** 
1020:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1021:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1022:../firmware/cmsis/inc/core_cm4.h **** 
1023:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1024:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1025:../firmware/cmsis/inc/core_cm4.h **** 
1026:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1027:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1028:../firmware/cmsis/inc/core_cm4.h **** 
1029:../firmware/cmsis/inc/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1030:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1031:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1032:../firmware/cmsis/inc/core_cm4.h **** 
1033:../firmware/cmsis/inc/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1034:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1035:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1036:../firmware/cmsis/inc/core_cm4.h **** 
1037:../firmware/cmsis/inc/core_cm4.h **** /* TPI DEVID Register Definitions */
1038:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1039:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1040:../firmware/cmsis/inc/core_cm4.h **** 
1041:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1042:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1043:../firmware/cmsis/inc/core_cm4.h **** 
1044:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1045:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1046:../firmware/cmsis/inc/core_cm4.h **** 
1047:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1048:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1049:../firmware/cmsis/inc/core_cm4.h **** 
1050:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1051:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1052:../firmware/cmsis/inc/core_cm4.h **** 
1053:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1054:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1055:../firmware/cmsis/inc/core_cm4.h **** 
1056:../firmware/cmsis/inc/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1057:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1058:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1059:../firmware/cmsis/inc/core_cm4.h **** 
1060:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1061:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1062:../firmware/cmsis/inc/core_cm4.h **** 
1063:../firmware/cmsis/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1064:../firmware/cmsis/inc/core_cm4.h **** 
1065:../firmware/cmsis/inc/core_cm4.h **** 
1066:../firmware/cmsis/inc/core_cm4.h **** #if (__MPU_PRESENT == 1)
1067:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1068:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1069:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1070:../firmware/cmsis/inc/core_cm4.h ****   @{
1071:../firmware/cmsis/inc/core_cm4.h ****  */
1072:../firmware/cmsis/inc/core_cm4.h **** 
1073:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1074:../firmware/cmsis/inc/core_cm4.h ****  */
1075:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
1076:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register             
1077:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register          
1078:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register    
1079:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Regist
1080:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size 
1081:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Addres
1082:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute a
1083:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Addres
1084:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute a
1085:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Addres
1086:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute a
1087:../firmware/cmsis/inc/core_cm4.h **** } MPU_Type;
1088:../firmware/cmsis/inc/core_cm4.h **** 
1089:../firmware/cmsis/inc/core_cm4.h **** /* MPU Type Register */
1090:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1091:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1092:../firmware/cmsis/inc/core_cm4.h **** 
1093:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1094:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1095:../firmware/cmsis/inc/core_cm4.h **** 
1096:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1097:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1098:../firmware/cmsis/inc/core_cm4.h **** 
1099:../firmware/cmsis/inc/core_cm4.h **** /* MPU Control Register */
1100:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1101:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1102:../firmware/cmsis/inc/core_cm4.h **** 
1103:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1104:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1105:../firmware/cmsis/inc/core_cm4.h **** 
1106:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1107:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1108:../firmware/cmsis/inc/core_cm4.h **** 
1109:../firmware/cmsis/inc/core_cm4.h **** /* MPU Region Number Register */
1110:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1111:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1112:../firmware/cmsis/inc/core_cm4.h **** 
1113:../firmware/cmsis/inc/core_cm4.h **** /* MPU Region Base Address Register */
1114:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1115:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1116:../firmware/cmsis/inc/core_cm4.h **** 
1117:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1118:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1119:../firmware/cmsis/inc/core_cm4.h **** 
1120:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1121:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1122:../firmware/cmsis/inc/core_cm4.h **** 
1123:../firmware/cmsis/inc/core_cm4.h **** /* MPU Region Attribute and Size Register */
1124:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1125:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1126:../firmware/cmsis/inc/core_cm4.h **** 
1127:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1128:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1129:../firmware/cmsis/inc/core_cm4.h **** 
1130:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1131:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1132:../firmware/cmsis/inc/core_cm4.h **** 
1133:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1134:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1135:../firmware/cmsis/inc/core_cm4.h **** 
1136:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1137:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1138:../firmware/cmsis/inc/core_cm4.h **** 
1139:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1140:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1141:../firmware/cmsis/inc/core_cm4.h **** 
1142:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1143:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1144:../firmware/cmsis/inc/core_cm4.h **** 
1145:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1146:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1147:../firmware/cmsis/inc/core_cm4.h **** 
1148:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1149:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1150:../firmware/cmsis/inc/core_cm4.h **** 
1151:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1152:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1153:../firmware/cmsis/inc/core_cm4.h **** 
1154:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_MPU */
1155:../firmware/cmsis/inc/core_cm4.h **** #endif
1156:../firmware/cmsis/inc/core_cm4.h **** 
1157:../firmware/cmsis/inc/core_cm4.h **** 
1158:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
1159:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1160:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1161:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1162:../firmware/cmsis/inc/core_cm4.h ****   @{
1163:../firmware/cmsis/inc/core_cm4.h ****  */
1164:../firmware/cmsis/inc/core_cm4.h **** 
1165:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1166:../firmware/cmsis/inc/core_cm4.h ****  */
1167:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
1168:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[1];
1169:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control
1170:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address
1171:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status 
1172:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 
1173:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 
1174:../firmware/cmsis/inc/core_cm4.h **** } FPU_Type;
1175:../firmware/cmsis/inc/core_cm4.h **** 
1176:../firmware/cmsis/inc/core_cm4.h **** /* Floating-Point Context Control Register */
1177:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1178:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1179:../firmware/cmsis/inc/core_cm4.h **** 
1180:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1181:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1182:../firmware/cmsis/inc/core_cm4.h **** 
1183:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1184:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1185:../firmware/cmsis/inc/core_cm4.h **** 
1186:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1187:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1188:../firmware/cmsis/inc/core_cm4.h **** 
1189:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1190:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1191:../firmware/cmsis/inc/core_cm4.h **** 
1192:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1193:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1194:../firmware/cmsis/inc/core_cm4.h **** 
1195:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1196:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1197:../firmware/cmsis/inc/core_cm4.h **** 
1198:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1199:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1200:../firmware/cmsis/inc/core_cm4.h **** 
1201:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1202:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1203:../firmware/cmsis/inc/core_cm4.h **** 
1204:../firmware/cmsis/inc/core_cm4.h **** /* Floating-Point Context Address Register */
1205:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1206:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1207:../firmware/cmsis/inc/core_cm4.h **** 
1208:../firmware/cmsis/inc/core_cm4.h **** /* Floating-Point Default Status Control Register */
1209:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1210:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1211:../firmware/cmsis/inc/core_cm4.h **** 
1212:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1213:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1214:../firmware/cmsis/inc/core_cm4.h **** 
1215:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1216:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1217:../firmware/cmsis/inc/core_cm4.h **** 
1218:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1219:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1220:../firmware/cmsis/inc/core_cm4.h **** 
1221:../firmware/cmsis/inc/core_cm4.h **** /* Media and FP Feature Register 0 */
1222:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1223:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1224:../firmware/cmsis/inc/core_cm4.h **** 
1225:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1226:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1227:../firmware/cmsis/inc/core_cm4.h **** 
1228:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1229:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1230:../firmware/cmsis/inc/core_cm4.h **** 
1231:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1232:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1233:../firmware/cmsis/inc/core_cm4.h **** 
1234:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1235:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1236:../firmware/cmsis/inc/core_cm4.h **** 
1237:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1238:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1239:../firmware/cmsis/inc/core_cm4.h **** 
1240:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1241:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1242:../firmware/cmsis/inc/core_cm4.h **** 
1243:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1244:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1245:../firmware/cmsis/inc/core_cm4.h **** 
1246:../firmware/cmsis/inc/core_cm4.h **** /* Media and FP Feature Register 1 */
1247:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1248:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1249:../firmware/cmsis/inc/core_cm4.h **** 
1250:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1251:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1252:../firmware/cmsis/inc/core_cm4.h **** 
1253:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1254:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1255:../firmware/cmsis/inc/core_cm4.h **** 
1256:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1257:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1258:../firmware/cmsis/inc/core_cm4.h **** 
1259:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_FPU */
1260:../firmware/cmsis/inc/core_cm4.h **** #endif
1261:../firmware/cmsis/inc/core_cm4.h **** 
1262:../firmware/cmsis/inc/core_cm4.h **** 
1263:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1264:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1265:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1266:../firmware/cmsis/inc/core_cm4.h ****   @{
1267:../firmware/cmsis/inc/core_cm4.h ****  */
1268:../firmware/cmsis/inc/core_cm4.h **** 
1269:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1270:../firmware/cmsis/inc/core_cm4.h ****  */
1271:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
1272:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Stat
1273:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector R
1274:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Regis
1275:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Co
1276:../firmware/cmsis/inc/core_cm4.h **** } CoreDebug_Type;
1277:../firmware/cmsis/inc/core_cm4.h **** 
1278:../firmware/cmsis/inc/core_cm4.h **** /* Debug Halting Control and Status Register */
1279:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1280:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1281:../firmware/cmsis/inc/core_cm4.h **** 
1282:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1283:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1284:../firmware/cmsis/inc/core_cm4.h **** 
1285:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1286:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1287:../firmware/cmsis/inc/core_cm4.h **** 
1288:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1289:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1290:../firmware/cmsis/inc/core_cm4.h **** 
1291:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1292:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1293:../firmware/cmsis/inc/core_cm4.h **** 
1294:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1295:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1296:../firmware/cmsis/inc/core_cm4.h **** 
1297:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1298:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1299:../firmware/cmsis/inc/core_cm4.h **** 
1300:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1301:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1302:../firmware/cmsis/inc/core_cm4.h **** 
1303:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1304:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1305:../firmware/cmsis/inc/core_cm4.h **** 
1306:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1307:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1308:../firmware/cmsis/inc/core_cm4.h **** 
1309:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1310:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1311:../firmware/cmsis/inc/core_cm4.h **** 
1312:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1313:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1314:../firmware/cmsis/inc/core_cm4.h **** 
1315:../firmware/cmsis/inc/core_cm4.h **** /* Debug Core Register Selector Register */
1316:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1317:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1318:../firmware/cmsis/inc/core_cm4.h **** 
1319:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1320:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1321:../firmware/cmsis/inc/core_cm4.h **** 
1322:../firmware/cmsis/inc/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1323:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1324:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1325:../firmware/cmsis/inc/core_cm4.h **** 
1326:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1327:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1328:../firmware/cmsis/inc/core_cm4.h **** 
1329:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1330:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1331:../firmware/cmsis/inc/core_cm4.h **** 
1332:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1333:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1334:../firmware/cmsis/inc/core_cm4.h **** 
1335:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1336:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1337:../firmware/cmsis/inc/core_cm4.h **** 
1338:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1339:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1340:../firmware/cmsis/inc/core_cm4.h **** 
1341:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1342:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1343:../firmware/cmsis/inc/core_cm4.h **** 
1344:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1345:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1346:../firmware/cmsis/inc/core_cm4.h **** 
1347:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1348:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1349:../firmware/cmsis/inc/core_cm4.h **** 
1350:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1351:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1352:../firmware/cmsis/inc/core_cm4.h **** 
1353:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1354:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1355:../firmware/cmsis/inc/core_cm4.h **** 
1356:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1357:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1358:../firmware/cmsis/inc/core_cm4.h **** 
1359:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1360:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1361:../firmware/cmsis/inc/core_cm4.h **** 
1362:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1363:../firmware/cmsis/inc/core_cm4.h **** 
1364:../firmware/cmsis/inc/core_cm4.h **** 
1365:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
1366:../firmware/cmsis/inc/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1367:../firmware/cmsis/inc/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1368:../firmware/cmsis/inc/core_cm4.h ****   @{
1369:../firmware/cmsis/inc/core_cm4.h ****  */
1370:../firmware/cmsis/inc/core_cm4.h **** 
1371:../firmware/cmsis/inc/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1372:../firmware/cmsis/inc/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1373:../firmware/cmsis/inc/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1374:../firmware/cmsis/inc/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1375:../firmware/cmsis/inc/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1376:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1377:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1378:../firmware/cmsis/inc/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1379:../firmware/cmsis/inc/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1380:../firmware/cmsis/inc/core_cm4.h **** 
1381:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1382:../firmware/cmsis/inc/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1383:../firmware/cmsis/inc/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1384:../firmware/cmsis/inc/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1385:../firmware/cmsis/inc/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1386:../firmware/cmsis/inc/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1387:../firmware/cmsis/inc/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1388:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1389:../firmware/cmsis/inc/core_cm4.h **** 
1390:../firmware/cmsis/inc/core_cm4.h **** #if (__MPU_PRESENT == 1)
1391:../firmware/cmsis/inc/core_cm4.h **** #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit    
1392:../firmware/cmsis/inc/core_cm4.h **** #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit    
1393:../firmware/cmsis/inc/core_cm4.h **** #endif
1394:../firmware/cmsis/inc/core_cm4.h **** 
1395:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
1396:../firmware/cmsis/inc/core_cm4.h **** #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit       
1397:../firmware/cmsis/inc/core_cm4.h **** #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit       
1398:../firmware/cmsis/inc/core_cm4.h **** #endif
1399:../firmware/cmsis/inc/core_cm4.h **** 
1400:../firmware/cmsis/inc/core_cm4.h **** /*@} */
1401:../firmware/cmsis/inc/core_cm4.h **** 
1402:../firmware/cmsis/inc/core_cm4.h **** 
1403:../firmware/cmsis/inc/core_cm4.h **** 
1404:../firmware/cmsis/inc/core_cm4.h **** /*******************************************************************************
1405:../firmware/cmsis/inc/core_cm4.h ****  *                Hardware Abstraction Layer
1406:../firmware/cmsis/inc/core_cm4.h ****   Core Function Interface contains:
1407:../firmware/cmsis/inc/core_cm4.h ****   - Core NVIC Functions
1408:../firmware/cmsis/inc/core_cm4.h ****   - Core SysTick Functions
1409:../firmware/cmsis/inc/core_cm4.h ****   - Core Debug Functions
1410:../firmware/cmsis/inc/core_cm4.h ****   - Core Register Access Functions
1411:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
1412:../firmware/cmsis/inc/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1413:../firmware/cmsis/inc/core_cm4.h **** */
1414:../firmware/cmsis/inc/core_cm4.h **** 
1415:../firmware/cmsis/inc/core_cm4.h **** 
1416:../firmware/cmsis/inc/core_cm4.h **** 
1417:../firmware/cmsis/inc/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1418:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1419:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1420:../firmware/cmsis/inc/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1421:../firmware/cmsis/inc/core_cm4.h ****     @{
1422:../firmware/cmsis/inc/core_cm4.h ****  */
1423:../firmware/cmsis/inc/core_cm4.h **** 
1424:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Set Priority Grouping
1425:../firmware/cmsis/inc/core_cm4.h **** 
1426:../firmware/cmsis/inc/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1427:../firmware/cmsis/inc/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1428:../firmware/cmsis/inc/core_cm4.h ****   Only values from 0..7 are used.
1429:../firmware/cmsis/inc/core_cm4.h ****   In case of a conflict between priority grouping and available
1430:../firmware/cmsis/inc/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1431:../firmware/cmsis/inc/core_cm4.h **** 
1432:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1433:../firmware/cmsis/inc/core_cm4.h ****  */
1434:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1435:../firmware/cmsis/inc/core_cm4.h **** {
1436:../firmware/cmsis/inc/core_cm4.h ****     uint32_t reg_value;
1437:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7
1438:../firmware/cmsis/inc/core_cm4.h **** 
1439:../firmware/cmsis/inc/core_cm4.h ****     reg_value  =  SCB->AIRCR;                                                   /* read old registe
1440:../firmware/cmsis/inc/core_cm4.h ****     reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to ch
1441:../firmware/cmsis/inc/core_cm4.h ****     reg_value  = (reg_value                                 |
1442:../firmware/cmsis/inc/core_cm4.h ****                   ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1443:../firmware/cmsis/inc/core_cm4.h ****                   (PriorityGroupTmp << 8));                                     /* Insert write key
1444:../firmware/cmsis/inc/core_cm4.h ****     SCB->AIRCR =  reg_value;
1445:../firmware/cmsis/inc/core_cm4.h **** }
1446:../firmware/cmsis/inc/core_cm4.h **** 
1447:../firmware/cmsis/inc/core_cm4.h **** 
1448:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Priority Grouping
1449:../firmware/cmsis/inc/core_cm4.h **** 
1450:../firmware/cmsis/inc/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1451:../firmware/cmsis/inc/core_cm4.h **** 
1452:../firmware/cmsis/inc/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1453:../firmware/cmsis/inc/core_cm4.h ****  */
1454:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1455:../firmware/cmsis/inc/core_cm4.h **** {
1456:../firmware/cmsis/inc/core_cm4.h ****     return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority gr
1457:../firmware/cmsis/inc/core_cm4.h **** }
1458:../firmware/cmsis/inc/core_cm4.h **** 
1459:../firmware/cmsis/inc/core_cm4.h **** 
1460:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Enable External Interrupt
1461:../firmware/cmsis/inc/core_cm4.h **** 
1462:../firmware/cmsis/inc/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1463:../firmware/cmsis/inc/core_cm4.h **** 
1464:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1465:../firmware/cmsis/inc/core_cm4.h ****  */
1466:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1467:../firmware/cmsis/inc/core_cm4.h **** {
1468:../firmware/cmsis/inc/core_cm4.h ****     /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt *
1469:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint
1470:../firmware/cmsis/inc/core_cm4.h **** }
1471:../firmware/cmsis/inc/core_cm4.h **** 
1472:../firmware/cmsis/inc/core_cm4.h **** 
1473:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Disable External Interrupt
1474:../firmware/cmsis/inc/core_cm4.h **** 
1475:../firmware/cmsis/inc/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1476:../firmware/cmsis/inc/core_cm4.h **** 
1477:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1478:../firmware/cmsis/inc/core_cm4.h ****  */
1479:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1480:../firmware/cmsis/inc/core_cm4.h **** {
1481:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1482:../firmware/cmsis/inc/core_cm4.h **** }
1483:../firmware/cmsis/inc/core_cm4.h **** 
1484:../firmware/cmsis/inc/core_cm4.h **** 
1485:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Pending Interrupt
1486:../firmware/cmsis/inc/core_cm4.h **** 
1487:../firmware/cmsis/inc/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1488:../firmware/cmsis/inc/core_cm4.h ****     for the specified interrupt.
1489:../firmware/cmsis/inc/core_cm4.h **** 
1490:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1491:../firmware/cmsis/inc/core_cm4.h **** 
1492:../firmware/cmsis/inc/core_cm4.h ****     \return             0  Interrupt status is not pending.
1493:../firmware/cmsis/inc/core_cm4.h ****     \return             1  Interrupt status is pending.
1494:../firmware/cmsis/inc/core_cm4.h ****  */
1495:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1496:../firmware/cmsis/inc/core_cm4.h **** {
1497:../firmware/cmsis/inc/core_cm4.h ****     return((uint32_t)((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F))) ? 1 : 
1498:../firmware/cmsis/inc/core_cm4.h **** }
1499:../firmware/cmsis/inc/core_cm4.h **** 
1500:../firmware/cmsis/inc/core_cm4.h **** 
1501:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Set Pending Interrupt
1502:../firmware/cmsis/inc/core_cm4.h **** 
1503:../firmware/cmsis/inc/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1504:../firmware/cmsis/inc/core_cm4.h **** 
1505:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1506:../firmware/cmsis/inc/core_cm4.h ****  */
1507:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1508:../firmware/cmsis/inc/core_cm4.h **** {
1509:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pendin
1510:../firmware/cmsis/inc/core_cm4.h **** }
1511:../firmware/cmsis/inc/core_cm4.h **** 
1512:../firmware/cmsis/inc/core_cm4.h **** 
1513:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Clear Pending Interrupt
1514:../firmware/cmsis/inc/core_cm4.h **** 
1515:../firmware/cmsis/inc/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1516:../firmware/cmsis/inc/core_cm4.h **** 
1517:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1518:../firmware/cmsis/inc/core_cm4.h ****  */
1519:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1520:../firmware/cmsis/inc/core_cm4.h **** {
1521:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interr
1522:../firmware/cmsis/inc/core_cm4.h **** }
1523:../firmware/cmsis/inc/core_cm4.h **** 
1524:../firmware/cmsis/inc/core_cm4.h **** 
1525:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Active Interrupt
1526:../firmware/cmsis/inc/core_cm4.h **** 
1527:../firmware/cmsis/inc/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1528:../firmware/cmsis/inc/core_cm4.h **** 
1529:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1530:../firmware/cmsis/inc/core_cm4.h **** 
1531:../firmware/cmsis/inc/core_cm4.h ****     \return             0  Interrupt status is not active.
1532:../firmware/cmsis/inc/core_cm4.h ****     \return             1  Interrupt status is active.
1533:../firmware/cmsis/inc/core_cm4.h ****  */
1534:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1535:../firmware/cmsis/inc/core_cm4.h **** {
1536:../firmware/cmsis/inc/core_cm4.h ****     return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F))) ? 1 : 
1537:../firmware/cmsis/inc/core_cm4.h **** }
1538:../firmware/cmsis/inc/core_cm4.h **** 
1539:../firmware/cmsis/inc/core_cm4.h **** 
1540:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Set Interrupt Priority
1541:../firmware/cmsis/inc/core_cm4.h **** 
1542:../firmware/cmsis/inc/core_cm4.h ****     The function sets the priority of an interrupt.
1543:../firmware/cmsis/inc/core_cm4.h **** 
1544:../firmware/cmsis/inc/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1545:../firmware/cmsis/inc/core_cm4.h **** 
1546:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1547:../firmware/cmsis/inc/core_cm4.h ****     \param [in]  priority  Priority to set.
1548:../firmware/cmsis/inc/core_cm4.h ****  */
1549:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1550:../firmware/cmsis/inc/core_cm4.h **** {
  26              		.loc 1 1550 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 0346     		mov	r3, r0
  39 0008 3960     		str	r1, [r7]
  40 000a FB71     		strb	r3, [r7, #7]
1551:../firmware/cmsis/inc/core_cm4.h ****     if(IRQn < 0) {
  41              		.loc 1 1551 7
  42 000c 97F90730 		ldrsb	r3, [r7, #7]
  43 0010 002B     		cmp	r3, #0
  44 0012 0BDA     		bge	.L2
1552:../firmware/cmsis/inc/core_cm4.h ****         SCB->SHP[((uint32_t)(IRQn) & 0xF) - 4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);
  45              		.loc 1 1552 61
  46 0014 3B68     		ldr	r3, [r7]
  47 0016 DAB2     		uxtb	r2, r3
  48              		.loc 1 1552 12
  49 0018 0C49     		ldr	r1, .L5
  50              		.loc 1 1552 36
  51 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  52 001c 03F00F03 		and	r3, r3, #15
  53              		.loc 1 1552 43
  54 0020 043B     		subs	r3, r3, #4
  55              		.loc 1 1552 61
  56 0022 1201     		lsls	r2, r2, #4
  57 0024 D2B2     		uxtb	r2, r2
  58              		.loc 1 1552 48
  59 0026 0B44     		add	r3, r3, r1
  60 0028 1A76     		strb	r2, [r3, #24]
1553:../firmware/cmsis/inc/core_cm4.h ****     } /* set Priority for Cortex-M  System Interrupts */
1554:../firmware/cmsis/inc/core_cm4.h ****     else {
1555:../firmware/cmsis/inc/core_cm4.h ****         NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);
1556:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
1557:../firmware/cmsis/inc/core_cm4.h **** }
  61              		.loc 1 1557 1
  62 002a 09E0     		b	.L4
  63              	.L2:
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
  64              		.loc 1 1555 49
  65 002c 3B68     		ldr	r3, [r7]
  66 002e DAB2     		uxtb	r2, r3
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
  67              		.loc 1 1555 13
  68 0030 0749     		ldr	r1, .L5+4
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
  69              		.loc 1 1555 18
  70 0032 97F90730 		ldrsb	r3, [r7, #7]
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
  71              		.loc 1 1555 49
  72 0036 1201     		lsls	r2, r2, #4
  73 0038 D2B2     		uxtb	r2, r2
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
  74              		.loc 1 1555 36
  75 003a 0B44     		add	r3, r3, r1
  76 003c 83F80023 		strb	r2, [r3, #768]
  77              	.L4:
  78              		.loc 1 1557 1
  79 0040 00BF     		nop
  80 0042 0C37     		adds	r7, r7, #12
  81              		.cfi_def_cfa_offset 4
  82 0044 BD46     		mov	sp, r7
  83              		.cfi_def_cfa_register 13
  84              		@ sp needed
  85 0046 80BC     		pop	{r7}
  86              		.cfi_restore 7
  87              		.cfi_def_cfa_offset 0
  88 0048 7047     		bx	lr
  89              	.L6:
  90 004a 00BF     		.align	2
  91              	.L5:
  92 004c 00ED00E0 		.word	-536810240
  93 0050 00E100E0 		.word	-536813312
  94              		.cfi_endproc
  95              	.LFE110:
  97              		.section	.text.SysTick_Config,"ax",%progbits
  98              		.align	1
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
 104              	SysTick_Config:
 105              	.LFB115:
1558:../firmware/cmsis/inc/core_cm4.h **** 
1559:../firmware/cmsis/inc/core_cm4.h **** 
1560:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Interrupt Priority
1561:../firmware/cmsis/inc/core_cm4.h **** 
1562:../firmware/cmsis/inc/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1563:../firmware/cmsis/inc/core_cm4.h ****     number can be positive to specify an external (device specific)
1564:../firmware/cmsis/inc/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1565:../firmware/cmsis/inc/core_cm4.h **** 
1566:../firmware/cmsis/inc/core_cm4.h **** 
1567:../firmware/cmsis/inc/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1568:../firmware/cmsis/inc/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1569:../firmware/cmsis/inc/core_cm4.h ****                         priority bits of the microcontroller.
1570:../firmware/cmsis/inc/core_cm4.h ****  */
1571:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1572:../firmware/cmsis/inc/core_cm4.h **** {
1573:../firmware/cmsis/inc/core_cm4.h **** 
1574:../firmware/cmsis/inc/core_cm4.h ****     if(IRQn < 0) {
1575:../firmware/cmsis/inc/core_cm4.h ****         return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF) - 4] >> (8 - __NVIC_PRIO_BITS)));
1576:../firmware/cmsis/inc/core_cm4.h ****     } /* get priority for Cortex-M  system interrupts */
1577:../firmware/cmsis/inc/core_cm4.h ****     else {
1578:../firmware/cmsis/inc/core_cm4.h ****         return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));
1579:../firmware/cmsis/inc/core_cm4.h ****     } /* get priority for device specific interrupts  */
1580:../firmware/cmsis/inc/core_cm4.h **** }
1581:../firmware/cmsis/inc/core_cm4.h **** 
1582:../firmware/cmsis/inc/core_cm4.h **** 
1583:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Encode Priority
1584:../firmware/cmsis/inc/core_cm4.h **** 
1585:../firmware/cmsis/inc/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1586:../firmware/cmsis/inc/core_cm4.h ****     preemptive priority value, and subpriority value.
1587:../firmware/cmsis/inc/core_cm4.h ****     In case of a conflict between priority grouping and available
1588:../firmware/cmsis/inc/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1589:../firmware/cmsis/inc/core_cm4.h **** 
1590:../firmware/cmsis/inc/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1591:../firmware/cmsis/inc/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1592:../firmware/cmsis/inc/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1593:../firmware/cmsis/inc/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1594:../firmware/cmsis/inc/core_cm4.h ****  */
1595:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority(uint32_t PriorityGroup, uint32_t PreemptPriority, uint
1596:../firmware/cmsis/inc/core_cm4.h **** {
1597:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used      
1598:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PreemptPriorityBits;
1599:../firmware/cmsis/inc/core_cm4.h ****     uint32_t SubPriorityBits;
1600:../firmware/cmsis/inc/core_cm4.h **** 
1601:../firmware/cmsis/inc/core_cm4.h ****     PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Prio
1602:../firmware/cmsis/inc/core_cm4.h ****     SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + 
1603:../firmware/cmsis/inc/core_cm4.h **** 
1604:../firmware/cmsis/inc/core_cm4.h ****     return (
1605:../firmware/cmsis/inc/core_cm4.h ****                ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1606:../firmware/cmsis/inc/core_cm4.h ****                ((SubPriority     & ((1 << (SubPriorityBits)) - 1)))
1607:../firmware/cmsis/inc/core_cm4.h ****            );
1608:../firmware/cmsis/inc/core_cm4.h **** }
1609:../firmware/cmsis/inc/core_cm4.h **** 
1610:../firmware/cmsis/inc/core_cm4.h **** 
1611:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Decode Priority
1612:../firmware/cmsis/inc/core_cm4.h **** 
1613:../firmware/cmsis/inc/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1614:../firmware/cmsis/inc/core_cm4.h ****     preemptive priority value and subpriority value.
1615:../firmware/cmsis/inc/core_cm4.h ****     In case of a conflict between priority grouping and available
1616:../firmware/cmsis/inc/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1617:../firmware/cmsis/inc/core_cm4.h **** 
1618:../firmware/cmsis/inc/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1619:../firmware/cmsis/inc/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1620:../firmware/cmsis/inc/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1621:../firmware/cmsis/inc/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1622:../firmware/cmsis/inc/core_cm4.h ****  */
1623:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority(uint32_t Priority, uint32_t PriorityGroup, uint32_t *pPree
1624:../firmware/cmsis/inc/core_cm4.h **** {
1625:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used      
1626:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PreemptPriorityBits;
1627:../firmware/cmsis/inc/core_cm4.h ****     uint32_t SubPriorityBits;
1628:../firmware/cmsis/inc/core_cm4.h **** 
1629:../firmware/cmsis/inc/core_cm4.h ****     PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Prio
1630:../firmware/cmsis/inc/core_cm4.h ****     SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + 
1631:../firmware/cmsis/inc/core_cm4.h **** 
1632:../firmware/cmsis/inc/core_cm4.h ****     *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1633:../firmware/cmsis/inc/core_cm4.h ****     *pSubPriority     = (Priority) & ((1 << (SubPriorityBits)) - 1);
1634:../firmware/cmsis/inc/core_cm4.h **** }
1635:../firmware/cmsis/inc/core_cm4.h **** 
1636:../firmware/cmsis/inc/core_cm4.h **** 
1637:../firmware/cmsis/inc/core_cm4.h **** /** \brief  System Reset
1638:../firmware/cmsis/inc/core_cm4.h **** 
1639:../firmware/cmsis/inc/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1640:../firmware/cmsis/inc/core_cm4.h ****  */
1641:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1642:../firmware/cmsis/inc/core_cm4.h **** {
1643:../firmware/cmsis/inc/core_cm4.h ****     __DSB();                                                     /* Ensure all outstanding memory a
1644:../firmware/cmsis/inc/core_cm4.h ****                                                                   buffered write are completed befo
1645:../firmware/cmsis/inc/core_cm4.h ****     SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1646:../firmware/cmsis/inc/core_cm4.h ****                    (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1647:../firmware/cmsis/inc/core_cm4.h ****                    SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged *
1648:../firmware/cmsis/inc/core_cm4.h ****     __DSB();                                                     /* Ensure completion of memory acc
1649:../firmware/cmsis/inc/core_cm4.h ****     while(1);                                                    /* wait until reset */
1650:../firmware/cmsis/inc/core_cm4.h **** }
1651:../firmware/cmsis/inc/core_cm4.h **** 
1652:../firmware/cmsis/inc/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1653:../firmware/cmsis/inc/core_cm4.h **** 
1654:../firmware/cmsis/inc/core_cm4.h **** 
1655:../firmware/cmsis/inc/core_cm4.h **** 
1656:../firmware/cmsis/inc/core_cm4.h **** /* ##################################    SysTick function  ########################################
1657:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1658:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1659:../firmware/cmsis/inc/core_cm4.h ****     \brief      Functions that configure the System.
1660:../firmware/cmsis/inc/core_cm4.h ****   @{
1661:../firmware/cmsis/inc/core_cm4.h ****  */
1662:../firmware/cmsis/inc/core_cm4.h **** 
1663:../firmware/cmsis/inc/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1664:../firmware/cmsis/inc/core_cm4.h **** 
1665:../firmware/cmsis/inc/core_cm4.h **** /** \brief  System Tick Configuration
1666:../firmware/cmsis/inc/core_cm4.h **** 
1667:../firmware/cmsis/inc/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1668:../firmware/cmsis/inc/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1669:../firmware/cmsis/inc/core_cm4.h **** 
1670:../firmware/cmsis/inc/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1671:../firmware/cmsis/inc/core_cm4.h **** 
1672:../firmware/cmsis/inc/core_cm4.h ****     \return          0  Function succeeded.
1673:../firmware/cmsis/inc/core_cm4.h ****     \return          1  Function failed.
1674:../firmware/cmsis/inc/core_cm4.h **** 
1675:../firmware/cmsis/inc/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1676:../firmware/cmsis/inc/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1677:../firmware/cmsis/inc/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1678:../firmware/cmsis/inc/core_cm4.h **** 
1679:../firmware/cmsis/inc/core_cm4.h ****  */
1680:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1681:../firmware/cmsis/inc/core_cm4.h **** {
 106              		.loc 1 1681 1
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 8
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110 0000 80B5     		push	{r7, lr}
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 7, -8
 113              		.cfi_offset 14, -4
 114 0002 82B0     		sub	sp, sp, #8
 115              		.cfi_def_cfa_offset 16
 116 0004 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 118 0006 7860     		str	r0, [r7, #4]
1682:../firmware/cmsis/inc/core_cm4.h ****     if((ticks - 1) > SysTick_LOAD_RELOAD_Msk) {
 119              		.loc 1 1682 15
 120 0008 7B68     		ldr	r3, [r7, #4]
 121 000a 013B     		subs	r3, r3, #1
 122              		.loc 1 1682 7
 123 000c B3F1807F 		cmp	r3, #16777216
 124 0010 01D3     		bcc	.L8
1683:../firmware/cmsis/inc/core_cm4.h ****         return (1);    /* Reload value impossible */
 125              		.loc 1 1683 16
 126 0012 0123     		movs	r3, #1
 127 0014 0FE0     		b	.L9
 128              	.L8:
1684:../firmware/cmsis/inc/core_cm4.h ****     }
1685:../firmware/cmsis/inc/core_cm4.h **** 
1686:../firmware/cmsis/inc/core_cm4.h ****     SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 129              		.loc 1 1686 12
 130 0016 0A4A     		ldr	r2, .L10
 131              		.loc 1 1686 28
 132 0018 7B68     		ldr	r3, [r7, #4]
 133 001a 013B     		subs	r3, r3, #1
 134              		.loc 1 1686 20
 135 001c 5360     		str	r3, [r2, #4]
1687:../firmware/cmsis/inc/core_cm4.h ****     NVIC_SetPriority(SysTick_IRQn, (1 << __NVIC_PRIO_BITS) - 1); /* set Priority for Systick Interr
 136              		.loc 1 1687 5
 137 001e 0F21     		movs	r1, #15
 138 0020 4FF0FF30 		mov	r0, #-1
 139 0024 FFF7FEFF 		bl	NVIC_SetPriority
1688:../firmware/cmsis/inc/core_cm4.h ****     SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value 
 140              		.loc 1 1688 12
 141 0028 054B     		ldr	r3, .L10
 142              		.loc 1 1688 20
 143 002a 0022     		movs	r2, #0
 144 002c 9A60     		str	r2, [r3, #8]
1689:../firmware/cmsis/inc/core_cm4.h ****     SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 145              		.loc 1 1689 12
 146 002e 044B     		ldr	r3, .L10
 147              		.loc 1 1689 20
 148 0030 0722     		movs	r2, #7
 149 0032 1A60     		str	r2, [r3]
1690:../firmware/cmsis/inc/core_cm4.h ****                      SysTick_CTRL_TICKINT_Msk   |
1691:../firmware/cmsis/inc/core_cm4.h ****                      SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick 
1692:../firmware/cmsis/inc/core_cm4.h ****     return (0);                                                  /* Function successful */
 150              		.loc 1 1692 12
 151 0034 0023     		movs	r3, #0
 152              	.L9:
1693:../firmware/cmsis/inc/core_cm4.h **** }
 153              		.loc 1 1693 1
 154 0036 1846     		mov	r0, r3
 155 0038 0837     		adds	r7, r7, #8
 156              		.cfi_def_cfa_offset 8
 157 003a BD46     		mov	sp, r7
 158              		.cfi_def_cfa_register 13
 159              		@ sp needed
 160 003c 80BD     		pop	{r7, pc}
 161              	.L11:
 162 003e 00BF     		.align	2
 163              	.L10:
 164 0040 10E000E0 		.word	-536813552
 165              		.cfi_endproc
 166              	.LFE115:
 168              		.global	g_basetick_source
 169              		.section	.bss.g_basetick_source,"aw",%nobits
 172              	g_basetick_source:
 173 0000 00       		.space	1
 174              		.global	g_debug_selection
 175              		.section	.bss.g_debug_selection,"aw",%nobits
 178              	g_debug_selection:
 179 0000 00       		.space	1
 180              		.section	.bss._basetick_irq_handle,"aw",%nobits
 181              		.align	2
 184              	_basetick_irq_handle:
 185 0000 00000000 		.space	4
 186              		.section	.bss.g_basetick_count,"aw",%nobits
 187              		.align	2
 190              	g_basetick_count:
 191 0000 00000000 		.space	4
 192              		.section	.rodata._BASETICK_SOURCE_RESET,"a"
 193              		.align	2
 196              	_BASETICK_SOURCE_RESET:
 197 0000 0B03     		.short	779
 198 0002 0104     		.short	1025
 199 0004 0804     		.short	1032
 200 0006 1003     		.short	784
 201 0008 1103     		.short	785
 202 000a 1203     		.short	786
 203              		.section	.rodata._BASETICK_SOURCE_CLK,"a"
 204              		.align	2
 207              	_BASETICK_SOURCE_CLK:
 208 0000 0B06     		.short	1547
 209 0002 0107     		.short	1793
 210 0004 0807     		.short	1800
 211 0006 1006     		.short	1552
 212 0008 1106     		.short	1553
 213 000a 1206     		.short	1554
 214              		.section	.rodata._BASETICK_SOURCE_PERIPH,"a"
 215              		.align	2
 218              	_BASETICK_SOURCE_PERIPH:
 219 0000 002C0140 		.word	1073818624
 220 0004 00040040 		.word	1073742848
 221 0008 00200040 		.word	1073750016
 222 000c 00400140 		.word	1073823744
 223 0010 00440140 		.word	1073824768
 224 0014 00480140 		.word	1073825792
 225              		.section	.rodata._BASETICK_SOURCE_IRQN,"a"
 226              		.align	2
 229              	_BASETICK_SOURCE_IRQN:
 230 0000 0D       		.byte	13
 231 0001 10       		.byte	16
 232 0002 13       		.byte	19
 233 0003 14       		.byte	20
 234 0004 15       		.byte	21
 235 0005 16       		.byte	22
 236              		.section	.text.hal_sys_deinit,"ax",%progbits
 237              		.align	1
 238              		.global	hal_sys_deinit
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu softvfp
 244              	hal_sys_deinit:
 245              	.LFB119:
 246              		.file 2 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \file    gd32f3x0_hal_sys.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief   SYS driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     All rights reserved.
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     Redistribution and use in source and binary forms, with or without modification,
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** are permitted provided that the following conditions are met:
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     1. Redistributions of source code must retain the above copyright notice, this
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****        list of conditions and the following disclaimer.
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****        this list of conditions and the following disclaimer in the documentation
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****        and/or other materials provided with the distribution.
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****        may be used to endorse or promote products derived from this software without
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****        specific prior written permission.
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** OF SUCH DAMAGE.
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #include "gd32f3x0_hal.h"
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #define DBG_RESET_VAL            ((uint32_t)0x00000000U)       /*!< DBG reset value */
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* global variable, basetick timer source */
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** hal_sys_timebase_source_enum g_basetick_source = SYS_TIMEBASE_SOURCE_SYSTICK;
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* global variable, debug selection */
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** hal_sys_debug_cfg_enum       g_debug_selection = SYS_DEBUG_DISABLE;
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* the callback of basetick interrupt definition */
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static hal_sys_basetick_irq_handle_cb _basetick_irq_handle = NULL;
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* the internal basetick counter */
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static __IO uint32_t g_basetick_count = 0U;
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* the clock source of the basetick timer */
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static const hal_rcu_periph_reset_enum _BASETICK_SOURCE_RESET[] =  BASETICK_SOURCE_TIMERX_RST;
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* the clock source of the basetick timer */
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static const hal_rcu_periph_enum _BASETICK_SOURCE_CLK[] = BASETICK_SOURCE_TIMERX_CLK;
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* the peripheral of the basetick timer */
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static const uint32_t _BASETICK_SOURCE_PERIPH[] = BASETICK_SOURCE_TIMERX_PERIPH;
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* the interrupt number of the correspond timer */
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static const IRQn_Type _BASETICK_SOURCE_IRQN[] = BASETICK_SOURCE_TIMERX_IRQN;
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /* static function declaration */
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static void _sys_systick_init(uint32_t count_freq, uint32_t prio);
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static void _sys_basetick_timer_init(hal_sys_timebase_source_enum source, \
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                                      uint32_t count_freq, \
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                                      uint8_t prio);
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      deinitialize SYS
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** int32_t hal_sys_deinit(void)
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 247              		.loc 2 78 1
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* deinitialize the DBG */
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     SYS_DBG_CTL0 = DBG_RESET_VAL;
 257              		.loc 2 80 5
 258 0004 234B     		ldr	r3, .L18
 259              		.loc 2 80 18
 260 0006 0022     		movs	r2, #0
 261 0008 1A60     		str	r2, [r3]
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     SYS_DBG_CTL1 = DBG_RESET_VAL;
 262              		.loc 2 81 5
 263 000a 234B     		ldr	r3, .L18+4
 264              		.loc 2 81 18
 265 000c 0022     		movs	r2, #0
 266 000e 1A60     		str	r2, [r3]
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* deinitialize time basetick */
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(SYS_TIMEBASE_SOURCE_SYSTICK == g_basetick_source) {
 267              		.loc 2 84 36
 268 0010 224B     		ldr	r3, .L18+8
 269 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270              		.loc 2 84 7
 271 0014 002B     		cmp	r3, #0
 272 0016 14D1     		bne	.L13
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         SysTick->LOAD &= ~SysTick_LOAD_RELOAD_Msk;
 273              		.loc 2 85 23
 274 0018 214B     		ldr	r3, .L18+12
 275 001a 5B68     		ldr	r3, [r3, #4]
 276 001c 204A     		ldr	r2, .L18+12
 277 001e 03F07F43 		and	r3, r3, #-16777216
 278 0022 5360     		str	r3, [r2, #4]
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         SysTick->VAL  &= ~SysTick_VAL_CURRENT_Msk;
 279              		.loc 2 86 23
 280 0024 1E4B     		ldr	r3, .L18+12
 281 0026 9B68     		ldr	r3, [r3, #8]
 282 0028 1D4A     		ldr	r2, .L18+12
 283 002a 03F07F43 		and	r3, r3, #-16777216
 284 002e 9360     		str	r3, [r2, #8]
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         SysTick->CTRL &= ~(SysTick_CTRL_TICKINT_Msk |   \
 285              		.loc 2 87 23
 286 0030 1B4B     		ldr	r3, .L18+12
 287 0032 1B68     		ldr	r3, [r3]
 288 0034 1A4A     		ldr	r2, .L18+12
 289 0036 23F48033 		bic	r3, r3, #65536
 290 003a 23F00603 		bic	r3, r3, #6
 291 003e 1360     		str	r3, [r2]
 292 0040 25E0     		b	.L14
 293              	.L13:
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                            SysTick_CTRL_CLKSOURCE_Msk | \
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                            SysTick_CTRL_COUNTFLAG_Msk);
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else if((SYS_TIMEBASE_SOURCE_TIMER0 < g_basetick_source) || \
 294              		.loc 2 90 43
 295 0042 164B     		ldr	r3, .L18+8
 296 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 297              		.loc 2 90 14
 298 0046 012B     		cmp	r3, #1
 299 0048 03D8     		bhi	.L15
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****               (SYS_TIMEBASE_SOURCE_TIMER16 > g_basetick_source)) {
 300              		.loc 2 91 44 discriminator 1
 301 004a 144B     		ldr	r3, .L18+8
 302 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****               (SYS_TIMEBASE_SOURCE_TIMER16 > g_basetick_source)) {
 303              		.loc 2 90 64 discriminator 1
 304 004e 072B     		cmp	r3, #7
 305 0050 1AD8     		bhi	.L16
 306              	.L15:
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         /* disable timer's interrupt */
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_nvic_periph_irq_disable(_BASETICK_SOURCE_IRQN[g_basetick_source]);
 307              		.loc 2 94 9
 308 0052 124B     		ldr	r3, .L18+8
 309 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 310 0056 1A46     		mov	r2, r3
 311 0058 124B     		ldr	r3, .L18+16
 312 005a 9B56     		ldrsb	r3, [r3, r2]
 313 005c 1846     		mov	r0, r3
 314 005e FFF7FEFF 		bl	hals_nvic_periph_irq_disable
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hal_rcu_periph_reset_enable(_BASETICK_SOURCE_RESET[g_basetick_source]);
 315              		.loc 2 95 9
 316 0062 0E4B     		ldr	r3, .L18+8
 317 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 0066 1A46     		mov	r2, r3
 319 0068 0F4B     		ldr	r3, .L18+20
 320 006a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 321 006e 1846     		mov	r0, r3
 322 0070 FFF7FEFF 		bl	hal_rcu_periph_reset_enable
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hal_rcu_periph_reset_disable(_BASETICK_SOURCE_RESET[g_basetick_source]);
 323              		.loc 2 96 9
 324 0074 094B     		ldr	r3, .L18+8
 325 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326 0078 1A46     		mov	r2, r3
 327 007a 0B4B     		ldr	r3, .L18+20
 328 007c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 329 0080 1846     		mov	r0, r3
 330 0082 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
 331 0086 02E0     		b	.L14
 332              	.L16:
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else {
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         return HAL_ERR_VAL;
 333              		.loc 2 98 16
 334 0088 6FF00503 		mvn	r3, #5
 335 008c 00E0     		b	.L17
 336              	.L14:
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     return HAL_ERR_NONE;
 337              		.loc 2 100 12
 338 008e 0023     		movs	r3, #0
 339              	.L17:
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 340              		.loc 2 101 1
 341 0090 1846     		mov	r0, r3
 342 0092 80BD     		pop	{r7, pc}
 343              	.L19:
 344              		.align	2
 345              	.L18:
 346 0094 042004E0 		.word	-536600572
 347 0098 082004E0 		.word	-536600568
 348 009c 00000000 		.word	g_basetick_source
 349 00a0 10E000E0 		.word	-536813552
 350 00a4 00000000 		.word	_BASETICK_SOURCE_IRQN
 351 00a8 00000000 		.word	_BASETICK_SOURCE_RESET
 352              		.cfi_endproc
 353              	.LFE119:
 355              		.section	.text.hal_sys_debug_init,"ax",%progbits
 356              		.align	1
 357              		.global	hal_sys_debug_init
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	hal_sys_debug_init:
 364              	.LFB120:
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      initialize debug
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  debug_cfg: select debug
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DEBUG_ DISABLE: debug diable
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DEBUG_SERIAL_WIRE: serial wire
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** int32_t hal_sys_debug_init(hal_sys_debug_cfg_enum debug_cfg)
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 365              		.loc 2 111 1
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 8
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 83B0     		sub	sp, sp, #12
 374              		.cfi_def_cfa_offset 16
 375 0004 00AF     		add	r7, sp, #0
 376              		.cfi_def_cfa_register 7
 377 0006 0346     		mov	r3, r0
 378 0008 FB71     		strb	r3, [r7, #7]
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     g_debug_selection = debug_cfg;
 379              		.loc 2 112 23
 380 000a 044A     		ldr	r2, .L22
 381 000c FB79     		ldrb	r3, [r7, #7]
 382 000e 1370     		strb	r3, [r2]
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(SYS_DEBUG_SERIAL_WIRE == debug_cfg) {
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     return HAL_ERR_NONE;
 383              		.loc 2 115 12
 384 0010 0023     		movs	r3, #0
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 385              		.loc 2 116 1
 386 0012 1846     		mov	r0, r3
 387 0014 0C37     		adds	r7, r7, #12
 388              		.cfi_def_cfa_offset 4
 389 0016 BD46     		mov	sp, r7
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 0018 80BC     		pop	{r7}
 393              		.cfi_restore 7
 394              		.cfi_def_cfa_offset 0
 395 001a 7047     		bx	lr
 396              	.L23:
 397              		.align	2
 398              	.L22:
 399 001c 00000000 		.word	g_debug_selection
 400              		.cfi_endproc
 401              	.LFE120:
 403              		.section	.text.hal_sys_timesource_init,"ax",%progbits
 404              		.align	1
 405              		.global	hal_sys_timesource_init
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu softvfp
 411              	hal_sys_timesource_init:
 412              	.LFB121:
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      initialize basetick timer
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  source: select the source timer
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_TIMEBASE_SOURCE_TIMERx: x=0,1,2,5,13,14,15,16, use the TIMERx as the source
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_TIMEBASE_SOURCE_SYSTICK: use the systick as the source
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** int32_t hal_sys_timesource_init(hal_sys_timebase_source_enum source)
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 413              		.loc 2 126 1
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 82B0     		sub	sp, sp, #8
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 0346     		mov	r3, r0
 426 0008 FB71     		strb	r3, [r7, #7]
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     g_basetick_source = source;
 427              		.loc 2 127 23
 428 000a 124A     		ldr	r2, .L30
 429 000c FB79     		ldrb	r3, [r7, #7]
 430 000e 1370     		strb	r3, [r2]
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(SYS_TIMEBASE_SOURCE_SYSTICK == source) {
 431              		.loc 2 128 7
 432 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 433 0012 002B     		cmp	r3, #0
 434 0014 05D1     		bne	.L25
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         _sys_systick_init(HAL_BASETICK_RATE_HZ, 0U);
 435              		.loc 2 129 9
 436 0016 0021     		movs	r1, #0
 437 0018 4FF47A70 		mov	r0, #1000
 438 001c FFF7FEFF 		bl	_sys_systick_init
 439 0020 12E0     		b	.L26
 440              	.L25:
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else if((SYS_TIMEBASE_SOURCE_TIMER0 < g_basetick_source) || \
 441              		.loc 2 130 43
 442 0022 0C4B     		ldr	r3, .L30
 443 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444              		.loc 2 130 14
 445 0026 012B     		cmp	r3, #1
 446 0028 03D8     		bhi	.L27
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****               (SYS_TIMEBASE_SOURCE_TIMER16 > g_basetick_source)) {
 447              		.loc 2 131 44 discriminator 1
 448 002a 0A4B     		ldr	r3, .L30
 449 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else if((SYS_TIMEBASE_SOURCE_TIMER0 < g_basetick_source) || \
 450              		.loc 2 130 64 discriminator 1
 451 002e 072B     		cmp	r3, #7
 452 0030 07D8     		bhi	.L28
 453              	.L27:
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         _sys_basetick_timer_init(source, HAL_BASETICK_RATE_HZ, 0U);
 454              		.loc 2 132 9
 455 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 456 0034 0022     		movs	r2, #0
 457 0036 4FF47A71 		mov	r1, #1000
 458 003a 1846     		mov	r0, r3
 459 003c FFF7FEFF 		bl	_sys_basetick_timer_init
 460 0040 02E0     		b	.L26
 461              	.L28:
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else {
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         return HAL_ERR_VAL;
 462              		.loc 2 134 16
 463 0042 6FF00503 		mvn	r3, #5
 464 0046 00E0     		b	.L29
 465              	.L26:
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     return HAL_ERR_NONE;
 466              		.loc 2 136 12
 467 0048 0023     		movs	r3, #0
 468              	.L29:
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 469              		.loc 2 137 1
 470 004a 1846     		mov	r0, r3
 471 004c 0837     		adds	r7, r7, #8
 472              		.cfi_def_cfa_offset 8
 473 004e BD46     		mov	sp, r7
 474              		.cfi_def_cfa_register 13
 475              		@ sp needed
 476 0050 80BD     		pop	{r7, pc}
 477              	.L31:
 478 0052 00BF     		.align	2
 479              	.L30:
 480 0054 00000000 		.word	g_basetick_source
 481              		.cfi_endproc
 482              	.LFE121:
 484              		.section	.text.hal_sys_basetick_count_get,"ax",%progbits
 485              		.align	1
 486              		.global	hal_sys_basetick_count_get
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu softvfp
 492              	hal_sys_basetick_count_get:
 493              	.LFB122:
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      get the basetick count
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     uint32_t: 0-0xFFFFFFFF
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** uint32_t hal_sys_basetick_count_get(void)
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 494              		.loc 2 146 1
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499 0000 80B4     		push	{r7}
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 7, -4
 502 0002 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     return (g_basetick_count);
 504              		.loc 2 147 12
 505 0004 024B     		ldr	r3, .L34
 506 0006 1B68     		ldr	r3, [r3]
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 507              		.loc 2 148 1
 508 0008 1846     		mov	r0, r3
 509 000a BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 000c 80BC     		pop	{r7}
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 000e 7047     		bx	lr
 516              	.L35:
 517              		.align	2
 518              	.L34:
 519 0010 00000000 		.word	g_basetick_count
 520              		.cfi_endproc
 521              	.LFE122:
 523              		.section	.text.hal_sys_basetick_timeout_check,"ax",%progbits
 524              		.align	1
 525              		.global	hal_sys_basetick_timeout_check
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	hal_sys_basetick_timeout_check:
 532              	.LFB123:
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      check whether the delay is finished
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  time_start: the starting time point of the delay
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  delay: the delay interval
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     FlagStatus: SET or RESET
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** FlagStatus hal_sys_basetick_timeout_check(uint32_t time_start, uint32_t delay)
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 533              		.loc 2 158 1
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 8
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 83B0     		sub	sp, sp, #12
 542              		.cfi_def_cfa_offset 16
 543 0004 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 545 0006 7860     		str	r0, [r7, #4]
 546 0008 3960     		str	r1, [r7]
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(g_basetick_count - time_start > delay) {
 547              		.loc 2 159 25
 548 000a 074B     		ldr	r3, .L39
 549 000c 1A68     		ldr	r2, [r3]
 550 000e 7B68     		ldr	r3, [r7, #4]
 551 0010 D31A     		subs	r3, r2, r3
 552              		.loc 2 159 7
 553 0012 3A68     		ldr	r2, [r7]
 554 0014 9A42     		cmp	r2, r3
 555 0016 01D2     		bcs	.L37
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         return SET;
 556              		.loc 2 160 16
 557 0018 0123     		movs	r3, #1
 558 001a 00E0     		b	.L38
 559              	.L37:
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else {
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         return RESET;
 560              		.loc 2 162 16
 561 001c 0023     		movs	r3, #0
 562              	.L38:
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 563              		.loc 2 164 1
 564 001e 1846     		mov	r0, r3
 565 0020 0C37     		adds	r7, r7, #12
 566              		.cfi_def_cfa_offset 4
 567 0022 BD46     		mov	sp, r7
 568              		.cfi_def_cfa_register 13
 569              		@ sp needed
 570 0024 80BC     		pop	{r7}
 571              		.cfi_restore 7
 572              		.cfi_def_cfa_offset 0
 573 0026 7047     		bx	lr
 574              	.L40:
 575              		.align	2
 576              	.L39:
 577 0028 00000000 		.word	g_basetick_count
 578              		.cfi_endproc
 579              	.LFE123:
 581              		.section	.text.hal_sys_basetick_delay_ms,"ax",%progbits
 582              		.align	1
 583              		.global	hal_sys_basetick_delay_ms
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu softvfp
 589              	hal_sys_basetick_delay_ms:
 590              	.LFB124:
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      set the basetick delay
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  time_ms: the timeout interval
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hal_sys_basetick_delay_ms(uint32_t time_ms)
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 591              		.loc 2 173 1
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 85B0     		sub	sp, sp, #20
 600              		.cfi_def_cfa_offset 24
 601 0004 00AF     		add	r7, sp, #0
 602              		.cfi_def_cfa_register 7
 603 0006 7860     		str	r0, [r7, #4]
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     uint32_t delay;
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     uint32_t time_start = g_basetick_count;
 604              		.loc 2 175 14
 605 0008 094B     		ldr	r3, .L43
 606 000a 1B68     		ldr	r3, [r3]
 607 000c FB60     		str	r3, [r7, #12]
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     delay = (time_ms * (uint32_t)((float)HAL_BASETICK_RATE_HZ / (float)1000U));
 608              		.loc 2 177 11
 609 000e 7B68     		ldr	r3, [r7, #4]
 610 0010 BB60     		str	r3, [r7, #8]
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     while(g_basetick_count - time_start < delay) {
 611              		.loc 2 179 10
 612 0012 00BF     		nop
 613              	.L42:
 614              		.loc 2 179 28 discriminator 1
 615 0014 064B     		ldr	r3, .L43
 616 0016 1A68     		ldr	r2, [r3]
 617 0018 FB68     		ldr	r3, [r7, #12]
 618 001a D31A     		subs	r3, r2, r3
 619              		.loc 2 179 10 discriminator 1
 620 001c BA68     		ldr	r2, [r7, #8]
 621 001e 9A42     		cmp	r2, r3
 622 0020 F8D8     		bhi	.L42
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 623              		.loc 2 182 1
 624 0022 00BF     		nop
 625 0024 00BF     		nop
 626 0026 1437     		adds	r7, r7, #20
 627              		.cfi_def_cfa_offset 4
 628 0028 BD46     		mov	sp, r7
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 002a 80BC     		pop	{r7}
 632              		.cfi_restore 7
 633              		.cfi_def_cfa_offset 0
 634 002c 7047     		bx	lr
 635              	.L44:
 636 002e 00BF     		.align	2
 637              	.L43:
 638 0030 00000000 		.word	g_basetick_count
 639              		.cfi_endproc
 640              	.LFE124:
 642              		.section	.text.hal_sys_basetick_suspend,"ax",%progbits
 643              		.align	1
 644              		.global	hal_sys_basetick_suspend
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu softvfp
 650              	hal_sys_basetick_suspend:
 651              	.LFB125:
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      suspend the basetick timer
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hal_sys_basetick_suspend(void)
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 652              		.loc 2 191 1
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 80B5     		push	{r7, lr}
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 00AF     		add	r7, sp, #0
 661              		.cfi_def_cfa_register 7
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(SYS_TIMEBASE_SOURCE_SYSTICK == g_basetick_source) {
 662              		.loc 2 192 36
 663 0004 0A4B     		ldr	r3, .L49
 664 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665              		.loc 2 192 7
 666 0008 002B     		cmp	r3, #0
 667 000a 06D1     		bne	.L46
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 668              		.loc 2 193 23
 669 000c 094B     		ldr	r3, .L49+4
 670 000e 1B68     		ldr	r3, [r3]
 671 0010 084A     		ldr	r2, .L49+4
 672 0012 23F00203 		bic	r3, r3, #2
 673 0016 1360     		str	r3, [r2]
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else {
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_disable(_BASETICK_SOURCE_PERIPH[g_basetick_source]);
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 674              		.loc 2 197 1
 675 0018 08E0     		b	.L48
 676              	.L46:
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 677              		.loc 2 195 9
 678 001a 054B     		ldr	r3, .L49
 679 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680 001e 1A46     		mov	r2, r3
 681 0020 054B     		ldr	r3, .L49+8
 682 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 683 0026 1846     		mov	r0, r3
 684 0028 FFF7FEFF 		bl	hals_timer_disable
 685              	.L48:
 686              		.loc 2 197 1
 687 002c 00BF     		nop
 688 002e 80BD     		pop	{r7, pc}
 689              	.L50:
 690              		.align	2
 691              	.L49:
 692 0030 00000000 		.word	g_basetick_source
 693 0034 10E000E0 		.word	-536813552
 694 0038 00000000 		.word	_BASETICK_SOURCE_PERIPH
 695              		.cfi_endproc
 696              	.LFE125:
 698              		.section	.text.hal_sys_basetick_resume,"ax",%progbits
 699              		.align	1
 700              		.global	hal_sys_basetick_resume
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu softvfp
 706              	hal_sys_basetick_resume:
 707              	.LFB126:
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      resume the basetick timer
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hal_sys_basetick_resume(void)
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 708              		.loc 2 206 1
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712 0000 80B5     		push	{r7, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 7, -8
 715              		.cfi_offset 14, -4
 716 0002 00AF     		add	r7, sp, #0
 717              		.cfi_def_cfa_register 7
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(SYS_TIMEBASE_SOURCE_SYSTICK == g_basetick_source) {
 718              		.loc 2 207 36
 719 0004 0A4B     		ldr	r3, .L55
 720 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 721              		.loc 2 207 7
 722 0008 002B     		cmp	r3, #0
 723 000a 06D1     		bne	.L52
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 724              		.loc 2 208 23
 725 000c 094B     		ldr	r3, .L55+4
 726 000e 1B68     		ldr	r3, [r3]
 727 0010 084A     		ldr	r2, .L55+4
 728 0012 43F00203 		orr	r3, r3, #2
 729 0016 1360     		str	r3, [r2]
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else {
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_enable(_BASETICK_SOURCE_PERIPH[g_basetick_source]);
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 730              		.loc 2 212 1
 731 0018 08E0     		b	.L54
 732              	.L52:
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 733              		.loc 2 210 9
 734 001a 054B     		ldr	r3, .L55
 735 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 736 001e 1A46     		mov	r2, r3
 737 0020 054B     		ldr	r3, .L55+8
 738 0022 53F82230 		ldr	r3, [r3, r2, lsl #2]
 739 0026 1846     		mov	r0, r3
 740 0028 FFF7FEFF 		bl	hals_timer_enable
 741              	.L54:
 742              		.loc 2 212 1
 743 002c 00BF     		nop
 744 002e 80BD     		pop	{r7, pc}
 745              	.L56:
 746              		.align	2
 747              	.L55:
 748 0030 00000000 		.word	g_basetick_source
 749 0034 10E000E0 		.word	-536813552
 750 0038 00000000 		.word	_BASETICK_SOURCE_PERIPH
 751              		.cfi_endproc
 752              	.LFE126:
 754              		.section	.text.hal_sys_basetick_irq,"ax",%progbits
 755              		.align	1
 756              		.global	hal_sys_basetick_irq
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu softvfp
 762              	hal_sys_basetick_irq:
 763              	.LFB127:
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      basetick interrupt handler content function, which is merely \
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 used in SysTick_Handler or TIMERx_UP_IRQHandler
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hal_sys_basetick_irq(void)
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 764              		.loc 2 222 1
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     g_basetick_count++;
 774              		.loc 2 223 21
 775 0004 224B     		ldr	r3, .L70
 776 0006 1B68     		ldr	r3, [r3]
 777 0008 0133     		adds	r3, r3, #1
 778 000a 214A     		ldr	r2, .L70
 779 000c 1360     		str	r3, [r2]
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     switch(g_basetick_source) {
 780              		.loc 2 225 5
 781 000e 214B     		ldr	r3, .L70+4
 782 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 783 0012 013B     		subs	r3, r3, #1
 784 0014 072B     		cmp	r3, #7
 785 0016 31D8     		bhi	.L68
 786 0018 01A2     		adr	r2, .L60
 787 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 788 001e 00BF     		.p2align 2
 789              	.L60:
 790 0020 41000000 		.word	.L65+1
 791 0024 7D000000 		.word	.L68+1
 792 0028 4B000000 		.word	.L64+1
 793 002c 7D000000 		.word	.L68+1
 794 0030 55000000 		.word	.L63+1
 795 0034 5F000000 		.word	.L62+1
 796 0038 69000000 		.word	.L61+1
 797 003c 73000000 		.word	.L59+1
 798              		.p2align 1
 799              	.L65:
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER0:
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER0, TIMER_INT_FLAG_UP);
 800              		.loc 2 227 9
 801 0040 0121     		movs	r1, #1
 802 0042 1548     		ldr	r0, .L70+8
 803 0044 FFF7FEFF 		bl	hals_timer_interrupt_flag_clear
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 804              		.loc 2 228 9
 805 0048 19E0     		b	.L66
 806              	.L64:
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #if (defined(GD32F350) || defined(GD32F330))
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER1:
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER1, TIMER_INT_FLAG_UP);
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #endif /* GD32F350 and GD32F330 */
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER2:
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER2, TIMER_INT_FLAG_UP);
 807              		.loc 2 235 9
 808 004a 0121     		movs	r1, #1
 809 004c 1348     		ldr	r0, .L70+12
 810 004e FFF7FEFF 		bl	hals_timer_interrupt_flag_clear
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 811              		.loc 2 236 9
 812 0052 14E0     		b	.L66
 813              	.L63:
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #ifdef GD32F350
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER5:
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER5, TIMER_INT_FLAG_UP);
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #endif/* GD32F350 */
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER13:
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER13, TIMER_INT_FLAG_UP);
 814              		.loc 2 243 9
 815 0054 0121     		movs	r1, #1
 816 0056 1248     		ldr	r0, .L70+16
 817 0058 FFF7FEFF 		bl	hals_timer_interrupt_flag_clear
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 818              		.loc 2 244 9
 819 005c 0FE0     		b	.L66
 820              	.L62:
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER14:
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER14, TIMER_INT_FLAG_UP);
 821              		.loc 2 247 9
 822 005e 0121     		movs	r1, #1
 823 0060 1048     		ldr	r0, .L70+20
 824 0062 FFF7FEFF 		bl	hals_timer_interrupt_flag_clear
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 825              		.loc 2 248 9
 826 0066 0AE0     		b	.L66
 827              	.L61:
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER15:
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER15, TIMER_INT_FLAG_UP);
 828              		.loc 2 251 9
 829 0068 0121     		movs	r1, #1
 830 006a 0F48     		ldr	r0, .L70+24
 831 006c FFF7FEFF 		bl	hals_timer_interrupt_flag_clear
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 832              		.loc 2 252 9
 833 0070 05E0     		b	.L66
 834              	.L59:
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     case SYS_TIMEBASE_SOURCE_TIMER16:
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         hals_timer_interrupt_flag_clear(TIMER16, TIMER_INT_FLAG_UP);
 835              		.loc 2 255 9
 836 0072 0121     		movs	r1, #1
 837 0074 0D48     		ldr	r0, .L70+28
 838 0076 FFF7FEFF 		bl	hals_timer_interrupt_flag_clear
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 839              		.loc 2 256 9
 840 007a 00E0     		b	.L66
 841              	.L68:
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     default:
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         break;
 842              		.loc 2 259 9
 843 007c 00BF     		nop
 844              	.L66:
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(NULL != _basetick_irq_handle) {
 845              		.loc 2 261 13
 846 007e 0C4B     		ldr	r3, .L70+32
 847 0080 1B68     		ldr	r3, [r3]
 848              		.loc 2 261 7
 849 0082 002B     		cmp	r3, #0
 850 0084 02D0     		beq	.L69
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         _basetick_irq_handle();
 851              		.loc 2 262 9
 852 0086 0A4B     		ldr	r3, .L70+32
 853 0088 1B68     		ldr	r3, [r3]
 854 008a 9847     		blx	r3
 855              	.LVL0:
 856              	.L69:
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 857              		.loc 2 265 1
 858 008c 00BF     		nop
 859 008e 80BD     		pop	{r7, pc}
 860              	.L71:
 861              		.align	2
 862              	.L70:
 863 0090 00000000 		.word	g_basetick_count
 864 0094 00000000 		.word	g_basetick_source
 865 0098 002C0140 		.word	1073818624
 866 009c 00040040 		.word	1073742848
 867 00a0 00200040 		.word	1073750016
 868 00a4 00400140 		.word	1073823744
 869 00a8 00440140 		.word	1073824768
 870 00ac 00480140 		.word	1073825792
 871 00b0 00000000 		.word	_basetick_irq_handle
 872              		.cfi_endproc
 873              	.LFE127:
 875              		.section	.text.hal_sys_basetick_irq_handle_set,"ax",%progbits
 876              		.align	1
 877              		.global	hal_sys_basetick_irq_handle_set
 878              		.syntax unified
 879              		.thumb
 880              		.thumb_func
 881              		.fpu softvfp
 883              	hal_sys_basetick_irq_handle_set:
 884              	.LFB128:
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      set user-defined interrupt callback function, which will be \
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 registered and called when corresponding interrupt be triggered
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  irq_handler:
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hal_sys_basetick_irq_handle_set(hal_sys_basetick_irq_handle_cb irq_handler)
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 885              		.loc 2 275 1
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 0000 80B4     		push	{r7}
 891              		.cfi_def_cfa_offset 4
 892              		.cfi_offset 7, -4
 893 0002 83B0     		sub	sp, sp, #12
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
 897 0006 7860     		str	r0, [r7, #4]
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(NULL == irq_handler) {
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         HAL_DEBUGE("callback function is invalid");
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     _basetick_irq_handle = irq_handler;
 898              		.loc 2 280 26
 899 0008 034A     		ldr	r2, .L73
 900 000a 7B68     		ldr	r3, [r7, #4]
 901 000c 1360     		str	r3, [r2]
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 902              		.loc 2 281 1
 903 000e 00BF     		nop
 904 0010 0C37     		adds	r7, r7, #12
 905              		.cfi_def_cfa_offset 4
 906 0012 BD46     		mov	sp, r7
 907              		.cfi_def_cfa_register 13
 908              		@ sp needed
 909 0014 80BC     		pop	{r7}
 910              		.cfi_restore 7
 911              		.cfi_def_cfa_offset 0
 912 0016 7047     		bx	lr
 913              	.L74:
 914              		.align	2
 915              	.L73:
 916 0018 00000000 		.word	_basetick_irq_handle
 917              		.cfi_endproc
 918              	.LFE128:
 920              		.section	.text.hal_sys_basetick_irq_handle_all_reset,"ax",%progbits
 921              		.align	1
 922              		.global	hal_sys_basetick_irq_handle_all_reset
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 926              		.fpu softvfp
 928              	hal_sys_basetick_irq_handle_all_reset:
 929              	.LFB129:
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      reset all user-defined interrupt callback function, which will \
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 be registered and called when corresponding interrupt be triggered
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hal_sys_basetick_irq_handle_all_reset(void)
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 930              		.loc 2 291 1
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935 0000 80B4     		push	{r7}
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 0002 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     _basetick_irq_handle = NULL;
 940              		.loc 2 292 26
 941 0004 034B     		ldr	r3, .L76
 942 0006 0022     		movs	r2, #0
 943 0008 1A60     		str	r2, [r3]
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 944              		.loc 2 293 1
 945 000a 00BF     		nop
 946 000c BD46     		mov	sp, r7
 947              		.cfi_def_cfa_register 13
 948              		@ sp needed
 949 000e 80BC     		pop	{r7}
 950              		.cfi_restore 7
 951              		.cfi_def_cfa_offset 0
 952 0010 7047     		bx	lr
 953              	.L77:
 954 0012 00BF     		.align	2
 955              	.L76:
 956 0014 00000000 		.word	_basetick_irq_handle
 957              		.cfi_endproc
 958              	.LFE129:
 960              		.section	.text.hals_sys_dbg_id_get,"ax",%progbits
 961              		.align	1
 962              		.global	hals_sys_dbg_id_get
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu softvfp
 968              	hals_sys_dbg_id_get:
 969              	.LFB130:
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      read DBG_ID code register
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  none
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     uint32_t: 0-0xFFFFFFFF
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** uint32_t hals_sys_dbg_id_get(void)
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 970              		.loc 2 302 1
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974              		@ link register save eliminated.
 975 0000 80B4     		push	{r7}
 976              		.cfi_def_cfa_offset 4
 977              		.cfi_offset 7, -4
 978 0002 00AF     		add	r7, sp, #0
 979              		.cfi_def_cfa_register 7
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     return SYS_DBG_ID;
 980              		.loc 2 303 12
 981 0004 024B     		ldr	r3, .L80
 982 0006 1B68     		ldr	r3, [r3]
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 983              		.loc 2 304 1
 984 0008 1846     		mov	r0, r3
 985 000a BD46     		mov	sp, r7
 986              		.cfi_def_cfa_register 13
 987              		@ sp needed
 988 000c 80BC     		pop	{r7}
 989              		.cfi_restore 7
 990              		.cfi_def_cfa_offset 0
 991 000e 7047     		bx	lr
 992              	.L81:
 993              		.align	2
 994              	.L80:
 995 0010 002004E0 		.word	-536600576
 996              		.cfi_endproc
 997              	.LFE130:
 999              		.section	.text.hals_sys_dbg_low_power_enable,"ax",%progbits
 1000              		.align	1
 1001              		.global	hals_sys_dbg_low_power_enable
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu softvfp
 1007              	hals_sys_dbg_low_power_enable:
 1008              	.LFB131:
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      enable low power behavior when the MCU is in debug mode
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  dbg_low_power:
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 one or more parameters can be selected which are shown as below:
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_LOW_POWER_SLEEP: keep debugger connection during sleep mode
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_LOW_POWER_DEEPSLEEP: keep debugger connection during deepsleep mode
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_LOW_POWER_STANDBY: keep debugger connection during standby mode
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hals_sys_dbg_low_power_enable(uint32_t dbg_low_power)
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 1009              		.loc 2 317 1
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 8
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014 0000 80B4     		push	{r7}
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 7, -4
 1017 0002 83B0     		sub	sp, sp, #12
 1018              		.cfi_def_cfa_offset 16
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 1021 0006 7860     		str	r0, [r7, #4]
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     SYS_DBG_CTL0 |= dbg_low_power;
 1022              		.loc 2 318 18
 1023 0008 054B     		ldr	r3, .L83
 1024 000a 1A68     		ldr	r2, [r3]
 1025 000c 0449     		ldr	r1, .L83
 1026 000e 7B68     		ldr	r3, [r7, #4]
 1027 0010 1343     		orrs	r3, r3, r2
 1028 0012 0B60     		str	r3, [r1]
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 1029              		.loc 2 319 1
 1030 0014 00BF     		nop
 1031 0016 0C37     		adds	r7, r7, #12
 1032              		.cfi_def_cfa_offset 4
 1033 0018 BD46     		mov	sp, r7
 1034              		.cfi_def_cfa_register 13
 1035              		@ sp needed
 1036 001a 80BC     		pop	{r7}
 1037              		.cfi_restore 7
 1038              		.cfi_def_cfa_offset 0
 1039 001c 7047     		bx	lr
 1040              	.L84:
 1041 001e 00BF     		.align	2
 1042              	.L83:
 1043 0020 042004E0 		.word	-536600572
 1044              		.cfi_endproc
 1045              	.LFE131:
 1047              		.section	.text.hals_sys_dbg_low_power_disable,"ax",%progbits
 1048              		.align	1
 1049              		.global	hals_sys_dbg_low_power_disable
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu softvfp
 1055              	hals_sys_dbg_low_power_disable:
 1056              	.LFB132:
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      disable low power behavior when the MCU is in debug mode
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  dbg_low_power:
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 one or more parameters can be selected which are shown as below:
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_LOW_POWER_SLEEP: donot keep debugger connection during sleep mode
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_LOW_POWER_DEEPSLEEP: donot keep debugger connection during deepsleep mode
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_LOW_POWER_STANDBY: donot keep debugger connection during standby mode
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hals_sys_dbg_low_power_disable(uint32_t dbg_low_power)
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 1057              		.loc 2 332 1
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062 0000 80B4     		push	{r7}
 1063              		.cfi_def_cfa_offset 4
 1064              		.cfi_offset 7, -4
 1065 0002 83B0     		sub	sp, sp, #12
 1066              		.cfi_def_cfa_offset 16
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 1069 0006 7860     		str	r0, [r7, #4]
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     SYS_DBG_CTL0 &= ~dbg_low_power;
 1070              		.loc 2 333 18
 1071 0008 054B     		ldr	r3, .L86
 1072 000a 1A68     		ldr	r2, [r3]
 1073              		.loc 2 333 21
 1074 000c 7B68     		ldr	r3, [r7, #4]
 1075 000e DB43     		mvns	r3, r3
 1076              		.loc 2 333 18
 1077 0010 0349     		ldr	r1, .L86
 1078 0012 1340     		ands	r3, r3, r2
 1079 0014 0B60     		str	r3, [r1]
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 1080              		.loc 2 334 1
 1081 0016 00BF     		nop
 1082 0018 0C37     		adds	r7, r7, #12
 1083              		.cfi_def_cfa_offset 4
 1084 001a BD46     		mov	sp, r7
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 001c 80BC     		pop	{r7}
 1088              		.cfi_restore 7
 1089              		.cfi_def_cfa_offset 0
 1090 001e 7047     		bx	lr
 1091              	.L87:
 1092              		.align	2
 1093              	.L86:
 1094 0020 042004E0 		.word	-536600572
 1095              		.cfi_endproc
 1096              	.LFE132:
 1098              		.section	.text.hals_sys_dbg_periph_enable,"ax",%progbits
 1099              		.align	1
 1100              		.global	hals_sys_dbg_periph_enable
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu softvfp
 1106              	hals_sys_dbg_periph_enable:
 1107              	.LFB133:
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      enable peripheral behavior when the MCU is in debug mode
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  dbg_periph: refer to hal_sys_dbg_periph_enum
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 only one parameter can be selected which are shown as below:
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_FWDGT_HOLD: debug FWDGT kept when core is halted
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_WWDGT_HOLD: debug WWDGT kept when core is halted
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_TIMERx_HOLD (x=0,1,2,5,13,14,15,16,TIMER5 is only available in GD32F350,
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                   TIMER1 is only available in GD32F350 and GD32F330): hold TIMERx counter when core
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_I2Cx_HOLD (x=0,1): hold I2Cx smbus when core is halted
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_RTC_HOLD: hold RTC calendar and wakeup counter when core is halted
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hals_sys_dbg_periph_enable(hal_sys_dbg_periph_enum dbg_periph)
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 1108              		.loc 2 350 1
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 8
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113 0000 80B4     		push	{r7}
 1114              		.cfi_def_cfa_offset 4
 1115              		.cfi_offset 7, -4
 1116 0002 83B0     		sub	sp, sp, #12
 1117              		.cfi_def_cfa_offset 16
 1118 0004 00AF     		add	r7, sp, #0
 1119              		.cfi_def_cfa_register 7
 1120 0006 0346     		mov	r3, r0
 1121 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     SYS_DBG_REG_VAL(dbg_periph) |= BIT(SYS_DBG_BIT_POS(dbg_periph));
 1122              		.loc 2 351 33
 1123 000a FB88     		ldrh	r3, [r7, #6]
 1124 000c 9B09     		lsrs	r3, r3, #6
 1125 000e 9BB2     		uxth	r3, r3
 1126 0010 03F16043 		add	r3, r3, #-536870912
 1127 0014 03F58423 		add	r3, r3, #270336
 1128 0018 1968     		ldr	r1, [r3]
 1129              		.loc 2 351 36
 1130 001a FB88     		ldrh	r3, [r7, #6]
 1131 001c 03F01F03 		and	r3, r3, #31
 1132 0020 0122     		movs	r2, #1
 1133 0022 9A40     		lsls	r2, r2, r3
 1134              		.loc 2 351 33
 1135 0024 FB88     		ldrh	r3, [r7, #6]
 1136 0026 9B09     		lsrs	r3, r3, #6
 1137 0028 9BB2     		uxth	r3, r3
 1138 002a 03F16043 		add	r3, r3, #-536870912
 1139 002e 03F58423 		add	r3, r3, #270336
 1140 0032 1846     		mov	r0, r3
 1141 0034 41EA0203 		orr	r3, r1, r2
 1142 0038 0360     		str	r3, [r0]
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 1143              		.loc 2 352 1
 1144 003a 00BF     		nop
 1145 003c 0C37     		adds	r7, r7, #12
 1146              		.cfi_def_cfa_offset 4
 1147 003e BD46     		mov	sp, r7
 1148              		.cfi_def_cfa_register 13
 1149              		@ sp needed
 1150 0040 80BC     		pop	{r7}
 1151              		.cfi_restore 7
 1152              		.cfi_def_cfa_offset 0
 1153 0042 7047     		bx	lr
 1154              		.cfi_endproc
 1155              	.LFE133:
 1157              		.section	.text.hals_sys_dbg_periph_disable,"ax",%progbits
 1158              		.align	1
 1159              		.global	hals_sys_dbg_periph_disable
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu softvfp
 1165              	hals_sys_dbg_periph_disable:
 1166              	.LFB134:
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      disable peripheral behavior when the MCU is in debug mode
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  dbg_periph: refer to hal_sys_dbg_periph_enum
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                 only one parameter can be selected which are shown as below:
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_FWDGT_HOLD: debug FWDGT kept when core is halted
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_WWDGT_HOLD: debug WWDGT kept when core is halted
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_TIMERx_HOLD (x=0,1,2,5,13,14,15,16,TIMER5 is only available in GD32F350,
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****                   TIMER1 is only available in GD32F350 and GD32F330): hold TIMERx counter when core
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_I2Cx_HOLD (x=0,1): hold I2Cx smbus when core is halted
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        SYS_DBG_RTC_HOLD: hold RTC calendar and wakeup counter when core is halted
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** void hals_sys_dbg_periph_disable(hal_sys_dbg_periph_enum dbg_periph)
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 1167              		.loc 2 368 1
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 8
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172 0000 80B4     		push	{r7}
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              		.cfi_def_cfa_offset 16
 1177 0004 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 1179 0006 0346     		mov	r3, r0
 1180 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     SYS_DBG_REG_VAL(dbg_periph) &= ~BIT(SYS_DBG_BIT_POS(dbg_periph));
 1181              		.loc 2 369 33
 1182 000a FB88     		ldrh	r3, [r7, #6]
 1183 000c 9B09     		lsrs	r3, r3, #6
 1184 000e 9BB2     		uxth	r3, r3
 1185 0010 03F16043 		add	r3, r3, #-536870912
 1186 0014 03F58423 		add	r3, r3, #270336
 1187 0018 1968     		ldr	r1, [r3]
 1188              		.loc 2 369 37
 1189 001a FB88     		ldrh	r3, [r7, #6]
 1190 001c 03F01F03 		and	r3, r3, #31
 1191 0020 0122     		movs	r2, #1
 1192 0022 02FA03F3 		lsl	r3, r2, r3
 1193              		.loc 2 369 36
 1194 0026 DA43     		mvns	r2, r3
 1195              		.loc 2 369 33
 1196 0028 FB88     		ldrh	r3, [r7, #6]
 1197 002a 9B09     		lsrs	r3, r3, #6
 1198 002c 9BB2     		uxth	r3, r3
 1199 002e 03F16043 		add	r3, r3, #-536870912
 1200 0032 03F58423 		add	r3, r3, #270336
 1201 0036 1846     		mov	r0, r3
 1202 0038 01EA0203 		and	r3, r1, r2
 1203 003c 0360     		str	r3, [r0]
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 1204              		.loc 2 370 1
 1205 003e 00BF     		nop
 1206 0040 0C37     		adds	r7, r7, #12
 1207              		.cfi_def_cfa_offset 4
 1208 0042 BD46     		mov	sp, r7
 1209              		.cfi_def_cfa_register 13
 1210              		@ sp needed
 1211 0044 80BC     		pop	{r7}
 1212              		.cfi_restore 7
 1213              		.cfi_def_cfa_offset 0
 1214 0046 7047     		bx	lr
 1215              		.cfi_endproc
 1216              	.LFE134:
 1218              		.section	.text._sys_systick_init,"ax",%progbits
 1219              		.align	1
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1223              		.fpu softvfp
 1225              	_sys_systick_init:
 1226              	.LFB135:
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      initlize systick when use it as the source
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  count_freq: the frequence of basetick interrupt
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  prio: the priority of basetick interrupt
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static void _sys_systick_init(uint32_t count_freq, uint32_t prio)
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 1227              		.loc 2 380 1
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 8
 1230              		@ frame_needed = 1, uses_anonymous_args = 0
 1231 0000 80B5     		push	{r7, lr}
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 82B0     		sub	sp, sp, #8
 1236              		.cfi_def_cfa_offset 16
 1237 0004 00AF     		add	r7, sp, #0
 1238              		.cfi_def_cfa_register 7
 1239 0006 7860     		str	r0, [r7, #4]
 1240 0008 3960     		str	r1, [r7]
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #if (1 == HAL_PARAMETER_CHECK)
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     uint32_t lowest_prio;
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     lowest_prio = (0x01U << __NVIC_PRIO_BITS) - 1U;
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(prio > lowest_prio) {
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         HAL_DEBUGE("parameter [prio] value is greater than configurable priority");
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         prio = lowest_prio;
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(SysTick_Config(g_systemcoreclock / count_freq)) {
 1241              		.loc 2 391 8
 1242 000a 0B4B     		ldr	r3, .L93
 1243 000c 1B68     		ldr	r3, [r3]
 1244 000e 1A46     		mov	r2, r3
 1245 0010 7B68     		ldr	r3, [r7, #4]
 1246 0012 B2FBF3F3 		udiv	r3, r2, r3
 1247 0016 1846     		mov	r0, r3
 1248 0018 FFF7FEFF 		bl	SysTick_Config
 1249 001c 0346     		mov	r3, r0
 1250              		.loc 2 391 7
 1251 001e 002B     		cmp	r3, #0
 1252 0020 00D0     		beq	.L91
 1253              	.L92:
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         /* capture error */
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         while(1) {
 1254              		.loc 2 393 14 discriminator 1
 1255 0022 FEE7     		b	.L92
 1256              	.L91:
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         }
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* configure the systick handler priority */
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     NVIC_SetPriority(SysTick_IRQn, prio);
 1257              		.loc 2 397 5
 1258 0024 3968     		ldr	r1, [r7]
 1259 0026 4FF0FF30 		mov	r0, #-1
 1260 002a FFF7FEFF 		bl	NVIC_SetPriority
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 1261              		.loc 2 398 1
 1262 002e 00BF     		nop
 1263 0030 0837     		adds	r7, r7, #8
 1264              		.cfi_def_cfa_offset 8
 1265 0032 BD46     		mov	sp, r7
 1266              		.cfi_def_cfa_register 13
 1267              		@ sp needed
 1268 0034 80BD     		pop	{r7, pc}
 1269              	.L94:
 1270 0036 00BF     		.align	2
 1271              	.L93:
 1272 0038 00000000 		.word	g_systemcoreclock
 1273              		.cfi_endproc
 1274              	.LFE135:
 1276              		.section	.text._sys_basetick_timer_init,"ax",%progbits
 1277              		.align	1
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu softvfp
 1283              	_sys_basetick_timer_init:
 1284              	.LFB136:
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** /*!
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \brief      initlize timer when use it as the source
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  source: select the source timer
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****       \arg        HAL_BASETICK_SOURCE_TIMERx: x=0,1,2,5,13,14,15,16
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  count_freq: the frequence of basetick interrupt
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[in]  prio: the priority of basetick interrupt
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \param[out] none
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     \retval     none
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** */
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** static void _sys_basetick_timer_init(hal_sys_timebase_source_enum source, uint32_t count_freq, uint
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** {
 1285              		.loc 2 410 1
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 136
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289 0000 80B5     		push	{r7, lr}
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 A2B0     		sub	sp, sp, #136
 1294              		.cfi_def_cfa_offset 144
 1295 0004 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 1297 0006 0346     		mov	r3, r0
 1298 0008 3960     		str	r1, [r7]
 1299 000a FB71     		strb	r3, [r7, #7]
 1300 000c 1346     		mov	r3, r2
 1301 000e BB71     		strb	r3, [r7, #6]
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_timer_init_struct timer_initpara;
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_timer_dev_struct  timer_dev_temp;
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     uint16_t timer_prescaler;
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     uint8_t  timer_cfg_index;
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #if (1 == HAL_PARAMETER_CHECK)
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     uint8_t lowest_prio;
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* check the parameter */
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     lowest_prio = (0x01U << __NVIC_PRIO_BITS) - 1U;
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if(prio > lowest_prio) {
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         HAL_DEBUGE("parameter [prio] value is greater than configurable priority");
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         prio = lowest_prio;
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* get the APBx clock */
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     if((source == SYS_TIMEBASE_SOURCE_TIMER1) || (source == SYS_TIMEBASE_SOURCE_TIMER2) || \
 1302              		.loc 2 427 7
 1303 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1304 0012 022B     		cmp	r3, #2
 1305 0014 08D0     		beq	.L96
 1306              		.loc 2 427 47 discriminator 1
 1307 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1308 0018 032B     		cmp	r3, #3
 1309 001a 05D0     		beq	.L96
 1310              		.loc 2 427 89 discriminator 2
 1311 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1312 001e 042B     		cmp	r3, #4
 1313 0020 02D0     		beq	.L96
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****             (source == SYS_TIMEBASE_SOURCE_TIMER5) || (source == SYS_TIMEBASE_SOURCE_TIMER13)) {
 1314              		.loc 2 428 52
 1315 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1316 0024 052B     		cmp	r3, #5
 1317 0026 0CD1     		bne	.L97
 1318              	.L96:
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         timer_prescaler = (uint16_t)(hal_rcu_periph_clkfreq_get(RCU_PERIPH_CLKTYPE_APB1TIMER) / 100
 1319              		.loc 2 429 38
 1320 0028 0820     		movs	r0, #8
 1321 002a FFF7FEFF 		bl	hal_rcu_periph_clkfreq_get
 1322 002e 0346     		mov	r3, r0
 1323              		.loc 2 429 95
 1324 0030 3E4A     		ldr	r2, .L103
 1325 0032 A2FB0323 		umull	r2, r3, r2, r3
 1326 0036 9B0C     		lsrs	r3, r3, #18
 1327              		.loc 2 429 27
 1328 0038 9BB2     		uxth	r3, r3
 1329              		.loc 2 429 25
 1330 003a 013B     		subs	r3, r3, #1
 1331 003c A7F88630 		strh	r3, [r7, #134]	@ movhi
 1332 0040 17E0     		b	.L98
 1333              	.L97:
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else if((source == SYS_TIMEBASE_SOURCE_TIMER0) || (source == SYS_TIMEBASE_SOURCE_TIMER14) || 
 1334              		.loc 2 430 14
 1335 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1336 0044 012B     		cmp	r3, #1
 1337 0046 08D0     		beq	.L99
 1338              		.loc 2 430 54 discriminator 1
 1339 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1340 004a 062B     		cmp	r3, #6
 1341 004c 05D0     		beq	.L99
 1342              		.loc 2 430 97 discriminator 2
 1343 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1344 0050 072B     		cmp	r3, #7
 1345 0052 02D0     		beq	.L99
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****               (source == SYS_TIMEBASE_SOURCE_TIMER15) || (source == SYS_TIMEBASE_SOURCE_TIMER16)) {
 1346              		.loc 2 431 55
 1347 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1348 0056 082B     		cmp	r3, #8
 1349 0058 64D1     		bne	.L102
 1350              	.L99:
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         timer_prescaler = (uint16_t)(hal_rcu_periph_clkfreq_get(RCU_PERIPH_CLKTYPE_APB2TIMER) / 100
 1351              		.loc 2 432 38
 1352 005a 1020     		movs	r0, #16
 1353 005c FFF7FEFF 		bl	hal_rcu_periph_clkfreq_get
 1354 0060 0346     		mov	r3, r0
 1355              		.loc 2 432 95
 1356 0062 324A     		ldr	r2, .L103
 1357 0064 A2FB0323 		umull	r2, r3, r2, r3
 1358 0068 9B0C     		lsrs	r3, r3, #18
 1359              		.loc 2 432 27
 1360 006a 9BB2     		uxth	r3, r3
 1361              		.loc 2 432 25
 1362 006c 013B     		subs	r3, r3, #1
 1363 006e A7F88630 		strh	r3, [r7, #134]	@ movhi
 1364              	.L98:
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     } else {
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         HAL_DEBUGE("Basetick timer source is not available");
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****         return;
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_cfg_index = source - 1U;
 1365              		.loc 2 438 21
 1366 0072 FB79     		ldrb	r3, [r7, #7]
 1367 0074 013B     		subs	r3, r3, #1
 1368 0076 87F88530 		strb	r3, [r7, #133]
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* enable the interrupt */
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_nvic_irq_enable(_BASETICK_SOURCE_IRQN[timer_cfg_index], 1, 0);
 1369              		.loc 2 440 5
 1370 007a 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 1371 007e 2C4A     		ldr	r2, .L103+4
 1372 0080 D356     		ldrsb	r3, [r2, r3]
 1373 0082 0022     		movs	r2, #0
 1374 0084 0121     		movs	r1, #1
 1375 0086 1846     		mov	r0, r3
 1376 0088 FFF7FEFF 		bl	hal_nvic_irq_enable
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* enable the clock of timer */
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_rcu_periph_clk_enable(_BASETICK_SOURCE_CLK[timer_cfg_index]);
 1377              		.loc 2 443 5
 1378 008c 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 1379 0090 284A     		ldr	r2, .L103+8
 1380 0092 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1381 0096 1846     		mov	r0, r3
 1382 0098 FFF7FEFF 		bl	hal_rcu_periph_clk_enable
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_dev_temp.periph = _BASETICK_SOURCE_PERIPH[timer_cfg_index];
 1383              		.loc 2 445 52
 1384 009c 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 1385 00a0 254A     		ldr	r2, .L103+12
 1386 00a2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1387              		.loc 2 445 27
 1388 00a6 FB60     		str	r3, [r7, #12]
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_timer_deinit(&timer_dev_temp);
 1389              		.loc 2 446 5
 1390 00a8 07F10C03 		add	r3, r7, #12
 1391 00ac 1846     		mov	r0, r3
 1392 00ae FFF7FEFF 		bl	hal_timer_deinit
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_timer_struct_init(HAL_TIMER_INIT_STRUCT, &timer_initpara);
 1393              		.loc 2 447 5
 1394 00b2 07F16803 		add	r3, r7, #104
 1395 00b6 1946     		mov	r1, r3
 1396 00b8 0020     		movs	r0, #0
 1397 00ba FFF7FEFF 		bl	hal_timer_struct_init
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     /* initialize the using timer */
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_initpara.prescaler          = timer_prescaler;
 1398              		.loc 2 449 39
 1399 00be B7F88630 		ldrh	r3, [r7, #134]	@ movhi
 1400 00c2 A7F86830 		strh	r3, [r7, #104]	@ movhi
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_initpara.alignedmode        = TIMER_COUNTER_EDGE;
 1401              		.loc 2 450 39
 1402 00c6 0023     		movs	r3, #0
 1403 00c8 A7F86A30 		strh	r3, [r7, #106]	@ movhi
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_initpara.counter_direction  = TIMER_COUNTER_UP;
 1404              		.loc 2 451 39
 1405 00cc 0023     		movs	r3, #0
 1406 00ce A7F86C30 		strh	r3, [r7, #108]	@ movhi
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_initpara.period             = 1000000U / count_freq;
 1407              		.loc 2 452 50
 1408 00d2 1A4A     		ldr	r2, .L103+16
 1409 00d4 3B68     		ldr	r3, [r7]
 1410 00d6 B2FBF3F3 		udiv	r3, r2, r3
 1411              		.loc 2 452 39
 1412 00da 3B67     		str	r3, [r7, #112]
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_initpara.clock_division     = TIMER_CKDIV_DIV1;
 1413              		.loc 2 453 39
 1414 00dc 0023     		movs	r3, #0
 1415 00de A7F87430 		strh	r3, [r7, #116]	@ movhi
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     timer_initpara.repetition_counter = 0U;
 1416              		.loc 2 454 39
 1417 00e2 0023     		movs	r3, #0
 1418 00e4 87F87630 		strb	r3, [r7, #118]
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hal_timer_init(&timer_dev_temp, _BASETICK_SOURCE_PERIPH[timer_cfg_index], &timer_initpara);
 1419              		.loc 2 455 5
 1420 00e8 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 1421 00ec 124A     		ldr	r2, .L103+12
 1422 00ee 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1423 00f2 07F16802 		add	r2, r7, #104
 1424 00f6 07F10C03 		add	r3, r7, #12
 1425 00fa 1846     		mov	r0, r3
 1426 00fc FFF7FEFF 		bl	hal_timer_init
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** 
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hals_timer_interrupt_enable(_BASETICK_SOURCE_PERIPH[timer_cfg_index], TIMER_INT_UP);
 1427              		.loc 2 457 5
 1428 0100 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 1429 0104 0C4A     		ldr	r2, .L103+12
 1430 0106 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1431 010a 0121     		movs	r1, #1
 1432 010c 1846     		mov	r0, r3
 1433 010e FFF7FEFF 		bl	hals_timer_interrupt_enable
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     hals_timer_enable(_BASETICK_SOURCE_PERIPH[timer_cfg_index]);
 1434              		.loc 2 458 5
 1435 0112 97F88530 		ldrb	r3, [r7, #133]	@ zero_extendqisi2
 1436 0116 084A     		ldr	r2, .L103+12
 1437 0118 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1438 011c 1846     		mov	r0, r3
 1439 011e FFF7FEFF 		bl	hals_timer_enable
 1440 0122 00E0     		b	.L95
 1441              	.L102:
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c ****     }
 1442              		.loc 2 435 9
 1443 0124 00BF     		nop
 1444              	.L95:
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_sys.c **** }
 1445              		.loc 2 459 1
 1446 0126 8837     		adds	r7, r7, #136
 1447              		.cfi_def_cfa_offset 8
 1448 0128 BD46     		mov	sp, r7
 1449              		.cfi_def_cfa_register 13
 1450              		@ sp needed
 1451 012a 80BD     		pop	{r7, pc}
 1452              	.L104:
 1453              		.align	2
 1454              	.L103:
 1455 012c 83DE1B43 		.word	1125899907
 1456 0130 00000000 		.word	_BASETICK_SOURCE_IRQN
 1457 0134 00000000 		.word	_BASETICK_SOURCE_CLK
 1458 0138 00000000 		.word	_BASETICK_SOURCE_PERIPH
 1459 013c 40420F00 		.word	1000000
 1460              		.cfi_endproc
 1461              	.LFE136:
 1463              		.text
 1464              	.Letext0:
 1465              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 1466              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 1467              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 1468              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 1469              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 1470              		.file 8 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 1471              		.file 9 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 1472              		.file 10 "../firmware/cmsis/inc/gd32f3x0.h"
 1473              		.file 11 "../firmware/cmsis/inc/system_gd32f3x0.h"
 1474              		.file 12 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_dma.h"
 1475              		.file 13 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 1476              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 1477              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_exti.h"
 1478              		.file 16 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_sys.h"
 1479              		.file 17 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_timer.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_sys.c
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:16     .text.NVIC_SetPriority:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:23     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:92     .text.NVIC_SetPriority:0000004c $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:98     .text.SysTick_Config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:104    .text.SysTick_Config:00000000 SysTick_Config
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:164    .text.SysTick_Config:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:172    .bss.g_basetick_source:00000000 g_basetick_source
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:173    .bss.g_basetick_source:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:178    .bss.g_debug_selection:00000000 g_debug_selection
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:179    .bss.g_debug_selection:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:181    .bss._basetick_irq_handle:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:184    .bss._basetick_irq_handle:00000000 _basetick_irq_handle
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:187    .bss.g_basetick_count:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:190    .bss.g_basetick_count:00000000 g_basetick_count
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:193    .rodata._BASETICK_SOURCE_RESET:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:196    .rodata._BASETICK_SOURCE_RESET:00000000 _BASETICK_SOURCE_RESET
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:204    .rodata._BASETICK_SOURCE_CLK:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:207    .rodata._BASETICK_SOURCE_CLK:00000000 _BASETICK_SOURCE_CLK
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:215    .rodata._BASETICK_SOURCE_PERIPH:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:218    .rodata._BASETICK_SOURCE_PERIPH:00000000 _BASETICK_SOURCE_PERIPH
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:226    .rodata._BASETICK_SOURCE_IRQN:00000000 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:229    .rodata._BASETICK_SOURCE_IRQN:00000000 _BASETICK_SOURCE_IRQN
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:237    .text.hal_sys_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:244    .text.hal_sys_deinit:00000000 hal_sys_deinit
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:346    .text.hal_sys_deinit:00000094 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:356    .text.hal_sys_debug_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:363    .text.hal_sys_debug_init:00000000 hal_sys_debug_init
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:399    .text.hal_sys_debug_init:0000001c $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:404    .text.hal_sys_timesource_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:411    .text.hal_sys_timesource_init:00000000 hal_sys_timesource_init
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1225   .text._sys_systick_init:00000000 _sys_systick_init
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1283   .text._sys_basetick_timer_init:00000000 _sys_basetick_timer_init
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:480    .text.hal_sys_timesource_init:00000054 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:485    .text.hal_sys_basetick_count_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:492    .text.hal_sys_basetick_count_get:00000000 hal_sys_basetick_count_get
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:519    .text.hal_sys_basetick_count_get:00000010 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:524    .text.hal_sys_basetick_timeout_check:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:531    .text.hal_sys_basetick_timeout_check:00000000 hal_sys_basetick_timeout_check
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:577    .text.hal_sys_basetick_timeout_check:00000028 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:582    .text.hal_sys_basetick_delay_ms:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:589    .text.hal_sys_basetick_delay_ms:00000000 hal_sys_basetick_delay_ms
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:638    .text.hal_sys_basetick_delay_ms:00000030 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:643    .text.hal_sys_basetick_suspend:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:650    .text.hal_sys_basetick_suspend:00000000 hal_sys_basetick_suspend
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:692    .text.hal_sys_basetick_suspend:00000030 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:699    .text.hal_sys_basetick_resume:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:706    .text.hal_sys_basetick_resume:00000000 hal_sys_basetick_resume
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:748    .text.hal_sys_basetick_resume:00000030 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:755    .text.hal_sys_basetick_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:762    .text.hal_sys_basetick_irq:00000000 hal_sys_basetick_irq
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:790    .text.hal_sys_basetick_irq:00000020 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:798    .text.hal_sys_basetick_irq:00000040 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:863    .text.hal_sys_basetick_irq:00000090 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:876    .text.hal_sys_basetick_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:883    .text.hal_sys_basetick_irq_handle_set:00000000 hal_sys_basetick_irq_handle_set
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:916    .text.hal_sys_basetick_irq_handle_set:00000018 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:921    .text.hal_sys_basetick_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:928    .text.hal_sys_basetick_irq_handle_all_reset:00000000 hal_sys_basetick_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:956    .text.hal_sys_basetick_irq_handle_all_reset:00000014 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:961    .text.hals_sys_dbg_id_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:968    .text.hals_sys_dbg_id_get:00000000 hals_sys_dbg_id_get
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:995    .text.hals_sys_dbg_id_get:00000010 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1000   .text.hals_sys_dbg_low_power_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1007   .text.hals_sys_dbg_low_power_enable:00000000 hals_sys_dbg_low_power_enable
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1043   .text.hals_sys_dbg_low_power_enable:00000020 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1048   .text.hals_sys_dbg_low_power_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1055   .text.hals_sys_dbg_low_power_disable:00000000 hals_sys_dbg_low_power_disable
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1094   .text.hals_sys_dbg_low_power_disable:00000020 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1099   .text.hals_sys_dbg_periph_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1106   .text.hals_sys_dbg_periph_enable:00000000 hals_sys_dbg_periph_enable
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1158   .text.hals_sys_dbg_periph_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1165   .text.hals_sys_dbg_periph_disable:00000000 hals_sys_dbg_periph_disable
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1219   .text._sys_systick_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1272   .text._sys_systick_init:00000038 $d
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1277   .text._sys_basetick_timer_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccF03TgE.s:1455   .text._sys_basetick_timer_init:0000012c $d
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hals_nvic_periph_irq_disable
hal_rcu_periph_reset_enable
hal_rcu_periph_reset_disable
hals_timer_disable
hals_timer_enable
hals_timer_interrupt_flag_clear
g_systemcoreclock
hal_rcu_periph_clkfreq_get
hal_nvic_irq_enable
hal_rcu_periph_clk_enable
hal_timer_deinit
hal_timer_struct_init
hal_timer_init
hals_timer_interrupt_enable
