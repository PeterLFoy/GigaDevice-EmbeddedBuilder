   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_rcu.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	rcu_irq
  16              		.section	.bss.rcu_irq,"aw",%nobits
  17              		.align	2
  20              	rcu_irq:
  21 0000 00000000 		.space	32
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.global	g_systemcoreclock
  23              		.section	.data.g_systemcoreclock,"aw"
  24              		.align	2
  27              	g_systemcoreclock:
  28 0000 00127A00 		.word	8000000
  29              		.section	.rodata.s_rcu_stab_flag,"a"
  30              		.align	2
  33              	s_rcu_stab_flag:
  34 0000 0100     		.short	1
  35 0002 1100     		.short	17
  36 0004 1900     		.short	25
  37              		.section	.rodata.s_rcu_timeout,"a"
  38              		.align	2
  41              	s_rcu_timeout:
  42 0000 04000000 		.word	4
  43 0004 64000000 		.word	100
  44 0008 04000000 		.word	4
  45              		.section	.rodata.s_rcu_scss,"a"
  46              		.align	2
  49              	s_rcu_scss:
  50 0000 00000000 		.word	0
  51 0004 04000000 		.word	4
  52 0008 08000000 		.word	8
  53              		.section	.text.hal_rcu_osci_config,"ax",%progbits
  54              		.align	1
  55              		.global	hal_rcu_osci_config
  56              		.arch armv7e-m
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	hal_rcu_osci_config:
  63              	.LFB119:
  64              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \file    gd32f3x0_hal_rcu.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief   RCU driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /* define clock source */
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define SEL_IRC8M       0x00U
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define SEL_HXTAL       0x01U
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define SEL_PLL         0x02U
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define RCU_MODIFY(__delay)     do{                                     \
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                     volatile uint32_t i;                \
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                     if(0 != __delay){                   \
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                         RCU_CFG0 |= RCU_AHB_CKSYS_DIV2; \
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                         for(i=0; i<__delay; i++){       \
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                         }                               \
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                         RCU_CFG0 |= RCU_AHB_CKSYS_DIV4; \
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                         for(i=0; i<__delay; i++){       \
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                         }                               \
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                     }                                   \
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                                 }while(0)
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /* define startup timeout count */
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define OSC_STARTUP_TIMEOUT            ((uint32_t)0x000FFFFFU)
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define LXTAL_STARTUP_TIMEOUT          ((uint32_t)0x03FFFFFFU)
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /* CKOUT GPIOA */
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define _CKOUT_GPIO_CLK_ENABLE()       hal_rcu_periph_clk_enable(RCU_GPIOA)
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define _CKOUT_GPIO_PORT               GPIOA
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define _CKOUT_GPIO_PIN                GPIO_PIN_8
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #define _RCU_CKSYSSRC_INDEX(x)         (x)
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** hal_rcu_irq_struct rcu_irq = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** int32_t g_systemcoreclock = 8000000;
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** extern hal_sys_timebase_source_enum g_basetick_source;
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /* RCU system clock oscillator stable flag */
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** static const hal_rcu_flag_enum s_rcu_stab_flag[] = {
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_FLAG_IRC8MSTB,
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_FLAG_HXTALSTB,
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_FLAG_PLLSTB
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** };
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /* RCU system clock source timeout */
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** static const uint32_t s_rcu_timeout[] = {
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     HAL_IRC8M_TIMEOUT,
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     HAL_HXTAL_TIMEOUT,
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     HAL_PLL_TIMEOUT
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** };
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /* RCU system clock source */
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** static const uint32_t s_rcu_scss[] = {
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_SCSS_IRC8M,
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_SCSS_HXTAL,
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_SCSS_PLL
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** };
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the RCU oscillators
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  rcu_osci: the pointer of the RCU oscillators structure
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   hxtal: HXTAL status structure
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   lxtal: LXTAL status structure
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc48m: IRC48M status structure
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc28m: IRC28M status structure
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     calibration_value: calibration value
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc8m: IRC8M status structure
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     calibration_value: calibration value
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc40k: IRC40K status structure
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   pll: PLL status structure
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pll_source: RCU_PLL_SRC_HXTAL_IRC48M, RCU_PLL_SRC_IRC8M_DIV2
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pll_presel: the argument could be selected from enumeration <hal_rcu_pll_presel
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pre_div: the argument could be selected from enumeration <hal_rcu_pll_prediv_en
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pll_mul: the argument could be selected from enumeration <hal_rcu_pll_mul_enum>
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_TIMEOUT, details re
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** int32_t hal_rcu_osci_config(hal_rcu_osci_struct *rcu_osci)
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
  65              		.loc 1 123 1
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 48
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 80B5     		push	{r7, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 8CB0     		sub	sp, sp, #48
  74              		.cfi_def_cfa_offset 56
  75 0004 00AF     		add	r7, sp, #0
  76              		.cfi_def_cfa_register 7
  77 0006 7860     		str	r0, [r7, #4]
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     FlagStatus pwr_state = RESET;
  78              		.loc 1 124 16
  79 0008 0023     		movs	r3, #0
  80 000a 87F82F30 		strb	r3, [r7, #47]
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == rcu_osci) {
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [rcu_osci] is a NULL pointer.");
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return HAL_ERR_ADDRESS;
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* clear all rcu configuration */
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     hal_rcu_deinit();
  81              		.loc 1 137 5
  82 000e FFF7FEFF 		bl	hal_rcu_deinit
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure HXTAL */
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->hxtal.need_configure) {
  83              		.loc 1 140 33
  84 0012 7B68     		ldr	r3, [r7, #4]
  85 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  86              		.loc 1 140 7
  87 0016 012B     		cmp	r3, #1
  88 0018 61D1     		bne	.L2
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* it is not allowed to be disabled when the HXTAL is used as system clock or clock source 
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((RCU_SCSS_HXTAL == hals_rcu_system_clock_source_get()) || \
  89              		.loc 1 142 31
  90 001a FFF7FEFF 		bl	hals_rcu_system_clock_source_get
  91 001e 0346     		mov	r3, r0
  92              		.loc 1 142 11
  93 0020 042B     		cmp	r3, #4
  94 0022 0BD0     		beq	.L3
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 ((RCU_SCSS_PLL == hals_rcu_system_clock_source_get()) && \
  95              		.loc 1 143 35 discriminator 1
  96 0024 FFF7FEFF 		bl	hals_rcu_system_clock_source_get
  97 0028 0346     		mov	r3, r0
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 ((RCU_SCSS_PLL == hals_rcu_system_clock_source_get()) && \
  98              		.loc 1 142 67 discriminator 1
  99 002a 082B     		cmp	r3, #8
 100 002c 13D1     		bne	.L4
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                  (RCU_PLLSRC_HXTAL_IRC48M == (RCU_CFG0 & RCU_CFG0_PLLSEL)))) {
 101              		.loc 1 144 47
 102 002e B14B     		ldr	r3, .L64
 103 0030 1B68     		ldr	r3, [r3]
 104              		.loc 1 144 56
 105 0032 03F48033 		and	r3, r3, #65536
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 ((RCU_SCSS_PLL == hals_rcu_system_clock_source_get()) && \
 106              		.loc 1 143 71
 107 0036 B3F5803F 		cmp	r3, #65536
 108 003a 0CD1     		bne	.L4
 109              	.L3:
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if((RESET != (RCU_CTL0 & RCU_CTL0_HXTALSTB)) && (RCU_OSC_OFF == rcu_osci->hxtal.state))
 110              		.loc 1 145 27
 111 003c AE4B     		ldr	r3, .L64+4
 112 003e 1B68     		ldr	r3, [r3]
 113              		.loc 1 145 36
 114 0040 03F40033 		and	r3, r3, #131072
 115              		.loc 1 145 15
 116 0044 002B     		cmp	r3, #0
 117 0046 49D0     		beq	.L60
 118              		.loc 1 145 92 discriminator 1
 119 0048 7B68     		ldr	r3, [r7, #4]
 120 004a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 121              		.loc 1 145 58 discriminator 1
 122 004c 012B     		cmp	r3, #1
 123 004e 45D1     		bne	.L60
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_VAL;
 124              		.loc 1 146 24
 125 0050 6FF00503 		mvn	r3, #5
 126 0054 60E2     		b	.L6
 127              	.L4:
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* configure the new HXTAL state */
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             switch(rcu_osci->hxtal.state) {
 128              		.loc 1 150 35
 129 0056 7B68     		ldr	r3, [r7, #4]
 130 0058 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 131              		.loc 1 150 13
 132 005a 032B     		cmp	r3, #3
 133 005c 11D0     		beq	.L7
 134 005e 032B     		cmp	r3, #3
 135 0060 19DC     		bgt	.L61
 136 0062 012B     		cmp	r3, #1
 137 0064 02D0     		beq	.L9
 138 0066 022B     		cmp	r3, #2
 139 0068 07D0     		beq	.L10
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case RCU_OSC_OFF:
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_off(RCU_HXTAL);
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_bypass_mode_disable(RCU_HXTAL);
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case RCU_OSC_ON:
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_on(RCU_HXTAL);
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case RCU_OSC_BYPASS:
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_off(RCU_HXTAL);
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_bypass_mode_enable(RCU_HXTAL);
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_on(RCU_HXTAL);
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             default:
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 140              		.loc 1 164 17
 141 006a 14E0     		b	.L61
 142              	.L9:
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_bypass_mode_disable(RCU_HXTAL);
 143              		.loc 1 152 17
 144 006c 1020     		movs	r0, #16
 145 006e FFF7FEFF 		bl	hals_rcu_osci_off
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 146              		.loc 1 153 17
 147 0072 1020     		movs	r0, #16
 148 0074 FFF7FEFF 		bl	hals_rcu_osci_bypass_mode_disable
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case RCU_OSC_ON:
 149              		.loc 1 154 17
 150 0078 0EE0     		b	.L11
 151              	.L10:
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 152              		.loc 1 156 17
 153 007a 1020     		movs	r0, #16
 154 007c FFF7FEFF 		bl	hals_rcu_osci_on
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case RCU_OSC_BYPASS:
 155              		.loc 1 157 17
 156 0080 0AE0     		b	.L11
 157              	.L7:
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_bypass_mode_enable(RCU_HXTAL);
 158              		.loc 1 159 17
 159 0082 1020     		movs	r0, #16
 160 0084 FFF7FEFF 		bl	hals_rcu_osci_off
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_on(RCU_HXTAL);
 161              		.loc 1 160 17
 162 0088 1020     		movs	r0, #16
 163 008a FFF7FEFF 		bl	hals_rcu_osci_bypass_mode_enable
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 164              		.loc 1 161 17
 165 008e 1020     		movs	r0, #16
 166 0090 FFF7FEFF 		bl	hals_rcu_osci_on
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             default:
 167              		.loc 1 162 17
 168 0094 00E0     		b	.L11
 169              	.L61:
 170              		.loc 1 164 17
 171 0096 00BF     		nop
 172              	.L11:
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(RCU_OSC_OFF != rcu_osci->hxtal.state) {
 173              		.loc 1 167 46
 174 0098 7B68     		ldr	r3, [r7, #4]
 175 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 176              		.loc 1 167 15
 177 009c 012B     		cmp	r3, #1
 178 009e 08D0     		beq	.L12
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(ERROR == hals_rcu_osci_stab_wait(RCU_HXTAL)) {
 179              		.loc 1 168 29
 180 00a0 1020     		movs	r0, #16
 181 00a2 FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 182 00a6 0346     		mov	r3, r0
 183              		.loc 1 168 19
 184 00a8 002B     		cmp	r3, #0
 185 00aa 18D1     		bne	.L2
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 186              		.loc 1 169 28
 187 00ac 6FF00403 		mvn	r3, #4
 188 00b0 32E2     		b	.L6
 189              	.L12:
 190              	.LBB2:
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 uint32_t tick_start = hal_sys_basetick_count_get();
 191              		.loc 1 172 39
 192 00b2 FFF7FEFF 		bl	hal_sys_basetick_count_get
 193 00b6 B862     		str	r0, [r7, #40]
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 /* wait till HXTAL is disable */
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 while(RESET != (RCU_CTL0 & RCU_CTL0_HXTALSTB)) {
 194              		.loc 1 175 22
 195 00b8 09E0     		b	.L13
 196              	.L14:
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_HXTAL_TIMEOUT)) {
 197              		.loc 1 176 31
 198 00ba 6421     		movs	r1, #100
 199 00bc B86A     		ldr	r0, [r7, #40]
 200 00be FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 201 00c2 0346     		mov	r3, r0
 202              		.loc 1 176 23
 203 00c4 012B     		cmp	r3, #1
 204 00c6 02D1     		bne	.L13
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         return HAL_ERR_TIMEOUT;
 205              		.loc 1 177 32
 206 00c8 6FF00403 		mvn	r3, #4
 207 00cc 24E2     		b	.L6
 208              	.L13:
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_HXTAL_TIMEOUT)) {
 209              		.loc 1 175 33
 210 00ce 8A4B     		ldr	r3, .L64+4
 211 00d0 1B68     		ldr	r3, [r3]
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_HXTAL_TIMEOUT)) {
 212              		.loc 1 175 42
 213 00d2 03F40033 		and	r3, r3, #131072
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_HXTAL_TIMEOUT)) {
 214              		.loc 1 175 22
 215 00d6 002B     		cmp	r3, #0
 216 00d8 EFD1     		bne	.L14
 217 00da 00E0     		b	.L2
 218              	.L60:
 219              	.LBE2:
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_VAL;
 220              		.loc 1 145 15
 221 00dc 00BF     		nop
 222              	.L2:
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     }
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure LXTAL */
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->lxtal.need_configure) {
 223              		.loc 1 185 33
 224 00de 7B68     		ldr	r3, [r7, #4]
 225 00e0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 226              		.loc 1 185 7
 227 00e2 012B     		cmp	r3, #1
 228 00e4 7FD1     		bne	.L15
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET == (RCU_APB1EN & RCU_APB1EN_PMUEN)) {
 229              		.loc 1 186 22
 230 00e6 854B     		ldr	r3, .L64+8
 231 00e8 1B68     		ldr	r3, [r3]
 232              		.loc 1 186 33
 233 00ea 03F08053 		and	r3, r3, #268435456
 234              		.loc 1 186 11
 235 00ee 002B     		cmp	r3, #0
 236 00f0 06D1     		bne	.L16
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hal_rcu_periph_clk_enable(RCU_PMU);
 237              		.loc 1 187 13
 238 00f2 40F21C70 		movw	r0, #1820
 239 00f6 FFF7FEFF 		bl	hal_rcu_periph_clk_enable
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pwr_state = SET;
 240              		.loc 1 188 23
 241 00fa 0123     		movs	r3, #1
 242 00fc 87F82F30 		strb	r3, [r7, #47]
 243              	.L16:
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* update LXTAL configuration in backup domain control register */
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET == (PMU_CTL & PMU_CTL_BKPWEN)) {
 244              		.loc 1 192 22
 245 0100 7F4B     		ldr	r3, .L64+12
 246 0102 1B68     		ldr	r3, [r3]
 247              		.loc 1 192 30
 248 0104 03F48073 		and	r3, r3, #256
 249              		.loc 1 192 11
 250 0108 002B     		cmp	r3, #0
 251 010a 17D1     		bne	.L17
 252              	.LBB3:
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             uint32_t tick_start = 0U;
 253              		.loc 1 193 22
 254 010c 0023     		movs	r3, #0
 255 010e 7B62     		str	r3, [r7, #36]
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* enable write access to backup domain */
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_pmu_backup_write_enable();
 256              		.loc 1 196 13
 257 0110 FFF7FEFF 		bl	hals_pmu_backup_write_enable
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             tick_start = hal_sys_basetick_count_get();
 258              		.loc 1 198 26
 259 0114 FFF7FEFF 		bl	hal_sys_basetick_count_get
 260 0118 7862     		str	r0, [r7, #36]
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             while(RESET == (PMU_CTL & PMU_CTL_BKPWEN)) {
 261              		.loc 1 200 18
 262 011a 09E0     		b	.L18
 263              	.L19:
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 264              		.loc 1 201 27
 265 011c 6421     		movs	r1, #100
 266 011e 786A     		ldr	r0, [r7, #36]
 267 0120 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 268 0124 0346     		mov	r3, r0
 269              		.loc 1 201 19
 270 0126 012B     		cmp	r3, #1
 271 0128 02D1     		bne	.L18
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 272              		.loc 1 202 28
 273 012a 6FF00403 		mvn	r3, #4
 274 012e F3E1     		b	.L6
 275              	.L18:
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 276              		.loc 1 200 29
 277 0130 734B     		ldr	r3, .L64+12
 278 0132 1B68     		ldr	r3, [r3]
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 279              		.loc 1 200 37
 280 0134 03F48073 		and	r3, r3, #256
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 281              		.loc 1 200 18
 282 0138 002B     		cmp	r3, #0
 283 013a EFD0     		beq	.L19
 284              	.L17:
 285              	.LBE3:
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* configure the new LXTAL state */
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         switch(rcu_osci->lxtal.state) {
 286              		.loc 1 208 31
 287 013c 7B68     		ldr	r3, [r7, #4]
 288 013e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 289              		.loc 1 208 9
 290 0140 032B     		cmp	r3, #3
 291 0142 14D0     		beq	.L20
 292 0144 032B     		cmp	r3, #3
 293 0146 1FDC     		bgt	.L62
 294 0148 012B     		cmp	r3, #1
 295 014a 02D0     		beq	.L22
 296 014c 022B     		cmp	r3, #2
 297 014e 09D0     		beq	.L23
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         case RCU_OSC_OFF:
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_off(RCU_LXTAL);
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_bypass_mode_disable(RCU_LXTAL);
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         case RCU_OSC_ON:
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_LXTAL);
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         case RCU_OSC_BYPASS:
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_off(RCU_LXTAL);
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_bypass_mode_enable(RCU_LXTAL);
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_LXTAL);
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         default:
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 298              		.loc 1 222 13
 299 0150 1AE0     		b	.L62
 300              	.L22:
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_bypass_mode_disable(RCU_LXTAL);
 301              		.loc 1 210 13
 302 0152 4FF40060 		mov	r0, #2048
 303 0156 FFF7FEFF 		bl	hals_rcu_osci_off
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 304              		.loc 1 211 13
 305 015a 4FF40060 		mov	r0, #2048
 306 015e FFF7FEFF 		bl	hals_rcu_osci_bypass_mode_disable
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         case RCU_OSC_ON:
 307              		.loc 1 212 13
 308 0162 12E0     		b	.L24
 309              	.L23:
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 310              		.loc 1 214 13
 311 0164 4FF40060 		mov	r0, #2048
 312 0168 FFF7FEFF 		bl	hals_rcu_osci_on
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         case RCU_OSC_BYPASS:
 313              		.loc 1 215 13
 314 016c 0DE0     		b	.L24
 315              	.L20:
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_bypass_mode_enable(RCU_LXTAL);
 316              		.loc 1 217 13
 317 016e 4FF40060 		mov	r0, #2048
 318 0172 FFF7FEFF 		bl	hals_rcu_osci_off
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_LXTAL);
 319              		.loc 1 218 13
 320 0176 4FF40060 		mov	r0, #2048
 321 017a FFF7FEFF 		bl	hals_rcu_osci_bypass_mode_enable
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             break;
 322              		.loc 1 219 13
 323 017e 4FF40060 		mov	r0, #2048
 324 0182 FFF7FEFF 		bl	hals_rcu_osci_on
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         default:
 325              		.loc 1 220 13
 326 0186 00E0     		b	.L24
 327              	.L62:
 328              		.loc 1 222 13
 329 0188 00BF     		nop
 330              	.L24:
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_OSC_OFF != rcu_osci->lxtal.state) {
 331              		.loc 1 225 42
 332 018a 7B68     		ldr	r3, [r7, #4]
 333 018c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 334              		.loc 1 225 11
 335 018e 012B     		cmp	r3, #1
 336 0190 09D0     		beq	.L25
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(ERROR == hals_rcu_osci_stab_wait(RCU_LXTAL)) {
 337              		.loc 1 226 25
 338 0192 4FF40060 		mov	r0, #2048
 339 0196 FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 340 019a 0346     		mov	r3, r0
 341              		.loc 1 226 15
 342 019c 002B     		cmp	r3, #0
 343 019e 17D1     		bne	.L26
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_TIMEOUT;
 344              		.loc 1 227 24
 345 01a0 6FF00403 		mvn	r3, #4
 346 01a4 B8E1     		b	.L6
 347              	.L25:
 348              	.LBB4:
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till LXTAL is disabled */
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             uint32_t tick_start = hal_sys_basetick_count_get();
 349              		.loc 1 231 35
 350 01a6 FFF7FEFF 		bl	hal_sys_basetick_count_get
 351 01aa 3862     		str	r0, [r7, #32]
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             while(RESET != (RCU_BDCTL & RCU_BDCTL_LXTALSTB)) {
 352              		.loc 1 233 18
 353 01ac 0AE0     		b	.L27
 354              	.L28:
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_LXTAL_TIMEOUT)) {
 355              		.loc 1 234 27
 356 01ae 41F28831 		movw	r1, #5000
 357 01b2 386A     		ldr	r0, [r7, #32]
 358 01b4 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 359 01b8 0346     		mov	r3, r0
 360              		.loc 1 234 19
 361 01ba 012B     		cmp	r3, #1
 362 01bc 02D1     		bne	.L27
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 363              		.loc 1 235 28
 364 01be 6FF00403 		mvn	r3, #4
 365 01c2 A9E1     		b	.L6
 366              	.L27:
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_LXTAL_TIMEOUT)) {
 367              		.loc 1 233 29
 368 01c4 4F4B     		ldr	r3, .L64+16
 369 01c6 1B68     		ldr	r3, [r3]
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_LXTAL_TIMEOUT)) {
 370              		.loc 1 233 39
 371 01c8 03F00203 		and	r3, r3, #2
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_LXTAL_TIMEOUT)) {
 372              		.loc 1 233 18
 373 01cc 002B     		cmp	r3, #0
 374 01ce EED1     		bne	.L28
 375              	.L26:
 376              	.LBE4:
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(SET == pwr_state) {
 377              		.loc 1 240 11
 378 01d0 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 379 01d4 012B     		cmp	r3, #1
 380 01d6 06D1     		bne	.L15
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hal_rcu_periph_clk_disable(RCU_PMU);
 381              		.loc 1 241 13
 382 01d8 40F21C70 		movw	r0, #1820
 383 01dc FFF7FEFF 		bl	hal_rcu_periph_clk_disable
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pwr_state = RESET;
 384              		.loc 1 243 23
 385 01e0 0023     		movs	r3, #0
 386 01e2 87F82F30 		strb	r3, [r7, #47]
 387              	.L15:
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure IRC8M */
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->irc8m.need_configure) {
 388              		.loc 1 248 33
 389 01e6 7B68     		ldr	r3, [r7, #4]
 390 01e8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 391              		.loc 1 248 7
 392 01ea 012B     		cmp	r3, #1
 393 01ec 5BD1     		bne	.L29
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* it is not allowed to be disabled when IRC8M is used as system clock or as PLL source */
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((RCU_SCSS_IRC8M == hals_rcu_system_clock_source_get()) || \
 394              		.loc 1 250 31
 395 01ee FFF7FEFF 		bl	hals_rcu_system_clock_source_get
 396 01f2 0346     		mov	r3, r0
 397              		.loc 1 250 11
 398 01f4 002B     		cmp	r3, #0
 399 01f6 0AD0     		beq	.L30
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 ((RCU_SCSS_PLL == hals_rcu_system_clock_source_get()) && \
 400              		.loc 1 251 35 discriminator 1
 401 01f8 FFF7FEFF 		bl	hals_rcu_system_clock_source_get
 402 01fc 0346     		mov	r3, r0
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 ((RCU_SCSS_PLL == hals_rcu_system_clock_source_get()) && \
 403              		.loc 1 250 67 discriminator 1
 404 01fe 082B     		cmp	r3, #8
 405 0200 1CD1     		bne	.L31
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                  (RCU_PLLSRC_IRC8M_DIV2 == (RCU_CFG0 & RCU_CFG0_PLLSEL)))) {
 406              		.loc 1 252 45
 407 0202 3C4B     		ldr	r3, .L64
 408 0204 1B68     		ldr	r3, [r3]
 409              		.loc 1 252 54
 410 0206 03F48033 		and	r3, r3, #65536
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 ((RCU_SCSS_PLL == hals_rcu_system_clock_source_get()) && \
 411              		.loc 1 251 71
 412 020a 002B     		cmp	r3, #0
 413 020c 16D1     		bne	.L31
 414              	.L30:
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if((RESET != (RCU_CTL0 & RCU_CTL0_IRC8MSTB)) && (RCU_OSC_OFF == rcu_osci->irc8m.state))
 415              		.loc 1 253 27
 416 020e 3A4B     		ldr	r3, .L64+4
 417 0210 1B68     		ldr	r3, [r3]
 418              		.loc 1 253 36
 419 0212 03F00203 		and	r3, r3, #2
 420              		.loc 1 253 15
 421 0216 002B     		cmp	r3, #0
 422 0218 06D0     		beq	.L32
 423              		.loc 1 253 92 discriminator 1
 424 021a 7B68     		ldr	r3, [r7, #4]
 425 021c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 426              		.loc 1 253 58 discriminator 1
 427 021e 012B     		cmp	r3, #1
 428 0220 02D1     		bne	.L32
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_VAL;
 429              		.loc 1 254 24
 430 0222 6FF00503 		mvn	r3, #5
 431 0226 77E1     		b	.L6
 432              	.L32:
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(rcu_osci->irc8m.adjust_value) {
 433              		.loc 1 256 35
 434 0228 7B68     		ldr	r3, [r7, #4]
 435 022a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 436              		.loc 1 256 19
 437 022c 002B     		cmp	r3, #0
 438 022e 39D0     		beq	.L63
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     /* adjusts the IRC8M calibration value */
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_irc8m_adjust_value_set(rcu_osci->irc8m.adjust_value);
 439              		.loc 1 258 21
 440 0230 7B68     		ldr	r3, [r7, #4]
 441 0232 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 442 0234 1846     		mov	r0, r3
 443 0236 FFF7FEFF 		bl	hals_rcu_irc8m_adjust_value_set
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_VAL;
 444              		.loc 1 253 15
 445 023a 33E0     		b	.L63
 446              	.L31:
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(RCU_OSC_OFF != rcu_osci->irc8m.state) {
 447              		.loc 1 262 46
 448 023c 7B68     		ldr	r3, [r7, #4]
 449 023e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 450              		.loc 1 262 15
 451 0240 012B     		cmp	r3, #1
 452 0242 15D0     		beq	.L34
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_on(RCU_IRC8M);
 453              		.loc 1 263 17
 454 0244 0020     		movs	r0, #0
 455 0246 FFF7FEFF 		bl	hals_rcu_osci_on
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 /* wait till IRC8M is stable */
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(ERROR == hals_rcu_osci_stab_wait(RCU_IRC8M)) {
 456              		.loc 1 266 29
 457 024a 0020     		movs	r0, #0
 458 024c FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 459 0250 0346     		mov	r3, r0
 460              		.loc 1 266 19
 461 0252 002B     		cmp	r3, #0
 462 0254 02D1     		bne	.L35
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 463              		.loc 1 267 28
 464 0256 6FF00403 		mvn	r3, #4
 465 025a 5DE1     		b	.L6
 466              	.L35:
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(rcu_osci->irc8m.adjust_value) {
 467              		.loc 1 270 35
 468 025c 7B68     		ldr	r3, [r7, #4]
 469 025e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 470              		.loc 1 270 19
 471 0260 002B     		cmp	r3, #0
 472 0262 20D0     		beq	.L29
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     /* adjusts the IRC8M calibration value */
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_irc8m_adjust_value_set(rcu_osci->irc8m.adjust_value);
 473              		.loc 1 272 21
 474 0264 7B68     		ldr	r3, [r7, #4]
 475 0266 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 476 0268 1846     		mov	r0, r3
 477 026a FFF7FEFF 		bl	hals_rcu_irc8m_adjust_value_set
 478 026e 1AE0     		b	.L29
 479              	.L34:
 480              	.LBB5:
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 uint32_t tick_start = 0U;
 481              		.loc 1 275 26
 482 0270 0023     		movs	r3, #0
 483 0272 FB61     		str	r3, [r7, #28]
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_osci_off(RCU_IRC8M);
 484              		.loc 1 277 17
 485 0274 0020     		movs	r0, #0
 486 0276 FFF7FEFF 		bl	hals_rcu_osci_off
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 tick_start = hal_sys_basetick_count_get();
 487              		.loc 1 279 30
 488 027a FFF7FEFF 		bl	hal_sys_basetick_count_get
 489 027e F861     		str	r0, [r7, #28]
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 /* wait till IRC8M is disabled */
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 while(RESET != (RCU_CTL0 & RCU_CTL0_IRC8MSTB)) {
 490              		.loc 1 282 22
 491 0280 09E0     		b	.L36
 492              	.L37:
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC8M_TIMEOUT)) {
 493              		.loc 1 283 31
 494 0282 0421     		movs	r1, #4
 495 0284 F869     		ldr	r0, [r7, #28]
 496 0286 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 497 028a 0346     		mov	r3, r0
 498              		.loc 1 283 23
 499 028c 012B     		cmp	r3, #1
 500 028e 02D1     		bne	.L36
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         return HAL_ERR_TIMEOUT;
 501              		.loc 1 284 32
 502 0290 6FF00403 		mvn	r3, #4
 503 0294 40E1     		b	.L6
 504              	.L36:
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC8M_TIMEOUT)) {
 505              		.loc 1 282 33
 506 0296 184B     		ldr	r3, .L64+4
 507 0298 1B68     		ldr	r3, [r3]
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC8M_TIMEOUT)) {
 508              		.loc 1 282 42
 509 029a 03F00203 		and	r3, r3, #2
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC8M_TIMEOUT)) {
 510              		.loc 1 282 22
 511 029e 002B     		cmp	r3, #0
 512 02a0 EFD1     		bne	.L37
 513 02a2 00E0     		b	.L29
 514              	.L63:
 515              	.LBE5:
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_VAL;
 516              		.loc 1 253 15
 517 02a4 00BF     		nop
 518              	.L29:
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     }
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure IRC28M */
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->irc28m.need_configure) {
 519              		.loc 1 292 34
 520 02a6 7B68     		ldr	r3, [r7, #4]
 521 02a8 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 522              		.loc 1 292 7
 523 02aa 012B     		cmp	r3, #1
 524 02ac 70D1     		bne	.L38
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* set the IRC28M new state */
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_OSC_ON == rcu_osci->irc28m.state) {
 525              		.loc 1 294 42
 526 02ae 7B68     		ldr	r3, [r7, #4]
 527 02b0 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 528              		.loc 1 294 11
 529 02b2 022B     		cmp	r3, #2
 530 02b4 2AD1     		bne	.L39
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             RCU_CFG2 &= ~RCU_CFG2_ADCSEL;
 531              		.loc 1 295 22
 532 02b6 144B     		ldr	r3, .L64+20
 533 02b8 1B68     		ldr	r3, [r3]
 534 02ba 134A     		ldr	r2, .L64+20
 535 02bc 23F48073 		bic	r3, r3, #256
 536 02c0 1360     		str	r3, [r2]
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_IRC28M);
 537              		.loc 1 297 13
 538 02c2 4FF45060 		mov	r0, #3328
 539 02c6 FFF7FEFF 		bl	hals_rcu_osci_on
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC28M is stable */
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(ERROR == hals_rcu_osci_stab_wait(RCU_IRC28M)) {
 540              		.loc 1 300 25
 541 02ca 4FF45060 		mov	r0, #3328
 542 02ce FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 543 02d2 0346     		mov	r3, r0
 544              		.loc 1 300 15
 545 02d4 002B     		cmp	r3, #0
 546 02d6 02D1     		bne	.L40
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_TIMEOUT;
 547              		.loc 1 301 24
 548 02d8 6FF00403 		mvn	r3, #4
 549 02dc 1CE1     		b	.L6
 550              	.L40:
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(rcu_osci->irc28m.adjust_value) {
 551              		.loc 1 304 32
 552 02de 7B68     		ldr	r3, [r7, #4]
 553 02e0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 554              		.loc 1 304 15
 555 02e2 002B     		cmp	r3, #0
 556 02e4 54D0     		beq	.L38
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 /* adjusts the IRC28M calibration value */
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_irc28m_adjust_value_set(rcu_osci->irc28m.adjust_value);
 557              		.loc 1 306 17
 558 02e6 7B68     		ldr	r3, [r7, #4]
 559 02e8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 560 02ea 1846     		mov	r0, r3
 561 02ec FFF7FEFF 		bl	hals_rcu_irc28m_adjust_value_set
 562 02f0 4EE0     		b	.L38
 563              	.L65:
 564 02f2 00BF     		.align	2
 565              	.L64:
 566 02f4 04100240 		.word	1073876996
 567 02f8 00100240 		.word	1073876992
 568 02fc 1C100240 		.word	1073877020
 569 0300 00700040 		.word	1073770496
 570 0304 20100240 		.word	1073877024
 571 0308 30100240 		.word	1073877040
 572              	.L39:
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else if(RCU_OSC_ADCCTL == rcu_osci->irc28m.state) {
 573              		.loc 1 308 53
 574 030c 7B68     		ldr	r3, [r7, #4]
 575 030e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 576              		.loc 1 308 18
 577 0310 042B     		cmp	r3, #4
 578 0312 1DD1     		bne	.L41
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             RCU_CFG2 &= ~RCU_CFG2_ADCSEL;
 579              		.loc 1 309 22
 580 0314 824B     		ldr	r3, .L66
 581 0316 1B68     		ldr	r3, [r3]
 582 0318 814A     		ldr	r2, .L66
 583 031a 23F48073 		bic	r3, r3, #256
 584 031e 1360     		str	r3, [r2]
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_IRC28M);
 585              		.loc 1 311 13
 586 0320 4FF45060 		mov	r0, #3328
 587 0324 FFF7FEFF 		bl	hals_rcu_osci_on
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC28M is stable */
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(ERROR == hals_rcu_osci_stab_wait(RCU_IRC28M)) {
 588              		.loc 1 314 25
 589 0328 4FF45060 		mov	r0, #3328
 590 032c FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 591 0330 0346     		mov	r3, r0
 592              		.loc 1 314 15
 593 0332 002B     		cmp	r3, #0
 594 0334 02D1     		bne	.L42
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_TIMEOUT;
 595              		.loc 1 315 24
 596 0336 6FF00403 		mvn	r3, #4
 597 033a EDE0     		b	.L6
 598              	.L42:
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(rcu_osci->irc28m.adjust_value) {
 599              		.loc 1 318 32
 600 033c 7B68     		ldr	r3, [r7, #4]
 601 033e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 602              		.loc 1 318 15
 603 0340 002B     		cmp	r3, #0
 604 0342 25D0     		beq	.L38
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 /* adjusts the IRC28M calibration value */
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 hals_rcu_irc28m_adjust_value_set(rcu_osci->irc28m.adjust_value);
 605              		.loc 1 320 17
 606 0344 7B68     		ldr	r3, [r7, #4]
 607 0346 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 608 0348 1846     		mov	r0, r3
 609 034a FFF7FEFF 		bl	hals_rcu_irc28m_adjust_value_set
 610 034e 1FE0     		b	.L38
 611              	.L41:
 612              	.LBB6:
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             uint32_t tick_start = 0U;
 613              		.loc 1 323 22
 614 0350 0023     		movs	r3, #0
 615 0352 BB61     		str	r3, [r7, #24]
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             RCU_CFG2 |= RCU_CFG2_ADCSEL;
 616              		.loc 1 325 22
 617 0354 724B     		ldr	r3, .L66
 618 0356 1B68     		ldr	r3, [r3]
 619 0358 714A     		ldr	r2, .L66
 620 035a 43F48073 		orr	r3, r3, #256
 621 035e 1360     		str	r3, [r2]
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_off(RCU_IRC28M);
 622              		.loc 1 327 13
 623 0360 4FF45060 		mov	r0, #3328
 624 0364 FFF7FEFF 		bl	hals_rcu_osci_off
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             tick_start = hal_sys_basetick_count_get();
 625              		.loc 1 329 26
 626 0368 FFF7FEFF 		bl	hal_sys_basetick_count_get
 627 036c B861     		str	r0, [r7, #24]
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC28M is disabled */
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             while(RESET != (RCU_CTL1 & RCU_CTL1_IRC28MSTB)) {
 628              		.loc 1 332 18
 629 036e 09E0     		b	.L43
 630              	.L44:
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC28M_TIMEOUT)) {
 631              		.loc 1 333 27
 632 0370 0421     		movs	r1, #4
 633 0372 B869     		ldr	r0, [r7, #24]
 634 0374 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 635 0378 0346     		mov	r3, r0
 636              		.loc 1 333 19
 637 037a 012B     		cmp	r3, #1
 638 037c 02D1     		bne	.L43
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 639              		.loc 1 334 28
 640 037e 6FF00403 		mvn	r3, #4
 641 0382 C9E0     		b	.L6
 642              	.L43:
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC28M_TIMEOUT)) {
 643              		.loc 1 332 29
 644 0384 674B     		ldr	r3, .L66+4
 645 0386 1B68     		ldr	r3, [r3]
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC28M_TIMEOUT)) {
 646              		.loc 1 332 38
 647 0388 03F00203 		and	r3, r3, #2
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC28M_TIMEOUT)) {
 648              		.loc 1 332 18
 649 038c 002B     		cmp	r3, #0
 650 038e EFD1     		bne	.L44
 651              	.L38:
 652              	.LBE6:
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure IRC48M */
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->irc48m.need_configure) {
 653              		.loc 1 341 34
 654 0390 7B68     		ldr	r3, [r7, #4]
 655 0392 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 656              		.loc 1 341 7
 657 0394 012B     		cmp	r3, #1
 658 0396 2BD1     		bne	.L45
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* set the IRC40K new state */
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_OSC_ON == rcu_osci->irc48m.state) {
 659              		.loc 1 343 42
 660 0398 7B68     		ldr	r3, [r7, #4]
 661 039a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 662              		.loc 1 343 11
 663 039c 022B     		cmp	r3, #2
 664 039e 0DD1     		bne	.L46
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_IRC48M);
 665              		.loc 1 344 13
 666 03a0 43F21000 		movw	r0, #12304
 667 03a4 FFF7FEFF 		bl	hals_rcu_osci_on
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC40K is stable */
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(ERROR == hals_rcu_osci_stab_wait(RCU_IRC48M)) {
 668              		.loc 1 347 25
 669 03a8 43F21000 		movw	r0, #12304
 670 03ac FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 671 03b0 0346     		mov	r3, r0
 672              		.loc 1 347 15
 673 03b2 002B     		cmp	r3, #0
 674 03b4 1CD1     		bne	.L45
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_TIMEOUT;
 675              		.loc 1 348 24
 676 03b6 6FF00403 		mvn	r3, #4
 677 03ba ADE0     		b	.L6
 678              	.L46:
 679              	.LBB7:
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             uint32_t tick_start = 0U;
 680              		.loc 1 351 22
 681 03bc 0023     		movs	r3, #0
 682 03be 7B61     		str	r3, [r7, #20]
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_off(RCU_IRC48M);
 683              		.loc 1 353 13
 684 03c0 43F21000 		movw	r0, #12304
 685 03c4 FFF7FEFF 		bl	hals_rcu_osci_off
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             tick_start = hal_sys_basetick_count_get();
 686              		.loc 1 355 26
 687 03c8 FFF7FEFF 		bl	hal_sys_basetick_count_get
 688 03cc 7861     		str	r0, [r7, #20]
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC48M is disabled */
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             while(RESET != (RCU_ADDCTL & RCU_ADDCTL_IRC48MSTB)) {
 689              		.loc 1 358 18
 690 03ce 09E0     		b	.L47
 691              	.L48:
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC48M_TIMEOUT)) {
 692              		.loc 1 359 27
 693 03d0 0421     		movs	r1, #4
 694 03d2 7869     		ldr	r0, [r7, #20]
 695 03d4 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 696 03d8 0346     		mov	r3, r0
 697              		.loc 1 359 19
 698 03da 012B     		cmp	r3, #1
 699 03dc 02D1     		bne	.L47
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 700              		.loc 1 360 28
 701 03de 6FF00403 		mvn	r3, #4
 702 03e2 99E0     		b	.L6
 703              	.L47:
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC48M_TIMEOUT)) {
 704              		.loc 1 358 29
 705 03e4 504B     		ldr	r3, .L66+8
 706 03e6 1B68     		ldr	r3, [r3]
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC48M_TIMEOUT)) {
 707              		.loc 1 358 40
 708 03e8 03F40033 		and	r3, r3, #131072
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC48M_TIMEOUT)) {
 709              		.loc 1 358 18
 710 03ec 002B     		cmp	r3, #0
 711 03ee EFD1     		bne	.L48
 712              	.L45:
 713              	.LBE7:
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure IRC40K */
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->irc40k.need_configure) {
 714              		.loc 1 367 34
 715 03f0 7B68     		ldr	r3, [r7, #4]
 716 03f2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 717              		.loc 1 367 7
 718 03f4 012B     		cmp	r3, #1
 719 03f6 2BD1     		bne	.L49
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* set the IRC40K new state */
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_OSC_OFF != rcu_osci->irc40k.state) {
 720              		.loc 1 369 43
 721 03f8 7B68     		ldr	r3, [r7, #4]
 722 03fa 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 723              		.loc 1 369 11
 724 03fc 012B     		cmp	r3, #1
 725 03fe 0DD0     		beq	.L50
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_on(RCU_IRC40K);
 726              		.loc 1 370 13
 727 0400 4FF41060 		mov	r0, #2304
 728 0404 FFF7FEFF 		bl	hals_rcu_osci_on
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC40K is stable */
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(ERROR == hals_rcu_osci_stab_wait(RCU_IRC40K)) {
 729              		.loc 1 373 25
 730 0408 4FF41060 		mov	r0, #2304
 731 040c FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 732 0410 0346     		mov	r3, r0
 733              		.loc 1 373 15
 734 0412 002B     		cmp	r3, #0
 735 0414 1CD1     		bne	.L49
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_TIMEOUT;
 736              		.loc 1 374 24
 737 0416 6FF00403 		mvn	r3, #4
 738 041a 7DE0     		b	.L6
 739              	.L50:
 740              	.LBB8:
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             uint32_t tick_start = 0U;
 741              		.loc 1 377 22
 742 041c 0023     		movs	r3, #0
 743 041e 3B61     		str	r3, [r7, #16]
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_osci_off(RCU_IRC40K);
 744              		.loc 1 379 13
 745 0420 4FF41060 		mov	r0, #2304
 746 0424 FFF7FEFF 		bl	hals_rcu_osci_off
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             tick_start = hal_sys_basetick_count_get();
 747              		.loc 1 381 26
 748 0428 FFF7FEFF 		bl	hal_sys_basetick_count_get
 749 042c 3861     		str	r0, [r7, #16]
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* wait till IRC40K is disabled */
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             while(RESET != (RCU_RSTSCK & RCU_RSTSCK_IRC40KSTB)) {
 750              		.loc 1 384 18
 751 042e 09E0     		b	.L51
 752              	.L52:
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC40K_TIMEOUT)) {
 753              		.loc 1 385 27
 754 0430 0421     		movs	r1, #4
 755 0432 3869     		ldr	r0, [r7, #16]
 756 0434 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 757 0438 0346     		mov	r3, r0
 758              		.loc 1 385 19
 759 043a 012B     		cmp	r3, #1
 760 043c 02D1     		bne	.L51
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 761              		.loc 1 386 28
 762 043e 6FF00403 		mvn	r3, #4
 763 0442 69E0     		b	.L6
 764              	.L51:
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC40K_TIMEOUT)) {
 765              		.loc 1 384 29
 766 0444 394B     		ldr	r3, .L66+12
 767 0446 1B68     		ldr	r3, [r3]
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC40K_TIMEOUT)) {
 768              		.loc 1 384 40
 769 0448 03F00203 		and	r3, r3, #2
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_IRC40K_TIMEOUT)) {
 770              		.loc 1 384 18
 771 044c 002B     		cmp	r3, #0
 772 044e EFD1     		bne	.L52
 773              	.L49:
 774              	.LBE8:
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure PLL */
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(ENABLE == rcu_osci->pll.need_configure) {
 775              		.loc 1 393 31
 776 0450 7B68     		ldr	r3, [r7, #4]
 777 0452 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 778              		.loc 1 393 7
 779 0454 012B     		cmp	r3, #1
 780 0456 5ED1     		bne	.L53
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check if the PLL is used as system clock or not */
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_OSC_NONE != rcu_osci->pll.state) {
 781              		.loc 1 395 41
 782 0458 7B68     		ldr	r3, [r7, #4]
 783 045a 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 784              		.loc 1 395 11
 785 045c 002B     		cmp	r3, #0
 786 045e 5AD0     		beq	.L53
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(RCU_SCSS_PLL != hals_rcu_system_clock_source_get()) {
 787              		.loc 1 396 32
 788 0460 FFF7FEFF 		bl	hals_rcu_system_clock_source_get
 789 0464 0346     		mov	r3, r0
 790              		.loc 1 396 15
 791 0466 082B     		cmp	r3, #8
 792 0468 52D0     		beq	.L54
 793              	.LBB9:
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 uint32_t tick_start = 0U;
 794              		.loc 1 397 26
 795 046a 0023     		movs	r3, #0
 796 046c FB60     		str	r3, [r7, #12]
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(RCU_OSC_ON == rcu_osci->pll.state) {
 797              		.loc 1 399 47
 798 046e 7B68     		ldr	r3, [r7, #4]
 799 0470 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 800              		.loc 1 399 19
 801 0472 022B     		cmp	r3, #2
 802 0474 34D1     		bne	.L55
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_osci_off(RCU_PLL_CK);
 803              		.loc 1 400 21
 804 0476 1820     		movs	r0, #24
 805 0478 FFF7FEFF 		bl	hals_rcu_osci_off
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     tick_start = hal_sys_basetick_count_get();
 806              		.loc 1 402 34
 807 047c FFF7FEFF 		bl	hal_sys_basetick_count_get
 808 0480 F860     		str	r0, [r7, #12]
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     /* wait till PLL is disabled */
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     while(RESET != (RCU_CTL0 & RCU_CTL0_PLLSTB)) {
 809              		.loc 1 405 26
 810 0482 09E0     		b	.L56
 811              	.L57:
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 812              		.loc 1 406 35
 813 0484 0421     		movs	r1, #4
 814 0486 F868     		ldr	r0, [r7, #12]
 815 0488 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 816 048c 0346     		mov	r3, r0
 817              		.loc 1 406 27
 818 048e 012B     		cmp	r3, #1
 819 0490 02D1     		bne	.L56
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                             return HAL_ERR_TIMEOUT;
 820              		.loc 1 407 36
 821 0492 6FF00403 		mvn	r3, #4
 822 0496 3FE0     		b	.L6
 823              	.L56:
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 824              		.loc 1 405 37
 825 0498 254B     		ldr	r3, .L66+16
 826 049a 1B68     		ldr	r3, [r3]
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 827              		.loc 1 405 46
 828 049c 03F00073 		and	r3, r3, #33554432
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 829              		.loc 1 405 26
 830 04a0 002B     		cmp	r3, #0
 831 04a2 EFD1     		bne	.L57
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         }
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     }
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     /* configure the PLL */
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_pll_preselection_config(rcu_osci->pll.pll_presel);
 832              		.loc 1 412 67
 833 04a4 7B68     		ldr	r3, [r7, #4]
 834 04a6 1B6A     		ldr	r3, [r3, #32]
 835              		.loc 1 412 21
 836 04a8 1846     		mov	r0, r3
 837 04aa FFF7FEFF 		bl	hals_rcu_pll_preselection_config
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_hxtal_prediv_config(rcu_osci->pll.pre_div);
 838              		.loc 1 413 63
 839 04ae 7B68     		ldr	r3, [r7, #4]
 840 04b0 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 841              		.loc 1 413 21
 842 04b2 1846     		mov	r0, r3
 843 04b4 FFF7FEFF 		bl	hals_rcu_hxtal_prediv_config
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_pll_config(rcu_osci->pll.pll_source, rcu_osci->pll.pll_mul);
 844              		.loc 1 414 54
 845 04b8 7B68     		ldr	r3, [r7, #4]
 846 04ba 5A69     		ldr	r2, [r3, #20]
 847              		.loc 1 414 80
 848 04bc 7B68     		ldr	r3, [r7, #4]
 849 04be DB69     		ldr	r3, [r3, #28]
 850              		.loc 1 414 21
 851 04c0 1946     		mov	r1, r3
 852 04c2 1046     		mov	r0, r2
 853 04c4 FFF7FEFF 		bl	hals_rcu_pll_config
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_osci_on(RCU_PLL_CK);
 854              		.loc 1 416 21
 855 04c8 1820     		movs	r0, #24
 856 04ca FFF7FEFF 		bl	hals_rcu_osci_on
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     /* wait till PLL is stable */
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     if(ERROR == hals_rcu_osci_stab_wait(RCU_PLL_CK)) {
 857              		.loc 1 419 33
 858 04ce 1820     		movs	r0, #24
 859 04d0 FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 860 04d4 0346     		mov	r3, r0
 861              		.loc 1 419 23
 862 04d6 002B     		cmp	r3, #0
 863 04d8 1DD1     		bne	.L53
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         return HAL_ERR_TIMEOUT;
 864              		.loc 1 420 32
 865 04da 6FF00403 		mvn	r3, #4
 866 04de 1BE0     		b	.L6
 867              	.L55:
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     }
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 } else {
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     hals_rcu_osci_off(RCU_PLL_CK);
 868              		.loc 1 423 21
 869 04e0 1820     		movs	r0, #24
 870 04e2 FFF7FEFF 		bl	hals_rcu_osci_off
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     tick_start = hal_sys_basetick_count_get();
 871              		.loc 1 425 34
 872 04e6 FFF7FEFF 		bl	hal_sys_basetick_count_get
 873 04ea F860     		str	r0, [r7, #12]
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     /* wait till PLL is disabled */
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     while(RESET != (RCU_CTL0 & RCU_CTL0_PLLSTB)) {
 874              		.loc 1 428 26
 875 04ec 09E0     		b	.L58
 876              	.L59:
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 877              		.loc 1 429 35
 878 04ee 0421     		movs	r1, #4
 879 04f0 F868     		ldr	r0, [r7, #12]
 880 04f2 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 881 04f6 0346     		mov	r3, r0
 882              		.loc 1 429 27
 883 04f8 012B     		cmp	r3, #1
 884 04fa 02D1     		bne	.L58
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                             return HAL_ERR_TIMEOUT;
 885              		.loc 1 430 36
 886 04fc 6FF00403 		mvn	r3, #4
 887 0500 0AE0     		b	.L6
 888              	.L58:
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 889              		.loc 1 428 37
 890 0502 0B4B     		ldr	r3, .L66+16
 891 0504 1B68     		ldr	r3, [r3]
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 892              		.loc 1 428 46
 893 0506 03F00073 		and	r3, r3, #33554432
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_PLL_TIMEOUT)) {
 894              		.loc 1 428 26
 895 050a 002B     		cmp	r3, #0
 896 050c EFD1     		bne	.L59
 897 050e 02E0     		b	.L53
 898              	.L54:
 899              	.LBE9:
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                         }
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     }
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_VAL;
 900              		.loc 1 435 24
 901 0510 6FF00503 		mvn	r3, #5
 902 0514 00E0     		b	.L6
 903              	.L53:
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return HAL_ERR_NONE;
 904              		.loc 1 440 12
 905 0516 0023     		movs	r3, #0
 906              	.L6:
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 907              		.loc 1 441 1
 908 0518 1846     		mov	r0, r3
 909 051a 3037     		adds	r7, r7, #48
 910              		.cfi_def_cfa_offset 8
 911 051c BD46     		mov	sp, r7
 912              		.cfi_def_cfa_register 13
 913              		@ sp needed
 914 051e 80BD     		pop	{r7, pc}
 915              	.L67:
 916              		.align	2
 917              	.L66:
 918 0520 30100240 		.word	1073877040
 919 0524 34100240 		.word	1073877044
 920 0528 C0100240 		.word	1073877184
 921 052c 24100240 		.word	1073877028
 922 0530 00100240 		.word	1073876992
 923              		.cfi_endproc
 924              	.LFE119:
 926              		.section	.text.hal_rcu_clock_out_config,"ax",%progbits
 927              		.align	1
 928              		.global	hal_rcu_clock_out_config
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 934              	hal_rcu_clock_out_config:
 935              	.LFB120:
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the clock out to output on CKOUT pin
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ckout_src: clock out source
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   the argument could be selected from enumeraion <hal_rcu_ckout_src_enum>
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ckout_div: clock out divider
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   the argument could be selected from enumeraion <hal_rcu_ckout_div_enum>
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_clock_out_config(hal_rcu_ckout_src_enum ckout_src, \
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                               hal_rcu_ckout_div_enum ckout_div)
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 936              		.loc 1 454 1
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 32
 939              		@ frame_needed = 1, uses_anonymous_args = 0
 940 0000 80B5     		push	{r7, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 88B0     		sub	sp, sp, #32
 945              		.cfi_def_cfa_offset 40
 946 0004 00AF     		add	r7, sp, #0
 947              		.cfi_def_cfa_register 7
 948 0006 0346     		mov	r3, r0
 949 0008 3960     		str	r1, [r7]
 950 000a FB71     		strb	r3, [r7, #7]
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t clkout_src = 0U;
 951              		.loc 1 455 14
 952 000c 0023     		movs	r3, #0
 953 000e FB61     		str	r3, [r7, #28]
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     hal_gpio_init_struct gpio_init_struct;
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     _CKOUT_GPIO_CLK_ENABLE();
 954              		.loc 1 459 5
 955 0010 40F21150 		movw	r0, #1297
 956 0014 FFF7FEFF 		bl	hal_rcu_periph_clk_enable
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure clock out GPIO pin */
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     gpio_init_struct.mode = GPIO_MODE_AF_PP;
 957              		.loc 1 462 27
 958 0018 0223     		movs	r3, #2
 959 001a FB60     		str	r3, [r7, #12]
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     gpio_init_struct.ospeed = GPIO_OSPEED_50MHZ;
 960              		.loc 1 463 29
 961 001c 0323     		movs	r3, #3
 962 001e 7B61     		str	r3, [r7, #20]
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     gpio_init_struct.pull = GPIO_PULL_NONE;
 963              		.loc 1 464 27
 964 0020 0023     		movs	r3, #0
 965 0022 3B61     		str	r3, [r7, #16]
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     gpio_init_struct.af = GPIO_AF_0;
 966              		.loc 1 465 25
 967 0024 0023     		movs	r3, #0
 968 0026 BB61     		str	r3, [r7, #24]
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     hal_gpio_init(_CKOUT_GPIO_PORT, _CKOUT_GPIO_PIN, &gpio_init_struct);
 969              		.loc 1 467 5
 970 0028 07F10C03 		add	r3, r7, #12
 971 002c 1A46     		mov	r2, r3
 972 002e 4FF48071 		mov	r1, #256
 973 0032 4FF09040 		mov	r0, #1207959552
 974 0036 FFF7FEFF 		bl	hal_gpio_init
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_CKOUT_SRC_CKPLL_DIV1 == ckout_src) {
 975              		.loc 1 469 7
 976 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 977 003c 082B     		cmp	r3, #8
 978 003e 03D1     		bne	.L69
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         clkout_src = RCU_CKOUTSRC_CKPLL_DIV1;
 979              		.loc 1 470 20
 980 0040 4FF00743 		mov	r3, #-2030043136
 981 0044 FB61     		str	r3, [r7, #28]
 982 0046 04E0     		b	.L70
 983              	.L69:
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         clkout_src = CFG0_CKOUTSEL(ckout_src);
 984              		.loc 1 472 22
 985 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 986 004a 1B06     		lsls	r3, r3, #24
 987              		.loc 1 472 20
 988 004c 03F0E063 		and	r3, r3, #117440512
 989 0050 FB61     		str	r3, [r7, #28]
 990              	.L70:
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* clock out configuration */
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     hals_rcu_ckout_config(clkout_src, ckout_div);
 991              		.loc 1 476 5
 992 0052 3968     		ldr	r1, [r7]
 993 0054 F869     		ldr	r0, [r7, #28]
 994 0056 FFF7FEFF 		bl	hals_rcu_ckout_config
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 995              		.loc 1 477 1
 996 005a 00BF     		nop
 997 005c 2037     		adds	r7, r7, #32
 998              		.cfi_def_cfa_offset 8
 999 005e BD46     		mov	sp, r7
 1000              		.cfi_def_cfa_register 13
 1001              		@ sp needed
 1002 0060 80BD     		pop	{r7, pc}
 1003              		.cfi_endproc
 1004              	.LFE120:
 1006              		.section	.text.hal_rcu_deinit,"ax",%progbits
 1007              		.align	1
 1008              		.global	hal_rcu_deinit
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu softvfp
 1014              	hal_rcu_deinit:
 1015              	.LFB121:
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      deinitialize the RCU
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_deinit(void)
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1016              		.loc 1 486 1
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 8
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021 0000 80B4     		push	{r7}
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 7, -4
 1024 0002 83B0     		sub	sp, sp, #12
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* enable IRC8M */
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL0 |= RCU_CTL0_IRC8MEN;
 1028              		.loc 1 488 14
 1029 0006 3E4B     		ldr	r3, .L77
 1030 0008 1B68     		ldr	r3, [r3]
 1031 000a 3D4A     		ldr	r2, .L77
 1032 000c 43F00103 		orr	r3, r3, #1
 1033 0010 1360     		str	r3, [r2]
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     while(0U == (RCU_CTL0 & RCU_CTL0_IRC8MSTB)) {
 1034              		.loc 1 489 10
 1035 0012 00BF     		nop
 1036              	.L72:
 1037              		.loc 1 489 18 discriminator 1
 1038 0014 3A4B     		ldr	r3, .L77
 1039 0016 1B68     		ldr	r3, [r3]
 1040              		.loc 1 489 27 discriminator 1
 1041 0018 03F00203 		and	r3, r3, #2
 1042              		.loc 1 489 10 discriminator 1
 1043 001c 002B     		cmp	r3, #0
 1044 001e F9D0     		beq	.L72
 1045              	.LBB10:
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_MODIFY(0x50);
 1046              		.loc 1 492 5 discriminator 1
 1047 0020 384B     		ldr	r3, .L77+4
 1048 0022 1B68     		ldr	r3, [r3]
 1049 0024 374A     		ldr	r2, .L77+4
 1050 0026 43F08003 		orr	r3, r3, #128
 1051 002a 1360     		str	r3, [r2]
 1052 002c 0023     		movs	r3, #0
 1053 002e 7B60     		str	r3, [r7, #4]
 1054 0030 02E0     		b	.L73
 1055              	.L74:
 1056              		.loc 1 492 5 is_stmt 0 discriminator 4
 1057 0032 7B68     		ldr	r3, [r7, #4]
 1058 0034 0133     		adds	r3, r3, #1
 1059 0036 7B60     		str	r3, [r7, #4]
 1060              	.L73:
 1061              		.loc 1 492 5 discriminator 2
 1062 0038 7B68     		ldr	r3, [r7, #4]
 1063 003a 4F2B     		cmp	r3, #79
 1064 003c F9D9     		bls	.L74
 1065              		.loc 1 492 5 discriminator 5
 1066 003e 314B     		ldr	r3, .L77+4
 1067 0040 1B68     		ldr	r3, [r3]
 1068 0042 304A     		ldr	r2, .L77+4
 1069 0044 43F09003 		orr	r3, r3, #144
 1070 0048 1360     		str	r3, [r2]
 1071 004a 0023     		movs	r3, #0
 1072 004c 7B60     		str	r3, [r7, #4]
 1073 004e 02E0     		b	.L75
 1074              	.L76:
 1075              		.loc 1 492 5 discriminator 8
 1076 0050 7B68     		ldr	r3, [r7, #4]
 1077 0052 0133     		adds	r3, r3, #1
 1078 0054 7B60     		str	r3, [r7, #4]
 1079              	.L75:
 1080              		.loc 1 492 5 discriminator 6
 1081 0056 7B68     		ldr	r3, [r7, #4]
 1082 0058 4F2B     		cmp	r3, #79
 1083 005a F9D9     		bls	.L76
 1084              	.LBE10:
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~RCU_CFG0_SCS;
 1085              		.loc 1 494 14 is_stmt 1
 1086 005c 294B     		ldr	r3, .L77+4
 1087 005e 1B68     		ldr	r3, [r3]
 1088 0060 284A     		ldr	r2, .L77+4
 1089 0062 23F00303 		bic	r3, r3, #3
 1090 0066 1360     		str	r3, [r2]
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset CTL register */
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL0 &= ~(RCU_CTL0_HXTALEN | RCU_CTL0_CKMEN | RCU_CTL0_PLLEN | RCU_CTL0_HXTALBPS);
 1091              		.loc 1 497 14
 1092 0068 254B     		ldr	r3, .L77
 1093 006a 1B68     		ldr	r3, [r3]
 1094 006c 244A     		ldr	r2, .L77
 1095 006e 23F08673 		bic	r3, r3, #17563648
 1096 0072 23F48033 		bic	r3, r3, #65536
 1097 0076 1360     		str	r3, [r2]
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL1 &= ~RCU_CTL1_IRC28MEN;
 1098              		.loc 1 498 14
 1099 0078 234B     		ldr	r3, .L77+8
 1100 007a 1B68     		ldr	r3, [r3]
 1101 007c 224A     		ldr	r2, .L77+8
 1102 007e 23F00103 		bic	r3, r3, #1
 1103 0082 1360     		str	r3, [r2]
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset RCU */
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~(RCU_CFG0_SCS | RCU_CFG0_AHBPSC | RCU_CFG0_APB1PSC | RCU_CFG0_APB2PSC | \
 1104              		.loc 1 501 14
 1105 0084 1F4B     		ldr	r3, .L77+4
 1106 0086 1A68     		ldr	r2, [r3]
 1107 0088 1E49     		ldr	r1, .L77+4
 1108 008a 204B     		ldr	r3, .L77+12
 1109 008c 1340     		ands	r3, r3, r2
 1110 008e 0B60     		str	r3, [r1]
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   RCU_CFG0_ADCPSC | RCU_CFG0_CKOUTSEL | RCU_CFG0_CKOUTDIV | RCU_CFG0_PLLDV);
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~(RCU_CFG0_PLLSEL | RCU_CFG0_PLLMF | RCU_CFG0_PLLMF4 | RCU_CFG0_PLLDV);
 1111              		.loc 1 503 14
 1112 0090 1C4B     		ldr	r3, .L77+4
 1113 0092 1B68     		ldr	r3, [r3]
 1114 0094 1B4A     		ldr	r2, .L77+4
 1115 0096 23F00843 		bic	r3, r3, #-2013265920
 1116 009a 23F47413 		bic	r3, r3, #3997696
 1117 009e 1360     		str	r3, [r2]
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (defined(GD32F350))
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~(RCU_CFG0_USBFSPSC);
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~(RCU_CFG2_CECSEL | RCU_CFG2_USBFSPSC2);
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* GD32F350 */
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG1 &= ~(RCU_CFG1_PREDV | RCU_CFG1_PLLMF5 | RCU_CFG1_PLLPRESEL);
 1118              		.loc 1 509 14
 1119 00a0 1B4B     		ldr	r3, .L77+16
 1120 00a2 1B68     		ldr	r3, [r3]
 1121 00a4 1A4A     		ldr	r2, .L77+16
 1122 00a6 23F04043 		bic	r3, r3, #-1073741824
 1123 00aa 23F00F03 		bic	r3, r3, #15
 1124 00ae 1360     		str	r3, [r2]
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~(RCU_CFG2_USART0SEL | RCU_CFG2_ADCSEL);
 1125              		.loc 1 510 14
 1126 00b0 184B     		ldr	r3, .L77+20
 1127 00b2 1B68     		ldr	r3, [r3]
 1128 00b4 174A     		ldr	r2, .L77+20
 1129 00b6 23F48173 		bic	r3, r3, #258
 1130 00ba 23F00103 		bic	r3, r3, #1
 1131 00be 1360     		str	r3, [r2]
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~RCU_CFG2_IRC28MDIV;
 1132              		.loc 1 511 14
 1133 00c0 144B     		ldr	r3, .L77+20
 1134 00c2 1B68     		ldr	r3, [r3]
 1135 00c4 134A     		ldr	r2, .L77+20
 1136 00c6 23F48033 		bic	r3, r3, #65536
 1137 00ca 1360     		str	r3, [r2]
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~RCU_CFG2_ADCPSC2;
 1138              		.loc 1 512 14
 1139 00cc 114B     		ldr	r3, .L77+20
 1140 00ce 1B68     		ldr	r3, [r3]
 1141 00d0 104A     		ldr	r2, .L77+20
 1142 00d2 23F00043 		bic	r3, r3, #-2147483648
 1143 00d6 1360     		str	r3, [r2]
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_ADDCTL &= ~RCU_ADDCTL_IRC48MEN;
 1144              		.loc 1 513 16
 1145 00d8 0F4B     		ldr	r3, .L77+24
 1146 00da 1B68     		ldr	r3, [r3]
 1147 00dc 0E4A     		ldr	r2, .L77+24
 1148 00de 23F48033 		bic	r3, r3, #65536
 1149 00e2 1360     		str	r3, [r2]
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_INT = 0x00000000U;
 1150              		.loc 1 514 5
 1151 00e4 0D4B     		ldr	r3, .L77+28
 1152              		.loc 1 514 13
 1153 00e6 0022     		movs	r2, #0
 1154 00e8 1A60     		str	r2, [r3]
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_ADDINT = 0x00000000U;
 1155              		.loc 1 515 5
 1156 00ea 0D4B     		ldr	r3, .L77+32
 1157              		.loc 1 515 16
 1158 00ec 0022     		movs	r2, #0
 1159 00ee 1A60     		str	r2, [r3]
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     g_systemcoreclock = IRC8M_VALUE;
 1160              		.loc 1 517 23
 1161 00f0 0C4B     		ldr	r3, .L77+36
 1162 00f2 0D4A     		ldr	r2, .L77+40
 1163 00f4 1A60     		str	r2, [r3]
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1164              		.loc 1 518 1
 1165 00f6 00BF     		nop
 1166 00f8 0C37     		adds	r7, r7, #12
 1167              		.cfi_def_cfa_offset 4
 1168 00fa BD46     		mov	sp, r7
 1169              		.cfi_def_cfa_register 13
 1170              		@ sp needed
 1171 00fc 80BC     		pop	{r7}
 1172              		.cfi_restore 7
 1173              		.cfi_def_cfa_offset 0
 1174 00fe 7047     		bx	lr
 1175              	.L78:
 1176              		.align	2
 1177              	.L77:
 1178 0100 00100240 		.word	1073876992
 1179 0104 04100240 		.word	1073876996
 1180 0108 34100240 		.word	1073877044
 1181 010c 0C00FF08 		.word	150929420
 1182 0110 2C100240 		.word	1073877036
 1183 0114 30100240 		.word	1073877040
 1184 0118 C0100240 		.word	1073877184
 1185 011c 08100240 		.word	1073877000
 1186 0120 CC100240 		.word	1073877196
 1187 0124 00000000 		.word	g_systemcoreclock
 1188 0128 00127A00 		.word	8000000
 1189              		.cfi_endproc
 1190              	.LFE121:
 1192              		.section	.text.hal_rcu_struct_init,"ax",%progbits
 1193              		.align	1
 1194              		.global	hal_rcu_struct_init
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu softvfp
 1200              	hal_rcu_struct_init:
 1201              	.LFB122:
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      initialize the RCU structure with the default values
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  hal_struct_type: the argument could be selected from enumeration <hal_rcu_struct_ty
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  p_struct: pointer of the RCU structure
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_struct_init(hal_rcu_struct_type_enum rcu_struct_type, void *p_struct)
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1202              		.loc 1 528 1
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 8
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207 0000 80B4     		push	{r7}
 1208              		.cfi_def_cfa_offset 4
 1209              		.cfi_offset 7, -4
 1210 0002 83B0     		sub	sp, sp, #12
 1211              		.cfi_def_cfa_offset 16
 1212 0004 00AF     		add	r7, sp, #0
 1213              		.cfi_def_cfa_register 7
 1214 0006 0346     		mov	r3, r0
 1215 0008 3960     		str	r1, [r7]
 1216 000a FB71     		strb	r3, [r7, #7]
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* check the parameters */
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == p_struct) {
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("pointer [*p_struct] value is invalid");
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(rcu_struct_type) {
 1217              		.loc 1 536 5
 1218 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1219 000e 022B     		cmp	r3, #2
 1220 0010 4AD0     		beq	.L80
 1221 0012 022B     		cmp	r3, #2
 1222 0014 55DC     		bgt	.L85
 1223 0016 002B     		cmp	r3, #0
 1224 0018 02D0     		beq	.L82
 1225 001a 012B     		cmp	r3, #1
 1226 001c 13D0     		beq	.L83
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case HAL_RCU_CLK_STRUCT:
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* initialize rcu clock structure with the default values */
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->clock_type = RCU_CLKTYPE_NONE;
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->ahbclk_divider = RCU_SYSCLK_AHBDIV1;
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->apb1clk_divider = RCU_AHBCLK_APB1DIV1;
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->apb2clk_divider = RCU_AHBCLK_APB2DIV1;
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->sysclk_source = RCU_SYSCLK_SRC_IRC8M;
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->ck48mclk_source = RCU_USB_CK48MSRC_IRC48M;
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case HAL_RCU_OSCI_STRUCT:
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* initialize rcu oscillator structure with the default values */
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->hxtal.need_configure = DISABLE;
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->hxtal.state = RCU_OSC_NONE;
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->lxtal.need_configure = DISABLE;
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->lxtal.state = RCU_OSC_NONE;
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc48m.need_configure = DISABLE;
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc48m.state = RCU_OSC_NONE;
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc28m.need_configure = DISABLE;
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc28m.adjust_value = 0U;
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc28m.state = RCU_OSC_NONE;
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc8m.need_configure = DISABLE;
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc8m.adjust_value = 0U;
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc8m.state = RCU_OSC_NONE;
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc40k.need_configure = DISABLE;
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc40k.state = RCU_OSC_NONE;
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->pll.need_configure = DISABLE;
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->pll.state = RCU_OSC_NONE;
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case HAL_RCU_PERIPHCLK_STRUCT:
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* initialize rcu peripheral clock structure with the default values */
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->periph_clock_type = RCU_PERIPH_CLKTYPE_NONE;
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->adc_clock_source = RCU_ADCCK_IRC28M_DIV2;
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->rtc_clock_source = RCU_RTC_CLKSRC_NONE;
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->usart0_clock_source = RCU_USART0_CLKSRC_IRC8M;
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if defined(GD32F350)
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->cec_clock_source = RCU_CEC_CLKSRC_DIV244;
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->usbfs_clock_source = RCU_PLLCLK_USBFS_DIV1;
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* GD32F350 */
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 1227              		.loc 1 577 9
 1228 001e 50E0     		b	.L85
 1229              	.L82:
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->ahbclk_divider = RCU_SYSCLK_AHBDIV1;
 1230              		.loc 1 539 54
 1231 0020 3B68     		ldr	r3, [r7]
 1232 0022 0022     		movs	r2, #0
 1233 0024 1A60     		str	r2, [r3]
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->apb1clk_divider = RCU_AHBCLK_APB1DIV1;
 1234              		.loc 1 540 58
 1235 0026 3B68     		ldr	r3, [r7]
 1236 0028 0022     		movs	r2, #0
 1237 002a 9A71     		strb	r2, [r3, #6]
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->apb2clk_divider = RCU_AHBCLK_APB2DIV1;
 1238              		.loc 1 541 59
 1239 002c 3B68     		ldr	r3, [r7]
 1240 002e 0022     		movs	r2, #0
 1241 0030 1A81     		strh	r2, [r3, #8]	@ movhi
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->sysclk_source = RCU_SYSCLK_SRC_IRC8M;
 1242              		.loc 1 542 59
 1243 0032 3B68     		ldr	r3, [r7]
 1244 0034 0022     		movs	r2, #0
 1245 0036 5A81     		strh	r2, [r3, #10]	@ movhi
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_clk_struct *)p_struct)->ck48mclk_source = RCU_USB_CK48MSRC_IRC48M;
 1246              		.loc 1 543 57
 1247 0038 3B68     		ldr	r3, [r7]
 1248 003a 0022     		movs	r2, #0
 1249 003c 1A71     		strb	r2, [r3, #4]
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 1250              		.loc 1 544 59
 1251 003e 3B68     		ldr	r3, [r7]
 1252 0040 0122     		movs	r2, #1
 1253 0042 5A71     		strb	r2, [r3, #5]
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case HAL_RCU_OSCI_STRUCT:
 1254              		.loc 1 545 9
 1255 0044 3EE0     		b	.L84
 1256              	.L83:
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->hxtal.state = RCU_OSC_NONE;
 1257              		.loc 1 548 65
 1258 0046 3B68     		ldr	r3, [r7]
 1259 0048 0022     		movs	r2, #0
 1260 004a 1A70     		strb	r2, [r3]
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->lxtal.need_configure = DISABLE;
 1261              		.loc 1 549 56
 1262 004c 3B68     		ldr	r3, [r7]
 1263 004e 0022     		movs	r2, #0
 1264 0050 5A70     		strb	r2, [r3, #1]
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->lxtal.state = RCU_OSC_NONE;
 1265              		.loc 1 550 65
 1266 0052 3B68     		ldr	r3, [r7]
 1267 0054 0022     		movs	r2, #0
 1268 0056 9A70     		strb	r2, [r3, #2]
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc48m.need_configure = DISABLE;
 1269              		.loc 1 551 56
 1270 0058 3B68     		ldr	r3, [r7]
 1271 005a 0022     		movs	r2, #0
 1272 005c DA70     		strb	r2, [r3, #3]
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc48m.state = RCU_OSC_NONE;
 1273              		.loc 1 552 66
 1274 005e 3B68     		ldr	r3, [r7]
 1275 0060 0022     		movs	r2, #0
 1276 0062 9A72     		strb	r2, [r3, #10]
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc28m.need_configure = DISABLE;
 1277              		.loc 1 553 57
 1278 0064 3B68     		ldr	r3, [r7]
 1279 0066 0022     		movs	r2, #0
 1280 0068 DA72     		strb	r2, [r3, #11]
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc28m.adjust_value = 0U;
 1281              		.loc 1 554 66
 1282 006a 3B68     		ldr	r3, [r7]
 1283 006c 0022     		movs	r2, #0
 1284 006e DA71     		strb	r2, [r3, #7]
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc28m.state = RCU_OSC_NONE;
 1285              		.loc 1 555 64
 1286 0070 3B68     		ldr	r3, [r7]
 1287 0072 0022     		movs	r2, #0
 1288 0074 1A72     		strb	r2, [r3, #8]
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc8m.need_configure = DISABLE;
 1289              		.loc 1 556 57
 1290 0076 3B68     		ldr	r3, [r7]
 1291 0078 0022     		movs	r2, #0
 1292 007a 5A72     		strb	r2, [r3, #9]
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc8m.adjust_value = 0U;
 1293              		.loc 1 557 65
 1294 007c 3B68     		ldr	r3, [r7]
 1295 007e 0022     		movs	r2, #0
 1296 0080 1A71     		strb	r2, [r3, #4]
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc8m.state = RCU_OSC_NONE;
 1297              		.loc 1 558 63
 1298 0082 3B68     		ldr	r3, [r7]
 1299 0084 0022     		movs	r2, #0
 1300 0086 5A71     		strb	r2, [r3, #5]
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc40k.need_configure = DISABLE;
 1301              		.loc 1 559 56
 1302 0088 3B68     		ldr	r3, [r7]
 1303 008a 0022     		movs	r2, #0
 1304 008c 9A71     		strb	r2, [r3, #6]
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->irc40k.state = RCU_OSC_NONE;
 1305              		.loc 1 560 66
 1306 008e 3B68     		ldr	r3, [r7]
 1307 0090 0022     		movs	r2, #0
 1308 0092 1A73     		strb	r2, [r3, #12]
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->pll.need_configure = DISABLE;
 1309              		.loc 1 561 57
 1310 0094 3B68     		ldr	r3, [r7]
 1311 0096 0022     		movs	r2, #0
 1312 0098 5A73     		strb	r2, [r3, #13]
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_osci_struct *)p_struct)->pll.state = RCU_OSC_NONE;
 1313              		.loc 1 562 63
 1314 009a 3B68     		ldr	r3, [r7]
 1315 009c 0022     		movs	r2, #0
 1316 009e 1A74     		strb	r2, [r3, #16]
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 1317              		.loc 1 563 54
 1318 00a0 3B68     		ldr	r3, [r7]
 1319 00a2 0022     		movs	r2, #0
 1320 00a4 5A74     		strb	r2, [r3, #17]
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case HAL_RCU_PERIPHCLK_STRUCT:
 1321              		.loc 1 564 9
 1322 00a6 0DE0     		b	.L84
 1323              	.L80:
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->adc_clock_source = RCU_ADCCK_IRC28M_DIV2;
 1324              		.loc 1 567 67
 1325 00a8 3B68     		ldr	r3, [r7]
 1326 00aa 0022     		movs	r2, #0
 1327 00ac 1A60     		str	r2, [r3]
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->rtc_clock_source = RCU_RTC_CLKSRC_NONE;
 1328              		.loc 1 568 66
 1329 00ae 3B68     		ldr	r3, [r7]
 1330 00b0 0022     		movs	r2, #0
 1331 00b2 DA71     		strb	r2, [r3, #7]
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ((hal_rcu_periphclk_struct *)p_struct)->usart0_clock_source = RCU_USART0_CLKSRC_IRC8M;
 1332              		.loc 1 569 66
 1333 00b4 3B68     		ldr	r3, [r7]
 1334 00b6 0022     		movs	r2, #0
 1335 00b8 9A80     		strh	r2, [r3, #4]	@ movhi
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if defined(GD32F350)
 1336              		.loc 1 570 69
 1337 00ba 3B68     		ldr	r3, [r7]
 1338 00bc 0322     		movs	r2, #3
 1339 00be 9A71     		strb	r2, [r3, #6]
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
 1340              		.loc 1 575 9
 1341 00c0 00E0     		b	.L84
 1342              	.L85:
 1343              		.loc 1 577 9
 1344 00c2 00BF     		nop
 1345              	.L84:
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1346              		.loc 1 579 1
 1347 00c4 00BF     		nop
 1348 00c6 0C37     		adds	r7, r7, #12
 1349              		.cfi_def_cfa_offset 4
 1350 00c8 BD46     		mov	sp, r7
 1351              		.cfi_def_cfa_register 13
 1352              		@ sp needed
 1353 00ca 80BC     		pop	{r7}
 1354              		.cfi_restore 7
 1355              		.cfi_def_cfa_offset 0
 1356 00cc 7047     		bx	lr
 1357              		.cfi_endproc
 1358              	.LFE122:
 1360              		.section	.text.hal_rcu_periph_clk_enable,"ax",%progbits
 1361              		.align	1
 1362              		.global	hal_rcu_periph_clk_enable
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu softvfp
 1368              	hal_rcu_periph_clk_enable:
 1369              	.LFB123:
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      enable the peripherals clock
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  periph: RCU peripherals
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   the argument could be selected from enumeration <rcu_periph_enum>
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_periph_clk_enable(hal_rcu_periph_enum periph)
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1370              		.loc 1 589 1
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 8
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 1375 0000 80B4     		push	{r7}
 1376              		.cfi_def_cfa_offset 4
 1377              		.cfi_offset 7, -4
 1378 0002 83B0     		sub	sp, sp, #12
 1379              		.cfi_def_cfa_offset 16
 1380 0004 00AF     		add	r7, sp, #0
 1381              		.cfi_def_cfa_register 7
 1382 0006 0346     		mov	r3, r0
 1383 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(periph) |= BIT(RCU_BIT_POS(periph));
 1384              		.loc 1 590 25
 1385 000a FB88     		ldrh	r3, [r7, #6]
 1386 000c 9B09     		lsrs	r3, r3, #6
 1387 000e 9BB2     		uxth	r3, r3
 1388 0010 03F18043 		add	r3, r3, #1073741824
 1389 0014 03F50433 		add	r3, r3, #135168
 1390 0018 1968     		ldr	r1, [r3]
 1391              		.loc 1 590 28
 1392 001a FB88     		ldrh	r3, [r7, #6]
 1393 001c 03F01F03 		and	r3, r3, #31
 1394 0020 0122     		movs	r2, #1
 1395 0022 9A40     		lsls	r2, r2, r3
 1396              		.loc 1 590 25
 1397 0024 FB88     		ldrh	r3, [r7, #6]
 1398 0026 9B09     		lsrs	r3, r3, #6
 1399 0028 9BB2     		uxth	r3, r3
 1400 002a 03F18043 		add	r3, r3, #1073741824
 1401 002e 03F50433 		add	r3, r3, #135168
 1402 0032 1846     		mov	r0, r3
 1403 0034 41EA0203 		orr	r3, r1, r2
 1404 0038 0360     		str	r3, [r0]
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1405              		.loc 1 591 1
 1406 003a 00BF     		nop
 1407 003c 0C37     		adds	r7, r7, #12
 1408              		.cfi_def_cfa_offset 4
 1409 003e BD46     		mov	sp, r7
 1410              		.cfi_def_cfa_register 13
 1411              		@ sp needed
 1412 0040 80BC     		pop	{r7}
 1413              		.cfi_restore 7
 1414              		.cfi_def_cfa_offset 0
 1415 0042 7047     		bx	lr
 1416              		.cfi_endproc
 1417              	.LFE123:
 1419              		.section	.text.hal_rcu_periph_clk_disable,"ax",%progbits
 1420              		.align	1
 1421              		.global	hal_rcu_periph_clk_disable
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu softvfp
 1427              	hal_rcu_periph_clk_disable:
 1428              	.LFB124:
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      disable the peripherals clock
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  periph: RCU peripherals
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   the argument could be selected from enumeration <rcu_periph_enum>
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_periph_clk_disable(hal_rcu_periph_enum periph)
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1429              		.loc 1 601 1
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 8
 1432              		@ frame_needed = 1, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434 0000 80B4     		push	{r7}
 1435              		.cfi_def_cfa_offset 4
 1436              		.cfi_offset 7, -4
 1437 0002 83B0     		sub	sp, sp, #12
 1438              		.cfi_def_cfa_offset 16
 1439 0004 00AF     		add	r7, sp, #0
 1440              		.cfi_def_cfa_register 7
 1441 0006 0346     		mov	r3, r0
 1442 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(periph) &= ~BIT(RCU_BIT_POS(periph));
 1443              		.loc 1 602 25
 1444 000a FB88     		ldrh	r3, [r7, #6]
 1445 000c 9B09     		lsrs	r3, r3, #6
 1446 000e 9BB2     		uxth	r3, r3
 1447 0010 03F18043 		add	r3, r3, #1073741824
 1448 0014 03F50433 		add	r3, r3, #135168
 1449 0018 1968     		ldr	r1, [r3]
 1450              		.loc 1 602 29
 1451 001a FB88     		ldrh	r3, [r7, #6]
 1452 001c 03F01F03 		and	r3, r3, #31
 1453 0020 0122     		movs	r2, #1
 1454 0022 02FA03F3 		lsl	r3, r2, r3
 1455              		.loc 1 602 28
 1456 0026 DA43     		mvns	r2, r3
 1457              		.loc 1 602 25
 1458 0028 FB88     		ldrh	r3, [r7, #6]
 1459 002a 9B09     		lsrs	r3, r3, #6
 1460 002c 9BB2     		uxth	r3, r3
 1461 002e 03F18043 		add	r3, r3, #1073741824
 1462 0032 03F50433 		add	r3, r3, #135168
 1463 0036 1846     		mov	r0, r3
 1464 0038 01EA0203 		and	r3, r1, r2
 1465 003c 0360     		str	r3, [r0]
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1466              		.loc 1 603 1
 1467 003e 00BF     		nop
 1468 0040 0C37     		adds	r7, r7, #12
 1469              		.cfi_def_cfa_offset 4
 1470 0042 BD46     		mov	sp, r7
 1471              		.cfi_def_cfa_register 13
 1472              		@ sp needed
 1473 0044 80BC     		pop	{r7}
 1474              		.cfi_restore 7
 1475              		.cfi_def_cfa_offset 0
 1476 0046 7047     		bx	lr
 1477              		.cfi_endproc
 1478              	.LFE124:
 1480              		.section	.text.hal_rcu_hxtal_clock_monitor_enable,"ax",%progbits
 1481              		.align	1
 1482              		.global	hal_rcu_hxtal_clock_monitor_enable
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1486              		.fpu softvfp
 1488              	hal_rcu_hxtal_clock_monitor_enable:
 1489              	.LFB125:
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      enable the HXTAL clock monitor
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_hxtal_clock_monitor_enable(void)
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1490              		.loc 1 612 1
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
 1495 0000 80B4     		push	{r7}
 1496              		.cfi_def_cfa_offset 4
 1497              		.cfi_offset 7, -4
 1498 0002 00AF     		add	r7, sp, #0
 1499              		.cfi_def_cfa_register 7
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL0 |= RCU_CTL0_CKMEN;
 1500              		.loc 1 613 14
 1501 0004 044B     		ldr	r3, .L89
 1502 0006 1B68     		ldr	r3, [r3]
 1503 0008 034A     		ldr	r2, .L89
 1504 000a 43F40023 		orr	r3, r3, #524288
 1505 000e 1360     		str	r3, [r2]
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1506              		.loc 1 614 1
 1507 0010 00BF     		nop
 1508 0012 BD46     		mov	sp, r7
 1509              		.cfi_def_cfa_register 13
 1510              		@ sp needed
 1511 0014 80BC     		pop	{r7}
 1512              		.cfi_restore 7
 1513              		.cfi_def_cfa_offset 0
 1514 0016 7047     		bx	lr
 1515              	.L90:
 1516              		.align	2
 1517              	.L89:
 1518 0018 00100240 		.word	1073876992
 1519              		.cfi_endproc
 1520              	.LFE125:
 1522              		.section	.text.hal_rcu_hxtal_clock_monitor_disable,"ax",%progbits
 1523              		.align	1
 1524              		.global	hal_rcu_hxtal_clock_monitor_disable
 1525              		.syntax unified
 1526              		.thumb
 1527              		.thumb_func
 1528              		.fpu softvfp
 1530              	hal_rcu_hxtal_clock_monitor_disable:
 1531              	.LFB126:
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      disable the HXTAL clock monitor
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_hxtal_clock_monitor_disable(void)
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1532              		.loc 1 623 1
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 1, uses_anonymous_args = 0
 1536              		@ link register save eliminated.
 1537 0000 80B4     		push	{r7}
 1538              		.cfi_def_cfa_offset 4
 1539              		.cfi_offset 7, -4
 1540 0002 00AF     		add	r7, sp, #0
 1541              		.cfi_def_cfa_register 7
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL0 &= ~RCU_CTL0_CKMEN;
 1542              		.loc 1 624 14
 1543 0004 044B     		ldr	r3, .L92
 1544 0006 1B68     		ldr	r3, [r3]
 1545 0008 034A     		ldr	r2, .L92
 1546 000a 23F40023 		bic	r3, r3, #524288
 1547 000e 1360     		str	r3, [r2]
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1548              		.loc 1 625 1
 1549 0010 00BF     		nop
 1550 0012 BD46     		mov	sp, r7
 1551              		.cfi_def_cfa_register 13
 1552              		@ sp needed
 1553 0014 80BC     		pop	{r7}
 1554              		.cfi_restore 7
 1555              		.cfi_def_cfa_offset 0
 1556 0016 7047     		bx	lr
 1557              	.L93:
 1558              		.align	2
 1559              	.L92:
 1560 0018 00100240 		.word	1073876992
 1561              		.cfi_endproc
 1562              	.LFE126:
 1564              		.section	.text.hal_rcu_periph_reset_enable,"ax",%progbits
 1565              		.align	1
 1566              		.global	hal_rcu_periph_reset_enable
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1570              		.fpu softvfp
 1572              	hal_rcu_periph_reset_enable:
 1573              	.LFB127:
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      reset the peripherals
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  periph_reset: RCU peripherals reset, refer to rcu_periph_reset_enum
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_GPIOxRST (x=A,B,C,D,F): reset GPIO ports
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_TSIRST: reset TSI
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CFGCMPRST: reset CFGCMP
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCRST: reset ADC
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_TIMERxRST (x=0,1,2,5,13,14,15,16): reset TIMER (RCU_TIMER5 only for GD32F350)
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_SPIxRST (x=0,1): reset SPI
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USARTxRST (x=0,1): reset USART
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_WWDGTRST: reset WWDGT
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_I2CxRST (x=0,1): reset I2C
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFSRST: reset USBFS (only for GD32F350)
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PMURST: reset PMU
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_DACRST: reset DAC (only for GD32F350)
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CECRST: reset CEC (only for GD32F350)
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CTCRST: reset CTC
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_periph_reset_enable(hal_rcu_periph_reset_enum periph_reset)
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1574              		.loc 1 649 1
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 8
 1577              		@ frame_needed = 1, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
 1579 0000 80B4     		push	{r7}
 1580              		.cfi_def_cfa_offset 4
 1581              		.cfi_offset 7, -4
 1582 0002 83B0     		sub	sp, sp, #12
 1583              		.cfi_def_cfa_offset 16
 1584 0004 00AF     		add	r7, sp, #0
 1585              		.cfi_def_cfa_register 7
 1586 0006 0346     		mov	r3, r0
 1587 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(periph_reset) |= BIT(RCU_BIT_POS(periph_reset));
 1588              		.loc 1 650 31
 1589 000a FB88     		ldrh	r3, [r7, #6]
 1590 000c 9B09     		lsrs	r3, r3, #6
 1591 000e 9BB2     		uxth	r3, r3
 1592 0010 03F18043 		add	r3, r3, #1073741824
 1593 0014 03F50433 		add	r3, r3, #135168
 1594 0018 1968     		ldr	r1, [r3]
 1595              		.loc 1 650 34
 1596 001a FB88     		ldrh	r3, [r7, #6]
 1597 001c 03F01F03 		and	r3, r3, #31
 1598 0020 0122     		movs	r2, #1
 1599 0022 9A40     		lsls	r2, r2, r3
 1600              		.loc 1 650 31
 1601 0024 FB88     		ldrh	r3, [r7, #6]
 1602 0026 9B09     		lsrs	r3, r3, #6
 1603 0028 9BB2     		uxth	r3, r3
 1604 002a 03F18043 		add	r3, r3, #1073741824
 1605 002e 03F50433 		add	r3, r3, #135168
 1606 0032 1846     		mov	r0, r3
 1607 0034 41EA0203 		orr	r3, r1, r2
 1608 0038 0360     		str	r3, [r0]
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1609              		.loc 1 651 1
 1610 003a 00BF     		nop
 1611 003c 0C37     		adds	r7, r7, #12
 1612              		.cfi_def_cfa_offset 4
 1613 003e BD46     		mov	sp, r7
 1614              		.cfi_def_cfa_register 13
 1615              		@ sp needed
 1616 0040 80BC     		pop	{r7}
 1617              		.cfi_restore 7
 1618              		.cfi_def_cfa_offset 0
 1619 0042 7047     		bx	lr
 1620              		.cfi_endproc
 1621              	.LFE127:
 1623              		.section	.text.hal_rcu_periph_reset_disable,"ax",%progbits
 1624              		.align	1
 1625              		.global	hal_rcu_periph_reset_disable
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu softvfp
 1631              	hal_rcu_periph_reset_disable:
 1632              	.LFB128:
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      disable reset the peripheral
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  periph_reset: RCU peripherals reset, refer to rcu_periph_reset_enum
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_GPIOxRST (x=A,B,C,D,F): reset GPIO ports
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_TSIRST: reset TSI
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CFGCMPRST: reset CFGCMP
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCRST: reset ADC
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_TIMERxRST (x=0,1,2,5,13,14,15,16): reset TIMER (RCU_TIMER5 only for GD32F350)
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_SPIxRST (x=0,1,2): reset SPI
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USARTxRST (x=0,1): reset USART
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_WWDGTRST: reset WWDGT
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_I2CxRST (x=0,1,2): reset I2C
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFSRST: reset USBFS (only for GD32F350)
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PMURST: reset PMU
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_DACRST: reset DAC (only for GD32F350)
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CECRST: reset CEC (only for GD32F350)
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CTCRST: reset CTC
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_periph_reset_disable(hal_rcu_periph_reset_enum periph_reset)
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1633              		.loc 1 675 1
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 8
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
 1638 0000 80B4     		push	{r7}
 1639              		.cfi_def_cfa_offset 4
 1640              		.cfi_offset 7, -4
 1641 0002 83B0     		sub	sp, sp, #12
 1642              		.cfi_def_cfa_offset 16
 1643 0004 00AF     		add	r7, sp, #0
 1644              		.cfi_def_cfa_register 7
 1645 0006 0346     		mov	r3, r0
 1646 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(periph_reset) &= ~BIT(RCU_BIT_POS(periph_reset));
 1647              		.loc 1 676 31
 1648 000a FB88     		ldrh	r3, [r7, #6]
 1649 000c 9B09     		lsrs	r3, r3, #6
 1650 000e 9BB2     		uxth	r3, r3
 1651 0010 03F18043 		add	r3, r3, #1073741824
 1652 0014 03F50433 		add	r3, r3, #135168
 1653 0018 1968     		ldr	r1, [r3]
 1654              		.loc 1 676 35
 1655 001a FB88     		ldrh	r3, [r7, #6]
 1656 001c 03F01F03 		and	r3, r3, #31
 1657 0020 0122     		movs	r2, #1
 1658 0022 02FA03F3 		lsl	r3, r2, r3
 1659              		.loc 1 676 34
 1660 0026 DA43     		mvns	r2, r3
 1661              		.loc 1 676 31
 1662 0028 FB88     		ldrh	r3, [r7, #6]
 1663 002a 9B09     		lsrs	r3, r3, #6
 1664 002c 9BB2     		uxth	r3, r3
 1665 002e 03F18043 		add	r3, r3, #1073741824
 1666 0032 03F50433 		add	r3, r3, #135168
 1667 0036 1846     		mov	r0, r3
 1668 0038 01EA0203 		and	r3, r1, r2
 1669 003c 0360     		str	r3, [r0]
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1670              		.loc 1 677 1
 1671 003e 00BF     		nop
 1672 0040 0C37     		adds	r7, r7, #12
 1673              		.cfi_def_cfa_offset 4
 1674 0042 BD46     		mov	sp, r7
 1675              		.cfi_def_cfa_register 13
 1676              		@ sp needed
 1677 0044 80BC     		pop	{r7}
 1678              		.cfi_restore 7
 1679              		.cfi_def_cfa_offset 0
 1680 0046 7047     		bx	lr
 1681              		.cfi_endproc
 1682              	.LFE128:
 1684              		.section	.text.hal_rcu_periph_clock_config,"ax",%progbits
 1685              		.align	1
 1686              		.global	hal_rcu_periph_clock_config
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1690              		.fpu softvfp
 1692              	hal_rcu_periph_clock_config:
 1693              	.LFB129:
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      initialize the RCU extended peripherals(RTC, Usart0, ADC, USBFS, CEC) clocks
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  periph_clk: the pointer of peripheral clock structure
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   periph_clock_type(member):
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PERIPH_CLKTYPE_NONE: no clock type
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PERIPH_CLKTYPE_RTC: RTC clock type
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PERIPH_CLKTYPE_USART0: usart0 clock type
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PERIPH_CLKTYPE_ADC: ADC clock type
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PERIPH_CLKTYPE_USBFS: USBFS clock type
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PERIPH_CLKTYPE_CEC: USBFS clock type
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   rtc_clock_source(member):
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_RTC_CLKSRC_NONE: RTC has no clock source
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_RTC_CLKSRC_LXTAL: RTC select LXTAL as clock source
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_RTC_CLKSRC_IRC40K: RTC select IRC40K as clock source
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_RTC_CLKSRC_HXTAL_DIV32: RTC select HXTAL/32 as clock source
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   usart0_clock_source(member):
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_USART0_CLKSRC_APB2: USART0 select APB2 as clock source
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_USART0_CLKSRC_SYS: USART0 select SYSCLK as clock source
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_USART0_CLKSRC_LXTAL: USART0 select LXTAL as clock source
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_USART0_CLKSRC_IRC8M: USART0 select IRC8M as clock source
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   adc_clock_source(member):
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_IRC28M_DIV2: ADC clock source select IRC28M/2
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_IRC28M: ADC clock source select IRC28M
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_APB2_DIV2: ADC clock source select APB2/2
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_AHB_DIV3: ADC clock source select AHB/3
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_APB2_DIV4: ADC clock source select APB2/4
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_AHB_DIV5: ADC clock source select AHB/5
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_APB2_DIV6: ADC clock source select APB2/6
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_AHB_DIV7: ADC clock source select AHB/7
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_APB2_DIV8: ADC clock source select APB2/8
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_ADCCK_AHB_DIV9: ADC clock source select AHB/9
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   usbfs_clock_source(member):
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PLLCLK_USBFS_DIV1_5: USBFS clock prescaler select CK_PLL/1.5
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PLLCLK_USBFS_DIV1: USBFS clock prescaler select CK_PLL
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PLLCLK_USBFS_DIV2_5: USBFS clock prescaler select CK_PLL/2.5
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PLLCLK_USBFS_DIV2: USBFS clock prescaler select CK_PLL/2
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PLLCLK_USBFS_DIV3_5: USBFS clock prescaler select CK_PLL/3.5
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_PLLCLK_USBFS_DIV3: USBFS clock prescaler select CK_PLL/3
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   cec_clock_source(member):
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CEC_CLKSRC_DIV244: CK_CEC clock source select IRC8M/244
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CEC_CLKSRC_LXTAL: CK_CEC clock source select LXTAL
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_TIMEOUT, details re
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** int32_t hal_rcu_periph_clock_config(hal_rcu_periphclk_struct *periph_clk)
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1694              		.loc 1 730 1
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 24
 1697              		@ frame_needed = 1, uses_anonymous_args = 0
 1698 0000 80B5     		push	{r7, lr}
 1699              		.cfi_def_cfa_offset 8
 1700              		.cfi_offset 7, -8
 1701              		.cfi_offset 14, -4
 1702 0002 86B0     		sub	sp, sp, #24
 1703              		.cfi_def_cfa_offset 32
 1704 0004 00AF     		add	r7, sp, #0
 1705              		.cfi_def_cfa_register 7
 1706 0006 7860     		str	r0, [r7, #4]
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t backup_reg = 0U;
 1707              		.loc 1 731 14
 1708 0008 0023     		movs	r3, #0
 1709 000a 3B61     		str	r3, [r7, #16]
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     FlagStatus pwr_state = RESET;
 1710              		.loc 1 732 16
 1711 000c 0023     		movs	r3, #0
 1712 000e FB75     		strb	r3, [r7, #23]
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == periph_clk) {
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [periph_clk] is a NULL pointer.");
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return HAL_ERR_ADDRESS;
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(periph_clk->periph_clock_type > RCU_PERIPH_CLKTYPE_MAX) {
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter member [periph_clk->periph_clock_type] is invalid.");
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return HAL_ERR_VAL;
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure RTC clock */
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_PERIPH_CLKTYPE_RTC == (periph_clk->periph_clock_type & RCU_PERIPH_CLKTYPE_RTC)) {
 1713              		.loc 1 751 45
 1714 0010 7B68     		ldr	r3, [r7, #4]
 1715 0012 1B68     		ldr	r3, [r3]
 1716              		.loc 1 751 65
 1717 0014 03F00103 		and	r3, r3, #1
 1718              		.loc 1 751 7
 1719 0018 002B     		cmp	r3, #0
 1720 001a 61D0     		beq	.L97
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* need to enable pmu clock */
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET == (RCU_APB1EN & RCU_APB1EN_PMUEN)) {
 1721              		.loc 1 753 22
 1722 001c 3E4B     		ldr	r3, .L106
 1723 001e 1B68     		ldr	r3, [r3]
 1724              		.loc 1 753 33
 1725 0020 03F08053 		and	r3, r3, #268435456
 1726              		.loc 1 753 11
 1727 0024 002B     		cmp	r3, #0
 1728 0026 05D1     		bne	.L98
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hal_rcu_periph_clk_enable(RCU_PMU);
 1729              		.loc 1 754 13
 1730 0028 40F21C70 		movw	r0, #1820
 1731 002c FFF7FEFF 		bl	hal_rcu_periph_clk_enable
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pwr_state = SET;
 1732              		.loc 1 756 23
 1733 0030 0123     		movs	r3, #1
 1734 0032 FB75     		strb	r3, [r7, #23]
 1735              	.L98:
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* RTC clock need to activate backup domain */
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET == (PMU_CTL & PMU_CTL_BKPWEN)) {
 1736              		.loc 1 760 22
 1737 0034 394B     		ldr	r3, .L106+4
 1738 0036 1B68     		ldr	r3, [r3]
 1739              		.loc 1 760 30
 1740 0038 03F48073 		and	r3, r3, #256
 1741              		.loc 1 760 11
 1742 003c 002B     		cmp	r3, #0
 1743 003e 17D1     		bne	.L99
 1744              	.LBB11:
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             uint32_t tick_start = 0U;
 1745              		.loc 1 761 22
 1746 0040 0023     		movs	r3, #0
 1747 0042 FB60     		str	r3, [r7, #12]
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_pmu_backup_write_enable();
 1748              		.loc 1 763 13
 1749 0044 FFF7FEFF 		bl	hals_pmu_backup_write_enable
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             tick_start = hal_sys_basetick_count_get();
 1750              		.loc 1 765 26
 1751 0048 FFF7FEFF 		bl	hal_sys_basetick_count_get
 1752 004c F860     		str	r0, [r7, #12]
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             while(RESET == (PMU_CTL & PMU_CTL_BKPWEN)) {
 1753              		.loc 1 767 18
 1754 004e 09E0     		b	.L100
 1755              	.L102:
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 1756              		.loc 1 768 27
 1757 0050 6421     		movs	r1, #100
 1758 0052 F868     		ldr	r0, [r7, #12]
 1759 0054 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1760 0058 0346     		mov	r3, r0
 1761              		.loc 1 768 19
 1762 005a 012B     		cmp	r3, #1
 1763 005c 02D1     		bne	.L100
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 1764              		.loc 1 769 28
 1765 005e 6FF00403 		mvn	r3, #4
 1766 0062 54E0     		b	.L101
 1767              	.L100:
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 1768              		.loc 1 767 29
 1769 0064 2D4B     		ldr	r3, .L106+4
 1770 0066 1B68     		ldr	r3, [r3]
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 1771              		.loc 1 767 37
 1772 0068 03F48073 		and	r3, r3, #256
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, HAL_BP_TIMEOUT)) {
 1773              		.loc 1 767 18
 1774 006c 002B     		cmp	r3, #0
 1775 006e EFD0     		beq	.L102
 1776              	.L99:
 1777              	.LBE11:
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check if the RTC clock source is modified */
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         backup_reg = RCU_BDCTL & RCU_BDCTL_RTCSRC;
 1778              		.loc 1 775 22
 1779 0070 2B4B     		ldr	r3, .L106+8
 1780 0072 1B68     		ldr	r3, [r3]
 1781              		.loc 1 775 20
 1782 0074 03F44073 		and	r3, r3, #768
 1783 0078 3B61     		str	r3, [r7, #16]
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((0x00000000U != backup_reg) && \
 1784              		.loc 1 777 11
 1785 007a 3B69     		ldr	r3, [r7, #16]
 1786 007c 002B     		cmp	r3, #0
 1787 007e 21D0     		beq	.L103
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 (backup_reg != (periph_clk->rtc_clock_source & RCU_BDCTL_RTCSRC))) {
 1788              		.loc 1 778 43 discriminator 1
 1789 0080 7B68     		ldr	r3, [r7, #4]
 1790 0082 9B88     		ldrh	r3, [r3, #4]
 1791              		.loc 1 778 62 discriminator 1
 1792 0084 03F44073 		and	r3, r3, #768
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 (backup_reg != (periph_clk->rtc_clock_source & RCU_BDCTL_RTCSRC))) {
 1793              		.loc 1 777 40 discriminator 1
 1794 0088 3A69     		ldr	r2, [r7, #16]
 1795 008a 9A42     		cmp	r2, r3
 1796 008c 1AD0     		beq	.L103
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* store the BDCTL register value before resetting the backup domain */
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             backup_reg = RCU_BDCTL & ~RCU_BDCTL_RTCSRC;
 1797              		.loc 1 780 26
 1798 008e 244B     		ldr	r3, .L106+8
 1799 0090 1B68     		ldr	r3, [r3]
 1800              		.loc 1 780 24
 1801 0092 23F44073 		bic	r3, r3, #768
 1802 0096 3B61     		str	r3, [r7, #16]
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* reset the backup domain */
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_bkp_reset_enable();
 1803              		.loc 1 783 13
 1804 0098 FFF7FEFF 		bl	hals_rcu_bkp_reset_enable
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hals_rcu_bkp_reset_disable();
 1805              		.loc 1 784 13
 1806 009c FFF7FEFF 		bl	hals_rcu_bkp_reset_disable
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             RCU_BDCTL = backup_reg;
 1807              		.loc 1 786 13
 1808 00a0 1F4A     		ldr	r2, .L106+8
 1809              		.loc 1 786 23
 1810 00a2 3B69     		ldr	r3, [r7, #16]
 1811 00a4 1360     		str	r3, [r2]
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(RESET != (backup_reg & RCU_BDCTL_LXTALEN)) {
 1812              		.loc 1 788 37
 1813 00a6 3B69     		ldr	r3, [r7, #16]
 1814 00a8 03F00103 		and	r3, r3, #1
 1815              		.loc 1 788 15
 1816 00ac 002B     		cmp	r3, #0
 1817 00ae 09D0     		beq	.L103
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(ERROR == hals_rcu_osci_stab_wait(RCU_LXTAL)) {
 1818              		.loc 1 789 29
 1819 00b0 4FF40060 		mov	r0, #2048
 1820 00b4 FFF7FEFF 		bl	hals_rcu_osci_stab_wait
 1821 00b8 0346     		mov	r3, r0
 1822              		.loc 1 789 19
 1823 00ba 002B     		cmp	r3, #0
 1824 00bc 02D1     		bne	.L103
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     return HAL_ERR_TIMEOUT;
 1825              		.loc 1 790 28
 1826 00be 6FF00403 		mvn	r3, #4
 1827 00c2 24E0     		b	.L101
 1828              	.L103:
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* configure the RTC clock source */
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_rtc_clock_config(periph_clk->rtc_clock_source);
 1829              		.loc 1 796 45
 1830 00c4 7B68     		ldr	r3, [r7, #4]
 1831 00c6 9B88     		ldrh	r3, [r3, #4]
 1832              		.loc 1 796 9
 1833 00c8 1846     		mov	r0, r3
 1834 00ca FFF7FEFF 		bl	hals_rcu_rtc_clock_config
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(SET == pwr_state) {
 1835              		.loc 1 798 11
 1836 00ce FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1837 00d0 012B     		cmp	r3, #1
 1838 00d2 05D1     		bne	.L97
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             hal_rcu_periph_clk_disable(RCU_PMU);
 1839              		.loc 1 799 13
 1840 00d4 40F21C70 		movw	r0, #1820
 1841 00d8 FFF7FEFF 		bl	hal_rcu_periph_clk_disable
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pwr_state = RESET;
 1842              		.loc 1 801 23
 1843 00dc 0023     		movs	r3, #0
 1844 00de FB75     		strb	r3, [r7, #23]
 1845              	.L97:
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure the USART0 clock source */
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_PERIPH_CLKTYPE_USART0 == (periph_clk->periph_clock_type & RCU_PERIPH_CLKTYPE_USART0)) {
 1846              		.loc 1 806 48
 1847 00e0 7B68     		ldr	r3, [r7, #4]
 1848 00e2 1B68     		ldr	r3, [r3]
 1849              		.loc 1 806 68
 1850 00e4 03F00203 		and	r3, r3, #2
 1851              		.loc 1 806 7
 1852 00e8 002B     		cmp	r3, #0
 1853 00ea 04D0     		beq	.L104
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_usart_clock_config(periph_clk->usart0_clock_source);
 1854              		.loc 1 807 47
 1855 00ec 7B68     		ldr	r3, [r7, #4]
 1856 00ee 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1857              		.loc 1 807 9
 1858 00f0 1846     		mov	r0, r3
 1859 00f2 FFF7FEFF 		bl	hals_rcu_usart_clock_config
 1860              	.L104:
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure the ADC clock source */
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_PERIPH_CLKTYPE_ADC == (periph_clk->periph_clock_type & RCU_PERIPH_CLKTYPE_ADC)) {
 1861              		.loc 1 811 45
 1862 00f6 7B68     		ldr	r3, [r7, #4]
 1863 00f8 1B68     		ldr	r3, [r3]
 1864              		.loc 1 811 65
 1865 00fa 03F00403 		and	r3, r3, #4
 1866              		.loc 1 811 7
 1867 00fe 002B     		cmp	r3, #0
 1868 0100 04D0     		beq	.L105
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_adc_clock_config(periph_clk->adc_clock_source);
 1869              		.loc 1 812 9
 1870 0102 7B68     		ldr	r3, [r7, #4]
 1871 0104 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1872 0106 1846     		mov	r0, r3
 1873 0108 FFF7FEFF 		bl	hals_rcu_adc_clock_config
 1874              	.L105:
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if defined(GD32F350)
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure the CEC clock source */
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_PERIPH_CLKTYPE_CEC == (periph_clk->periph_clock_type & RCU_PERIPH_CLKTYPE_CEC)) {
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_cec_clock_config(periph_clk->cec_clock_source);
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure the USBFS clock source */
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_PERIPH_CLKTYPE_USBFS == (periph_clk->periph_clock_type & RCU_PERIPH_CLKTYPE_USBFS)) {
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_usbfs_clock_config(periph_clk->usbfs_clock_source);
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* GD32F350 */
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return HAL_ERR_NONE;
 1875              		.loc 1 827 12
 1876 010c 0023     		movs	r3, #0
 1877              	.L101:
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 1878              		.loc 1 828 1
 1879 010e 1846     		mov	r0, r3
 1880 0110 1837     		adds	r7, r7, #24
 1881              		.cfi_def_cfa_offset 8
 1882 0112 BD46     		mov	sp, r7
 1883              		.cfi_def_cfa_register 13
 1884              		@ sp needed
 1885 0114 80BD     		pop	{r7, pc}
 1886              	.L107:
 1887 0116 00BF     		.align	2
 1888              	.L106:
 1889 0118 1C100240 		.word	1073877020
 1890 011c 00700040 		.word	1073770496
 1891 0120 20100240 		.word	1073877024
 1892              		.cfi_endproc
 1893              	.LFE129:
 1895              		.section	.text.hal_rcu_periph_clkfreq_get,"ax",%progbits
 1896              		.align	1
 1897              		.global	hal_rcu_periph_clkfreq_get
 1898              		.syntax unified
 1899              		.thumb
 1900              		.thumb_func
 1901              		.fpu softvfp
 1903              	hal_rcu_periph_clkfreq_get:
 1904              	.LFB130:
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the peripherals clock frequency
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  periph_clk:
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_NONE: no clock type
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_RTC: RTC clock type
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_USART0: usart0 clock type
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_ADC: ADC clock type
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_APB1TIMER: APB1 timer clock type
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_APB2TIMER: APB2 timer clock type
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PERIPH_CLKTYPE_CEC: CEC clock type
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     peripheral clock frequency
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** uint32_t hal_rcu_periph_clkfreq_get(uint32_t periph_clk)
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 1905              		.loc 1 845 1
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 16
 1908              		@ frame_needed = 1, uses_anonymous_args = 0
 1909 0000 80B5     		push	{r7, lr}
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 7, -8
 1912              		.cfi_offset 14, -4
 1913 0002 84B0     		sub	sp, sp, #16
 1914              		.cfi_def_cfa_offset 24
 1915 0004 00AF     		add	r7, sp, #0
 1916              		.cfi_def_cfa_register 7
 1917 0006 7860     		str	r0, [r7, #4]
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t periph_freq = 0U;
 1918              		.loc 1 846 14
 1919 0008 0023     		movs	r3, #0
 1920 000a FB60     		str	r3, [r7, #12]
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t src_clk = 0U;
 1921              		.loc 1 847 14
 1922 000c 0023     		movs	r3, #0
 1923 000e BB60     		str	r3, [r7, #8]
 1924 0010 7B68     		ldr	r3, [r7, #4]
 1925 0012 013B     		subs	r3, r3, #1
 1926 0014 0F2B     		cmp	r3, #15
 1927 0016 00F28580 		bhi	.L126
 1928 001a 01A2     		adr	r2, .L111
 1929 001c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1930              		.p2align 2
 1931              	.L111:
 1932 0020 61000000 		.word	.L115+1
 1933 0024 C9000000 		.word	.L114+1
 1934 0028 25010000 		.word	.L126+1
 1935 002c D3000000 		.word	.L113+1
 1936 0030 25010000 		.word	.L126+1
 1937 0034 25010000 		.word	.L126+1
 1938 0038 25010000 		.word	.L126+1
 1939 003c DD000000 		.word	.L112+1
 1940 0040 25010000 		.word	.L126+1
 1941 0044 25010000 		.word	.L126+1
 1942 0048 25010000 		.word	.L126+1
 1943 004c 25010000 		.word	.L126+1
 1944 0050 25010000 		.word	.L126+1
 1945 0054 25010000 		.word	.L126+1
 1946 0058 25010000 		.word	.L126+1
 1947 005c 01010000 		.word	.L110+1
 1948              		.p2align 1
 1949              	.L115:
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(periph_clk >= RCU_PERIPH_CLKTYPE_MAX) {
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [periph_clk] is invalid.");
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return 0U;
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(periph_clk) {
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PERIPH_CLKTYPE_RTC:
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the current RTC clock source */
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         src_clk = RCU_BDCTL & RCU_BDCTL_RTCSRC;
 1950              		.loc 1 862 19
 1951 0060 334B     		ldr	r3, .L127
 1952 0062 1B68     		ldr	r3, [r3]
 1953              		.loc 1 862 17
 1954 0064 03F44073 		and	r3, r3, #768
 1955 0068 BB60     		str	r3, [r7, #8]
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((RCU_RTCSRC_LXTAL == src_clk) && (SET == hals_rcu_flag_get(RCU_FLAG_LXTALSTB))) {
 1956              		.loc 1 864 11
 1957 006a BB68     		ldr	r3, [r7, #8]
 1958 006c B3F5807F 		cmp	r3, #256
 1959 0070 0AD1     		bne	.L116
 1960              		.loc 1 864 53 discriminator 1
 1961 0072 40F60100 		movw	r0, #2049
 1962 0076 FFF7FEFF 		bl	hals_rcu_flag_get
 1963 007a 0346     		mov	r3, r0
 1964              		.loc 1 864 42 discriminator 1
 1965 007c 012B     		cmp	r3, #1
 1966 007e 03D1     		bne	.L116
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = LXTAL_VALUE;
 1967              		.loc 1 865 25
 1968 0080 4FF40043 		mov	r3, #32768
 1969 0084 FB60     		str	r3, [r7, #12]
 1970 0086 1EE0     		b	.L117
 1971              	.L116:
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else if((RCU_RTCSRC_IRC40K == src_clk) && (SET == hals_rcu_flag_get(RCU_FLAG_IRC40KSTB)))
 1972              		.loc 1 866 18
 1973 0088 BB68     		ldr	r3, [r7, #8]
 1974 008a B3F5007F 		cmp	r3, #512
 1975 008e 0AD1     		bne	.L118
 1976              		.loc 1 866 61 discriminator 1
 1977 0090 40F60110 		movw	r0, #2305
 1978 0094 FFF7FEFF 		bl	hals_rcu_flag_get
 1979 0098 0346     		mov	r3, r0
 1980              		.loc 1 866 50 discriminator 1
 1981 009a 012B     		cmp	r3, #1
 1982 009c 03D1     		bne	.L118
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = IRC40K_VALUE;
 1983              		.loc 1 867 25
 1984 009e 49F64043 		movw	r3, #40000
 1985 00a2 FB60     		str	r3, [r7, #12]
 1986 00a4 0FE0     		b	.L117
 1987              	.L118:
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else if((RCU_RTCSRC_HXTAL_DIV32 == src_clk) && (SET == hals_rcu_flag_get(RCU_FLAG_HXTALST
 1988              		.loc 1 868 18
 1989 00a6 BB68     		ldr	r3, [r7, #8]
 1990 00a8 B3F5407F 		cmp	r3, #768
 1991 00ac 08D1     		bne	.L119
 1992              		.loc 1 868 66 discriminator 1
 1993 00ae 1120     		movs	r0, #17
 1994 00b0 FFF7FEFF 		bl	hals_rcu_flag_get
 1995 00b4 0346     		mov	r3, r0
 1996              		.loc 1 868 55 discriminator 1
 1997 00b6 012B     		cmp	r3, #1
 1998 00b8 02D1     		bne	.L119
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = HXTAL_VALUE / 32U;
 1999              		.loc 1 869 25
 2000 00ba 1E4B     		ldr	r3, .L127+4
 2001 00bc FB60     		str	r3, [r7, #12]
 2002 00be 02E0     		b	.L117
 2003              	.L119:
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = 0U;
 2004              		.loc 1 871 25
 2005 00c0 0023     		movs	r3, #0
 2006 00c2 FB60     		str	r3, [r7, #12]
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2007              		.loc 1 873 9
 2008 00c4 2FE0     		b	.L120
 2009              	.L117:
 2010 00c6 2EE0     		b	.L120
 2011              	.L114:
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PERIPH_CLKTYPE_USART0:
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the current USART0 clock source */
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         periph_freq = hals_rcu_clock_freq_get(CK_USART);
 2012              		.loc 1 876 23
 2013 00c8 0620     		movs	r0, #6
 2014 00ca FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2015 00ce F860     		str	r0, [r7, #12]
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2016              		.loc 1 877 9
 2017 00d0 29E0     		b	.L120
 2018              	.L113:
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PERIPH_CLKTYPE_ADC:
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the current ADC clock source */
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         periph_freq = hals_rcu_clock_freq_get(CK_ADC);
 2019              		.loc 1 880 23
 2020 00d2 0420     		movs	r0, #4
 2021 00d4 FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2022 00d8 F860     		str	r0, [r7, #12]
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2023              		.loc 1 881 9
 2024 00da 24E0     		b	.L120
 2025              	.L112:
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if defined(GD32F350)
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PERIPH_CLKTYPE_CEC:
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the current CEC clock source */
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         periph_freq = hals_rcu_clock_freq_get(CK_CEC);
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* GD32F350 */
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PERIPH_CLKTYPE_APB1TIMER:
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the current APB1 TIMER clock source */
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_APB1_CKAHB_DIV1 == (RCU_CFG0 & RCU_CFG0_APB1PSC)) {
 2026              		.loc 1 890 36
 2027 00dc 164B     		ldr	r3, .L127+8
 2028 00de 1B68     		ldr	r3, [r3]
 2029              		.loc 1 890 45
 2030 00e0 03F4E063 		and	r3, r3, #1792
 2031              		.loc 1 890 11
 2032 00e4 002B     		cmp	r3, #0
 2033 00e6 04D1     		bne	.L121
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = hals_rcu_clock_freq_get(CK_APB1);
 2034              		.loc 1 891 27
 2035 00e8 0220     		movs	r0, #2
 2036 00ea FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2037 00ee F860     		str	r0, [r7, #12]
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = hals_rcu_clock_freq_get(CK_APB1) * 2;
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2038              		.loc 1 895 9
 2039 00f0 19E0     		b	.L120
 2040              	.L121:
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 2041              		.loc 1 893 27
 2042 00f2 0220     		movs	r0, #2
 2043 00f4 FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2044 00f8 0346     		mov	r3, r0
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 2045              		.loc 1 893 25
 2046 00fa 5B00     		lsls	r3, r3, #1
 2047 00fc FB60     		str	r3, [r7, #12]
 2048              		.loc 1 895 9
 2049 00fe 12E0     		b	.L120
 2050              	.L110:
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PERIPH_CLKTYPE_APB2TIMER:
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the current APB2 TIMER clock source */
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_APB2_CKAHB_DIV1 == (RCU_CFG0 & RCU_CFG0_APB2PSC)) {
 2051              		.loc 1 898 36
 2052 0100 0D4B     		ldr	r3, .L127+8
 2053 0102 1B68     		ldr	r3, [r3]
 2054              		.loc 1 898 45
 2055 0104 03F46053 		and	r3, r3, #14336
 2056              		.loc 1 898 11
 2057 0108 002B     		cmp	r3, #0
 2058 010a 04D1     		bne	.L123
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = hals_rcu_clock_freq_get(CK_APB2);
 2059              		.loc 1 899 27
 2060 010c 0320     		movs	r0, #3
 2061 010e FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2062 0112 F860     		str	r0, [r7, #12]
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             periph_freq = hals_rcu_clock_freq_get(CK_APB2) * 2;
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2063              		.loc 1 903 9
 2064 0114 07E0     		b	.L120
 2065              	.L123:
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 2066              		.loc 1 901 27
 2067 0116 0320     		movs	r0, #3
 2068 0118 FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2069 011c 0346     		mov	r3, r0
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 2070              		.loc 1 901 25
 2071 011e 5B00     		lsls	r3, r3, #1
 2072 0120 FB60     		str	r3, [r7, #12]
 2073              		.loc 1 903 9
 2074 0122 00E0     		b	.L120
 2075              	.L126:
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2076              		.loc 1 905 9
 2077 0124 00BF     		nop
 2078              	.L120:
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return periph_freq;
 2079              		.loc 1 908 12
 2080 0126 FB68     		ldr	r3, [r7, #12]
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 2081              		.loc 1 909 1
 2082 0128 1846     		mov	r0, r3
 2083 012a 1037     		adds	r7, r7, #16
 2084              		.cfi_def_cfa_offset 8
 2085 012c BD46     		mov	sp, r7
 2086              		.cfi_def_cfa_register 13
 2087              		@ sp needed
 2088 012e 80BD     		pop	{r7, pc}
 2089              	.L128:
 2090              		.align	2
 2091              	.L127:
 2092 0130 20100240 		.word	1073877024
 2093 0134 90D00300 		.word	250000
 2094 0138 04100240 		.word	1073876996
 2095              		.cfi_endproc
 2096              	.LFE130:
 2098              		.section	.text.hal_rcu_osci_config_get,"ax",%progbits
 2099              		.align	1
 2100              		.global	hal_rcu_osci_config_get
 2101              		.syntax unified
 2102              		.thumb
 2103              		.thumb_func
 2104              		.fpu softvfp
 2106              	hal_rcu_osci_config_get:
 2107              	.LFB131:
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the RCU oscillators configuration
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  rcu_osci: the pointer of the RCU oscillators structure
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   hxtal: HXTAL status structure
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   lxtal: LXTAL status structure
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc28m: IRC28M status structure
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     calibration_value: calibration value
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc8m: IRC8M status structure
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     calibration_value: calibration value
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   irc40k: IRC40K status structure
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   pll: PLL status structure
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     need_cofigure: configure flag, can be ENABLE or DISABLE
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     status: the argument could be selected from enumeration <hal_rcu_osc_state_enum
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pll_source: RCU_PLL_SRC_HXTAL, RCU_PLL_SRC_IRC8M_DIV2
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pre_div: the argument could be selected from enumeration <hal_rcu_pll_prediv_en
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     pll_mul: the argument could be selected from enumeration <hal_rcu_pll_mul_enum>
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_osci_config_get(hal_rcu_osci_struct *rcu_osci)
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 2108              		.loc 1 941 1
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 8
 2111              		@ frame_needed = 1, uses_anonymous_args = 0
 2112              		@ link register save eliminated.
 2113 0000 80B4     		push	{r7}
 2114              		.cfi_def_cfa_offset 4
 2115              		.cfi_offset 7, -4
 2116 0002 83B0     		sub	sp, sp, #12
 2117              		.cfi_def_cfa_offset 16
 2118 0004 00AF     		add	r7, sp, #0
 2119              		.cfi_def_cfa_register 7
 2120 0006 7860     		str	r0, [r7, #4]
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == rcu_osci) {
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [rcu_osci] is a NULL pointer.");
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return;
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure all the oscillator type */
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->hxtal.need_configure = ENABLE;
 2121              		.loc 1 953 36
 2122 0008 7B68     		ldr	r3, [r7, #4]
 2123 000a 0122     		movs	r2, #1
 2124 000c 1A70     		strb	r2, [r3]
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->lxtal.need_configure = ENABLE;
 2125              		.loc 1 954 36
 2126 000e 7B68     		ldr	r3, [r7, #4]
 2127 0010 0122     		movs	r2, #1
 2128 0012 9A70     		strb	r2, [r3, #2]
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->irc8m.need_configure = ENABLE;
 2129              		.loc 1 955 36
 2130 0014 7B68     		ldr	r3, [r7, #4]
 2131 0016 0122     		movs	r2, #1
 2132 0018 1A71     		strb	r2, [r3, #4]
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->irc28m.need_configure = ENABLE;
 2133              		.loc 1 956 37
 2134 001a 7B68     		ldr	r3, [r7, #4]
 2135 001c 0122     		movs	r2, #1
 2136 001e DA71     		strb	r2, [r3, #7]
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->irc48m.need_configure = ENABLE;
 2137              		.loc 1 957 37
 2138 0020 7B68     		ldr	r3, [r7, #4]
 2139 0022 0122     		movs	r2, #1
 2140 0024 9A72     		strb	r2, [r3, #10]
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->irc40k.need_configure = ENABLE;
 2141              		.loc 1 958 37
 2142 0026 7B68     		ldr	r3, [r7, #4]
 2143 0028 0122     		movs	r2, #1
 2144 002a 1A73     		strb	r2, [r3, #12]
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->pll.need_configure = ENABLE;
 2145              		.loc 1 959 34
 2146 002c 7B68     		ldr	r3, [r7, #4]
 2147 002e 0122     		movs	r2, #1
 2148 0030 1A74     		strb	r2, [r3, #16]
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current HXTAL state */
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_CTL0 & RCU_CTL0_HXTALBPS)) {
 2149              		.loc 1 962 18
 2150 0032 514B     		ldr	r3, .L147
 2151 0034 1B68     		ldr	r3, [r3]
 2152              		.loc 1 962 27
 2153 0036 03F48023 		and	r3, r3, #262144
 2154              		.loc 1 962 7
 2155 003a 002B     		cmp	r3, #0
 2156 003c 03D0     		beq	.L130
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->hxtal.state = RCU_OSC_BYPASS;
 2157              		.loc 1 963 31
 2158 003e 7B68     		ldr	r3, [r7, #4]
 2159 0040 0322     		movs	r2, #3
 2160 0042 5A70     		strb	r2, [r3, #1]
 2161 0044 0CE0     		b	.L131
 2162              	.L130:
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else if(RESET != (RCU_CTL0 & RCU_CTL0_HXTALEN)) {
 2163              		.loc 1 964 25
 2164 0046 4C4B     		ldr	r3, .L147
 2165 0048 1B68     		ldr	r3, [r3]
 2166              		.loc 1 964 34
 2167 004a 03F48033 		and	r3, r3, #65536
 2168              		.loc 1 964 14
 2169 004e 002B     		cmp	r3, #0
 2170 0050 03D0     		beq	.L132
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->hxtal.state = RCU_OSC_ON;
 2171              		.loc 1 965 31
 2172 0052 7B68     		ldr	r3, [r7, #4]
 2173 0054 0222     		movs	r2, #2
 2174 0056 5A70     		strb	r2, [r3, #1]
 2175 0058 02E0     		b	.L131
 2176              	.L132:
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->hxtal.state = RCU_OSC_OFF;
 2177              		.loc 1 967 31
 2178 005a 7B68     		ldr	r3, [r7, #4]
 2179 005c 0122     		movs	r2, #1
 2180 005e 5A70     		strb	r2, [r3, #1]
 2181              	.L131:
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current LXTAL state */
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_BDCTL & RCU_BDCTL_LXTALBPS)) {
 2182              		.loc 1 971 18
 2183 0060 464B     		ldr	r3, .L147+4
 2184 0062 1B68     		ldr	r3, [r3]
 2185              		.loc 1 971 28
 2186 0064 03F00403 		and	r3, r3, #4
 2187              		.loc 1 971 7
 2188 0068 002B     		cmp	r3, #0
 2189 006a 03D0     		beq	.L133
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->lxtal.state = RCU_OSC_BYPASS;
 2190              		.loc 1 972 31
 2191 006c 7B68     		ldr	r3, [r7, #4]
 2192 006e 0322     		movs	r2, #3
 2193 0070 DA70     		strb	r2, [r3, #3]
 2194 0072 0CE0     		b	.L134
 2195              	.L133:
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else if(RESET != (RCU_BDCTL & RCU_BDCTL_LXTALEN)) {
 2196              		.loc 1 973 25
 2197 0074 414B     		ldr	r3, .L147+4
 2198 0076 1B68     		ldr	r3, [r3]
 2199              		.loc 1 973 35
 2200 0078 03F00103 		and	r3, r3, #1
 2201              		.loc 1 973 14
 2202 007c 002B     		cmp	r3, #0
 2203 007e 03D0     		beq	.L135
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->lxtal.state = RCU_OSC_ON;
 2204              		.loc 1 974 31
 2205 0080 7B68     		ldr	r3, [r7, #4]
 2206 0082 0222     		movs	r2, #2
 2207 0084 DA70     		strb	r2, [r3, #3]
 2208 0086 02E0     		b	.L134
 2209              	.L135:
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->lxtal.state = RCU_OSC_OFF;
 2210              		.loc 1 976 31
 2211 0088 7B68     		ldr	r3, [r7, #4]
 2212 008a 0122     		movs	r2, #1
 2213 008c DA70     		strb	r2, [r3, #3]
 2214              	.L134:
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current IRC8M state and adjust value */
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_CTL0 & RCU_CTL0_IRC8MEN)) {
 2215              		.loc 1 980 18
 2216 008e 3A4B     		ldr	r3, .L147
 2217 0090 1B68     		ldr	r3, [r3]
 2218              		.loc 1 980 27
 2219 0092 03F00103 		and	r3, r3, #1
 2220              		.loc 1 980 7
 2221 0096 002B     		cmp	r3, #0
 2222 0098 03D0     		beq	.L136
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc8m.state = RCU_OSC_ON;
 2223              		.loc 1 981 31
 2224 009a 7B68     		ldr	r3, [r7, #4]
 2225 009c 0222     		movs	r2, #2
 2226 009e 9A71     		strb	r2, [r3, #6]
 2227 00a0 02E0     		b	.L137
 2228              	.L136:
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc8m.state = RCU_OSC_OFF;
 2229              		.loc 1 983 31
 2230 00a2 7B68     		ldr	r3, [r7, #4]
 2231 00a4 0122     		movs	r2, #1
 2232 00a6 9A71     		strb	r2, [r3, #6]
 2233              	.L137:
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->irc8m.adjust_value = (uint8_t)((RCU_CTL0 & RCU_CTL0_IRC8MCALIB) >> 8);
 2234              		.loc 1 986 47
 2235 00a8 334B     		ldr	r3, .L147
 2236 00aa 1B68     		ldr	r3, [r3]
 2237              		.loc 1 986 79
 2238 00ac 1B0A     		lsrs	r3, r3, #8
 2239              		.loc 1 986 36
 2240 00ae DAB2     		uxtb	r2, r3
 2241              		.loc 1 986 34
 2242 00b0 7B68     		ldr	r3, [r7, #4]
 2243 00b2 5A71     		strb	r2, [r3, #5]
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current IRC28M state and adjust value */
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET == (RCU_CFG2 & RCU_CFG2_ADCSEL)) {
 2244              		.loc 1 989 18
 2245 00b4 324B     		ldr	r3, .L147+8
 2246 00b6 1B68     		ldr	r3, [r3]
 2247              		.loc 1 989 27
 2248 00b8 03F48073 		and	r3, r3, #256
 2249              		.loc 1 989 7
 2250 00bc 002B     		cmp	r3, #0
 2251 00be 03D1     		bne	.L138
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc28m.state = RCU_OSC_ADCCTL;
 2252              		.loc 1 990 32
 2253 00c0 7B68     		ldr	r3, [r7, #4]
 2254 00c2 0422     		movs	r2, #4
 2255 00c4 5A72     		strb	r2, [r3, #9]
 2256 00c6 0CE0     		b	.L139
 2257              	.L138:
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != (RCU_CTL1 & RCU_CTL1_IRC28MEN)) {
 2258              		.loc 1 992 22
 2259 00c8 2E4B     		ldr	r3, .L147+12
 2260 00ca 1B68     		ldr	r3, [r3]
 2261              		.loc 1 992 31
 2262 00cc 03F00103 		and	r3, r3, #1
 2263              		.loc 1 992 11
 2264 00d0 002B     		cmp	r3, #0
 2265 00d2 03D0     		beq	.L140
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_osci->irc28m.state = RCU_OSC_ON;
 2266              		.loc 1 993 36
 2267 00d4 7B68     		ldr	r3, [r7, #4]
 2268 00d6 0222     		movs	r2, #2
 2269 00d8 5A72     		strb	r2, [r3, #9]
 2270 00da 02E0     		b	.L139
 2271              	.L140:
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_osci->irc28m.state = RCU_OSC_OFF;
 2272              		.loc 1 995 36
 2273 00dc 7B68     		ldr	r3, [r7, #4]
 2274 00de 0122     		movs	r2, #1
 2275 00e0 5A72     		strb	r2, [r3, #9]
 2276              	.L139:
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->irc28m.adjust_value = (uint8_t)((RCU_CTL1 & RCU_CTL1_IRC28MCALIB) >> 8);
 2277              		.loc 1 999 48
 2278 00e2 284B     		ldr	r3, .L147+12
 2279 00e4 1B68     		ldr	r3, [r3]
 2280              		.loc 1 999 81
 2281 00e6 1B0A     		lsrs	r3, r3, #8
 2282              		.loc 1 999 37
 2283 00e8 DAB2     		uxtb	r2, r3
 2284              		.loc 1 999 35
 2285 00ea 7B68     		ldr	r3, [r7, #4]
 2286 00ec 1A72     		strb	r2, [r3, #8]
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current IRC48M state */
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_ADDCTL & RCU_ADDCTL_IRC48MEN)) {
 2287              		.loc 1 1003 18
 2288 00ee 264B     		ldr	r3, .L147+16
 2289 00f0 1B68     		ldr	r3, [r3]
 2290              		.loc 1 1003 29
 2291 00f2 03F48033 		and	r3, r3, #65536
 2292              		.loc 1 1003 7
 2293 00f6 002B     		cmp	r3, #0
 2294 00f8 03D0     		beq	.L141
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc48m.state = RCU_OSC_ON;
 2295              		.loc 1 1004 32
 2296 00fa 7B68     		ldr	r3, [r7, #4]
 2297 00fc 0222     		movs	r2, #2
 2298 00fe DA72     		strb	r2, [r3, #11]
 2299 0100 02E0     		b	.L142
 2300              	.L141:
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc48m.state = RCU_OSC_OFF;
 2301              		.loc 1 1006 32
 2302 0102 7B68     		ldr	r3, [r7, #4]
 2303 0104 0122     		movs	r2, #1
 2304 0106 DA72     		strb	r2, [r3, #11]
 2305              	.L142:
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current IRC40K state */
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_RSTSCK & RCU_RSTSCK_IRC40KEN)) {
 2306              		.loc 1 1011 18
 2307 0108 204B     		ldr	r3, .L147+20
 2308 010a 1B68     		ldr	r3, [r3]
 2309              		.loc 1 1011 29
 2310 010c 03F00103 		and	r3, r3, #1
 2311              		.loc 1 1011 7
 2312 0110 002B     		cmp	r3, #0
 2313 0112 03D0     		beq	.L143
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc40k.state = RCU_OSC_ON;
 2314              		.loc 1 1012 32
 2315 0114 7B68     		ldr	r3, [r7, #4]
 2316 0116 0222     		movs	r2, #2
 2317 0118 5A73     		strb	r2, [r3, #13]
 2318 011a 02E0     		b	.L144
 2319              	.L143:
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->irc40k.state = RCU_OSC_OFF;
 2320              		.loc 1 1014 32
 2321 011c 7B68     		ldr	r3, [r7, #4]
 2322 011e 0122     		movs	r2, #1
 2323 0120 5A73     		strb	r2, [r3, #13]
 2324              	.L144:
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the current PLL state */
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_CTL0 & RCU_CTL0_PLLEN)) {
 2325              		.loc 1 1018 18
 2326 0122 154B     		ldr	r3, .L147
 2327 0124 1B68     		ldr	r3, [r3]
 2328              		.loc 1 1018 27
 2329 0126 03F08073 		and	r3, r3, #16777216
 2330              		.loc 1 1018 7
 2331 012a 002B     		cmp	r3, #0
 2332 012c 03D0     		beq	.L145
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->pll.state = RCU_OSC_ON;
 2333              		.loc 1 1019 29
 2334 012e 7B68     		ldr	r3, [r7, #4]
 2335 0130 0222     		movs	r2, #2
 2336 0132 5A74     		strb	r2, [r3, #17]
 2337 0134 02E0     		b	.L146
 2338              	.L145:
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_osci->pll.state = RCU_OSC_OFF;
 2339              		.loc 1 1021 29
 2340 0136 7B68     		ldr	r3, [r7, #4]
 2341 0138 0122     		movs	r2, #1
 2342 013a 5A74     		strb	r2, [r3, #17]
 2343              	.L146:
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get the PLL parameters */
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->pll.pll_mul = (hal_rcu_pll_mul_enum)(RCU_CFG0 & RCU_CFG0_PLLMF);
 2344              		.loc 1 1025 52
 2345 013c 144B     		ldr	r3, .L147+24
 2346 013e 1A68     		ldr	r2, [r3]
 2347              		.loc 1 1025 61
 2348 0140 144B     		ldr	r3, .L147+28
 2349 0142 1340     		ands	r3, r3, r2
 2350              		.loc 1 1025 29
 2351 0144 1A46     		mov	r2, r3
 2352              		.loc 1 1025 27
 2353 0146 7B68     		ldr	r3, [r7, #4]
 2354 0148 DA61     		str	r2, [r3, #28]
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->pll.pll_source = (hal_rcu_pll_src_enum)(RCU_CFG0 & RCU_CFG0_PLLSEL);
 2355              		.loc 1 1026 55
 2356 014a 114B     		ldr	r3, .L147+24
 2357 014c 1B68     		ldr	r3, [r3]
 2358              		.loc 1 1026 64
 2359 014e 03F48032 		and	r2, r3, #65536
 2360              		.loc 1 1026 30
 2361 0152 7B68     		ldr	r3, [r7, #4]
 2362 0154 5A61     		str	r2, [r3, #20]
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->pll.pre_div = (hal_rcu_pll_prediv_enum)(RCU_CFG0 & RCU_CFG0_PLLPREDV);
 2363              		.loc 1 1027 55
 2364 0156 0E4B     		ldr	r3, .L147+24
 2365 0158 1B68     		ldr	r3, [r3]
 2366              		.loc 1 1027 27
 2367 015a 7B68     		ldr	r3, [r7, #4]
 2368 015c 0022     		movs	r2, #0
 2369 015e 1A76     		strb	r2, [r3, #24]
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_osci->pll.pll_presel = (hal_rcu_pll_presel_enum)(RCU_CFG1 & RCU_CFG1_PLLPRESEL);
 2370              		.loc 1 1028 58
 2371 0160 0D4B     		ldr	r3, .L147+32
 2372 0162 1B68     		ldr	r3, [r3]
 2373              		.loc 1 1028 67
 2374 0164 03F08042 		and	r2, r3, #1073741824
 2375              		.loc 1 1028 30
 2376 0168 7B68     		ldr	r3, [r7, #4]
 2377 016a 1A62     		str	r2, [r3, #32]
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 2378              		.loc 1 1029 1
 2379 016c 00BF     		nop
 2380 016e 0C37     		adds	r7, r7, #12
 2381              		.cfi_def_cfa_offset 4
 2382 0170 BD46     		mov	sp, r7
 2383              		.cfi_def_cfa_register 13
 2384              		@ sp needed
 2385 0172 80BC     		pop	{r7}
 2386              		.cfi_restore 7
 2387              		.cfi_def_cfa_offset 0
 2388 0174 7047     		bx	lr
 2389              	.L148:
 2390 0176 00BF     		.align	2
 2391              	.L147:
 2392 0178 00100240 		.word	1073876992
 2393 017c 20100240 		.word	1073877024
 2394 0180 30100240 		.word	1073877040
 2395 0184 34100240 		.word	1073877044
 2396 0188 C0100240 		.word	1073877184
 2397 018c 24100240 		.word	1073877028
 2398 0190 04100240 		.word	1073876996
 2399 0194 00003C08 		.word	138149888
 2400 0198 2C100240 		.word	1073877036
 2401              		.cfi_endproc
 2402              	.LFE131:
 2404              		.section	.text.hal_rcu_clock_config,"ax",%progbits
 2405              		.align	1
 2406              		.global	hal_rcu_clock_config
 2407              		.syntax unified
 2408              		.thumb
 2409              		.thumb_func
 2410              		.fpu softvfp
 2412              	hal_rcu_clock_config:
 2413              	.LFB132:
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the RCU clock
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  rcu_clk: the pointer of the RCU clock structure
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   clock_type(member):
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_NONE: no clock type
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_SYSCLK: system clock type
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_CK48MCLK: ck48m clock to configure
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_AHBCLK: AHB bus clock type
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_APB1CLK: APB1 bus clock type
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_APB2CLK: APB2 bus clock type
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   sysclk_source(member):
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_SYSCLK_SRC_IRC8M: IRC8M as system clock source
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_SYSCLK_SRC_HXTAL: HXTAL as system clock source
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_SYSCLK_SRC_PLL: PLL as system clock source
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   ck48mclk_source(member):
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_USB_CK48MSRC_PLL48M: CK48M source clock select PLL48M
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_USB_CK48MSRC_IRC48M: CK48M source clock select IRC48M
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   ahbclk_divider(member): AHB clock divider
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     the argument could be selected from enumeration <hal_rcu_sysclk_ahbdiv_enum>
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   apb1clk_divider(member): APB1 clock divider
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     the argument could be selected from enumeration <hal_rcu_sysclk_apb1div_enum>
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   apb2clk_divider(member): APB2 clock divider
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     the argument could be selected from enumeration <hal_rcu_sysclk_apb2div_enum>
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_TIMEOUT, details re
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \note       user need compute the AHB clock freuuency before, then decide the fmc_wscnt value
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** int32_t hal_rcu_clock_config(hal_rcu_clk_struct *rcu_clk)
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 2414              		.loc 1 1063 1
 2415              		.cfi_startproc
 2416              		@ args = 0, pretend = 0, frame = 16
 2417              		@ frame_needed = 1, uses_anonymous_args = 0
 2418 0000 90B5     		push	{r4, r7, lr}
 2419              		.cfi_def_cfa_offset 12
 2420              		.cfi_offset 4, -12
 2421              		.cfi_offset 7, -8
 2422              		.cfi_offset 14, -4
 2423 0002 85B0     		sub	sp, sp, #20
 2424              		.cfi_def_cfa_offset 32
 2425 0004 00AF     		add	r7, sp, #0
 2426              		.cfi_def_cfa_register 7
 2427 0006 7860     		str	r0, [r7, #4]
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == rcu_clk) {
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [rcu_clk] is a NULL pointer.");
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return HAL_ERR_ADDRESS;
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(rcu_clk->clock_type > RCU_CLKTYPE_MAX) {
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter member [rcu_clk->clock_type] is invalid.");
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return HAL_ERR_VAL;
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure system clock */
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_CLKTYPE_SYSCLK == (rcu_clk->clock_type & RCU_CLKTYPE_SYSCLK)) {
 2428              		.loc 1 1081 38
 2429 0008 7B68     		ldr	r3, [r7, #4]
 2430 000a 1B68     		ldr	r3, [r3]
 2431              		.loc 1 1081 51
 2432 000c 03F00103 		and	r3, r3, #1
 2433              		.loc 1 1081 7
 2434 0010 002B     		cmp	r3, #0
 2435 0012 35D0     		beq	.L150
 2436              	.LBB12:
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         uint32_t tick_start = 0U;
 2437              		.loc 1 1082 18
 2438 0014 0023     		movs	r3, #0
 2439 0016 FB60     		str	r3, [r7, #12]
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         uint32_t time_out = s_rcu_timeout[_RCU_CKSYSSRC_INDEX(rcu_clk->sysclk_source)];
 2440              		.loc 1 1083 43
 2441 0018 7B68     		ldr	r3, [r7, #4]
 2442 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2443 001c 1A46     		mov	r2, r3
 2444              		.loc 1 1083 18
 2445 001e 374B     		ldr	r3, .L159
 2446 0020 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2447 0024 BB60     		str	r3, [r7, #8]
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET == hals_rcu_flag_get(s_rcu_stab_flag[_RCU_CKSYSSRC_INDEX(rcu_clk->sysclk_source)])
 2448              		.loc 1 1085 55
 2449 0026 7B68     		ldr	r3, [r7, #4]
 2450 0028 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2451 002a 1A46     		mov	r2, r3
 2452              		.loc 1 1085 21
 2453 002c 344B     		ldr	r3, .L159+4
 2454 002e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2455 0032 1846     		mov	r0, r3
 2456 0034 FFF7FEFF 		bl	hals_rcu_flag_get
 2457 0038 0346     		mov	r3, r0
 2458              		.loc 1 1085 11
 2459 003a 002B     		cmp	r3, #0
 2460 003c 02D1     		bne	.L151
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             return HAL_ERR_VAL;
 2461              		.loc 1 1086 20
 2462 003e 6FF00503 		mvn	r3, #5
 2463 0042 56E0     		b	.L152
 2464              	.L151:
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* configure the system clock source */
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_system_clock_source_config(rcu_clk->sysclk_source);
 2465              		.loc 1 1090 52
 2466 0044 7B68     		ldr	r3, [r7, #4]
 2467 0046 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2468              		.loc 1 1090 9
 2469 0048 1846     		mov	r0, r3
 2470 004a FFF7FEFF 		bl	hals_rcu_system_clock_source_config
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         tick_start = hal_sys_basetick_count_get();
 2471              		.loc 1 1092 22
 2472 004e FFF7FEFF 		bl	hal_sys_basetick_count_get
 2473 0052 F860     		str	r0, [r7, #12]
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* wait till system clock source is stable */
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while(s_rcu_scss[_RCU_CKSYSSRC_INDEX(rcu_clk->sysclk_source)] != hals_rcu_system_clock_sour
 2474              		.loc 1 1095 14
 2475 0054 09E0     		b	.L153
 2476              	.L154:
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, time_out)) {
 2477              		.loc 1 1096 23
 2478 0056 B968     		ldr	r1, [r7, #8]
 2479 0058 F868     		ldr	r0, [r7, #12]
 2480 005a FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2481 005e 0346     		mov	r3, r0
 2482              		.loc 1 1096 15
 2483 0060 012B     		cmp	r3, #1
 2484 0062 02D1     		bne	.L153
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 return HAL_ERR_TIMEOUT;
 2485              		.loc 1 1097 24
 2486 0064 6FF00403 		mvn	r3, #4
 2487 0068 43E0     		b	.L152
 2488              	.L153:
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, time_out)) {
 2489              		.loc 1 1095 26
 2490 006a 7B68     		ldr	r3, [r7, #4]
 2491 006c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2492 006e 1A46     		mov	r2, r3
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, time_out)) {
 2493              		.loc 1 1095 25
 2494 0070 244B     		ldr	r3, .L159+8
 2495 0072 53F82240 		ldr	r4, [r3, r2, lsl #2]
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, time_out)) {
 2496              		.loc 1 1095 74
 2497 0076 FFF7FEFF 		bl	hals_rcu_system_clock_source_get
 2498 007a 0346     		mov	r3, r0
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, time_out)) {
 2499              		.loc 1 1095 14
 2500 007c 9C42     		cmp	r4, r3
 2501 007e EAD1     		bne	.L154
 2502              	.L150:
 2503              	.LBE12:
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure ck48m clock */
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_CLKTYPE_CK48MCLK == (rcu_clk->clock_type & RCU_CLKTYPE_CK48MCLK)) {
 2504              		.loc 1 1103 40
 2505 0080 7B68     		ldr	r3, [r7, #4]
 2506 0082 1B68     		ldr	r3, [r3]
 2507              		.loc 1 1103 53
 2508 0084 03F00203 		and	r3, r3, #2
 2509              		.loc 1 1103 7
 2510 0088 002B     		cmp	r3, #0
 2511 008a 04D0     		beq	.L155
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* configure ck48m clock */
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_ck48m_clock_config(rcu_clk->ck48mclk_source);
 2512              		.loc 1 1105 44
 2513 008c 7B68     		ldr	r3, [r7, #4]
 2514 008e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2515              		.loc 1 1105 9
 2516 0090 1846     		mov	r0, r3
 2517 0092 FFF7FEFF 		bl	hals_rcu_ck48m_clock_config
 2518              	.L155:
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure AHB bus clock */
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_CLKTYPE_AHBCLK == (rcu_clk->clock_type & RCU_CLKTYPE_AHBCLK)) {
 2519              		.loc 1 1109 38
 2520 0096 7B68     		ldr	r3, [r7, #4]
 2521 0098 1B68     		ldr	r3, [r3]
 2522              		.loc 1 1109 51
 2523 009a 03F00403 		and	r3, r3, #4
 2524              		.loc 1 1109 7
 2525 009e 002B     		cmp	r3, #0
 2526 00a0 04D0     		beq	.L156
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* configure AHB clock */
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_ahb_clock_config(rcu_clk->ahbclk_divider);
 2527              		.loc 1 1111 42
 2528 00a2 7B68     		ldr	r3, [r7, #4]
 2529 00a4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2530              		.loc 1 1111 9
 2531 00a6 1846     		mov	r0, r3
 2532 00a8 FFF7FEFF 		bl	hals_rcu_ahb_clock_config
 2533              	.L156:
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure APB1 bus clock */
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_CLKTYPE_APB1CLK == (rcu_clk->clock_type & RCU_CLKTYPE_APB1CLK)) {
 2534              		.loc 1 1115 39
 2535 00ac 7B68     		ldr	r3, [r7, #4]
 2536 00ae 1B68     		ldr	r3, [r3]
 2537              		.loc 1 1115 52
 2538 00b0 03F00803 		and	r3, r3, #8
 2539              		.loc 1 1115 7
 2540 00b4 002B     		cmp	r3, #0
 2541 00b6 04D0     		beq	.L157
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_apb1_clock_config(rcu_clk->apb1clk_divider);
 2542              		.loc 1 1116 43
 2543 00b8 7B68     		ldr	r3, [r7, #4]
 2544 00ba 1B89     		ldrh	r3, [r3, #8]
 2545              		.loc 1 1116 9
 2546 00bc 1846     		mov	r0, r3
 2547 00be FFF7FEFF 		bl	hals_rcu_apb1_clock_config
 2548              	.L157:
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure APB2 bus clock */
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RCU_CLKTYPE_APB2CLK == (rcu_clk->clock_type & RCU_CLKTYPE_APB2CLK)) {
 2549              		.loc 1 1120 39
 2550 00c2 7B68     		ldr	r3, [r7, #4]
 2551 00c4 1B68     		ldr	r3, [r3]
 2552              		.loc 1 1120 52
 2553 00c6 03F01603 		and	r3, r3, #22
 2554              		.loc 1 1120 7
 2555 00ca 162B     		cmp	r3, #22
 2556 00cc 04D1     		bne	.L158
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_apb2_clock_config(rcu_clk->apb2clk_divider);
 2557              		.loc 1 1121 43
 2558 00ce 7B68     		ldr	r3, [r7, #4]
 2559 00d0 5B89     		ldrh	r3, [r3, #10]
 2560              		.loc 1 1121 9
 2561 00d2 1846     		mov	r0, r3
 2562 00d4 FFF7FEFF 		bl	hals_rcu_apb2_clock_config
 2563              	.L158:
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* update the SystemCoreClock global variable */
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     g_systemcoreclock = hals_rcu_clock_freq_get(CK_SYS);
 2564              		.loc 1 1125 25
 2565 00d8 0020     		movs	r0, #0
 2566 00da FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2567 00de 0346     		mov	r3, r0
 2568 00e0 1A46     		mov	r2, r3
 2569              		.loc 1 1125 23
 2570 00e2 094B     		ldr	r3, .L159+12
 2571 00e4 1A60     		str	r2, [r3]
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* configure the source of time base considering new system clocks settings */
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     hal_sys_timesource_init(g_basetick_source);
 2572              		.loc 1 1128 5
 2573 00e6 094B     		ldr	r3, .L159+16
 2574 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2575 00ea 1846     		mov	r0, r3
 2576 00ec FFF7FEFF 		bl	hal_sys_timesource_init
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return HAL_ERR_NONE;
 2577              		.loc 1 1130 12
 2578 00f0 0023     		movs	r3, #0
 2579              	.L152:
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 2580              		.loc 1 1131 1
 2581 00f2 1846     		mov	r0, r3
 2582 00f4 1437     		adds	r7, r7, #20
 2583              		.cfi_def_cfa_offset 12
 2584 00f6 BD46     		mov	sp, r7
 2585              		.cfi_def_cfa_register 13
 2586              		@ sp needed
 2587 00f8 90BD     		pop	{r4, r7, pc}
 2588              	.L160:
 2589 00fa 00BF     		.align	2
 2590              	.L159:
 2591 00fc 00000000 		.word	s_rcu_timeout
 2592 0100 00000000 		.word	s_rcu_stab_flag
 2593 0104 00000000 		.word	s_rcu_scss
 2594 0108 00000000 		.word	g_systemcoreclock
 2595 010c 00000000 		.word	g_basetick_source
 2596              		.cfi_endproc
 2597              	.LFE132:
 2599              		.section	.text.hal_rcu_clock_config_get,"ax",%progbits
 2600              		.align	1
 2601              		.global	hal_rcu_clock_config_get
 2602              		.syntax unified
 2603              		.thumb
 2604              		.thumb_func
 2605              		.fpu softvfp
 2607              	hal_rcu_clock_config_get:
 2608              	.LFB133:
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the RCU clock configuration
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  rcu_clk: the pointer of the RCU clock structure
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   clock_type(member):
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_NONE: no clock type
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_SYSCLK: system clock type
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_CK48MCLK: ck48m clock to configure
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_AHBCLK: AHB bus clock type
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_APB1CLK: APB1 bus clock type
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_CLKTYPE_APB2CLK: APB2 bus clock type
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   sysclk_source(member):
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   only one parameter can be selected which is shown as below:
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_SYSCLK_SRC_IRC8M: IRC8M as system clock source
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_SYSCLK_SRC_HXTAL: HXTAL as system clock source
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg          RCU_SYSCLK_SRC_PLL: PLL as system clock source
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   ahbclk_divider(member): AHB clock divider
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     the argument could be selected from enumeration <hal_rcu_sysclk_ahbdiv_enum>
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   apb1clk_divider(member): APB1 clock divider
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     the argument could be selected from enumeration <hal_rcu_sysclk_apb1div_enum>
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                   apb2clk_divider(member): APB2 clock divider
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     the argument could be selected from enumeration <hal_rcu_sysclk_apb2div_enum>
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_clock_config_get(hal_rcu_clk_struct *rcu_clk)
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 2609              		.loc 1 1159 1
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 8
 2612              		@ frame_needed = 1, uses_anonymous_args = 0
 2613              		@ link register save eliminated.
 2614 0000 80B4     		push	{r7}
 2615              		.cfi_def_cfa_offset 4
 2616              		.cfi_offset 7, -4
 2617 0002 83B0     		sub	sp, sp, #12
 2618              		.cfi_def_cfa_offset 16
 2619 0004 00AF     		add	r7, sp, #0
 2620              		.cfi_def_cfa_register 7
 2621 0006 7860     		str	r0, [r7, #4]
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == rcu_clk) {
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [rcu_clk] is a NULL pointer.");
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return;
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* get all clock type configuration */
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_clk->clock_type = RCU_CLKTYPE_SYSCLK | RCU_CLKTYPE_CK48MCLK | RCU_CLKTYPE_AHBCLK | RCU_CLKT
 2622              		.loc 1 1171 25
 2623 0008 7B68     		ldr	r3, [r7, #4]
 2624 000a 1F22     		movs	r2, #31
 2625 000c 1A60     		str	r2, [r3]
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_clk->sysclk_source = (hal_rcu_sysclk_src_enum)(RCU_CFG0 & RCU_CFG0_SCS);
 2626              		.loc 1 1172 56
 2627 000e 164B     		ldr	r3, .L162
 2628 0010 1B68     		ldr	r3, [r3]
 2629              		.loc 1 1172 30
 2630 0012 DBB2     		uxtb	r3, r3
 2631              		.loc 1 1172 65
 2632 0014 03F00303 		and	r3, r3, #3
 2633 0018 DAB2     		uxtb	r2, r3
 2634              		.loc 1 1172 28
 2635 001a 7B68     		ldr	r3, [r7, #4]
 2636 001c 1A71     		strb	r2, [r3, #4]
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_clk->ck48mclk_source = (hal_rcu_ck48mclk_src_enum)(RCU_ADDCTL & RCU_ADDCTL_CK48MSEL);
 2637              		.loc 1 1173 60
 2638 001e 134B     		ldr	r3, .L162+4
 2639 0020 1B68     		ldr	r3, [r3]
 2640              		.loc 1 1173 32
 2641 0022 DBB2     		uxtb	r3, r3
 2642              		.loc 1 1173 71
 2643 0024 03F00103 		and	r3, r3, #1
 2644 0028 DAB2     		uxtb	r2, r3
 2645              		.loc 1 1173 30
 2646 002a 7B68     		ldr	r3, [r7, #4]
 2647 002c 5A71     		strb	r2, [r3, #5]
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_clk->ahbclk_divider = (hal_rcu_sysclk_ahbdiv_enum)(RCU_CFG0 & RCU_CFG0_AHBPSC);
 2648              		.loc 1 1174 60
 2649 002e 0E4B     		ldr	r3, .L162
 2650 0030 1B68     		ldr	r3, [r3]
 2651              		.loc 1 1174 31
 2652 0032 DBB2     		uxtb	r3, r3
 2653              		.loc 1 1174 69
 2654 0034 23F00F03 		bic	r3, r3, #15
 2655 0038 DAB2     		uxtb	r2, r3
 2656              		.loc 1 1174 29
 2657 003a 7B68     		ldr	r3, [r7, #4]
 2658 003c 9A71     		strb	r2, [r3, #6]
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_clk->apb1clk_divider = (hal_rcu_ahbclk_apbldiv_enum)(RCU_CFG0 & RCU_CFG0_APB1PSC);
 2659              		.loc 1 1175 62
 2660 003e 0A4B     		ldr	r3, .L162
 2661 0040 1B68     		ldr	r3, [r3]
 2662              		.loc 1 1175 32
 2663 0042 9BB2     		uxth	r3, r3
 2664              		.loc 1 1175 71
 2665 0044 03F4E063 		and	r3, r3, #1792
 2666 0048 9AB2     		uxth	r2, r3
 2667              		.loc 1 1175 30
 2668 004a 7B68     		ldr	r3, [r7, #4]
 2669 004c 1A81     		strh	r2, [r3, #8]	@ movhi
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_clk->apb2clk_divider = (hal_rcu_ahbclk_apb2div_enum)(RCU_CFG0 & RCU_CFG0_APB2PSC);
 2670              		.loc 1 1176 62
 2671 004e 064B     		ldr	r3, .L162
 2672 0050 1B68     		ldr	r3, [r3]
 2673              		.loc 1 1176 32
 2674 0052 9BB2     		uxth	r3, r3
 2675              		.loc 1 1176 71
 2676 0054 03F46053 		and	r3, r3, #14336
 2677 0058 9AB2     		uxth	r2, r3
 2678              		.loc 1 1176 30
 2679 005a 7B68     		ldr	r3, [r7, #4]
 2680 005c 5A81     		strh	r2, [r3, #10]	@ movhi
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 2681              		.loc 1 1177 1
 2682 005e 00BF     		nop
 2683 0060 0C37     		adds	r7, r7, #12
 2684              		.cfi_def_cfa_offset 4
 2685 0062 BD46     		mov	sp, r7
 2686              		.cfi_def_cfa_register 13
 2687              		@ sp needed
 2688 0064 80BC     		pop	{r7}
 2689              		.cfi_restore 7
 2690              		.cfi_def_cfa_offset 0
 2691 0066 7047     		bx	lr
 2692              	.L163:
 2693              		.align	2
 2694              	.L162:
 2695 0068 04100240 		.word	1073876996
 2696 006c C0100240 		.word	1073877184
 2697              		.cfi_endproc
 2698              	.LFE133:
 2700              		.section	.rodata
 2701              		.align	2
 2702              	.LC0:
 2703 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 2703      00000000 
 2703      01020304 
 2703      06
 2704 000d 070809   		.ascii	"\007\010\011"
 2705              		.section	.text.hal_SystemCoreClockUpdate,"ax",%progbits
 2706              		.align	1
 2707              		.global	hal_SystemCoreClockUpdate
 2708              		.syntax unified
 2709              		.thumb
 2710              		.thumb_func
 2711              		.fpu softvfp
 2713              	hal_SystemCoreClockUpdate:
 2714              	.LFB134:
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      update the SystemCoreClock with current core clock retrieved from cpu registers
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** int32_t hal_SystemCoreClockUpdate(void)
1186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 2715              		.loc 1 1186 1
 2716              		.cfi_startproc
 2717              		@ args = 0, pretend = 0, frame = 56
 2718              		@ frame_needed = 1, uses_anonymous_args = 0
 2719              		@ link register save eliminated.
 2720 0000 90B4     		push	{r4, r7}
 2721              		.cfi_def_cfa_offset 8
 2722              		.cfi_offset 4, -8
 2723              		.cfi_offset 7, -4
 2724 0002 8EB0     		sub	sp, sp, #56
 2725              		.cfi_def_cfa_offset 64
 2726 0004 00AF     		add	r7, sp, #0
 2727              		.cfi_def_cfa_register 7
1187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     int32_t sws = 0U;
 2728              		.loc 1 1187 13
 2729 0006 0023     		movs	r3, #0
 2730 0008 3B63     		str	r3, [r7, #48]
1188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     int32_t pllmf = 0U, pllmf4 = 0U, pllmf5 = 0U, pllsel = 0U, pllpresel = 0U, prediv = 0U, idx = 0
 2731              		.loc 1 1188 13
 2732 000a 0023     		movs	r3, #0
 2733 000c 7B63     		str	r3, [r7, #52]
 2734              		.loc 1 1188 25
 2735 000e 0023     		movs	r3, #0
 2736 0010 FB62     		str	r3, [r7, #44]
 2737              		.loc 1 1188 38
 2738 0012 0023     		movs	r3, #0
 2739 0014 BB62     		str	r3, [r7, #40]
 2740              		.loc 1 1188 51
 2741 0016 0023     		movs	r3, #0
 2742 0018 7B62     		str	r3, [r7, #36]
 2743              		.loc 1 1188 64
 2744 001a 0023     		movs	r3, #0
 2745 001c 3B62     		str	r3, [r7, #32]
 2746              		.loc 1 1188 80
 2747 001e 0023     		movs	r3, #0
 2748 0020 FB61     		str	r3, [r7, #28]
 2749              		.loc 1 1188 93
 2750 0022 0023     		movs	r3, #0
 2751 0024 BB61     		str	r3, [r7, #24]
 2752              		.loc 1 1188 103
 2753 0026 0023     		movs	r3, #0
 2754 0028 7B61     		str	r3, [r7, #20]
1189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* exponent of AHB clock divider */
1190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     const uint8_t ahb_exp[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 2755              		.loc 1 1190 19
 2756 002a 514B     		ldr	r3, .L178
 2757 002c 3C1D     		adds	r4, r7, #4
 2758 002e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2759 0030 84E80F00 		stm	r4, {r0, r1, r2, r3}
1191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     sws = GET_BITS(RCU_CFG0, 2, 3);
 2760              		.loc 1 1192 11
 2761 0034 4F4B     		ldr	r3, .L178+4
 2762 0036 1B68     		ldr	r3, [r3]
 2763 0038 9B08     		lsrs	r3, r3, #2
 2764              		.loc 1 1192 9
 2765 003a 03F00303 		and	r3, r3, #3
 2766 003e 3B63     		str	r3, [r7, #48]
1193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(sws) {
 2767              		.loc 1 1193 5
 2768 0040 3B6B     		ldr	r3, [r7, #48]
 2769 0042 022B     		cmp	r3, #2
 2770 0044 11D0     		beq	.L165
 2771 0046 3B6B     		ldr	r3, [r7, #48]
 2772 0048 022B     		cmp	r3, #2
 2773 004a 74DC     		bgt	.L166
 2774 004c 3B6B     		ldr	r3, [r7, #48]
 2775 004e 002B     		cmp	r3, #0
 2776 0050 03D0     		beq	.L167
 2777 0052 3B6B     		ldr	r3, [r7, #48]
 2778 0054 012B     		cmp	r3, #1
 2779 0056 04D0     		beq	.L168
 2780 0058 6DE0     		b	.L166
 2781              	.L167:
1194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC8M is selected as CK_SYS */
1195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case SEL_IRC8M:
1196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         g_systemcoreclock = IRC8M_VALUE;
 2782              		.loc 1 1196 27
 2783 005a 474B     		ldr	r3, .L178+8
 2784 005c 474A     		ldr	r2, .L178+12
 2785 005e 1A60     		str	r2, [r3]
1197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2786              		.loc 1 1197 9
 2787 0060 6DE0     		b	.L169
 2788              	.L168:
1198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* HXTAL is selected as CK_SYS */
1199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case SEL_HXTAL:
1200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         g_systemcoreclock = HXTAL_VALUE;
 2789              		.loc 1 1200 27
 2790 0062 454B     		ldr	r3, .L178+8
 2791 0064 454A     		ldr	r2, .L178+12
 2792 0066 1A60     		str	r2, [r3]
1201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2793              		.loc 1 1201 9
 2794 0068 69E0     		b	.L169
 2795              	.L165:
1202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* PLL is selected as CK_SYS */
1203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case SEL_PLL:
1204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the value of PLLMF[3:0] */
1205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllmf = GET_BITS(RCU_CFG0, 18, 21);
 2796              		.loc 1 1205 17
 2797 006a 424B     		ldr	r3, .L178+4
 2798 006c 1B68     		ldr	r3, [r3]
 2799 006e 9B0C     		lsrs	r3, r3, #18
 2800              		.loc 1 1205 15
 2801 0070 03F00F03 		and	r3, r3, #15
 2802 0074 7B63     		str	r3, [r7, #52]
1206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllmf4 = GET_BITS(RCU_CFG0, 27, 27);
 2803              		.loc 1 1206 18
 2804 0076 3F4B     		ldr	r3, .L178+4
 2805 0078 1B68     		ldr	r3, [r3]
 2806 007a DB0E     		lsrs	r3, r3, #27
 2807              		.loc 1 1206 16
 2808 007c 03F00103 		and	r3, r3, #1
 2809 0080 FB62     		str	r3, [r7, #44]
1207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllmf5 = GET_BITS(RCU_CFG1, 31, 31);
 2810              		.loc 1 1207 18
 2811 0082 3F4B     		ldr	r3, .L178+16
 2812 0084 1B68     		ldr	r3, [r3]
 2813 0086 DB0F     		lsrs	r3, r3, #31
 2814              		.loc 1 1207 16
 2815 0088 03F00103 		and	r3, r3, #1
 2816 008c BB62     		str	r3, [r7, #40]
1208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* high 16 bits */
1209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((0U == pllmf4) && (0U == pllmf5)) {
 2817              		.loc 1 1209 11
 2818 008e FB6A     		ldr	r3, [r7, #44]
 2819 0090 002B     		cmp	r3, #0
 2820 0092 05D1     		bne	.L170
 2821              		.loc 1 1209 27 discriminator 1
 2822 0094 BB6A     		ldr	r3, [r7, #40]
 2823 0096 002B     		cmp	r3, #0
 2824 0098 02D1     		bne	.L170
1210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 2U;
 2825              		.loc 1 1210 19
 2826 009a 7B6B     		ldr	r3, [r7, #52]
 2827 009c 0233     		adds	r3, r3, #2
 2828 009e 7B63     		str	r3, [r7, #52]
 2829              	.L170:
1211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((1U == pllmf4) && (0U == pllmf5)) {
 2830              		.loc 1 1212 11
 2831 00a0 FB6A     		ldr	r3, [r7, #44]
 2832 00a2 012B     		cmp	r3, #1
 2833 00a4 05D1     		bne	.L171
 2834              		.loc 1 1212 27 discriminator 1
 2835 00a6 BB6A     		ldr	r3, [r7, #40]
 2836 00a8 002B     		cmp	r3, #0
 2837 00aa 02D1     		bne	.L171
1213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 17U;
 2838              		.loc 1 1213 19
 2839 00ac 7B6B     		ldr	r3, [r7, #52]
 2840 00ae 1133     		adds	r3, r3, #17
 2841 00b0 7B63     		str	r3, [r7, #52]
 2842              	.L171:
1214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((0U == pllmf4) && (1U == pllmf5)) {
 2843              		.loc 1 1215 11
 2844 00b2 FB6A     		ldr	r3, [r7, #44]
 2845 00b4 002B     		cmp	r3, #0
 2846 00b6 05D1     		bne	.L172
 2847              		.loc 1 1215 27 discriminator 1
 2848 00b8 BB6A     		ldr	r3, [r7, #40]
 2849 00ba 012B     		cmp	r3, #1
 2850 00bc 02D1     		bne	.L172
1216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 33U;
 2851              		.loc 1 1216 19
 2852 00be 7B6B     		ldr	r3, [r7, #52]
 2853 00c0 2133     		adds	r3, r3, #33
 2854 00c2 7B63     		str	r3, [r7, #52]
 2855              	.L172:
1217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((1U == pllmf4) && (1U == pllmf5)) {
 2856              		.loc 1 1218 11
 2857 00c4 FB6A     		ldr	r3, [r7, #44]
 2858 00c6 012B     		cmp	r3, #1
 2859 00c8 05D1     		bne	.L173
 2860              		.loc 1 1218 27 discriminator 1
 2861 00ca BB6A     		ldr	r3, [r7, #40]
 2862 00cc 012B     		cmp	r3, #1
 2863 00ce 02D1     		bne	.L173
1219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 49U;
 2864              		.loc 1 1219 19
 2865 00d0 7B6B     		ldr	r3, [r7, #52]
 2866 00d2 3133     		adds	r3, r3, #49
 2867 00d4 7B63     		str	r3, [r7, #52]
 2868              	.L173:
1220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* PLL clock source selection, HXTAL or IRC8M/2 */
1222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllsel = GET_BITS(RCU_CFG0, 16, 16);
 2869              		.loc 1 1222 18
 2870 00d6 274B     		ldr	r3, .L178+4
 2871 00d8 1B68     		ldr	r3, [r3]
 2872 00da 1B0C     		lsrs	r3, r3, #16
 2873              		.loc 1 1222 16
 2874 00dc 03F00103 		and	r3, r3, #1
 2875 00e0 7B62     		str	r3, [r7, #36]
1223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(0U != pllsel) {
 2876              		.loc 1 1223 11
 2877 00e2 7B6A     		ldr	r3, [r7, #36]
 2878 00e4 002B     		cmp	r3, #0
 2879 00e6 1ED0     		beq	.L174
1224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             prediv = (GET_BITS(RCU_CFG1, 0, 3) + 1U);
 2880              		.loc 1 1224 23
 2881 00e8 254B     		ldr	r3, .L178+16
 2882 00ea 1B68     		ldr	r3, [r3]
 2883 00ec 03F00F03 		and	r3, r3, #15
 2884              		.loc 1 1224 48
 2885 00f0 0133     		adds	r3, r3, #1
 2886              		.loc 1 1224 20
 2887 00f2 FB61     		str	r3, [r7, #28]
1225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(0U == pllpresel) {
 2888              		.loc 1 1225 15
 2889 00f4 3B6A     		ldr	r3, [r7, #32]
 2890 00f6 002B     		cmp	r3, #0
 2891 00f8 0AD1     		bne	.L175
1226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 g_systemcoreclock = (HXTAL_VALUE / prediv) * pllmf;
 2892              		.loc 1 1226 50
 2893 00fa FB69     		ldr	r3, [r7, #28]
 2894 00fc 1F4A     		ldr	r2, .L178+12
 2895 00fe B2FBF3F3 		udiv	r3, r2, r3
 2896              		.loc 1 1226 60
 2897 0102 7A6B     		ldr	r2, [r7, #52]
 2898 0104 02FB03F3 		mul	r3, r2, r3
 2899 0108 1A46     		mov	r2, r3
 2900              		.loc 1 1226 35
 2901 010a 1B4B     		ldr	r3, .L178+8
 2902 010c 1A60     		str	r2, [r3]
1227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 g_systemcoreclock = (IRC48M_VALUE / prediv) * pllmf;
1229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
1230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             g_systemcoreclock = (IRC8M_VALUE >> 1) * pllmf;
1232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2903              		.loc 1 1233 9
 2904 010e 16E0     		b	.L169
 2905              	.L175:
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 2906              		.loc 1 1228 51
 2907 0110 FB69     		ldr	r3, [r7, #28]
 2908 0112 1C4A     		ldr	r2, .L178+20
 2909 0114 B2FBF3F3 		udiv	r3, r2, r3
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 2910              		.loc 1 1228 61
 2911 0118 7A6B     		ldr	r2, [r7, #52]
 2912 011a 02FB03F3 		mul	r3, r2, r3
 2913 011e 1A46     		mov	r2, r3
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 2914              		.loc 1 1228 35
 2915 0120 154B     		ldr	r3, .L178+8
 2916 0122 1A60     		str	r2, [r3]
 2917              		.loc 1 1233 9
 2918 0124 0BE0     		b	.L169
 2919              	.L174:
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 2920              		.loc 1 1231 52
 2921 0126 7B6B     		ldr	r3, [r7, #52]
 2922 0128 174A     		ldr	r2, .L178+24
 2923 012a 02FB03F3 		mul	r3, r2, r3
 2924 012e 1A46     		mov	r2, r3
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 2925              		.loc 1 1231 31
 2926 0130 114B     		ldr	r3, .L178+8
 2927 0132 1A60     		str	r2, [r3]
 2928              		.loc 1 1233 9
 2929 0134 03E0     		b	.L169
 2930              	.L166:
1234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC8M is selected as CK_SYS */
1235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
1236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         g_systemcoreclock = IRC8M_VALUE;
 2931              		.loc 1 1236 27
 2932 0136 104B     		ldr	r3, .L178+8
 2933 0138 104A     		ldr	r2, .L178+12
 2934 013a 1A60     		str	r2, [r3]
1237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 2935              		.loc 1 1237 9
 2936 013c 00BF     		nop
 2937              	.L169:
1238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* calculate AHB clock frequency */
1240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     idx = GET_BITS(RCU_CFG0, 4, 7);
 2938              		.loc 1 1240 11
 2939 013e 0D4B     		ldr	r3, .L178+4
 2940 0140 1B68     		ldr	r3, [r3]
 2941 0142 1B09     		lsrs	r3, r3, #4
 2942              		.loc 1 1240 9
 2943 0144 03F00F03 		and	r3, r3, #15
 2944 0148 BB61     		str	r3, [r7, #24]
1241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     clk_exp = ahb_exp[idx];
 2945              		.loc 1 1241 22
 2946 014a 3A1D     		adds	r2, r7, #4
 2947 014c BB69     		ldr	r3, [r7, #24]
 2948 014e 1344     		add	r3, r3, r2
 2949 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2950              		.loc 1 1241 13
 2951 0152 7B61     		str	r3, [r7, #20]
1242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     g_systemcoreclock >>= clk_exp;
 2952              		.loc 1 1242 23
 2953 0154 084B     		ldr	r3, .L178+8
 2954 0156 1A68     		ldr	r2, [r3]
 2955 0158 7B69     		ldr	r3, [r7, #20]
 2956 015a 42FA03F3 		asr	r3, r2, r3
 2957 015e 064A     		ldr	r2, .L178+8
 2958 0160 1360     		str	r3, [r2]
1243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return g_systemcoreclock;
 2959              		.loc 1 1244 12
 2960 0162 054B     		ldr	r3, .L178+8
 2961 0164 1B68     		ldr	r3, [r3]
1245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 2962              		.loc 1 1245 1
 2963 0166 1846     		mov	r0, r3
 2964 0168 3837     		adds	r7, r7, #56
 2965              		.cfi_def_cfa_offset 8
 2966 016a BD46     		mov	sp, r7
 2967              		.cfi_def_cfa_register 13
 2968              		@ sp needed
 2969 016c 90BC     		pop	{r4, r7}
 2970              		.cfi_restore 7
 2971              		.cfi_restore 4
 2972              		.cfi_def_cfa_offset 0
 2973 016e 7047     		bx	lr
 2974              	.L179:
 2975              		.align	2
 2976              	.L178:
 2977 0170 00000000 		.word	.LC0
 2978 0174 04100240 		.word	1073876996
 2979 0178 00000000 		.word	g_systemcoreclock
 2980 017c 00127A00 		.word	8000000
 2981 0180 2C100240 		.word	1073877036
 2982 0184 006CDC02 		.word	48000000
 2983 0188 00093D00 		.word	4000000
 2984              		.cfi_endproc
 2985              	.LFE134:
 2987              		.section	.text.hal_rcu_irq,"ax",%progbits
 2988              		.align	1
 2989              		.global	hal_rcu_irq
 2990              		.syntax unified
 2991              		.thumb
 2992              		.thumb_func
 2993              		.fpu softvfp
 2995              	hal_rcu_irq:
 2996              	.LFB135:
1246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      RCU interrupt handler content function,which is merely used in RCU_handler
1249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_irq(void)
1254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 2997              		.loc 1 1254 1
 2998              		.cfi_startproc
 2999              		@ args = 0, pretend = 0, frame = 0
 3000              		@ frame_needed = 1, uses_anonymous_args = 0
 3001 0000 80B5     		push	{r7, lr}
 3002              		.cfi_def_cfa_offset 8
 3003              		.cfi_offset 7, -8
 3004              		.cfi_offset 14, -4
 3005 0002 00AF     		add	r7, sp, #0
 3006              		.cfi_def_cfa_register 7
1255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC40K stable interrupt handler */
1256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_IRC40KSTB)) {
 3007              		.loc 1 1256 15
 3008 0004 4FF40070 		mov	r0, #512
 3009 0008 FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3010 000c 0346     		mov	r3, r0
 3011              		.loc 1 1256 7
 3012 000e 012B     		cmp	r3, #1
 3013 0010 0BD1     		bne	.L181
1257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_IRC40KSTB_CLR);
 3014              		.loc 1 1257 9
 3015 0012 4FF40470 		mov	r0, #528
 3016 0016 FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.irc40k_stable_handle) {
 3017              		.loc 1 1258 27
 3018 001a 474B     		ldr	r3, .L190
 3019 001c 5B68     		ldr	r3, [r3, #4]
 3020              		.loc 1 1258 11
 3021 001e 002B     		cmp	r3, #0
 3022 0020 03D0     		beq	.L181
1259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.irc40k_stable_handle(NULL);
 3023              		.loc 1 1259 20
 3024 0022 454B     		ldr	r3, .L190
 3025 0024 5B68     		ldr	r3, [r3, #4]
 3026              		.loc 1 1259 13
 3027 0026 0020     		movs	r0, #0
 3028 0028 9847     		blx	r3
 3029              	.LVL0:
 3030              	.L181:
1260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC8M stable interrupt handler */
1264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_IRC8MSTB)) {
 3031              		.loc 1 1264 15
 3032 002a 40F20220 		movw	r0, #514
 3033 002e FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3034 0032 0346     		mov	r3, r0
 3035              		.loc 1 1264 7
 3036 0034 012B     		cmp	r3, #1
 3037 0036 0BD1     		bne	.L182
1265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_IRC8MSTB_CLR);
 3038              		.loc 1 1265 9
 3039 0038 40F21220 		movw	r0, #530
 3040 003c FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.irc8m_stable_handle) {
 3041              		.loc 1 1266 27
 3042 0040 3D4B     		ldr	r3, .L190
 3043 0042 9B68     		ldr	r3, [r3, #8]
 3044              		.loc 1 1266 11
 3045 0044 002B     		cmp	r3, #0
 3046 0046 03D0     		beq	.L182
1267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.irc8m_stable_handle(NULL);
 3047              		.loc 1 1267 20
 3048 0048 3B4B     		ldr	r3, .L190
 3049 004a 9B68     		ldr	r3, [r3, #8]
 3050              		.loc 1 1267 13
 3051 004c 0020     		movs	r0, #0
 3052 004e 9847     		blx	r3
 3053              	.LVL1:
 3054              	.L182:
1268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC28M stable interrupt handler */
1272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_IRC28MSTB)) {
 3055              		.loc 1 1272 15
 3056 0050 40F20520 		movw	r0, #517
 3057 0054 FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3058 0058 0346     		mov	r3, r0
 3059              		.loc 1 1272 7
 3060 005a 012B     		cmp	r3, #1
 3061 005c 0BD1     		bne	.L183
1273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_IRC28MSTB_CLR);
 3062              		.loc 1 1273 9
 3063 005e 40F21520 		movw	r0, #533
 3064 0062 FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.irc28m_stable_handle) {
 3065              		.loc 1 1274 27
 3066 0066 344B     		ldr	r3, .L190
 3067 0068 DB68     		ldr	r3, [r3, #12]
 3068              		.loc 1 1274 11
 3069 006a 002B     		cmp	r3, #0
 3070 006c 03D0     		beq	.L183
1275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.irc28m_stable_handle(NULL);
 3071              		.loc 1 1275 20
 3072 006e 324B     		ldr	r3, .L190
 3073 0070 DB68     		ldr	r3, [r3, #12]
 3074              		.loc 1 1275 13
 3075 0072 0020     		movs	r0, #0
 3076 0074 9847     		blx	r3
 3077              	.LVL2:
 3078              	.L183:
1276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC48M stable interrupt handler */
1280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_IRC48MSTB)) {
 3079              		.loc 1 1280 15
 3080 0076 43F20630 		movw	r0, #13062
 3081 007a FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3082 007e 0346     		mov	r3, r0
 3083              		.loc 1 1280 7
 3084 0080 012B     		cmp	r3, #1
 3085 0082 0BD1     		bne	.L184
1281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_IRC48MSTB_CLR);
 3086              		.loc 1 1281 9
 3087 0084 43F21630 		movw	r0, #13078
 3088 0088 FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.irc48m_stable_handle) {
 3089              		.loc 1 1282 27
 3090 008c 2A4B     		ldr	r3, .L190
 3091 008e 1B69     		ldr	r3, [r3, #16]
 3092              		.loc 1 1282 11
 3093 0090 002B     		cmp	r3, #0
 3094 0092 03D0     		beq	.L184
1283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.irc48m_stable_handle(NULL);
 3095              		.loc 1 1283 20
 3096 0094 284B     		ldr	r3, .L190
 3097 0096 1B69     		ldr	r3, [r3, #16]
 3098              		.loc 1 1283 13
 3099 0098 0020     		movs	r0, #0
 3100 009a 9847     		blx	r3
 3101              	.LVL3:
 3102              	.L184:
1284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* LXTAL stable interrupt handler */
1288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_LXTALSTB)) {
 3103              		.loc 1 1288 15
 3104 009c 40F20120 		movw	r0, #513
 3105 00a0 FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3106 00a4 0346     		mov	r3, r0
 3107              		.loc 1 1288 7
 3108 00a6 012B     		cmp	r3, #1
 3109 00a8 0BD1     		bne	.L185
1289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_LXTALSTB_CLR);
 3110              		.loc 1 1289 9
 3111 00aa 40F21120 		movw	r0, #529
 3112 00ae FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.lxtal_stable_handle) {
 3113              		.loc 1 1290 27
 3114 00b2 214B     		ldr	r3, .L190
 3115 00b4 5B69     		ldr	r3, [r3, #20]
 3116              		.loc 1 1290 11
 3117 00b6 002B     		cmp	r3, #0
 3118 00b8 03D0     		beq	.L185
1291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.lxtal_stable_handle(NULL);
 3119              		.loc 1 1291 20
 3120 00ba 1F4B     		ldr	r3, .L190
 3121 00bc 5B69     		ldr	r3, [r3, #20]
 3122              		.loc 1 1291 13
 3123 00be 0020     		movs	r0, #0
 3124 00c0 9847     		blx	r3
 3125              	.LVL4:
 3126              	.L185:
1292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* HXTAL stable interrupt handler */
1296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_HXTALSTB)) {
 3127              		.loc 1 1296 15
 3128 00c2 40F20320 		movw	r0, #515
 3129 00c6 FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3130 00ca 0346     		mov	r3, r0
 3131              		.loc 1 1296 7
 3132 00cc 012B     		cmp	r3, #1
 3133 00ce 0BD1     		bne	.L186
1297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_HXTALSTB_CLR);
 3134              		.loc 1 1297 9
 3135 00d0 40F21320 		movw	r0, #531
 3136 00d4 FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.hxtal_stable_handle) {
 3137              		.loc 1 1298 27
 3138 00d8 174B     		ldr	r3, .L190
 3139 00da 9B69     		ldr	r3, [r3, #24]
 3140              		.loc 1 1298 11
 3141 00dc 002B     		cmp	r3, #0
 3142 00de 03D0     		beq	.L186
1299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.hxtal_stable_handle(NULL);
 3143              		.loc 1 1299 20
 3144 00e0 154B     		ldr	r3, .L190
 3145 00e2 9B69     		ldr	r3, [r3, #24]
 3146              		.loc 1 1299 13
 3147 00e4 0020     		movs	r0, #0
 3148 00e6 9847     		blx	r3
 3149              	.LVL5:
 3150              	.L186:
1300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* PLL stable interrupt handler */
1304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_PLLSTB)) {
 3151              		.loc 1 1304 15
 3152 00e8 4FF40170 		mov	r0, #516
 3153 00ec FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3154 00f0 0346     		mov	r3, r0
 3155              		.loc 1 1304 7
 3156 00f2 012B     		cmp	r3, #1
 3157 00f4 0BD1     		bne	.L187
1305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_PLLSTB_CLR);
 3158              		.loc 1 1305 9
 3159 00f6 4FF40570 		mov	r0, #532
 3160 00fa FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.pll_stable_handle) {
 3161              		.loc 1 1306 27
 3162 00fe 0E4B     		ldr	r3, .L190
 3163 0100 1B68     		ldr	r3, [r3]
 3164              		.loc 1 1306 11
 3165 0102 002B     		cmp	r3, #0
 3166 0104 03D0     		beq	.L187
1307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.pll_stable_handle(NULL);
 3167              		.loc 1 1307 20
 3168 0106 0C4B     		ldr	r3, .L190
 3169 0108 1B68     		ldr	r3, [r3]
 3170              		.loc 1 1307 13
 3171 010a 0020     		movs	r0, #0
 3172 010c 9847     		blx	r3
 3173              	.LVL6:
 3174              	.L187:
1308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* HXTAL stuck interrupt handler */
1312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(SET == hals_rcu_interrupt_flag_get(RCU_INT_FLAG_CKM)) {
 3175              		.loc 1 1312 15
 3176 010e 40F20720 		movw	r0, #519
 3177 0112 FFF7FEFF 		bl	hals_rcu_interrupt_flag_get
 3178 0116 0346     		mov	r3, r0
 3179              		.loc 1 1312 7
 3180 0118 012B     		cmp	r3, #1
 3181 011a 0BD1     		bne	.L189
1313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_flag_clear(RCU_INT_FLAG_CKM_CLR);
 3182              		.loc 1 1313 9
 3183 011c 40F21720 		movw	r0, #535
 3184 0120 FFF7FEFF 		bl	hals_rcu_interrupt_flag_clear
1314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(NULL != rcu_irq.hxtal_stuck_handle) {
 3185              		.loc 1 1314 27
 3186 0124 044B     		ldr	r3, .L190
 3187 0126 DB69     		ldr	r3, [r3, #28]
 3188              		.loc 1 1314 11
 3189 0128 002B     		cmp	r3, #0
 3190 012a 03D0     		beq	.L189
1315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             rcu_irq.hxtal_stuck_handle(NULL);
 3191              		.loc 1 1315 20
 3192 012c 024B     		ldr	r3, .L190
 3193 012e DB69     		ldr	r3, [r3, #28]
 3194              		.loc 1 1315 13
 3195 0130 0020     		movs	r0, #0
 3196 0132 9847     		blx	r3
 3197              	.LVL7:
 3198              	.L189:
1316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3199              		.loc 1 1318 1
 3200 0134 00BF     		nop
 3201 0136 80BD     		pop	{r7, pc}
 3202              	.L191:
 3203              		.align	2
 3204              	.L190:
 3205 0138 00000000 		.word	rcu_irq
 3206              		.cfi_endproc
 3207              	.LFE135:
 3209              		.section	.text.hal_rcu_irq_handle_set,"ax",%progbits
 3210              		.align	1
 3211              		.global	hal_rcu_irq_handle_set
 3212              		.syntax unified
 3213              		.thumb
 3214              		.thumb_func
 3215              		.fpu softvfp
 3217              	hal_rcu_irq_handle_set:
 3218              	.LFB136:
1319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      set user-defined interrupt callback function,
1322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 which will be registered and called when corresponding interrupt be triggered
1323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  prcu_irq: pointer of RCU interrupt handler structure
1324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_irq_handle_set(hal_rcu_irq_struct *prcu_irq)
1328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3219              		.loc 1 1328 1
 3220              		.cfi_startproc
 3221              		@ args = 0, pretend = 0, frame = 8
 3222              		@ frame_needed = 1, uses_anonymous_args = 0
 3223 0000 80B5     		push	{r7, lr}
 3224              		.cfi_def_cfa_offset 8
 3225              		.cfi_offset 7, -8
 3226              		.cfi_offset 14, -4
 3227 0002 82B0     		sub	sp, sp, #8
 3228              		.cfi_def_cfa_offset 16
 3229 0004 00AF     		add	r7, sp, #0
 3230              		.cfi_def_cfa_register 7
 3231 0006 7860     		str	r0, [r7, #4]
1329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #if (1 == HAL_PARAMETER_CHECK)
1330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL == prcu_irq) {
1332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         HAL_DEBUGE("parameter [prcu_irq] is a NULL pointer.");
1333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return;
1335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* HXTAL stable interrupt handler set */
1340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->hxtal_stable_handle) {
 3232              		.loc 1 1340 24
 3233 0008 7B68     		ldr	r3, [r7, #4]
 3234 000a 9B69     		ldr	r3, [r3, #24]
 3235              		.loc 1 1340 7
 3236 000c 002B     		cmp	r3, #0
 3237 000e 08D0     		beq	.L193
1341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.hxtal_stable_handle = prcu_irq->hxtal_stable_handle;
 3238              		.loc 1 1341 47
 3239 0010 7B68     		ldr	r3, [r7, #4]
 3240 0012 9B69     		ldr	r3, [r3, #24]
 3241              		.loc 1 1341 37
 3242 0014 484A     		ldr	r2, .L209
 3243 0016 9361     		str	r3, [r2, #24]
1342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_HXTALSTB);
 3244              		.loc 1 1343 9
 3245 0018 40F20B20 		movw	r0, #523
 3246 001c FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3247 0020 06E0     		b	.L194
 3248              	.L193:
1344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.hxtal_stable_handle = NULL;
 3249              		.loc 1 1345 37
 3250 0022 454B     		ldr	r3, .L209
 3251 0024 0022     		movs	r2, #0
 3252 0026 9A61     		str	r2, [r3, #24]
1346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_HXTALSTB);
 3253              		.loc 1 1347 9
 3254 0028 40F20B20 		movw	r0, #523
 3255 002c FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3256              	.L194:
1348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC28M stable interrupt handler set */
1351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->irc28m_stable_handle) {
 3257              		.loc 1 1351 24
 3258 0030 7B68     		ldr	r3, [r7, #4]
 3259 0032 DB68     		ldr	r3, [r3, #12]
 3260              		.loc 1 1351 7
 3261 0034 002B     		cmp	r3, #0
 3262 0036 08D0     		beq	.L195
1352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc28m_stable_handle = prcu_irq->irc28m_stable_handle;
 3263              		.loc 1 1352 48
 3264 0038 7B68     		ldr	r3, [r7, #4]
 3265 003a DB68     		ldr	r3, [r3, #12]
 3266              		.loc 1 1352 38
 3267 003c 3E4A     		ldr	r2, .L209
 3268 003e D360     		str	r3, [r2, #12]
1353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_IRC28MSTB);
 3269              		.loc 1 1354 9
 3270 0040 40F20D20 		movw	r0, #525
 3271 0044 FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3272 0048 06E0     		b	.L196
 3273              	.L195:
1355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc28m_stable_handle = NULL;
 3274              		.loc 1 1356 38
 3275 004a 3B4B     		ldr	r3, .L209
 3276 004c 0022     		movs	r2, #0
 3277 004e DA60     		str	r2, [r3, #12]
1357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_IRC28MSTB);
 3278              		.loc 1 1358 9
 3279 0050 40F20D20 		movw	r0, #525
 3280 0054 FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3281              	.L196:
1359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC48M stable interrupt handler set */
1362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->irc48m_stable_handle) {
 3282              		.loc 1 1362 24
 3283 0058 7B68     		ldr	r3, [r7, #4]
 3284 005a 1B69     		ldr	r3, [r3, #16]
 3285              		.loc 1 1362 7
 3286 005c 002B     		cmp	r3, #0
 3287 005e 08D0     		beq	.L197
1363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc48m_stable_handle = prcu_irq->irc48m_stable_handle;
 3288              		.loc 1 1363 48
 3289 0060 7B68     		ldr	r3, [r7, #4]
 3290 0062 1B69     		ldr	r3, [r3, #16]
 3291              		.loc 1 1363 38
 3292 0064 344A     		ldr	r2, .L209
 3293 0066 1361     		str	r3, [r2, #16]
1364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_IRC48MSTB);
 3294              		.loc 1 1365 9
 3295 0068 43F20E30 		movw	r0, #13070
 3296 006c FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3297 0070 06E0     		b	.L198
 3298              	.L197:
1366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc48m_stable_handle = NULL;
 3299              		.loc 1 1367 38
 3300 0072 314B     		ldr	r3, .L209
 3301 0074 0022     		movs	r2, #0
 3302 0076 1A61     		str	r2, [r3, #16]
1368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_IRC48MSTB);
 3303              		.loc 1 1369 9
 3304 0078 43F20E30 		movw	r0, #13070
 3305 007c FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3306              	.L198:
1370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC40K stable interrupt handler set */
1373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->irc40k_stable_handle) {
 3307              		.loc 1 1373 24
 3308 0080 7B68     		ldr	r3, [r7, #4]
 3309 0082 5B68     		ldr	r3, [r3, #4]
 3310              		.loc 1 1373 7
 3311 0084 002B     		cmp	r3, #0
 3312 0086 08D0     		beq	.L199
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc40k_stable_handle = prcu_irq->irc40k_stable_handle;
 3313              		.loc 1 1374 48
 3314 0088 7B68     		ldr	r3, [r7, #4]
 3315 008a 5B68     		ldr	r3, [r3, #4]
 3316              		.loc 1 1374 38
 3317 008c 2A4A     		ldr	r2, .L209
 3318 008e 5360     		str	r3, [r2, #4]
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_IRC40KSTB);
 3319              		.loc 1 1376 9
 3320 0090 4FF40270 		mov	r0, #520
 3321 0094 FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3322 0098 06E0     		b	.L200
 3323              	.L199:
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc40k_stable_handle = NULL;
 3324              		.loc 1 1378 38
 3325 009a 274B     		ldr	r3, .L209
 3326 009c 0022     		movs	r2, #0
 3327 009e 5A60     		str	r2, [r3, #4]
1379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_IRC40KSTB);
 3328              		.loc 1 1380 9
 3329 00a0 4FF40270 		mov	r0, #520
 3330 00a4 FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3331              	.L200:
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC8M stable interrupt handler set */
1384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->irc8m_stable_handle) {
 3332              		.loc 1 1384 24
 3333 00a8 7B68     		ldr	r3, [r7, #4]
 3334 00aa 9B68     		ldr	r3, [r3, #8]
 3335              		.loc 1 1384 7
 3336 00ac 002B     		cmp	r3, #0
 3337 00ae 08D0     		beq	.L201
1385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc8m_stable_handle = prcu_irq->irc8m_stable_handle;
 3338              		.loc 1 1385 47
 3339 00b0 7B68     		ldr	r3, [r7, #4]
 3340 00b2 9B68     		ldr	r3, [r3, #8]
 3341              		.loc 1 1385 37
 3342 00b4 204A     		ldr	r2, .L209
 3343 00b6 9360     		str	r3, [r2, #8]
1386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_IRC8MSTB);
 3344              		.loc 1 1387 9
 3345 00b8 40F20A20 		movw	r0, #522
 3346 00bc FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3347 00c0 06E0     		b	.L202
 3348              	.L201:
1388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.irc8m_stable_handle = NULL;
 3349              		.loc 1 1389 37
 3350 00c2 1D4B     		ldr	r3, .L209
 3351 00c4 0022     		movs	r2, #0
 3352 00c6 9A60     		str	r2, [r3, #8]
1390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_IRC8MSTB);
 3353              		.loc 1 1391 9
 3354 00c8 40F20A20 		movw	r0, #522
 3355 00cc FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3356              	.L202:
1392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* LXTAL stable interrupt handler set */
1395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->lxtal_stable_handle) {
 3357              		.loc 1 1395 24
 3358 00d0 7B68     		ldr	r3, [r7, #4]
 3359 00d2 5B69     		ldr	r3, [r3, #20]
 3360              		.loc 1 1395 7
 3361 00d4 002B     		cmp	r3, #0
 3362 00d6 08D0     		beq	.L203
1396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.lxtal_stable_handle = prcu_irq->lxtal_stable_handle;
 3363              		.loc 1 1396 47
 3364 00d8 7B68     		ldr	r3, [r7, #4]
 3365 00da 5B69     		ldr	r3, [r3, #20]
 3366              		.loc 1 1396 37
 3367 00dc 164A     		ldr	r2, .L209
 3368 00de 5361     		str	r3, [r2, #20]
1397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_LXTALSTB);
 3369              		.loc 1 1398 9
 3370 00e0 40F20920 		movw	r0, #521
 3371 00e4 FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3372 00e8 06E0     		b	.L204
 3373              	.L203:
1399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.lxtal_stable_handle = NULL;
 3374              		.loc 1 1400 37
 3375 00ea 134B     		ldr	r3, .L209
 3376 00ec 0022     		movs	r2, #0
 3377 00ee 5A61     		str	r2, [r3, #20]
1401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_LXTALSTB);
 3378              		.loc 1 1402 9
 3379 00f0 40F20920 		movw	r0, #521
 3380 00f4 FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3381              	.L204:
1403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* PLL stable interrupt handler set */
1406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->pll_stable_handle) {
 3382              		.loc 1 1406 24
 3383 00f8 7B68     		ldr	r3, [r7, #4]
 3384 00fa 1B68     		ldr	r3, [r3]
 3385              		.loc 1 1406 7
 3386 00fc 002B     		cmp	r3, #0
 3387 00fe 08D0     		beq	.L205
1407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.pll_stable_handle = prcu_irq->pll_stable_handle;
 3388              		.loc 1 1407 45
 3389 0100 7B68     		ldr	r3, [r7, #4]
 3390 0102 1B68     		ldr	r3, [r3]
 3391              		.loc 1 1407 35
 3392 0104 0C4A     		ldr	r2, .L209
 3393 0106 1360     		str	r3, [r2]
1408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_enable(RCU_INT_PLLSTB);
 3394              		.loc 1 1409 9
 3395 0108 4FF40370 		mov	r0, #524
 3396 010c FFF7FEFF 		bl	hals_rcu_interrupt_enable
 3397 0110 06E0     		b	.L206
 3398              	.L205:
1410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.pll_stable_handle = NULL;
 3399              		.loc 1 1411 35
 3400 0112 094B     		ldr	r3, .L209
 3401 0114 0022     		movs	r2, #0
 3402 0116 1A60     		str	r2, [r3]
1412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         hals_rcu_interrupt_disable(RCU_INT_PLLSTB);
 3403              		.loc 1 1413 9
 3404 0118 4FF40370 		mov	r0, #524
 3405 011c FFF7FEFF 		bl	hals_rcu_interrupt_disable
 3406              	.L206:
1414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* HXTAL stuck interrupt handler set */
1417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(NULL != prcu_irq->hxtal_stuck_handle) {
 3407              		.loc 1 1417 24
 3408 0120 7B68     		ldr	r3, [r7, #4]
 3409 0122 DB69     		ldr	r3, [r3, #28]
 3410              		.loc 1 1417 7
 3411 0124 002B     		cmp	r3, #0
 3412 0126 03D0     		beq	.L208
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         rcu_irq.hxtal_stuck_handle = prcu_irq->hxtal_stuck_handle;
 3413              		.loc 1 1418 46
 3414 0128 7B68     		ldr	r3, [r7, #4]
 3415 012a DB69     		ldr	r3, [r3, #28]
 3416              		.loc 1 1418 36
 3417 012c 024A     		ldr	r2, .L209
 3418 012e D361     		str	r3, [r2, #28]
 3419              	.L208:
1419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3420              		.loc 1 1420 1
 3421 0130 00BF     		nop
 3422 0132 0837     		adds	r7, r7, #8
 3423              		.cfi_def_cfa_offset 8
 3424 0134 BD46     		mov	sp, r7
 3425              		.cfi_def_cfa_register 13
 3426              		@ sp needed
 3427 0136 80BD     		pop	{r7, pc}
 3428              	.L210:
 3429              		.align	2
 3430              	.L209:
 3431 0138 00000000 		.word	rcu_irq
 3432              		.cfi_endproc
 3433              	.LFE136:
 3435              		.section	.text.hal_rcu_irq_handle_all_reset,"ax",%progbits
 3436              		.align	1
 3437              		.global	hal_rcu_irq_handle_all_reset
 3438              		.syntax unified
 3439              		.thumb
 3440              		.thumb_func
 3441              		.fpu softvfp
 3443              	hal_rcu_irq_handle_all_reset:
 3444              	.LFB137:
1421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      reset all user-defined interrupt callback function,
1424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 which will be registered and called when corresponding interrupt be triggered
1425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hal_rcu_irq_handle_all_reset(void)
1430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3445              		.loc 1 1430 1
 3446              		.cfi_startproc
 3447              		@ args = 0, pretend = 0, frame = 0
 3448              		@ frame_needed = 1, uses_anonymous_args = 0
 3449              		@ link register save eliminated.
 3450 0000 80B4     		push	{r7}
 3451              		.cfi_def_cfa_offset 4
 3452              		.cfi_offset 7, -4
 3453 0002 00AF     		add	r7, sp, #0
 3454              		.cfi_def_cfa_register 7
1431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset all interrupt handler */
1432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.hxtal_stable_handle = NULL;
 3455              		.loc 1 1432 33
 3456 0004 0D4B     		ldr	r3, .L212
 3457 0006 0022     		movs	r2, #0
 3458 0008 9A61     		str	r2, [r3, #24]
1433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.hxtal_stuck_handle = NULL;
 3459              		.loc 1 1433 32
 3460 000a 0C4B     		ldr	r3, .L212
 3461 000c 0022     		movs	r2, #0
 3462 000e DA61     		str	r2, [r3, #28]
1434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.irc48m_stable_handle = NULL;
 3463              		.loc 1 1434 34
 3464 0010 0A4B     		ldr	r3, .L212
 3465 0012 0022     		movs	r2, #0
 3466 0014 1A61     		str	r2, [r3, #16]
1435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.irc28m_stable_handle = NULL;
 3467              		.loc 1 1435 34
 3468 0016 094B     		ldr	r3, .L212
 3469 0018 0022     		movs	r2, #0
 3470 001a DA60     		str	r2, [r3, #12]
1436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.irc40k_stable_handle = NULL;
 3471              		.loc 1 1436 34
 3472 001c 074B     		ldr	r3, .L212
 3473 001e 0022     		movs	r2, #0
 3474 0020 5A60     		str	r2, [r3, #4]
1437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.irc8m_stable_handle = NULL;
 3475              		.loc 1 1437 33
 3476 0022 064B     		ldr	r3, .L212
 3477 0024 0022     		movs	r2, #0
 3478 0026 9A60     		str	r2, [r3, #8]
1438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.lxtal_stable_handle = NULL;
 3479              		.loc 1 1438 33
 3480 0028 044B     		ldr	r3, .L212
 3481 002a 0022     		movs	r2, #0
 3482 002c 5A61     		str	r2, [r3, #20]
1439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     rcu_irq.pll_stable_handle = NULL;
 3483              		.loc 1 1439 31
 3484 002e 034B     		ldr	r3, .L212
 3485 0030 0022     		movs	r2, #0
 3486 0032 1A60     		str	r2, [r3]
1440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3487              		.loc 1 1440 1
 3488 0034 00BF     		nop
 3489 0036 BD46     		mov	sp, r7
 3490              		.cfi_def_cfa_register 13
 3491              		@ sp needed
 3492 0038 80BC     		pop	{r7}
 3493              		.cfi_restore 7
 3494              		.cfi_def_cfa_offset 0
 3495 003a 7047     		bx	lr
 3496              	.L213:
 3497              		.align	2
 3498              	.L212:
 3499 003c 00000000 		.word	rcu_irq
 3500              		.cfi_endproc
 3501              	.LFE137:
 3503              		.section	.text.hals_rcu_bkp_reset_enable,"ax",%progbits
 3504              		.align	1
 3505              		.global	hals_rcu_bkp_reset_enable
 3506              		.syntax unified
 3507              		.thumb
 3508              		.thumb_func
 3509              		.fpu softvfp
 3511              	hals_rcu_bkp_reset_enable:
 3512              	.LFB138:
1441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      reset the BKP
1444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_bkp_reset_enable(void)
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3513              		.loc 1 1449 1
 3514              		.cfi_startproc
 3515              		@ args = 0, pretend = 0, frame = 0
 3516              		@ frame_needed = 1, uses_anonymous_args = 0
 3517              		@ link register save eliminated.
 3518 0000 80B4     		push	{r7}
 3519              		.cfi_def_cfa_offset 4
 3520              		.cfi_offset 7, -4
 3521 0002 00AF     		add	r7, sp, #0
 3522              		.cfi_def_cfa_register 7
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_BDCTL |= RCU_BDCTL_BKPRST;
 3523              		.loc 1 1450 15
 3524 0004 044B     		ldr	r3, .L215
 3525 0006 1B68     		ldr	r3, [r3]
 3526 0008 034A     		ldr	r2, .L215
 3527 000a 43F48033 		orr	r3, r3, #65536
 3528 000e 1360     		str	r3, [r2]
1451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3529              		.loc 1 1451 1
 3530 0010 00BF     		nop
 3531 0012 BD46     		mov	sp, r7
 3532              		.cfi_def_cfa_register 13
 3533              		@ sp needed
 3534 0014 80BC     		pop	{r7}
 3535              		.cfi_restore 7
 3536              		.cfi_def_cfa_offset 0
 3537 0016 7047     		bx	lr
 3538              	.L216:
 3539              		.align	2
 3540              	.L215:
 3541 0018 20100240 		.word	1073877024
 3542              		.cfi_endproc
 3543              	.LFE138:
 3545              		.section	.text.hals_rcu_bkp_reset_disable,"ax",%progbits
 3546              		.align	1
 3547              		.global	hals_rcu_bkp_reset_disable
 3548              		.syntax unified
 3549              		.thumb
 3550              		.thumb_func
 3551              		.fpu softvfp
 3553              	hals_rcu_bkp_reset_disable:
 3554              	.LFB139:
1452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      disable the BKP reset
1455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_bkp_reset_disable(void)
1460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3555              		.loc 1 1460 1
 3556              		.cfi_startproc
 3557              		@ args = 0, pretend = 0, frame = 0
 3558              		@ frame_needed = 1, uses_anonymous_args = 0
 3559              		@ link register save eliminated.
 3560 0000 80B4     		push	{r7}
 3561              		.cfi_def_cfa_offset 4
 3562              		.cfi_offset 7, -4
 3563 0002 00AF     		add	r7, sp, #0
 3564              		.cfi_def_cfa_register 7
1461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_BDCTL &= ~RCU_BDCTL_BKPRST;
 3565              		.loc 1 1461 15
 3566 0004 044B     		ldr	r3, .L218
 3567 0006 1B68     		ldr	r3, [r3]
 3568 0008 034A     		ldr	r2, .L218
 3569 000a 23F48033 		bic	r3, r3, #65536
 3570 000e 1360     		str	r3, [r2]
1462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3571              		.loc 1 1462 1
 3572 0010 00BF     		nop
 3573 0012 BD46     		mov	sp, r7
 3574              		.cfi_def_cfa_register 13
 3575              		@ sp needed
 3576 0014 80BC     		pop	{r7}
 3577              		.cfi_restore 7
 3578              		.cfi_def_cfa_offset 0
 3579 0016 7047     		bx	lr
 3580              	.L219:
 3581              		.align	2
 3582              	.L218:
 3583 0018 20100240 		.word	1073877024
 3584              		.cfi_endproc
 3585              	.LFE139:
 3587              		.section	.text.hals_rcu_flag_get,"ax",%progbits
 3588              		.align	1
 3589              		.global	hals_rcu_flag_get
 3590              		.syntax unified
 3591              		.thumb
 3592              		.thumb_func
 3593              		.fpu softvfp
 3595              	hals_rcu_flag_get:
 3596              	.LFB140:
1463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the clock stabilization and periphral reset flags
1466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  flag: the clock stabilization and periphral reset flags, refer to rcu_flag_enum
1467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_IRC40KSTB: IRC40K stabilization flag
1469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_LXTALSTB: LXTAL stabilization flag
1470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_IRC8MSTB: IRC8M stabilization flag
1471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_HXTALSTB: HXTAL stabilization flag
1472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_PLLSTB: PLL stabilization flag
1473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_IRC28MSTB: IRC28M stabilization flag
1474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_IRC48MSTB: IRC48M stabilization flag
1475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_V12RST: V12 domain power reset flag
1476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_OBLRST: option byte loader reset flag
1477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_EPRST: external pin reset flag
1478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_PORRST: power reset flag
1479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_SWRST: software reset flag
1480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_FWDGTRST: free watchdog timer reset flag
1481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_WWDGTRST: window watchdog timer reset flag
1482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_FLAG_LPRST: low-power reset flag
1483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     FlagStatus: SET or RESET
1485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** FlagStatus hals_rcu_flag_get(hal_rcu_flag_enum flag)
1487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3597              		.loc 1 1487 1
 3598              		.cfi_startproc
 3599              		@ args = 0, pretend = 0, frame = 8
 3600              		@ frame_needed = 1, uses_anonymous_args = 0
 3601              		@ link register save eliminated.
 3602 0000 80B4     		push	{r7}
 3603              		.cfi_def_cfa_offset 4
 3604              		.cfi_offset 7, -4
 3605 0002 83B0     		sub	sp, sp, #12
 3606              		.cfi_def_cfa_offset 16
 3607 0004 00AF     		add	r7, sp, #0
 3608              		.cfi_def_cfa_register 7
 3609 0006 0346     		mov	r3, r0
 3610 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_REG_VAL(flag) & BIT(RCU_BIT_POS(flag)))) {
 3611              		.loc 1 1488 18
 3612 000a FB88     		ldrh	r3, [r7, #6]
 3613 000c 9B09     		lsrs	r3, r3, #6
 3614 000e 9BB2     		uxth	r3, r3
 3615 0010 03F18043 		add	r3, r3, #1073741824
 3616 0014 03F50433 		add	r3, r3, #135168
 3617 0018 1A68     		ldr	r2, [r3]
 3618              		.loc 1 1488 38
 3619 001a FB88     		ldrh	r3, [r7, #6]
 3620 001c 03F01F03 		and	r3, r3, #31
 3621              		.loc 1 1488 14
 3622 0020 22FA03F3 		lsr	r3, r2, r3
 3623 0024 03F00103 		and	r3, r3, #1
 3624              		.loc 1 1488 7
 3625 0028 002B     		cmp	r3, #0
 3626 002a 01D0     		beq	.L221
1489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return SET;
 3627              		.loc 1 1489 16
 3628 002c 0123     		movs	r3, #1
 3629 002e 00E0     		b	.L222
 3630              	.L221:
1490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
1491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return RESET;
 3631              		.loc 1 1491 16
 3632 0030 0023     		movs	r3, #0
 3633              	.L222:
1492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3634              		.loc 1 1493 1
 3635 0032 1846     		mov	r0, r3
 3636 0034 0C37     		adds	r7, r7, #12
 3637              		.cfi_def_cfa_offset 4
 3638 0036 BD46     		mov	sp, r7
 3639              		.cfi_def_cfa_register 13
 3640              		@ sp needed
 3641 0038 80BC     		pop	{r7}
 3642              		.cfi_restore 7
 3643              		.cfi_def_cfa_offset 0
 3644 003a 7047     		bx	lr
 3645              		.cfi_endproc
 3646              	.LFE140:
 3648              		.section	.text.hals_rcu_all_reset_flag_clear,"ax",%progbits
 3649              		.align	1
 3650              		.global	hals_rcu_all_reset_flag_clear
 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3654              		.fpu softvfp
 3656              	hals_rcu_all_reset_flag_clear:
 3657              	.LFB141:
1494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      clear the reset flag
1497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_all_reset_flag_clear(void)
1502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3658              		.loc 1 1502 1
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 0
 3661              		@ frame_needed = 1, uses_anonymous_args = 0
 3662              		@ link register save eliminated.
 3663 0000 80B4     		push	{r7}
 3664              		.cfi_def_cfa_offset 4
 3665              		.cfi_offset 7, -4
 3666 0002 00AF     		add	r7, sp, #0
 3667              		.cfi_def_cfa_register 7
1503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_RSTSCK |= RCU_RSTSCK_RSTFC;
 3668              		.loc 1 1503 16
 3669 0004 044B     		ldr	r3, .L224
 3670 0006 1B68     		ldr	r3, [r3]
 3671 0008 034A     		ldr	r2, .L224
 3672 000a 43F08073 		orr	r3, r3, #16777216
 3673 000e 1360     		str	r3, [r2]
1504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 3674              		.loc 1 1504 1
 3675 0010 00BF     		nop
 3676 0012 BD46     		mov	sp, r7
 3677              		.cfi_def_cfa_register 13
 3678              		@ sp needed
 3679 0014 80BC     		pop	{r7}
 3680              		.cfi_restore 7
 3681              		.cfi_def_cfa_offset 0
 3682 0016 7047     		bx	lr
 3683              	.L225:
 3684              		.align	2
 3685              	.L224:
 3686 0018 24100240 		.word	1073877028
 3687              		.cfi_endproc
 3688              	.LFE141:
 3690              		.section	.text.hals_rcu_osci_stab_wait,"ax",%progbits
 3691              		.align	1
 3692              		.global	hals_rcu_osci_stab_wait
 3693              		.syntax unified
 3694              		.thumb
 3695              		.thumb_func
 3696              		.fpu softvfp
 3698              	hals_rcu_osci_stab_wait:
 3699              	.LFB142:
1505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      wait until oscillator stabilization flags is SET
1508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  osci: oscillator types, refer to rcu_osci_type_enum
1509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_HXTAL: HXTAL
1511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_LXTAL: LXTAL
1512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC8M: IRC8M
1513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC28M: IRC28M
1514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC48M: IRC48M
1515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC40K: IRC40K
1516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLL_CK: PLL
1517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     ErrStatus: SUCCESS or ERROR
1519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** ErrStatus hals_rcu_osci_stab_wait(hal_rcu_osci_type_enum osci)
1521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 3700              		.loc 1 1521 1
 3701              		.cfi_startproc
 3702              		@ args = 0, pretend = 0, frame = 16
 3703              		@ frame_needed = 1, uses_anonymous_args = 0
 3704 0000 80B5     		push	{r7, lr}
 3705              		.cfi_def_cfa_offset 8
 3706              		.cfi_offset 7, -8
 3707              		.cfi_offset 14, -4
 3708 0002 84B0     		sub	sp, sp, #16
 3709              		.cfi_def_cfa_offset 24
 3710 0004 00AF     		add	r7, sp, #0
 3711              		.cfi_def_cfa_register 7
 3712 0006 0346     		mov	r3, r0
 3713 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t stb_cnt = 0U;
 3714              		.loc 1 1522 14
 3715 000a 0023     		movs	r3, #0
 3716 000c FB60     		str	r3, [r7, #12]
1523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     ErrStatus reval = ERROR;
 3717              		.loc 1 1523 15
 3718 000e 0023     		movs	r3, #0
 3719 0010 FB72     		strb	r3, [r7, #11]
1524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     FlagStatus osci_stat = RESET;
 3720              		.loc 1 1524 16
 3721 0012 0023     		movs	r3, #0
 3722 0014 BB72     		strb	r3, [r7, #10]
1525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(osci) {
 3723              		.loc 1 1525 5
 3724 0016 FB88     		ldrh	r3, [r7, #6]
 3725 0018 43F21002 		movw	r2, #12304
 3726 001c 9342     		cmp	r3, r2
 3727 001e 00F09780 		beq	.L251
 3728 0022 43F21002 		movw	r2, #12304
 3729 0026 9342     		cmp	r3, r2
 3730 0028 00F3D580 		bgt	.L264
 3731 002c B3F5506F 		cmp	r3, #3328
 3732 0030 74D0     		beq	.L247
 3733 0032 B3F5506F 		cmp	r3, #3328
 3734 0036 00F3CE80 		bgt	.L264
 3735 003a B3F5106F 		cmp	r3, #2304
 3736 003e 00F0A180 		beq	.L255
 3737 0042 B3F5106F 		cmp	r3, #2304
 3738 0046 00F3C680 		bgt	.L264
 3739 004a B3F5006F 		cmp	r3, #2048
 3740 004e 31D0     		beq	.L239
 3741 0050 B3F5006F 		cmp	r3, #2048
 3742 0054 00F3BF80 		bgt	.L264
 3743 0058 182B     		cmp	r3, #24
 3744 005a 00F0AC80 		beq	.L259
 3745 005e 182B     		cmp	r3, #24
 3746 0060 00F3B980 		bgt	.L264
 3747 0064 002B     		cmp	r3, #0
 3748 0066 40D0     		beq	.L243
 3749 0068 102B     		cmp	r3, #16
 3750 006a 40F0B480 		bne	.L264
1526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_HXTAL:
1527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* wait until HXTAL is stabilization and osci_stat is not more than timeout */
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (HXTAL_STARTUP_TIMEOUT != stb_cnt)) {
 3751              		.loc 1 1528 14
 3752 006e 07E0     		b	.L234
 3753              	.L236:
1529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_HXTALSTB);
 3754              		.loc 1 1529 25
 3755 0070 1120     		movs	r0, #17
 3756 0072 FFF7FEFF 		bl	hals_rcu_flag_get
 3757 0076 0346     		mov	r3, r0
 3758 0078 BB72     		strb	r3, [r7, #10]
1530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3759              		.loc 1 1530 20
 3760 007a FB68     		ldr	r3, [r7, #12]
 3761 007c 0133     		adds	r3, r3, #1
 3762 007e FB60     		str	r3, [r7, #12]
 3763              	.L234:
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_HXTALSTB);
 3764              		.loc 1 1528 14
 3765 0080 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3766 0082 002B     		cmp	r3, #0
 3767 0084 03D1     		bne	.L235
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_HXTALSTB);
 3768              		.loc 1 1528 36 discriminator 1
 3769 0086 FB68     		ldr	r3, [r7, #12]
 3770 0088 B3F5006F 		cmp	r3, #2048
 3771 008c F0D1     		bne	.L236
 3772              	.L235:
1531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_HXTALSTB)) {
 3773              		.loc 1 1532 21
 3774 008e 1120     		movs	r0, #17
 3775 0090 FFF7FEFF 		bl	hals_rcu_flag_get
 3776 0094 0346     		mov	r3, r0
 3777              		.loc 1 1532 11
 3778 0096 002B     		cmp	r3, #0
 3779 0098 00F09F80 		beq	.L265
1533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3780              		.loc 1 1533 19
 3781 009c 0123     		movs	r3, #1
 3782 009e FB72     		strb	r3, [r7, #11]
1534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3783              		.loc 1 1535 9
 3784 00a0 9BE0     		b	.L265
 3785              	.L241:
1536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait LXTAL stable */
1537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_LXTAL:
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (LXTAL_STARTUP_TIMEOUT != stb_cnt)) {
1539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_LXTALSTB);
 3786              		.loc 1 1539 25
 3787 00a2 40F60100 		movw	r0, #2049
 3788 00a6 FFF7FEFF 		bl	hals_rcu_flag_get
 3789 00aa 0346     		mov	r3, r0
 3790 00ac BB72     		strb	r3, [r7, #10]
1540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3791              		.loc 1 1540 20
 3792 00ae FB68     		ldr	r3, [r7, #12]
 3793 00b0 0133     		adds	r3, r3, #1
 3794 00b2 FB60     		str	r3, [r7, #12]
 3795              	.L239:
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_LXTALSTB);
 3796              		.loc 1 1538 14
 3797 00b4 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3798 00b6 002B     		cmp	r3, #0
 3799 00b8 04D1     		bne	.L240
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_LXTALSTB);
 3800              		.loc 1 1538 36 discriminator 1
 3801 00ba FB68     		ldr	r3, [r7, #12]
 3802 00bc 6FF07C42 		mvn	r2, #-67108864
 3803 00c0 9342     		cmp	r3, r2
 3804 00c2 EED1     		bne	.L241
 3805              	.L240:
1541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check whether flag is set or not */
1544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_LXTALSTB)) {
 3806              		.loc 1 1544 21
 3807 00c4 40F60100 		movw	r0, #2049
 3808 00c8 FFF7FEFF 		bl	hals_rcu_flag_get
 3809 00cc 0346     		mov	r3, r0
 3810              		.loc 1 1544 11
 3811 00ce 002B     		cmp	r3, #0
 3812 00d0 00F08580 		beq	.L266
1545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3813              		.loc 1 1545 19
 3814 00d4 0123     		movs	r3, #1
 3815 00d6 FB72     		strb	r3, [r7, #11]
1546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3816              		.loc 1 1547 9
 3817 00d8 81E0     		b	.L266
 3818              	.L245:
1548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait IRC8M stable */
1550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC8M:
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (IRC8M_STARTUP_TIMEOUT != stb_cnt)) {
1552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC8MSTB);
 3819              		.loc 1 1552 25
 3820 00da 0120     		movs	r0, #1
 3821 00dc FFF7FEFF 		bl	hals_rcu_flag_get
 3822 00e0 0346     		mov	r3, r0
 3823 00e2 BB72     		strb	r3, [r7, #10]
1553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3824              		.loc 1 1553 20
 3825 00e4 FB68     		ldr	r3, [r7, #12]
 3826 00e6 0133     		adds	r3, r3, #1
 3827 00e8 FB60     		str	r3, [r7, #12]
 3828              	.L243:
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC8MSTB);
 3829              		.loc 1 1551 14
 3830 00ea BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3831 00ec 002B     		cmp	r3, #0
 3832 00ee 03D1     		bne	.L244
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC8MSTB);
 3833              		.loc 1 1551 36 discriminator 1
 3834 00f0 FB68     		ldr	r3, [r7, #12]
 3835 00f2 B3F5A06F 		cmp	r3, #1280
 3836 00f6 F0D1     		bne	.L245
 3837              	.L244:
1554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check whether flag is set or not */
1557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_IRC8MSTB)) {
 3838              		.loc 1 1557 21
 3839 00f8 0120     		movs	r0, #1
 3840 00fa FFF7FEFF 		bl	hals_rcu_flag_get
 3841 00fe 0346     		mov	r3, r0
 3842              		.loc 1 1557 11
 3843 0100 002B     		cmp	r3, #0
 3844 0102 6ED0     		beq	.L267
1558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3845              		.loc 1 1558 19
 3846 0104 0123     		movs	r3, #1
 3847 0106 FB72     		strb	r3, [r7, #11]
1559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3848              		.loc 1 1560 9
 3849 0108 6BE0     		b	.L267
 3850              	.L249:
1561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait IRC28M stable */
1563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC28M:
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (OSC_STARTUP_TIMEOUT != stb_cnt)) {
1565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC28MSTB);
 3851              		.loc 1 1565 25
 3852 010a 40F60150 		movw	r0, #3329
 3853 010e FFF7FEFF 		bl	hals_rcu_flag_get
 3854 0112 0346     		mov	r3, r0
 3855 0114 BB72     		strb	r3, [r7, #10]
1566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3856              		.loc 1 1566 20
 3857 0116 FB68     		ldr	r3, [r7, #12]
 3858 0118 0133     		adds	r3, r3, #1
 3859 011a FB60     		str	r3, [r7, #12]
 3860              	.L247:
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC28MSTB);
 3861              		.loc 1 1564 14
 3862 011c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3863 011e 002B     		cmp	r3, #0
 3864 0120 03D1     		bne	.L248
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC28MSTB);
 3865              		.loc 1 1564 36 discriminator 1
 3866 0122 FB68     		ldr	r3, [r7, #12]
 3867 0124 364A     		ldr	r2, .L272
 3868 0126 9342     		cmp	r3, r2
 3869 0128 EFD1     		bne	.L249
 3870              	.L248:
1567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check whether flag is set or not */
1570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_IRC28MSTB)) {
 3871              		.loc 1 1570 21
 3872 012a 40F60150 		movw	r0, #3329
 3873 012e FFF7FEFF 		bl	hals_rcu_flag_get
 3874 0132 0346     		mov	r3, r0
 3875              		.loc 1 1570 11
 3876 0134 002B     		cmp	r3, #0
 3877 0136 56D0     		beq	.L268
1571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3878              		.loc 1 1571 19
 3879 0138 0123     		movs	r3, #1
 3880 013a FB72     		strb	r3, [r7, #11]
1572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3881              		.loc 1 1573 9
 3882 013c 53E0     		b	.L268
 3883              	.L253:
1574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait IRC48M stable */
1575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC48M:
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (OSC_STARTUP_TIMEOUT != stb_cnt)) {
1577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC48MSTB);
 3884              		.loc 1 1577 25
 3885 013e 43F21100 		movw	r0, #12305
 3886 0142 FFF7FEFF 		bl	hals_rcu_flag_get
 3887 0146 0346     		mov	r3, r0
 3888 0148 BB72     		strb	r3, [r7, #10]
1578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3889              		.loc 1 1578 20
 3890 014a FB68     		ldr	r3, [r7, #12]
 3891 014c 0133     		adds	r3, r3, #1
 3892 014e FB60     		str	r3, [r7, #12]
 3893              	.L251:
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC48MSTB);
 3894              		.loc 1 1576 14
 3895 0150 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3896 0152 002B     		cmp	r3, #0
 3897 0154 03D1     		bne	.L252
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC48MSTB);
 3898              		.loc 1 1576 36 discriminator 1
 3899 0156 FB68     		ldr	r3, [r7, #12]
 3900 0158 294A     		ldr	r2, .L272
 3901 015a 9342     		cmp	r3, r2
 3902 015c EFD1     		bne	.L253
 3903              	.L252:
1579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check whether flag is set or not */
1582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_IRC48MSTB)) {
 3904              		.loc 1 1582 21
 3905 015e 43F21100 		movw	r0, #12305
 3906 0162 FFF7FEFF 		bl	hals_rcu_flag_get
 3907 0166 0346     		mov	r3, r0
 3908              		.loc 1 1582 11
 3909 0168 002B     		cmp	r3, #0
 3910 016a 3ED0     		beq	.L269
1583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3911              		.loc 1 1583 19
 3912 016c 0123     		movs	r3, #1
 3913 016e FB72     		strb	r3, [r7, #11]
1584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3914              		.loc 1 1585 9
 3915 0170 3BE0     		b	.L269
 3916              	.L257:
1586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait IRC40K stable */
1588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC40K:
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (OSC_STARTUP_TIMEOUT != stb_cnt)) {
1590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC40KSTB);
 3917              		.loc 1 1590 25
 3918 0172 40F60110 		movw	r0, #2305
 3919 0176 FFF7FEFF 		bl	hals_rcu_flag_get
 3920 017a 0346     		mov	r3, r0
 3921 017c BB72     		strb	r3, [r7, #10]
1591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3922              		.loc 1 1591 20
 3923 017e FB68     		ldr	r3, [r7, #12]
 3924 0180 0133     		adds	r3, r3, #1
 3925 0182 FB60     		str	r3, [r7, #12]
 3926              	.L255:
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC40KSTB);
 3927              		.loc 1 1589 14
 3928 0184 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3929 0186 002B     		cmp	r3, #0
 3930 0188 03D1     		bne	.L256
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_IRC40KSTB);
 3931              		.loc 1 1589 36 discriminator 1
 3932 018a FB68     		ldr	r3, [r7, #12]
 3933 018c 1C4A     		ldr	r2, .L272
 3934 018e 9342     		cmp	r3, r2
 3935 0190 EFD1     		bne	.L257
 3936              	.L256:
1592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check whether flag is set or not */
1595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_IRC40KSTB)) {
 3937              		.loc 1 1595 21
 3938 0192 40F60110 		movw	r0, #2305
 3939 0196 FFF7FEFF 		bl	hals_rcu_flag_get
 3940 019a 0346     		mov	r3, r0
 3941              		.loc 1 1595 11
 3942 019c 002B     		cmp	r3, #0
 3943 019e 26D0     		beq	.L270
1596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3944              		.loc 1 1596 19
 3945 01a0 0123     		movs	r3, #1
 3946 01a2 FB72     		strb	r3, [r7, #11]
1597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3947              		.loc 1 1598 9
 3948 01a4 23E0     		b	.L270
 3949              	.L261:
1599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait PLL stable */
1601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PLL_CK:
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         while((RESET == osci_stat) && (OSC_STARTUP_TIMEOUT != stb_cnt)) {
1603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_PLLSTB);
 3950              		.loc 1 1603 25
 3951 01a6 1920     		movs	r0, #25
 3952 01a8 FFF7FEFF 		bl	hals_rcu_flag_get
 3953 01ac 0346     		mov	r3, r0
 3954 01ae BB72     		strb	r3, [r7, #10]
1604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             stb_cnt++;
 3955              		.loc 1 1604 20
 3956 01b0 FB68     		ldr	r3, [r7, #12]
 3957 01b2 0133     		adds	r3, r3, #1
 3958 01b4 FB60     		str	r3, [r7, #12]
 3959              	.L259:
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_PLLSTB);
 3960              		.loc 1 1602 14
 3961 01b6 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3962 01b8 002B     		cmp	r3, #0
 3963 01ba 03D1     		bne	.L260
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             osci_stat = hals_rcu_flag_get(RCU_FLAG_PLLSTB);
 3964              		.loc 1 1602 36 discriminator 1
 3965 01bc FB68     		ldr	r3, [r7, #12]
 3966 01be 104A     		ldr	r2, .L272
 3967 01c0 9342     		cmp	r3, r2
 3968 01c2 F0D1     		bne	.L261
 3969              	.L260:
1605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* check whether flag is set or not */
1608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RESET != hals_rcu_flag_get(RCU_FLAG_PLLSTB)) {
 3970              		.loc 1 1608 21
 3971 01c4 1920     		movs	r0, #25
 3972 01c6 FFF7FEFF 		bl	hals_rcu_flag_get
 3973 01ca 0346     		mov	r3, r0
 3974              		.loc 1 1608 11
 3975 01cc 002B     		cmp	r3, #0
 3976 01ce 10D0     		beq	.L271
1609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             reval = SUCCESS;
 3977              		.loc 1 1609 19
 3978 01d0 0123     		movs	r3, #1
 3979 01d2 FB72     		strb	r3, [r7, #11]
1610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3980              		.loc 1 1611 9
 3981 01d4 0DE0     		b	.L271
 3982              	.L264:
1612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
1614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 3983              		.loc 1 1614 9
 3984 01d6 00BF     		nop
 3985 01d8 0CE0     		b	.L238
 3986              	.L265:
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait LXTAL stable */
 3987              		.loc 1 1535 9
 3988 01da 00BF     		nop
 3989 01dc 0AE0     		b	.L238
 3990              	.L266:
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 3991              		.loc 1 1547 9
 3992 01de 00BF     		nop
 3993 01e0 08E0     		b	.L238
 3994              	.L267:
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 3995              		.loc 1 1560 9
 3996 01e2 00BF     		nop
 3997 01e4 06E0     		b	.L238
 3998              	.L268:
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* wait IRC48M stable */
 3999              		.loc 1 1573 9
 4000 01e6 00BF     		nop
 4001 01e8 04E0     		b	.L238
 4002              	.L269:
1585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 4003              		.loc 1 1585 9
 4004 01ea 00BF     		nop
 4005 01ec 02E0     		b	.L238
 4006              	.L270:
1598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 4007              		.loc 1 1598 9
 4008 01ee 00BF     		nop
 4009 01f0 00E0     		b	.L238
 4010              	.L271:
1611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
 4011              		.loc 1 1611 9
 4012 01f2 00BF     		nop
 4013              	.L238:
1615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* return value */
1617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return reval;
 4014              		.loc 1 1617 12
 4015 01f4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 4016              		.loc 1 1618 1
 4017 01f6 1846     		mov	r0, r3
 4018 01f8 1037     		adds	r7, r7, #16
 4019              		.cfi_def_cfa_offset 8
 4020 01fa BD46     		mov	sp, r7
 4021              		.cfi_def_cfa_register 13
 4022              		@ sp needed
 4023 01fc 80BD     		pop	{r7, pc}
 4024              	.L273:
 4025 01fe 00BF     		.align	2
 4026              	.L272:
 4027 0200 FFFF0F00 		.word	1048575
 4028              		.cfi_endproc
 4029              	.LFE142:
 4031              		.section	.text.hals_rcu_rtc_clock_config,"ax",%progbits
 4032              		.align	1
 4033              		.global	hals_rcu_rtc_clock_config
 4034              		.syntax unified
 4035              		.thumb
 4036              		.thumb_func
 4037              		.fpu softvfp
 4039              	hals_rcu_rtc_clock_config:
 4040              	.LFB143:
1619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the RTC clock source selection
1622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  rtc_clock_source: RTC clock source selection
1623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_RTCSRC_NONE: no clock selected
1625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_RTCSRC_LXTAL: CK_LXTAL selected as RTC source clock
1626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_RTCSRC_IRC40K: CK_IRC40K selected as RTC source clock
1627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_RTCSRC_HXTAL_DIV32: CK_HXTAL/32 selected as RTC source clock
1628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_rtc_clock_config(uint32_t rtc_clock_source)
1632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 4041              		.loc 1 1632 1
 4042              		.cfi_startproc
 4043              		@ args = 0, pretend = 0, frame = 8
 4044              		@ frame_needed = 1, uses_anonymous_args = 0
 4045              		@ link register save eliminated.
 4046 0000 80B4     		push	{r7}
 4047              		.cfi_def_cfa_offset 4
 4048              		.cfi_offset 7, -4
 4049 0002 83B0     		sub	sp, sp, #12
 4050              		.cfi_def_cfa_offset 16
 4051 0004 00AF     		add	r7, sp, #0
 4052              		.cfi_def_cfa_register 7
 4053 0006 7860     		str	r0, [r7, #4]
1633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the RTCSRC bits and set according to rtc_clock_source */
1634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_BDCTL &= ~RCU_BDCTL_RTCSRC;
 4054              		.loc 1 1634 15
 4055 0008 084B     		ldr	r3, .L275
 4056 000a 1B68     		ldr	r3, [r3]
 4057 000c 074A     		ldr	r2, .L275
 4058 000e 23F44073 		bic	r3, r3, #768
 4059 0012 1360     		str	r3, [r2]
1635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_BDCTL |= rtc_clock_source;
 4060              		.loc 1 1635 15
 4061 0014 054B     		ldr	r3, .L275
 4062 0016 1A68     		ldr	r2, [r3]
 4063 0018 0449     		ldr	r1, .L275
 4064 001a 7B68     		ldr	r3, [r7, #4]
 4065 001c 1343     		orrs	r3, r3, r2
 4066 001e 0B60     		str	r3, [r1]
1636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 4067              		.loc 1 1636 1
 4068 0020 00BF     		nop
 4069 0022 0C37     		adds	r7, r7, #12
 4070              		.cfi_def_cfa_offset 4
 4071 0024 BD46     		mov	sp, r7
 4072              		.cfi_def_cfa_register 13
 4073              		@ sp needed
 4074 0026 80BC     		pop	{r7}
 4075              		.cfi_restore 7
 4076              		.cfi_def_cfa_offset 0
 4077 0028 7047     		bx	lr
 4078              	.L276:
 4079 002a 00BF     		.align	2
 4080              	.L275:
 4081 002c 20100240 		.word	1073877024
 4082              		.cfi_endproc
 4083              	.LFE143:
 4085              		.section	.text.hals_rcu_usart_clock_config,"ax",%progbits
 4086              		.align	1
 4087              		.global	hals_rcu_usart_clock_config
 4088              		.syntax unified
 4089              		.thumb
 4090              		.thumb_func
 4091              		.fpu softvfp
 4093              	hals_rcu_usart_clock_config:
 4094              	.LFB144:
1637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the USART clock source selection
1640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_usart: USART clock source selection
1641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USART0SRC_CKAPB2: CK_USART0 select CK_APB2
1643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USART0SRC_CKSYS: CK_USART0 select CK_SYS
1644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USART0SRC_LXTAL: CK_USART0 select CK_LXTAL
1645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USART0SRC_IRC8M: CK_USART0 select CK_IRC8M
1646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_usart_clock_config(uint32_t ck_usart)
1650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 4095              		.loc 1 1650 1
 4096              		.cfi_startproc
 4097              		@ args = 0, pretend = 0, frame = 8
 4098              		@ frame_needed = 1, uses_anonymous_args = 0
 4099              		@ link register save eliminated.
 4100 0000 80B4     		push	{r7}
 4101              		.cfi_def_cfa_offset 4
 4102              		.cfi_offset 7, -4
 4103 0002 83B0     		sub	sp, sp, #12
 4104              		.cfi_def_cfa_offset 16
 4105 0004 00AF     		add	r7, sp, #0
 4106              		.cfi_def_cfa_register 7
 4107 0006 7860     		str	r0, [r7, #4]
1651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the USART0SEL bits and set according to ck_usart */
1652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~RCU_CFG2_USART0SEL;
 4108              		.loc 1 1652 14
 4109 0008 084B     		ldr	r3, .L278
 4110 000a 1B68     		ldr	r3, [r3]
 4111 000c 074A     		ldr	r2, .L278
 4112 000e 23F00303 		bic	r3, r3, #3
 4113 0012 1360     		str	r3, [r2]
1653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 |= ck_usart;
 4114              		.loc 1 1653 14
 4115 0014 054B     		ldr	r3, .L278
 4116 0016 1A68     		ldr	r2, [r3]
 4117 0018 0449     		ldr	r1, .L278
 4118 001a 7B68     		ldr	r3, [r7, #4]
 4119 001c 1343     		orrs	r3, r3, r2
 4120 001e 0B60     		str	r3, [r1]
1654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 4121              		.loc 1 1654 1
 4122 0020 00BF     		nop
 4123 0022 0C37     		adds	r7, r7, #12
 4124              		.cfi_def_cfa_offset 4
 4125 0024 BD46     		mov	sp, r7
 4126              		.cfi_def_cfa_register 13
 4127              		@ sp needed
 4128 0026 80BC     		pop	{r7}
 4129              		.cfi_restore 7
 4130              		.cfi_def_cfa_offset 0
 4131 0028 7047     		bx	lr
 4132              	.L279:
 4133 002a 00BF     		.align	2
 4134              	.L278:
 4135 002c 30100240 		.word	1073877040
 4136              		.cfi_endproc
 4137              	.LFE144:
 4139              		.section	.text.hals_rcu_adc_clock_config,"ax",%progbits
 4140              		.align	1
 4141              		.global	hals_rcu_adc_clock_config
 4142              		.syntax unified
 4143              		.thumb
 4144              		.thumb_func
 4145              		.fpu softvfp
 4147              	hals_rcu_adc_clock_config:
 4148              	.LFB145:
1655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the ADC clock prescaler selection
1658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_adc: ADC clock prescaler selection, refer to rcu_adc_clock_enum
1659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_IRC28M_DIV2: select CK_IRC28M/2 as CK_ADC
1661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_IRC28M: select CK_IRC28M as CK_ADC
1662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_APB2_DIV2: select CK_APB2/2 as CK_ADC
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_AHB_DIV3: select CK_AHB/3 as CK_ADC
1664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_APB2_DIV4: select CK_APB2/4 as CK_ADC
1665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_AHB_DIV5: select CK_AHB/5 as CK_ADC
1666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_APB2_DIV6: select CK_APB2/6 as CK_ADC
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_AHB_DIV7: select CK_AHB/7 as CK_ADC
1668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_APB2_DIV8: select CK_APB2/8 as CK_ADC
1669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_ADCCK_AHB_DIV9: select CK_AHB/9 as CK_ADC
1670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_adc_clock_config(hal_rcu_adc_clksrc_enum ck_adc)
1674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 4149              		.loc 1 1674 1
 4150              		.cfi_startproc
 4151              		@ args = 0, pretend = 0, frame = 8
 4152              		@ frame_needed = 1, uses_anonymous_args = 0
 4153              		@ link register save eliminated.
 4154 0000 80B4     		push	{r7}
 4155              		.cfi_def_cfa_offset 4
 4156              		.cfi_offset 7, -4
 4157 0002 83B0     		sub	sp, sp, #12
 4158              		.cfi_def_cfa_offset 16
 4159 0004 00AF     		add	r7, sp, #0
 4160              		.cfi_def_cfa_register 7
 4161 0006 0346     		mov	r3, r0
 4162 0008 FB71     		strb	r3, [r7, #7]
1675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the ADCPSC, ADCSEL, IRC28MDIV bits */
1676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~RCU_CFG0_ADCPSC;
 4163              		.loc 1 1676 14
 4164 000a 614B     		ldr	r3, .L295
 4165 000c 1B68     		ldr	r3, [r3]
 4166 000e 604A     		ldr	r2, .L295
 4167 0010 23F44043 		bic	r3, r3, #49152
 4168 0014 1360     		str	r3, [r2]
1677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~(RCU_CFG2_ADCSEL | RCU_CFG2_IRC28MDIV | RCU_CFG2_ADCPSC2);
 4169              		.loc 1 1677 14
 4170 0016 5F4B     		ldr	r3, .L295+4
 4171 0018 1A68     		ldr	r2, [r3]
 4172 001a 5E49     		ldr	r1, .L295+4
 4173 001c 5E4B     		ldr	r3, .L295+8
 4174 001e 1340     		ands	r3, r3, r2
 4175 0020 0B60     		str	r3, [r1]
1678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* set the ADC clock according to ck_adc */
1680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(ck_adc) {
 4176              		.loc 1 1680 5
 4177 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4178 0024 092B     		cmp	r3, #9
 4179 0026 00F2AD80 		bhi	.L294
 4180 002a 01A2     		adr	r2, .L283
 4181 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4182              		.p2align 2
 4183              	.L283:
 4184 0030 59000000 		.word	.L292+1
 4185 0034 73000000 		.word	.L291+1
 4186 0038 8D000000 		.word	.L290+1
 4187 003c A3000000 		.word	.L289+1
 4188 0040 C5000000 		.word	.L288+1
 4189 0044 DF000000 		.word	.L287+1
 4190 0048 05010000 		.word	.L286+1
 4191 004c 1F010000 		.word	.L285+1
 4192 0050 45010000 		.word	.L284+1
 4193 0054 5F010000 		.word	.L282+1
 4194              		.p2align 1
 4195              	.L292:
1681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_IRC28M_DIV2:
1682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 &= ~RCU_CFG2_IRC28MDIV;
 4196              		.loc 1 1682 18
 4197 0058 4E4B     		ldr	r3, .L295+4
 4198 005a 1B68     		ldr	r3, [r3]
 4199 005c 4D4A     		ldr	r2, .L295+4
 4200 005e 23F48033 		bic	r3, r3, #65536
 4201 0062 1360     		str	r3, [r2]
1683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 &= ~RCU_CFG2_ADCSEL;
 4202              		.loc 1 1683 18
 4203 0064 4B4B     		ldr	r3, .L295+4
 4204 0066 1B68     		ldr	r3, [r3]
 4205 0068 4A4A     		ldr	r2, .L295+4
 4206 006a 23F48073 		bic	r3, r3, #256
 4207 006e 1360     		str	r3, [r2]
1684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4208              		.loc 1 1684 9
 4209 0070 89E0     		b	.L293
 4210              	.L291:
1685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_IRC28M:
1686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_IRC28MDIV;
 4211              		.loc 1 1686 18
 4212 0072 484B     		ldr	r3, .L295+4
 4213 0074 1B68     		ldr	r3, [r3]
 4214 0076 474A     		ldr	r2, .L295+4
 4215 0078 43F48033 		orr	r3, r3, #65536
 4216 007c 1360     		str	r3, [r2]
1687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 &= ~RCU_CFG2_ADCSEL;
 4217              		.loc 1 1687 18
 4218 007e 454B     		ldr	r3, .L295+4
 4219 0080 1B68     		ldr	r3, [r3]
 4220 0082 444A     		ldr	r2, .L295+4
 4221 0084 23F48073 		bic	r3, r3, #256
 4222 0088 1360     		str	r3, [r2]
1688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4223              		.loc 1 1688 9
 4224 008a 7CE0     		b	.L293
 4225              	.L290:
1689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_APB2_DIV2:
1690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV2;
 4226              		.loc 1 1690 18
 4227 008c 404B     		ldr	r3, .L295
 4228 008e 404A     		ldr	r2, .L295
 4229 0090 1B68     		ldr	r3, [r3]
 4230 0092 1360     		str	r3, [r2]
1691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4231              		.loc 1 1691 18
 4232 0094 3F4B     		ldr	r3, .L295+4
 4233 0096 1B68     		ldr	r3, [r3]
 4234 0098 3E4A     		ldr	r2, .L295+4
 4235 009a 43F48073 		orr	r3, r3, #256
 4236 009e 1360     		str	r3, [r2]
1692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4237              		.loc 1 1692 9
 4238 00a0 71E0     		b	.L293
 4239              	.L289:
1693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_AHB_DIV3:
1694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV2;
 4240              		.loc 1 1694 18
 4241 00a2 3B4B     		ldr	r3, .L295
 4242 00a4 3A4A     		ldr	r2, .L295
 4243 00a6 1B68     		ldr	r3, [r3]
 4244 00a8 1360     		str	r3, [r2]
1695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCPSC2;
 4245              		.loc 1 1695 18
 4246 00aa 3A4B     		ldr	r3, .L295+4
 4247 00ac 1B68     		ldr	r3, [r3]
 4248 00ae 394A     		ldr	r2, .L295+4
 4249 00b0 43F00043 		orr	r3, r3, #-2147483648
 4250 00b4 1360     		str	r3, [r2]
1696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4251              		.loc 1 1696 18
 4252 00b6 374B     		ldr	r3, .L295+4
 4253 00b8 1B68     		ldr	r3, [r3]
 4254 00ba 364A     		ldr	r2, .L295+4
 4255 00bc 43F48073 		orr	r3, r3, #256
 4256 00c0 1360     		str	r3, [r2]
1697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4257              		.loc 1 1697 9
 4258 00c2 60E0     		b	.L293
 4259              	.L288:
1698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_APB2_DIV4:
1699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV4;
 4260              		.loc 1 1699 18
 4261 00c4 324B     		ldr	r3, .L295
 4262 00c6 1B68     		ldr	r3, [r3]
 4263 00c8 314A     		ldr	r2, .L295
 4264 00ca 43F48043 		orr	r3, r3, #16384
 4265 00ce 1360     		str	r3, [r2]
1700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4266              		.loc 1 1700 18
 4267 00d0 304B     		ldr	r3, .L295+4
 4268 00d2 1B68     		ldr	r3, [r3]
 4269 00d4 2F4A     		ldr	r2, .L295+4
 4270 00d6 43F48073 		orr	r3, r3, #256
 4271 00da 1360     		str	r3, [r2]
1701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4272              		.loc 1 1701 9
 4273 00dc 53E0     		b	.L293
 4274              	.L287:
1702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_AHB_DIV5:
1703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV4;
 4275              		.loc 1 1703 18
 4276 00de 2C4B     		ldr	r3, .L295
 4277 00e0 1B68     		ldr	r3, [r3]
 4278 00e2 2B4A     		ldr	r2, .L295
 4279 00e4 43F48043 		orr	r3, r3, #16384
 4280 00e8 1360     		str	r3, [r2]
1704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCPSC2;
 4281              		.loc 1 1704 18
 4282 00ea 2A4B     		ldr	r3, .L295+4
 4283 00ec 1B68     		ldr	r3, [r3]
 4284 00ee 294A     		ldr	r2, .L295+4
 4285 00f0 43F00043 		orr	r3, r3, #-2147483648
 4286 00f4 1360     		str	r3, [r2]
1705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4287              		.loc 1 1705 18
 4288 00f6 274B     		ldr	r3, .L295+4
 4289 00f8 1B68     		ldr	r3, [r3]
 4290 00fa 264A     		ldr	r2, .L295+4
 4291 00fc 43F48073 		orr	r3, r3, #256
 4292 0100 1360     		str	r3, [r2]
1706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4293              		.loc 1 1706 9
 4294 0102 40E0     		b	.L293
 4295              	.L286:
1707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_APB2_DIV6:
1708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV6;
 4296              		.loc 1 1708 18
 4297 0104 224B     		ldr	r3, .L295
 4298 0106 1B68     		ldr	r3, [r3]
 4299 0108 214A     		ldr	r2, .L295
 4300 010a 43F40043 		orr	r3, r3, #32768
 4301 010e 1360     		str	r3, [r2]
1709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4302              		.loc 1 1709 18
 4303 0110 204B     		ldr	r3, .L295+4
 4304 0112 1B68     		ldr	r3, [r3]
 4305 0114 1F4A     		ldr	r2, .L295+4
 4306 0116 43F48073 		orr	r3, r3, #256
 4307 011a 1360     		str	r3, [r2]
1710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4308              		.loc 1 1710 9
 4309 011c 33E0     		b	.L293
 4310              	.L285:
1711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_AHB_DIV7:
1712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV6;
 4311              		.loc 1 1712 18
 4312 011e 1C4B     		ldr	r3, .L295
 4313 0120 1B68     		ldr	r3, [r3]
 4314 0122 1B4A     		ldr	r2, .L295
 4315 0124 43F40043 		orr	r3, r3, #32768
 4316 0128 1360     		str	r3, [r2]
1713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCPSC2;
 4317              		.loc 1 1713 18
 4318 012a 1A4B     		ldr	r3, .L295+4
 4319 012c 1B68     		ldr	r3, [r3]
 4320 012e 194A     		ldr	r2, .L295+4
 4321 0130 43F00043 		orr	r3, r3, #-2147483648
 4322 0134 1360     		str	r3, [r2]
1714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4323              		.loc 1 1714 18
 4324 0136 174B     		ldr	r3, .L295+4
 4325 0138 1B68     		ldr	r3, [r3]
 4326 013a 164A     		ldr	r2, .L295+4
 4327 013c 43F48073 		orr	r3, r3, #256
 4328 0140 1360     		str	r3, [r2]
1715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4329              		.loc 1 1715 9
 4330 0142 20E0     		b	.L293
 4331              	.L284:
1716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_APB2_DIV8:
1717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV8;
 4332              		.loc 1 1717 18
 4333 0144 124B     		ldr	r3, .L295
 4334 0146 1B68     		ldr	r3, [r3]
 4335 0148 114A     		ldr	r2, .L295
 4336 014a 43F44043 		orr	r3, r3, #49152
 4337 014e 1360     		str	r3, [r2]
1718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4338              		.loc 1 1718 18
 4339 0150 104B     		ldr	r3, .L295+4
 4340 0152 1B68     		ldr	r3, [r3]
 4341 0154 0F4A     		ldr	r2, .L295+4
 4342 0156 43F48073 		orr	r3, r3, #256
 4343 015a 1360     		str	r3, [r2]
1719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4344              		.loc 1 1719 9
 4345 015c 13E0     		b	.L293
 4346              	.L282:
1720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_ADCCK_AHB_DIV9:
1721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG0 |= RCU_ADC_CKAPB2_DIV8;
 4347              		.loc 1 1721 18
 4348 015e 0C4B     		ldr	r3, .L295
 4349 0160 1B68     		ldr	r3, [r3]
 4350 0162 0B4A     		ldr	r2, .L295
 4351 0164 43F44043 		orr	r3, r3, #49152
 4352 0168 1360     		str	r3, [r2]
1722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCPSC2;
 4353              		.loc 1 1722 18
 4354 016a 0A4B     		ldr	r3, .L295+4
 4355 016c 1B68     		ldr	r3, [r3]
 4356 016e 094A     		ldr	r2, .L295+4
 4357 0170 43F00043 		orr	r3, r3, #-2147483648
 4358 0174 1360     		str	r3, [r2]
1723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CFG2 |= RCU_CFG2_ADCSEL;
 4359              		.loc 1 1723 18
 4360 0176 074B     		ldr	r3, .L295+4
 4361 0178 1B68     		ldr	r3, [r3]
 4362 017a 064A     		ldr	r2, .L295+4
 4363 017c 43F48073 		orr	r3, r3, #256
 4364 0180 1360     		str	r3, [r2]
1724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4365              		.loc 1 1724 9
 4366 0182 00E0     		b	.L293
 4367              	.L294:
1725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
1726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4368              		.loc 1 1726 9
 4369 0184 00BF     		nop
 4370              	.L293:
1727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 4371              		.loc 1 1728 1
 4372 0186 00BF     		nop
 4373 0188 0C37     		adds	r7, r7, #12
 4374              		.cfi_def_cfa_offset 4
 4375 018a BD46     		mov	sp, r7
 4376              		.cfi_def_cfa_register 13
 4377              		@ sp needed
 4378 018c 80BC     		pop	{r7}
 4379              		.cfi_restore 7
 4380              		.cfi_def_cfa_offset 0
 4381 018e 7047     		bx	lr
 4382              	.L296:
 4383              		.align	2
 4384              	.L295:
 4385 0190 04100240 		.word	1073876996
 4386 0194 30100240 		.word	1073877040
 4387 0198 FFFEFE7F 		.word	2147417855
 4388              		.cfi_endproc
 4389              	.LFE145:
 4391              		.section	.text.hals_rcu_cec_clock_config,"ax",%progbits
 4392              		.align	1
 4393              		.global	hals_rcu_cec_clock_config
 4394              		.syntax unified
 4395              		.thumb
 4396              		.thumb_func
 4397              		.fpu softvfp
 4399              	hals_rcu_cec_clock_config:
 4400              	.LFB146:
1729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the CEC clock source selection
1732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_cec: CEC clock source selection
1733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CECSRC_IRC8M_DIV244: CK_CEC select CK_IRC8M/244
1735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CECSRC_LXTAL: CK_CEC select CK_LXTAL
1736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_cec_clock_config(uint32_t ck_cec)
1740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 4401              		.loc 1 1740 1
 4402              		.cfi_startproc
 4403              		@ args = 0, pretend = 0, frame = 8
 4404              		@ frame_needed = 1, uses_anonymous_args = 0
 4405              		@ link register save eliminated.
 4406 0000 80B4     		push	{r7}
 4407              		.cfi_def_cfa_offset 4
 4408              		.cfi_offset 7, -4
 4409 0002 83B0     		sub	sp, sp, #12
 4410              		.cfi_def_cfa_offset 16
 4411 0004 00AF     		add	r7, sp, #0
 4412              		.cfi_def_cfa_register 7
 4413 0006 7860     		str	r0, [r7, #4]
1741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the CECSEL bit and set according to ck_cec */
1742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~RCU_CFG2_CECSEL;
 4414              		.loc 1 1742 14
 4415 0008 084B     		ldr	r3, .L298
 4416 000a 1B68     		ldr	r3, [r3]
 4417 000c 074A     		ldr	r2, .L298
 4418 000e 23F04003 		bic	r3, r3, #64
 4419 0012 1360     		str	r3, [r2]
1743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 |= ck_cec;
 4420              		.loc 1 1743 14
 4421 0014 054B     		ldr	r3, .L298
 4422 0016 1A68     		ldr	r2, [r3]
 4423 0018 0449     		ldr	r1, .L298
 4424 001a 7B68     		ldr	r3, [r7, #4]
 4425 001c 1343     		orrs	r3, r3, r2
 4426 001e 0B60     		str	r3, [r1]
1744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 4427              		.loc 1 1744 1
 4428 0020 00BF     		nop
 4429 0022 0C37     		adds	r7, r7, #12
 4430              		.cfi_def_cfa_offset 4
 4431 0024 BD46     		mov	sp, r7
 4432              		.cfi_def_cfa_register 13
 4433              		@ sp needed
 4434 0026 80BC     		pop	{r7}
 4435              		.cfi_restore 7
 4436              		.cfi_def_cfa_offset 0
 4437 0028 7047     		bx	lr
 4438              	.L299:
 4439 002a 00BF     		.align	2
 4440              	.L298:
 4441 002c 30100240 		.word	1073877040
 4442              		.cfi_endproc
 4443              	.LFE146:
 4445              		.section	.text.hals_rcu_usbfs_clock_config,"ax",%progbits
 4446              		.align	1
 4447              		.global	hals_rcu_usbfs_clock_config
 4448              		.syntax unified
 4449              		.thumb
 4450              		.thumb_func
 4451              		.fpu softvfp
 4453              	hals_rcu_usbfs_clock_config:
 4454              	.LFB147:
1745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the USBFS clock prescaler selection
1748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_usbfs: USBFS clock prescaler selection
1749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFS_CKPLL_DIV1_5: select CK_PLL/1.5 as CK_USBFS
1751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFS_CKPLL_DIV1: select CK_PLL as CK_USBFS
1752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFS_CKPLL_DIV2_5: select CK_PLL/2.5 as CK_USBFS
1753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFS_CKPLL_DIV2: select CK_PLL/2 as CK_USBFS
1754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFS_CKPLL_DIV3: select CK_PLL/3 as CK_USBFS
1755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_USBFS_CKPLL_DIV3_5: select CK_PLL/3.5 as CK_USBFS
1756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_usbfs_clock_config(uint32_t ck_usbfs)
1760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 4455              		.loc 1 1760 1
 4456              		.cfi_startproc
 4457              		@ args = 0, pretend = 0, frame = 8
 4458              		@ frame_needed = 1, uses_anonymous_args = 0
 4459              		@ link register save eliminated.
 4460 0000 80B4     		push	{r7}
 4461              		.cfi_def_cfa_offset 4
 4462              		.cfi_offset 7, -4
 4463 0002 83B0     		sub	sp, sp, #12
 4464              		.cfi_def_cfa_offset 16
 4465 0004 00AF     		add	r7, sp, #0
 4466              		.cfi_def_cfa_register 7
 4467 0006 7860     		str	r0, [r7, #4]
1761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the USBFSPSC bits and set according to ck_usbfs */
1762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~RCU_CFG0_USBFSPSC;
 4468              		.loc 1 1762 14
 4469 0008 104B     		ldr	r3, .L301
 4470 000a 1B68     		ldr	r3, [r3]
 4471 000c 0F4A     		ldr	r2, .L301
 4472 000e 23F44003 		bic	r3, r3, #12582912
 4473 0012 1360     		str	r3, [r2]
1763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 &= ~RCU_CFG2_USBFSPSC2;
 4474              		.loc 1 1763 14
 4475 0014 0E4B     		ldr	r3, .L301+4
 4476 0016 1B68     		ldr	r3, [r3]
 4477 0018 0D4A     		ldr	r2, .L301+4
 4478 001a 23F08043 		bic	r3, r3, #1073741824
 4479 001e 1360     		str	r3, [r2]
1764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 |= (ck_usbfs & (~RCU_CFG2_USBFSPSC2));
 4480              		.loc 1 1765 14
 4481 0020 0A4B     		ldr	r3, .L301
 4482 0022 1A68     		ldr	r2, [r3]
 4483              		.loc 1 1765 27
 4484 0024 7B68     		ldr	r3, [r7, #4]
 4485 0026 23F08043 		bic	r3, r3, #1073741824
 4486              		.loc 1 1765 14
 4487 002a 0849     		ldr	r1, .L301
 4488 002c 1343     		orrs	r3, r3, r2
 4489 002e 0B60     		str	r3, [r1]
1766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG2 |= (ck_usbfs & RCU_CFG2_USBFSPSC2);
 4490              		.loc 1 1766 14
 4491 0030 074B     		ldr	r3, .L301+4
 4492 0032 1A68     		ldr	r2, [r3]
 4493              		.loc 1 1766 27
 4494 0034 7B68     		ldr	r3, [r7, #4]
 4495 0036 03F08043 		and	r3, r3, #1073741824
 4496              		.loc 1 1766 14
 4497 003a 0549     		ldr	r1, .L301+4
 4498 003c 1343     		orrs	r3, r3, r2
 4499 003e 0B60     		str	r3, [r1]
1767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 4500              		.loc 1 1767 1
 4501 0040 00BF     		nop
 4502 0042 0C37     		adds	r7, r7, #12
 4503              		.cfi_def_cfa_offset 4
 4504 0044 BD46     		mov	sp, r7
 4505              		.cfi_def_cfa_register 13
 4506              		@ sp needed
 4507 0046 80BC     		pop	{r7}
 4508              		.cfi_restore 7
 4509              		.cfi_def_cfa_offset 0
 4510 0048 7047     		bx	lr
 4511              	.L302:
 4512 004a 00BF     		.align	2
 4513              	.L301:
 4514 004c 04100240 		.word	1073876996
 4515 0050 30100240 		.word	1073877040
 4516              		.cfi_endproc
 4517              	.LFE147:
 4519              		.section	.rodata
 4520              		.align	2
 4521              	.LC1:
 4522 0010 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 4522      01020304 
 4523              		.section	.text.hals_rcu_clock_freq_get,"ax",%progbits
 4524              		.align	1
 4525              		.global	hals_rcu_clock_freq_get
 4526              		.syntax unified
 4527              		.thumb
 4528              		.thumb_func
 4529              		.fpu softvfp
 4531              	hals_rcu_clock_freq_get:
 4532              	.LFB148:
1768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the system clock, bus and peripheral clock frequency
1771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  clock: the clock frequency which to get
1772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_SYS: system clock frequency
1774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_AHB: AHB clock frequency
1775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_APB1: APB1 clock frequency
1776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_APB2: APB2 clock frequency
1777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_ADC: ADC clock frequency
1778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_CEC: CEC clock frequency
1779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        CK_USART: USART clock frequency
1780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     clock frequency of system, AHB, APB1, APB2, ADC, CEC or USRAT
1782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** uint32_t hals_rcu_clock_freq_get(hal_rcu_clock_freq_enum clock)
1784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 4533              		.loc 1 1784 1
 4534              		.cfi_startproc
 4535              		@ args = 0, pretend = 0, frame = 120
 4536              		@ frame_needed = 1, uses_anonymous_args = 0
 4537              		@ link register save eliminated.
 4538 0000 90B4     		push	{r4, r7}
 4539              		.cfi_def_cfa_offset 8
 4540              		.cfi_offset 4, -8
 4541              		.cfi_offset 7, -4
 4542 0002 9EB0     		sub	sp, sp, #120
 4543              		.cfi_def_cfa_offset 128
 4544 0004 00AF     		add	r7, sp, #0
 4545              		.cfi_def_cfa_register 7
 4546 0006 0346     		mov	r3, r0
 4547 0008 FB71     		strb	r3, [r7, #7]
1785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t sws = 0U, adcps = 0U, adcps2 = 0U, ck_freq = 0U;
 4548              		.loc 1 1785 14
 4549 000a 0023     		movs	r3, #0
 4550 000c FB65     		str	r3, [r7, #92]
 4551              		.loc 1 1785 24
 4552 000e 0023     		movs	r3, #0
 4553 0010 BB65     		str	r3, [r7, #88]
 4554              		.loc 1 1785 36
 4555 0012 0023     		movs	r3, #0
 4556 0014 7B65     		str	r3, [r7, #84]
 4557              		.loc 1 1785 49
 4558 0016 0023     		movs	r3, #0
 4559 0018 7B67     		str	r3, [r7, #116]
1786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t cksys_freq = 0U, ahb_freq = 0U, apb1_freq = 0U, apb2_freq = 0U;
 4560              		.loc 1 1786 14
 4561 001a 0023     		movs	r3, #0
 4562 001c 3B67     		str	r3, [r7, #112]
 4563              		.loc 1 1786 31
 4564 001e 0023     		movs	r3, #0
 4565 0020 3B65     		str	r3, [r7, #80]
 4566              		.loc 1 1786 46
 4567 0022 0023     		movs	r3, #0
 4568 0024 FB64     		str	r3, [r7, #76]
 4569              		.loc 1 1786 62
 4570 0026 0023     		movs	r3, #0
 4571 0028 BB64     		str	r3, [r7, #72]
1787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t adc_freq = 0U, cec_freq = 0U, usart_freq = 0U;
 4572              		.loc 1 1787 14
 4573 002a 0023     		movs	r3, #0
 4574 002c FB66     		str	r3, [r7, #108]
 4575              		.loc 1 1787 29
 4576 002e 0023     		movs	r3, #0
 4577 0030 BB66     		str	r3, [r7, #104]
 4578              		.loc 1 1787 44
 4579 0032 0023     		movs	r3, #0
 4580 0034 7B66     		str	r3, [r7, #100]
1788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t pllmf = 0U, pllmf4 = 0U, pllmf5 = 0U, pllsel = 0U, pllpresel = 0U, prediv = 0U, idx = 
 4581              		.loc 1 1788 14
 4582 0036 0023     		movs	r3, #0
 4583 0038 3B66     		str	r3, [r7, #96]
 4584              		.loc 1 1788 26
 4585 003a 0023     		movs	r3, #0
 4586 003c 7B64     		str	r3, [r7, #68]
 4587              		.loc 1 1788 39
 4588 003e 0023     		movs	r3, #0
 4589 0040 3B64     		str	r3, [r7, #64]
 4590              		.loc 1 1788 52
 4591 0042 0023     		movs	r3, #0
 4592 0044 FB63     		str	r3, [r7, #60]
 4593              		.loc 1 1788 65
 4594 0046 0023     		movs	r3, #0
 4595 0048 BB63     		str	r3, [r7, #56]
 4596              		.loc 1 1788 81
 4597 004a 0023     		movs	r3, #0
 4598 004c 7B63     		str	r3, [r7, #52]
 4599              		.loc 1 1788 94
 4600 004e 0023     		movs	r3, #0
 4601 0050 3B63     		str	r3, [r7, #48]
 4602              		.loc 1 1788 104
 4603 0052 0023     		movs	r3, #0
 4604 0054 FB62     		str	r3, [r7, #44]
1789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* exponent of AHB, APB1 and APB2 clock divider */
1790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     const uint8_t ahb_exp[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 4605              		.loc 1 1790 19
 4606 0056 A44B     		ldr	r3, .L352
 4607 0058 07F11C04 		add	r4, r7, #28
 4608 005c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4609 005e 84E80F00 		stm	r4, {r0, r1, r2, r3}
1791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     const uint8_t apb1_exp[8] = {0, 0, 0, 0, 1, 2, 3, 4};
 4610              		.loc 1 1791 19
 4611 0062 A24A     		ldr	r2, .L352+4
 4612 0064 07F11403 		add	r3, r7, #20
 4613 0068 92E80300 		ldm	r2, {r0, r1}
 4614 006c 83E80300 		stm	r3, {r0, r1}
1792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     const uint8_t apb2_exp[8] = {0, 0, 0, 0, 1, 2, 3, 4};
 4615              		.loc 1 1792 19
 4616 0070 9E4A     		ldr	r2, .L352+4
 4617 0072 07F10C03 		add	r3, r7, #12
 4618 0076 92E80300 		ldm	r2, {r0, r1}
 4619 007a 83E80300 		stm	r3, {r0, r1}
1793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     sws = GET_BITS(RCU_CFG0, 2, 3);
 4620              		.loc 1 1794 11
 4621 007e 9C4B     		ldr	r3, .L352+8
 4622 0080 1B68     		ldr	r3, [r3]
 4623 0082 9B08     		lsrs	r3, r3, #2
 4624              		.loc 1 1794 9
 4625 0084 03F00303 		and	r3, r3, #3
 4626 0088 FB65     		str	r3, [r7, #92]
1795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(sws) {
 4627              		.loc 1 1795 5
 4628 008a FB6D     		ldr	r3, [r7, #92]
 4629 008c 022B     		cmp	r3, #2
 4630 008e 0FD0     		beq	.L304
 4631 0090 FB6D     		ldr	r3, [r7, #92]
 4632 0092 022B     		cmp	r3, #2
 4633 0094 72D8     		bhi	.L305
 4634 0096 FB6D     		ldr	r3, [r7, #92]
 4635 0098 002B     		cmp	r3, #0
 4636 009a 03D0     		beq	.L306
 4637 009c FB6D     		ldr	r3, [r7, #92]
 4638 009e 012B     		cmp	r3, #1
 4639 00a0 03D0     		beq	.L307
 4640 00a2 6BE0     		b	.L305
 4641              	.L306:
1796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC8M is selected as CK_SYS */
1797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case SEL_IRC8M:
1798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         cksys_freq = IRC8M_VALUE;
 4642              		.loc 1 1798 20
 4643 00a4 934B     		ldr	r3, .L352+12
 4644 00a6 3B67     		str	r3, [r7, #112]
1799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4645              		.loc 1 1799 9
 4646 00a8 6BE0     		b	.L308
 4647              	.L307:
1800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* HXTAL is selected as CK_SYS */
1801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case SEL_HXTAL:
1802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         cksys_freq = HXTAL_VALUE;
 4648              		.loc 1 1802 20
 4649 00aa 924B     		ldr	r3, .L352+12
 4650 00ac 3B67     		str	r3, [r7, #112]
1803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4651              		.loc 1 1803 9
 4652 00ae 68E0     		b	.L308
 4653              	.L304:
1804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* PLL is selected as CK_SYS */
1805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case SEL_PLL:
1806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* get the value of PLLMF[3:0] */
1807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllmf = GET_BITS(RCU_CFG0, 18, 21);
 4654              		.loc 1 1807 17
 4655 00b0 8F4B     		ldr	r3, .L352+8
 4656 00b2 1B68     		ldr	r3, [r3]
 4657 00b4 9B0C     		lsrs	r3, r3, #18
 4658              		.loc 1 1807 15
 4659 00b6 03F00F03 		and	r3, r3, #15
 4660 00ba 3B66     		str	r3, [r7, #96]
1808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllmf4 = GET_BITS(RCU_CFG0, 27, 27);
 4661              		.loc 1 1808 18
 4662 00bc 8C4B     		ldr	r3, .L352+8
 4663 00be 1B68     		ldr	r3, [r3]
 4664 00c0 DB0E     		lsrs	r3, r3, #27
 4665              		.loc 1 1808 16
 4666 00c2 03F00103 		and	r3, r3, #1
 4667 00c6 7B64     		str	r3, [r7, #68]
1809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllmf5 = GET_BITS(RCU_CFG1, 31, 31);
 4668              		.loc 1 1809 18
 4669 00c8 8B4B     		ldr	r3, .L352+16
 4670 00ca 1B68     		ldr	r3, [r3]
 4671 00cc DB0F     		lsrs	r3, r3, #31
 4672              		.loc 1 1809 16
 4673 00ce 03F00103 		and	r3, r3, #1
 4674 00d2 3B64     		str	r3, [r7, #64]
1810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* high 16 bits */
1811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* high 16 bits */
1812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((0U == pllmf4) && (0U == pllmf5)) {
 4675              		.loc 1 1812 11
 4676 00d4 7B6C     		ldr	r3, [r7, #68]
 4677 00d6 002B     		cmp	r3, #0
 4678 00d8 05D1     		bne	.L309
 4679              		.loc 1 1812 27 discriminator 1
 4680 00da 3B6C     		ldr	r3, [r7, #64]
 4681 00dc 002B     		cmp	r3, #0
 4682 00de 02D1     		bne	.L309
1813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 2U;
 4683              		.loc 1 1813 19
 4684 00e0 3B6E     		ldr	r3, [r7, #96]
 4685 00e2 0233     		adds	r3, r3, #2
 4686 00e4 3B66     		str	r3, [r7, #96]
 4687              	.L309:
1814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((1U == pllmf4) && (0U == pllmf5)) {
 4688              		.loc 1 1815 11
 4689 00e6 7B6C     		ldr	r3, [r7, #68]
 4690 00e8 012B     		cmp	r3, #1
 4691 00ea 05D1     		bne	.L310
 4692              		.loc 1 1815 27 discriminator 1
 4693 00ec 3B6C     		ldr	r3, [r7, #64]
 4694 00ee 002B     		cmp	r3, #0
 4695 00f0 02D1     		bne	.L310
1816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 17U;
 4696              		.loc 1 1816 19
 4697 00f2 3B6E     		ldr	r3, [r7, #96]
 4698 00f4 1133     		adds	r3, r3, #17
 4699 00f6 3B66     		str	r3, [r7, #96]
 4700              	.L310:
1817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((0U == pllmf4) && (1U == pllmf5)) {
 4701              		.loc 1 1818 11
 4702 00f8 7B6C     		ldr	r3, [r7, #68]
 4703 00fa 002B     		cmp	r3, #0
 4704 00fc 05D1     		bne	.L311
 4705              		.loc 1 1818 27 discriminator 1
 4706 00fe 3B6C     		ldr	r3, [r7, #64]
 4707 0100 012B     		cmp	r3, #1
 4708 0102 02D1     		bne	.L311
1819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 33U;
 4709              		.loc 1 1819 19
 4710 0104 3B6E     		ldr	r3, [r7, #96]
 4711 0106 2133     		adds	r3, r3, #33
 4712 0108 3B66     		str	r3, [r7, #96]
 4713              	.L311:
1820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if((1U == pllmf4) && (1U == pllmf5)) {
 4714              		.loc 1 1821 11
 4715 010a 7B6C     		ldr	r3, [r7, #68]
 4716 010c 012B     		cmp	r3, #1
 4717 010e 05D1     		bne	.L312
 4718              		.loc 1 1821 27 discriminator 1
 4719 0110 3B6C     		ldr	r3, [r7, #64]
 4720 0112 012B     		cmp	r3, #1
 4721 0114 02D1     		bne	.L312
1822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             pllmf += 49U;
 4722              		.loc 1 1822 19
 4723 0116 3B6E     		ldr	r3, [r7, #96]
 4724 0118 3133     		adds	r3, r3, #49
 4725 011a 3B66     		str	r3, [r7, #96]
 4726              	.L312:
1823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* PLL clock source selection, HXTAL or IRC48M or IRC8M/2 */
1826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllsel = GET_BITS(RCU_CFG0, 16, 16);
 4727              		.loc 1 1826 18
 4728 011c 744B     		ldr	r3, .L352+8
 4729 011e 1B68     		ldr	r3, [r3]
 4730 0120 1B0C     		lsrs	r3, r3, #16
 4731              		.loc 1 1826 16
 4732 0122 03F00103 		and	r3, r3, #1
 4733 0126 FB63     		str	r3, [r7, #60]
1827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         pllpresel = GET_BITS(RCU_CFG1, 30, 30);
 4734              		.loc 1 1827 21
 4735 0128 734B     		ldr	r3, .L352+16
 4736 012a 1B68     		ldr	r3, [r3]
 4737 012c 9B0F     		lsrs	r3, r3, #30
 4738              		.loc 1 1827 19
 4739 012e 03F00103 		and	r3, r3, #1
 4740 0132 BB63     		str	r3, [r7, #56]
1828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(0U != pllsel) {
 4741              		.loc 1 1828 11
 4742 0134 FB6B     		ldr	r3, [r7, #60]
 4743 0136 002B     		cmp	r3, #0
 4744 0138 1AD0     		beq	.L313
1829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             prediv = (GET_BITS(RCU_CFG1, 0, 3) + 1U);
 4745              		.loc 1 1829 23
 4746 013a 6F4B     		ldr	r3, .L352+16
 4747 013c 1B68     		ldr	r3, [r3]
 4748 013e 03F00F03 		and	r3, r3, #15
 4749              		.loc 1 1829 20
 4750 0142 0133     		adds	r3, r3, #1
 4751 0144 7B63     		str	r3, [r7, #52]
1830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(0U == pllpresel) {
 4752              		.loc 1 1830 15
 4753 0146 BB6B     		ldr	r3, [r7, #56]
 4754 0148 002B     		cmp	r3, #0
 4755 014a 08D1     		bne	.L314
1831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 cksys_freq = (HXTAL_VALUE / prediv) * pllmf;
 4756              		.loc 1 1831 43
 4757 014c 694A     		ldr	r2, .L352+12
 4758 014e 7B6B     		ldr	r3, [r7, #52]
 4759 0150 B2FBF3F2 		udiv	r2, r2, r3
 4760              		.loc 1 1831 28
 4761 0154 3B6E     		ldr	r3, [r7, #96]
 4762 0156 02FB03F3 		mul	r3, r2, r3
 4763 015a 3B67     		str	r3, [r7, #112]
1832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
1833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 cksys_freq = (IRC48M_VALUE / prediv) * pllmf;
1834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
1835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
1836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             cksys_freq = (IRC8M_VALUE >> 1) * pllmf;
1837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4764              		.loc 1 1838 9
 4765 015c 11E0     		b	.L308
 4766              	.L314:
1833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 4767              		.loc 1 1833 44
 4768 015e 674A     		ldr	r2, .L352+20
 4769 0160 7B6B     		ldr	r3, [r7, #52]
 4770 0162 B2FBF3F2 		udiv	r2, r2, r3
1833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
 4771              		.loc 1 1833 28
 4772 0166 3B6E     		ldr	r3, [r7, #96]
 4773 0168 02FB03F3 		mul	r3, r2, r3
 4774 016c 3B67     		str	r3, [r7, #112]
 4775              		.loc 1 1838 9
 4776 016e 08E0     		b	.L308
 4777              	.L313:
1836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
 4778              		.loc 1 1836 24
 4779 0170 3B6E     		ldr	r3, [r7, #96]
 4780 0172 634A     		ldr	r2, .L352+24
 4781 0174 02FB03F3 		mul	r3, r2, r3
 4782 0178 3B67     		str	r3, [r7, #112]
 4783              		.loc 1 1838 9
 4784 017a 02E0     		b	.L308
 4785              	.L305:
1839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* IRC8M is selected as CK_SYS */
1840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
1841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         cksys_freq = IRC8M_VALUE;
 4786              		.loc 1 1841 20
 4787 017c 5D4B     		ldr	r3, .L352+12
 4788 017e 3B67     		str	r3, [r7, #112]
1842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4789              		.loc 1 1842 9
 4790 0180 00BF     		nop
 4791              	.L308:
1843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* calculate AHB clock frequency */
1845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     idx = GET_BITS(RCU_CFG0, 4, 7);
 4792              		.loc 1 1845 11
 4793 0182 5B4B     		ldr	r3, .L352+8
 4794 0184 1B68     		ldr	r3, [r3]
 4795 0186 1B09     		lsrs	r3, r3, #4
 4796              		.loc 1 1845 9
 4797 0188 03F00F03 		and	r3, r3, #15
 4798 018c 3B63     		str	r3, [r7, #48]
1846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     clk_exp = ahb_exp[idx];
 4799              		.loc 1 1846 22
 4800 018e 07F11C02 		add	r2, r7, #28
 4801 0192 3B6B     		ldr	r3, [r7, #48]
 4802 0194 1344     		add	r3, r3, r2
 4803 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4804              		.loc 1 1846 13
 4805 0198 FB62     		str	r3, [r7, #44]
1847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     ahb_freq = cksys_freq >> clk_exp;
 4806              		.loc 1 1847 14
 4807 019a 3A6F     		ldr	r2, [r7, #112]
 4808 019c FB6A     		ldr	r3, [r7, #44]
 4809 019e 22FA03F3 		lsr	r3, r2, r3
 4810 01a2 3B65     		str	r3, [r7, #80]
1848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* calculate APB1 clock frequency */
1850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     idx = GET_BITS(RCU_CFG0, 8, 10);
 4811              		.loc 1 1850 11
 4812 01a4 524B     		ldr	r3, .L352+8
 4813 01a6 1B68     		ldr	r3, [r3]
 4814 01a8 1B0A     		lsrs	r3, r3, #8
 4815              		.loc 1 1850 9
 4816 01aa 03F00703 		and	r3, r3, #7
 4817 01ae 3B63     		str	r3, [r7, #48]
1851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     clk_exp = apb1_exp[idx];
 4818              		.loc 1 1851 23
 4819 01b0 07F11402 		add	r2, r7, #20
 4820 01b4 3B6B     		ldr	r3, [r7, #48]
 4821 01b6 1344     		add	r3, r3, r2
 4822 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4823              		.loc 1 1851 13
 4824 01ba FB62     		str	r3, [r7, #44]
1852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     apb1_freq = ahb_freq >> clk_exp;
 4825              		.loc 1 1852 15
 4826 01bc 3A6D     		ldr	r2, [r7, #80]
 4827 01be FB6A     		ldr	r3, [r7, #44]
 4828 01c0 22FA03F3 		lsr	r3, r2, r3
 4829 01c4 FB64     		str	r3, [r7, #76]
1853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* calculate APB2 clock frequency */
1855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     idx = GET_BITS(RCU_CFG0, 11, 13);
 4830              		.loc 1 1855 11
 4831 01c6 4A4B     		ldr	r3, .L352+8
 4832 01c8 1B68     		ldr	r3, [r3]
 4833 01ca DB0A     		lsrs	r3, r3, #11
 4834              		.loc 1 1855 9
 4835 01cc 03F00703 		and	r3, r3, #7
 4836 01d0 3B63     		str	r3, [r7, #48]
1856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     clk_exp = apb2_exp[idx];
 4837              		.loc 1 1856 23
 4838 01d2 07F10C02 		add	r2, r7, #12
 4839 01d6 3B6B     		ldr	r3, [r7, #48]
 4840 01d8 1344     		add	r3, r3, r2
 4841 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4842              		.loc 1 1856 13
 4843 01dc FB62     		str	r3, [r7, #44]
1857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     apb2_freq = ahb_freq >> clk_exp;
 4844              		.loc 1 1857 15
 4845 01de 3A6D     		ldr	r2, [r7, #80]
 4846 01e0 FB6A     		ldr	r3, [r7, #44]
 4847 01e2 22FA03F3 		lsr	r3, r2, r3
 4848 01e6 BB64     		str	r3, [r7, #72]
1858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* return the clocks frequency */
1860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(clock) {
 4849              		.loc 1 1860 5
 4850 01e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4851 01ea 062B     		cmp	r3, #6
 4852 01ec 00F2DF80 		bhi	.L350
 4853 01f0 01A2     		adr	r2, .L318
 4854 01f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4855 01f6 00BF     		.p2align 2
 4856              	.L318:
 4857 01f8 15020000 		.word	.L324+1
 4858 01fc 1B020000 		.word	.L323+1
 4859 0200 21020000 		.word	.L322+1
 4860 0204 27020000 		.word	.L321+1
 4861 0208 2D020000 		.word	.L320+1
 4862 020c 41030000 		.word	.L319+1
 4863 0210 61030000 		.word	.L317+1
 4864              		.p2align 1
 4865              	.L324:
1861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_SYS:
1862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = cksys_freq;
 4866              		.loc 1 1862 17
 4867 0214 3B6F     		ldr	r3, [r7, #112]
 4868 0216 7B67     		str	r3, [r7, #116]
1863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4869              		.loc 1 1863 9
 4870 0218 CAE0     		b	.L325
 4871              	.L323:
1864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_AHB:
1865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = ahb_freq;
 4872              		.loc 1 1865 17
 4873 021a 3B6D     		ldr	r3, [r7, #80]
 4874 021c 7B67     		str	r3, [r7, #116]
1866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4875              		.loc 1 1866 9
 4876 021e C7E0     		b	.L325
 4877              	.L322:
1867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_APB1:
1868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = apb1_freq;
 4878              		.loc 1 1868 17
 4879 0220 FB6C     		ldr	r3, [r7, #76]
 4880 0222 7B67     		str	r3, [r7, #116]
1869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4881              		.loc 1 1869 9
 4882 0224 C4E0     		b	.L325
 4883              	.L321:
1870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_APB2:
1871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = apb2_freq;
 4884              		.loc 1 1871 17
 4885 0226 BB6C     		ldr	r3, [r7, #72]
 4886 0228 7B67     		str	r3, [r7, #116]
1872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 4887              		.loc 1 1872 9
 4888 022a C1E0     		b	.L325
 4889              	.L320:
1873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_ADC:
1874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* calculate ADC clock frequency */
1875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_ADCSRC_AHB_APB2DIV != (RCU_CFG2 & RCU_CFG2_ADCSEL)) {
 4890              		.loc 1 1875 39
 4891 022c 354B     		ldr	r3, .L352+28
 4892 022e 1B68     		ldr	r3, [r3]
 4893              		.loc 1 1875 48
 4894 0230 03F48073 		and	r3, r3, #256
 4895              		.loc 1 1875 11
 4896 0234 B3F5807F 		cmp	r3, #256
 4897 0238 0CD0     		beq	.L326
1876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             if(RCU_ADC_IRC28M_DIV1 != (RCU_CFG2 & RCU_CFG2_IRC28MDIV)) {
 4898              		.loc 1 1876 40
 4899 023a 324B     		ldr	r3, .L352+28
 4900 023c 1B68     		ldr	r3, [r3]
 4901              		.loc 1 1876 49
 4902 023e 03F48033 		and	r3, r3, #65536
 4903              		.loc 1 1876 15
 4904 0242 B3F5803F 		cmp	r3, #65536
 4905 0246 02D0     		beq	.L327
1877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 adc_freq = IRC28M_VALUE >> 1;
 4906              		.loc 1 1877 26
 4907 0248 2F4B     		ldr	r3, .L352+32
 4908 024a FB66     		str	r3, [r7, #108]
 4909 024c 75E0     		b	.L328
 4910              	.L327:
1878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             } else {
1879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 adc_freq = IRC28M_VALUE;
 4911              		.loc 1 1879 26
 4912 024e 2F4B     		ldr	r3, .L352+36
 4913 0250 FB66     		str	r3, [r7, #108]
 4914 0252 72E0     		b	.L328
 4915              	.L326:
1880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
1881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
1882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             /* ADC clock select CK_APB2 divided by 2/4/6/8 or CK_AHB divided by 3/5/7/9 */
1883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             adcps = GET_BITS(RCU_CFG0, 14, 15);
 4916              		.loc 1 1883 21
 4917 0254 264B     		ldr	r3, .L352+8
 4918 0256 1B68     		ldr	r3, [r3]
 4919 0258 9B0B     		lsrs	r3, r3, #14
 4920              		.loc 1 1883 19
 4921 025a 03F00303 		and	r3, r3, #3
 4922 025e BB65     		str	r3, [r7, #88]
1884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             adcps2 = GET_BITS(RCU_CFG2, 31, 31);
 4923              		.loc 1 1884 22
 4924 0260 284B     		ldr	r3, .L352+28
 4925 0262 1B68     		ldr	r3, [r3]
 4926 0264 DB0F     		lsrs	r3, r3, #31
 4927              		.loc 1 1884 20
 4928 0266 03F00103 		and	r3, r3, #1
 4929 026a 7B65     		str	r3, [r7, #84]
 4930 026c BB6D     		ldr	r3, [r7, #88]
 4931 026e 032B     		cmp	r3, #3
 4932 0270 62D8     		bhi	.L351
 4933 0272 01A2     		adr	r2, .L331
 4934 0274 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4935              		.p2align 2
 4936              	.L331:
 4937 0278 89020000 		.word	.L334+1
 4938 027c A5020000 		.word	.L333+1
 4939 0280 C1020000 		.word	.L332+1
 4940 0284 1D030000 		.word	.L330+1
 4941              		.p2align 1
 4942              	.L334:
1885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             switch(adcps) {
1886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case 0:
1887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(0U == adcps2) {
 4943              		.loc 1 1887 19
 4944 0288 7B6D     		ldr	r3, [r7, #84]
 4945 028a 002B     		cmp	r3, #0
 4946 028c 03D1     		bne	.L335
1888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = apb2_freq / 2U;
 4947              		.loc 1 1888 30
 4948 028e BB6C     		ldr	r3, [r7, #72]
 4949 0290 5B08     		lsrs	r3, r3, #1
 4950 0292 FB66     		str	r3, [r7, #108]
1889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 } else {
1890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = ahb_freq / 3U;
1891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
1892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 4951              		.loc 1 1892 17
 4952 0294 51E0     		b	.L328
 4953              	.L335:
1890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 4954              		.loc 1 1890 30
 4955 0296 3B6D     		ldr	r3, [r7, #80]
 4956 0298 1D4A     		ldr	r2, .L352+40
 4957 029a A2FB0323 		umull	r2, r3, r2, r3
 4958 029e 5B08     		lsrs	r3, r3, #1
 4959 02a0 FB66     		str	r3, [r7, #108]
 4960              		.loc 1 1892 17
 4961 02a2 4AE0     		b	.L328
 4962              	.L333:
1893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case 1:
1894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(0U == adcps2) {
 4963              		.loc 1 1894 19
 4964 02a4 7B6D     		ldr	r3, [r7, #84]
 4965 02a6 002B     		cmp	r3, #0
 4966 02a8 03D1     		bne	.L337
1895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = apb2_freq / 4U;
 4967              		.loc 1 1895 30
 4968 02aa BB6C     		ldr	r3, [r7, #72]
 4969 02ac 9B08     		lsrs	r3, r3, #2
 4970 02ae FB66     		str	r3, [r7, #108]
1896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 } else {
1897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = ahb_freq / 5U;
1898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
1899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 4971              		.loc 1 1899 17
 4972 02b0 43E0     		b	.L328
 4973              	.L337:
1897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 4974              		.loc 1 1897 30
 4975 02b2 3B6D     		ldr	r3, [r7, #80]
 4976 02b4 174A     		ldr	r2, .L352+44
 4977 02b6 A2FB0323 		umull	r2, r3, r2, r3
 4978 02ba 9B08     		lsrs	r3, r3, #2
 4979 02bc FB66     		str	r3, [r7, #108]
 4980              		.loc 1 1899 17
 4981 02be 3CE0     		b	.L328
 4982              	.L332:
1900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case 2:
1901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(0U == adcps2) {
 4983              		.loc 1 1901 19
 4984 02c0 7B6D     		ldr	r3, [r7, #84]
 4985 02c2 002B     		cmp	r3, #0
 4986 02c4 06D1     		bne	.L339
1902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = apb2_freq / 6U;
 4987              		.loc 1 1902 30
 4988 02c6 BB6C     		ldr	r3, [r7, #72]
 4989 02c8 114A     		ldr	r2, .L352+40
 4990 02ca A2FB0323 		umull	r2, r3, r2, r3
 4991 02ce 9B08     		lsrs	r3, r3, #2
 4992 02d0 FB66     		str	r3, [r7, #108]
1903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 } else {
1904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = ahb_freq / 7U;
1905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
1906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 4993              		.loc 1 1906 17
 4994 02d2 32E0     		b	.L328
 4995              	.L339:
1904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 4996              		.loc 1 1904 30
 4997 02d4 3A6D     		ldr	r2, [r7, #80]
 4998 02d6 104B     		ldr	r3, .L352+48
 4999 02d8 A3FB0213 		umull	r1, r3, r3, r2
 5000 02dc D21A     		subs	r2, r2, r3
 5001 02de 5208     		lsrs	r2, r2, #1
 5002 02e0 1344     		add	r3, r3, r2
 5003 02e2 9B08     		lsrs	r3, r3, #2
 5004 02e4 FB66     		str	r3, [r7, #108]
 5005              		.loc 1 1906 17
 5006 02e6 28E0     		b	.L328
 5007              	.L353:
 5008              		.align	2
 5009              	.L352:
 5010 02e8 00000000 		.word	.LC0
 5011 02ec 10000000 		.word	.LC1
 5012 02f0 04100240 		.word	1073876996
 5013 02f4 00127A00 		.word	8000000
 5014 02f8 2C100240 		.word	1073877036
 5015 02fc 006CDC02 		.word	48000000
 5016 0300 00093D00 		.word	4000000
 5017 0304 30100240 		.word	1073877040
 5018 0308 809FD500 		.word	14000000
 5019 030c 003FAB01 		.word	28000000
 5020 0310 ABAAAAAA 		.word	-1431655765
 5021 0314 CDCCCCCC 		.word	-858993459
 5022 0318 25499224 		.word	613566757
 5023              	.L330:
1907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             case 3:
1908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 if(0U == adcps2) {
 5024              		.loc 1 1908 19
 5025 031c 7B6D     		ldr	r3, [r7, #84]
 5026 031e 002B     		cmp	r3, #0
 5027 0320 03D1     		bne	.L341
1909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = apb2_freq / 8U;
 5028              		.loc 1 1909 30
 5029 0322 BB6C     		ldr	r3, [r7, #72]
 5030 0324 DB08     		lsrs	r3, r3, #3
 5031 0326 FB66     		str	r3, [r7, #108]
1910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 } else {
1911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                     adc_freq = ahb_freq / 9U;
1912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
1913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 5032              		.loc 1 1913 17
 5033 0328 07E0     		b	.L328
 5034              	.L341:
1911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 }
 5035              		.loc 1 1911 30
 5036 032a 3B6D     		ldr	r3, [r7, #80]
 5037 032c 234A     		ldr	r2, .L354
 5038 032e A2FB0323 		umull	r2, r3, r2, r3
 5039 0332 5B08     		lsrs	r3, r3, #1
 5040 0334 FB66     		str	r3, [r7, #108]
 5041              		.loc 1 1913 17
 5042 0336 00E0     		b	.L328
 5043              	.L351:
1914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             default:
1915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 break;
 5044              		.loc 1 1915 17
 5045 0338 00BF     		nop
 5046              	.L328:
1916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             }
1917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = adc_freq;
 5047              		.loc 1 1918 17
 5048 033a FB6E     		ldr	r3, [r7, #108]
 5049 033c 7B67     		str	r3, [r7, #116]
1919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5050              		.loc 1 1919 9
 5051 033e 37E0     		b	.L325
 5052              	.L319:
1920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_CEC:
1921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* calculate CEC clock frequency */
1922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_CECSRC_LXTAL != (RCU_CFG2 & RCU_CFG2_CECSEL)) {
 5053              		.loc 1 1922 33
 5054 0340 1F4B     		ldr	r3, .L354+4
 5055 0342 1B68     		ldr	r3, [r3]
 5056              		.loc 1 1922 42
 5057 0344 03F04003 		and	r3, r3, #64
 5058              		.loc 1 1922 11
 5059 0348 402B     		cmp	r3, #64
 5060 034a 03D0     		beq	.L343
1923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             cec_freq = IRC8M_VALUE / 244U;
 5061              		.loc 1 1923 22
 5062 034c 48F21203 		movw	r3, #32786
 5063 0350 BB66     		str	r3, [r7, #104]
 5064 0352 02E0     		b	.L344
 5065              	.L343:
1924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
1925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             cec_freq = LXTAL_VALUE;
 5066              		.loc 1 1925 22
 5067 0354 4FF40043 		mov	r3, #32768
 5068 0358 BB66     		str	r3, [r7, #104]
 5069              	.L344:
1926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = cec_freq;
 5070              		.loc 1 1927 17
 5071 035a BB6E     		ldr	r3, [r7, #104]
 5072 035c 7B67     		str	r3, [r7, #116]
1928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5073              		.loc 1 1928 9
 5074 035e 27E0     		b	.L325
 5075              	.L317:
1929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case CK_USART:
1930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* calculate USART clock frequency */
1931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         if(RCU_USART0SRC_CKAPB2 == (RCU_CFG2 & RCU_CFG2_USART0SEL)) {
 5076              		.loc 1 1931 37
 5077 0360 174B     		ldr	r3, .L354+4
 5078 0362 1B68     		ldr	r3, [r3]
 5079              		.loc 1 1931 46
 5080 0364 03F00303 		and	r3, r3, #3
 5081              		.loc 1 1931 11
 5082 0368 002B     		cmp	r3, #0
 5083 036a 02D1     		bne	.L345
1932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             usart_freq = apb2_freq;
 5084              		.loc 1 1932 24
 5085 036c BB6C     		ldr	r3, [r7, #72]
 5086 036e 7B66     		str	r3, [r7, #100]
 5087 0370 1AE0     		b	.L346
 5088              	.L345:
1933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else if(RCU_USART0SRC_CKSYS == (RCU_CFG2 & RCU_CFG2_USART0SEL)) {
 5089              		.loc 1 1933 43
 5090 0372 134B     		ldr	r3, .L354+4
 5091 0374 1B68     		ldr	r3, [r3]
 5092              		.loc 1 1933 52
 5093 0376 03F00303 		and	r3, r3, #3
 5094              		.loc 1 1933 18
 5095 037a 012B     		cmp	r3, #1
 5096 037c 02D1     		bne	.L347
1934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             usart_freq = cksys_freq;
 5097              		.loc 1 1934 24
 5098 037e 3B6F     		ldr	r3, [r7, #112]
 5099 0380 7B66     		str	r3, [r7, #100]
 5100 0382 11E0     		b	.L346
 5101              	.L347:
1935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else if(RCU_USART0SRC_LXTAL == (RCU_CFG2 & RCU_CFG2_USART0SEL)) {
 5102              		.loc 1 1935 43
 5103 0384 0E4B     		ldr	r3, .L354+4
 5104 0386 1B68     		ldr	r3, [r3]
 5105              		.loc 1 1935 52
 5106 0388 03F00303 		and	r3, r3, #3
 5107              		.loc 1 1935 18
 5108 038c 022B     		cmp	r3, #2
 5109 038e 03D1     		bne	.L348
1936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             usart_freq = LXTAL_VALUE;
 5110              		.loc 1 1936 24
 5111 0390 4FF40043 		mov	r3, #32768
 5112 0394 7B66     		str	r3, [r7, #100]
 5113 0396 07E0     		b	.L346
 5114              	.L348:
1937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else if(RCU_USART0SRC_IRC8M == (RCU_CFG2 & RCU_CFG2_USART0SEL)) {
 5115              		.loc 1 1937 43
 5116 0398 094B     		ldr	r3, .L354+4
 5117 039a 1B68     		ldr	r3, [r3]
 5118              		.loc 1 1937 52
 5119 039c 03F00303 		and	r3, r3, #3
 5120              		.loc 1 1937 18
 5121 03a0 032B     		cmp	r3, #3
 5122 03a2 01D1     		bne	.L346
1938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****             usart_freq = IRC8M_VALUE;
 5123              		.loc 1 1938 24
 5124 03a4 074B     		ldr	r3, .L354+8
 5125 03a6 7B66     		str	r3, [r7, #100]
 5126              	.L346:
1939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         } else {
1940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         }
1941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         ck_freq = usart_freq;
 5127              		.loc 1 1941 17
 5128 03a8 7B6E     		ldr	r3, [r7, #100]
 5129 03aa 7B67     		str	r3, [r7, #116]
1942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5130              		.loc 1 1942 9
 5131 03ac 00E0     		b	.L325
 5132              	.L350:
1943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
1944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5133              		.loc 1 1944 9
 5134 03ae 00BF     		nop
 5135              	.L325:
1945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
1946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return ck_freq;
 5136              		.loc 1 1946 12
 5137 03b0 7B6F     		ldr	r3, [r7, #116]
1947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5138              		.loc 1 1947 1
 5139 03b2 1846     		mov	r0, r3
 5140 03b4 7837     		adds	r7, r7, #120
 5141              		.cfi_def_cfa_offset 8
 5142 03b6 BD46     		mov	sp, r7
 5143              		.cfi_def_cfa_register 13
 5144              		@ sp needed
 5145 03b8 90BC     		pop	{r4, r7}
 5146              		.cfi_restore 7
 5147              		.cfi_restore 4
 5148              		.cfi_def_cfa_offset 0
 5149 03ba 7047     		bx	lr
 5150              	.L355:
 5151              		.align	2
 5152              	.L354:
 5153 03bc 398EE338 		.word	954437177
 5154 03c0 30100240 		.word	1073877040
 5155 03c4 00127A00 		.word	8000000
 5156              		.cfi_endproc
 5157              	.LFE148:
 5159              		.section	.text.hals_rcu_system_clock_source_get,"ax",%progbits
 5160              		.align	1
 5161              		.global	hals_rcu_system_clock_source_get
 5162              		.syntax unified
 5163              		.thumb
 5164              		.thumb_func
 5165              		.fpu softvfp
 5167              	hals_rcu_system_clock_source_get:
 5168              	.LFB149:
1948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the system clock source
1951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  none
1952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     which clock is selected as CK_SYS source
1954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_SCSS_IRC8M: select CK_IRC8M as the CK_SYS source
1956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_SCSS_HXTAL: select CK_HXTAL as the CK_SYS source
1957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_SCSS_PLL: select CK_PLL as the CK_SYS source
1958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** uint32_t hals_rcu_system_clock_source_get(void)
1960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5169              		.loc 1 1960 1
 5170              		.cfi_startproc
 5171              		@ args = 0, pretend = 0, frame = 0
 5172              		@ frame_needed = 1, uses_anonymous_args = 0
 5173              		@ link register save eliminated.
 5174 0000 80B4     		push	{r7}
 5175              		.cfi_def_cfa_offset 4
 5176              		.cfi_offset 7, -4
 5177 0002 00AF     		add	r7, sp, #0
 5178              		.cfi_def_cfa_register 7
1961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     return (RCU_CFG0 & RCU_CFG0_SCSS);
 5179              		.loc 1 1961 22
 5180 0004 034B     		ldr	r3, .L358
 5181 0006 1B68     		ldr	r3, [r3]
 5182 0008 03F00C03 		and	r3, r3, #12
1962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5183              		.loc 1 1962 1
 5184 000c 1846     		mov	r0, r3
 5185 000e BD46     		mov	sp, r7
 5186              		.cfi_def_cfa_register 13
 5187              		@ sp needed
 5188 0010 80BC     		pop	{r7}
 5189              		.cfi_restore 7
 5190              		.cfi_def_cfa_offset 0
 5191 0012 7047     		bx	lr
 5192              	.L359:
 5193              		.align	2
 5194              	.L358:
 5195 0014 04100240 		.word	1073876996
 5196              		.cfi_endproc
 5197              	.LFE149:
 5199              		.section	.text.hals_rcu_osci_on,"ax",%progbits
 5200              		.align	1
 5201              		.global	hals_rcu_osci_on
 5202              		.syntax unified
 5203              		.thumb
 5204              		.thumb_func
 5205              		.fpu softvfp
 5207              	hals_rcu_osci_on:
 5208              	.LFB150:
1963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      turn on the oscillator
1966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  osci: oscillator types, refer to rcu_osci_type_enum
1967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_HXTAL: HXTAL
1969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_LXTAL: LXTAL
1970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC8M: IRC8M
1971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC28M: IRC28M
1972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC48M: IRC48M
1973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC40K: IRC40K
1974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLL_CK: PLL
1975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_osci_on(hal_rcu_osci_type_enum osci)
1979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5209              		.loc 1 1979 1
 5210              		.cfi_startproc
 5211              		@ args = 0, pretend = 0, frame = 8
 5212              		@ frame_needed = 1, uses_anonymous_args = 0
 5213              		@ link register save eliminated.
 5214 0000 80B4     		push	{r7}
 5215              		.cfi_def_cfa_offset 4
 5216              		.cfi_offset 7, -4
 5217 0002 83B0     		sub	sp, sp, #12
 5218              		.cfi_def_cfa_offset 16
 5219 0004 00AF     		add	r7, sp, #0
 5220              		.cfi_def_cfa_register 7
 5221 0006 0346     		mov	r3, r0
 5222 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(osci) |= BIT(RCU_BIT_POS(osci));
 5223              		.loc 1 1980 23
 5224 000a FB88     		ldrh	r3, [r7, #6]
 5225 000c 9B09     		lsrs	r3, r3, #6
 5226 000e 9BB2     		uxth	r3, r3
 5227 0010 03F18043 		add	r3, r3, #1073741824
 5228 0014 03F50433 		add	r3, r3, #135168
 5229 0018 1968     		ldr	r1, [r3]
 5230              		.loc 1 1980 26
 5231 001a FB88     		ldrh	r3, [r7, #6]
 5232 001c 03F01F03 		and	r3, r3, #31
 5233 0020 0122     		movs	r2, #1
 5234 0022 9A40     		lsls	r2, r2, r3
 5235              		.loc 1 1980 23
 5236 0024 FB88     		ldrh	r3, [r7, #6]
 5237 0026 9B09     		lsrs	r3, r3, #6
 5238 0028 9BB2     		uxth	r3, r3
 5239 002a 03F18043 		add	r3, r3, #1073741824
 5240 002e 03F50433 		add	r3, r3, #135168
 5241 0032 1846     		mov	r0, r3
 5242 0034 41EA0203 		orr	r3, r1, r2
 5243 0038 0360     		str	r3, [r0]
1981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5244              		.loc 1 1981 1
 5245 003a 00BF     		nop
 5246 003c 0C37     		adds	r7, r7, #12
 5247              		.cfi_def_cfa_offset 4
 5248 003e BD46     		mov	sp, r7
 5249              		.cfi_def_cfa_register 13
 5250              		@ sp needed
 5251 0040 80BC     		pop	{r7}
 5252              		.cfi_restore 7
 5253              		.cfi_def_cfa_offset 0
 5254 0042 7047     		bx	lr
 5255              		.cfi_endproc
 5256              	.LFE150:
 5258              		.section	.text.hals_rcu_osci_off,"ax",%progbits
 5259              		.align	1
 5260              		.global	hals_rcu_osci_off
 5261              		.syntax unified
 5262              		.thumb
 5263              		.thumb_func
 5264              		.fpu softvfp
 5266              	hals_rcu_osci_off:
 5267              	.LFB151:
1982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
1983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
1984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      turn off the oscillator
1985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  osci: oscillator types, refer to rcu_osci_type_enum
1986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
1987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_HXTAL: HXTAL
1988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_LXTAL: LXTAL
1989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC8M: IRC8M
1990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC28M: IRC28M
1991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC48M: IRC48M
1992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_IRC40K: IRC40K
1993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLL_CK: PLL
1994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
1995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
1996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
1997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_osci_off(hal_rcu_osci_type_enum osci)
1998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5268              		.loc 1 1998 1
 5269              		.cfi_startproc
 5270              		@ args = 0, pretend = 0, frame = 8
 5271              		@ frame_needed = 1, uses_anonymous_args = 0
 5272              		@ link register save eliminated.
 5273 0000 80B4     		push	{r7}
 5274              		.cfi_def_cfa_offset 4
 5275              		.cfi_offset 7, -4
 5276 0002 83B0     		sub	sp, sp, #12
 5277              		.cfi_def_cfa_offset 16
 5278 0004 00AF     		add	r7, sp, #0
 5279              		.cfi_def_cfa_register 7
 5280 0006 0346     		mov	r3, r0
 5281 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(osci) &= ~BIT(RCU_BIT_POS(osci));
 5282              		.loc 1 1999 23
 5283 000a FB88     		ldrh	r3, [r7, #6]
 5284 000c 9B09     		lsrs	r3, r3, #6
 5285 000e 9BB2     		uxth	r3, r3
 5286 0010 03F18043 		add	r3, r3, #1073741824
 5287 0014 03F50433 		add	r3, r3, #135168
 5288 0018 1968     		ldr	r1, [r3]
 5289              		.loc 1 1999 27
 5290 001a FB88     		ldrh	r3, [r7, #6]
 5291 001c 03F01F03 		and	r3, r3, #31
 5292 0020 0122     		movs	r2, #1
 5293 0022 02FA03F3 		lsl	r3, r2, r3
 5294              		.loc 1 1999 26
 5295 0026 DA43     		mvns	r2, r3
 5296              		.loc 1 1999 23
 5297 0028 FB88     		ldrh	r3, [r7, #6]
 5298 002a 9B09     		lsrs	r3, r3, #6
 5299 002c 9BB2     		uxth	r3, r3
 5300 002e 03F18043 		add	r3, r3, #1073741824
 5301 0032 03F50433 		add	r3, r3, #135168
 5302 0036 1846     		mov	r0, r3
 5303 0038 01EA0203 		and	r3, r1, r2
 5304 003c 0360     		str	r3, [r0]
2000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5305              		.loc 1 2000 1
 5306 003e 00BF     		nop
 5307 0040 0C37     		adds	r7, r7, #12
 5308              		.cfi_def_cfa_offset 4
 5309 0042 BD46     		mov	sp, r7
 5310              		.cfi_def_cfa_register 13
 5311              		@ sp needed
 5312 0044 80BC     		pop	{r7}
 5313              		.cfi_restore 7
 5314              		.cfi_def_cfa_offset 0
 5315 0046 7047     		bx	lr
 5316              		.cfi_endproc
 5317              	.LFE151:
 5319              		.section	.text.hals_rcu_osci_bypass_mode_enable,"ax",%progbits
 5320              		.align	1
 5321              		.global	hals_rcu_osci_bypass_mode_enable
 5322              		.syntax unified
 5323              		.thumb
 5324              		.thumb_func
 5325              		.fpu softvfp
 5327              	hals_rcu_osci_bypass_mode_enable:
 5328              	.LFB152:
2001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      enable the oscillator bypass mode, HXTALEN or LXTALEN must be reset before it
2004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  osci: oscillator types, refer to rcu_osci_type_enum
2005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_HXTAL: HXTAL
2007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_LXTAL: LXTAL
2008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_osci_bypass_mode_enable(hal_rcu_osci_type_enum osci)
2012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5329              		.loc 1 2012 1
 5330              		.cfi_startproc
 5331              		@ args = 0, pretend = 0, frame = 16
 5332              		@ frame_needed = 1, uses_anonymous_args = 0
 5333              		@ link register save eliminated.
 5334 0000 80B4     		push	{r7}
 5335              		.cfi_def_cfa_offset 4
 5336              		.cfi_offset 7, -4
 5337 0002 85B0     		sub	sp, sp, #20
 5338              		.cfi_def_cfa_offset 24
 5339 0004 00AF     		add	r7, sp, #0
 5340              		.cfi_def_cfa_register 7
 5341 0006 0346     		mov	r3, r0
 5342 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t reg;
2014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(osci) {
 5343              		.loc 1 2014 5
 5344 000a FB88     		ldrh	r3, [r7, #6]
 5345 000c 43F21002 		movw	r2, #12304
 5346 0010 9342     		cmp	r3, r2
 5347 0012 3BD0     		beq	.L367
 5348 0014 43F21002 		movw	r2, #12304
 5349 0018 9342     		cmp	r3, r2
 5350 001a 39DC     		bgt	.L368
 5351 001c B3F5506F 		cmp	r3, #3328
 5352 0020 34D0     		beq	.L367
 5353 0022 B3F5506F 		cmp	r3, #3328
 5354 0026 33DC     		bgt	.L368
 5355 0028 B3F5106F 		cmp	r3, #2304
 5356 002c 2ED0     		beq	.L367
 5357 002e B3F5106F 		cmp	r3, #2304
 5358 0032 2DDC     		bgt	.L368
 5359 0034 B3F5006F 		cmp	r3, #2048
 5360 0038 19D0     		beq	.L365
 5361 003a B3F5006F 		cmp	r3, #2048
 5362 003e 27DC     		bgt	.L368
 5363 0040 182B     		cmp	r3, #24
 5364 0042 23D0     		beq	.L367
 5365 0044 182B     		cmp	r3, #24
 5366 0046 23DC     		bgt	.L368
 5367 0048 002B     		cmp	r3, #0
 5368 004a 1FD0     		beq	.L367
 5369 004c 102B     		cmp	r3, #16
 5370 004e 1FD1     		bne	.L368
2015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_HXTAL:
2016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* HXTALEN must be reset before enable the oscillator bypass mode */
2017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         reg = RCU_CTL0;
 5371              		.loc 1 2017 15
 5372 0050 124B     		ldr	r3, .L370
 5373              		.loc 1 2017 13
 5374 0052 1B68     		ldr	r3, [r3]
 5375 0054 FB60     		str	r3, [r7, #12]
2018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CTL0 &= ~RCU_CTL0_HXTALEN;
 5376              		.loc 1 2018 18
 5377 0056 114B     		ldr	r3, .L370
 5378 0058 1B68     		ldr	r3, [r3]
 5379 005a 104A     		ldr	r2, .L370
 5380 005c 23F48033 		bic	r3, r3, #65536
 5381 0060 1360     		str	r3, [r2]
2019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CTL0 = (reg | RCU_CTL0_HXTALBPS);
 5382              		.loc 1 2019 9
 5383 0062 0E4A     		ldr	r2, .L370
 5384              		.loc 1 2019 25
 5385 0064 FB68     		ldr	r3, [r7, #12]
 5386 0066 43F48023 		orr	r3, r3, #262144
 5387              		.loc 1 2019 18
 5388 006a 1360     		str	r3, [r2]
2020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5389              		.loc 1 2020 9
 5390 006c 11E0     		b	.L366
 5391              	.L365:
2021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_LXTAL:
2022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* LXTALEN must be reset before enable the oscillator bypass mode */
2023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         reg = RCU_BDCTL;
 5392              		.loc 1 2023 15
 5393 006e 0C4B     		ldr	r3, .L370+4
 5394              		.loc 1 2023 13
 5395 0070 1B68     		ldr	r3, [r3]
 5396 0072 FB60     		str	r3, [r7, #12]
2024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_BDCTL &= ~RCU_BDCTL_LXTALEN;
 5397              		.loc 1 2024 19
 5398 0074 0A4B     		ldr	r3, .L370+4
 5399 0076 1B68     		ldr	r3, [r3]
 5400 0078 094A     		ldr	r2, .L370+4
 5401 007a 23F00103 		bic	r3, r3, #1
 5402 007e 1360     		str	r3, [r2]
2025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_BDCTL = (reg | RCU_BDCTL_LXTALBPS);
 5403              		.loc 1 2025 9
 5404 0080 074A     		ldr	r2, .L370+4
 5405              		.loc 1 2025 26
 5406 0082 FB68     		ldr	r3, [r7, #12]
 5407 0084 43F00403 		orr	r3, r3, #4
 5408              		.loc 1 2025 19
 5409 0088 1360     		str	r3, [r2]
2026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5410              		.loc 1 2026 9
 5411 008a 02E0     		b	.L366
 5412              	.L367:
2027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC8M:
2028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC28M:
2029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC48M:
2030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC40K:
2031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PLL_CK:
2032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5413              		.loc 1 2032 9
 5414 008c 00BF     		nop
 5415 008e 00E0     		b	.L369
 5416              	.L368:
2033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
2034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5417              		.loc 1 2034 9
 5418 0090 00BF     		nop
 5419              	.L366:
 5420              	.L369:
2035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
2036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5421              		.loc 1 2036 1
 5422 0092 00BF     		nop
 5423 0094 1437     		adds	r7, r7, #20
 5424              		.cfi_def_cfa_offset 4
 5425 0096 BD46     		mov	sp, r7
 5426              		.cfi_def_cfa_register 13
 5427              		@ sp needed
 5428 0098 80BC     		pop	{r7}
 5429              		.cfi_restore 7
 5430              		.cfi_def_cfa_offset 0
 5431 009a 7047     		bx	lr
 5432              	.L371:
 5433              		.align	2
 5434              	.L370:
 5435 009c 00100240 		.word	1073876992
 5436 00a0 20100240 		.word	1073877024
 5437              		.cfi_endproc
 5438              	.LFE152:
 5440              		.section	.text.hals_rcu_osci_bypass_mode_disable,"ax",%progbits
 5441              		.align	1
 5442              		.global	hals_rcu_osci_bypass_mode_disable
 5443              		.syntax unified
 5444              		.thumb
 5445              		.thumb_func
 5446              		.fpu softvfp
 5448              	hals_rcu_osci_bypass_mode_disable:
 5449              	.LFB153:
2037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      disable the oscillator bypass mode, HXTALEN or LXTALEN must be reset before it
2040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  osci: oscillator types, refer to rcu_osci_type_enum
2041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_HXTAL: HXTAL
2043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_LXTAL: LXTAL
2044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_osci_bypass_mode_disable(hal_rcu_osci_type_enum osci)
2048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5450              		.loc 1 2048 1
 5451              		.cfi_startproc
 5452              		@ args = 0, pretend = 0, frame = 16
 5453              		@ frame_needed = 1, uses_anonymous_args = 0
 5454              		@ link register save eliminated.
 5455 0000 80B4     		push	{r7}
 5456              		.cfi_def_cfa_offset 4
 5457              		.cfi_offset 7, -4
 5458 0002 85B0     		sub	sp, sp, #20
 5459              		.cfi_def_cfa_offset 24
 5460 0004 00AF     		add	r7, sp, #0
 5461              		.cfi_def_cfa_register 7
 5462 0006 0346     		mov	r3, r0
 5463 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t reg;
2050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     switch(osci) {
 5464              		.loc 1 2050 5
 5465 000a FB88     		ldrh	r3, [r7, #6]
 5466 000c 43F21002 		movw	r2, #12304
 5467 0010 9342     		cmp	r3, r2
 5468 0012 3BD0     		beq	.L377
 5469 0014 43F21002 		movw	r2, #12304
 5470 0018 9342     		cmp	r3, r2
 5471 001a 39DC     		bgt	.L378
 5472 001c B3F5506F 		cmp	r3, #3328
 5473 0020 34D0     		beq	.L377
 5474 0022 B3F5506F 		cmp	r3, #3328
 5475 0026 33DC     		bgt	.L378
 5476 0028 B3F5106F 		cmp	r3, #2304
 5477 002c 2ED0     		beq	.L377
 5478 002e B3F5106F 		cmp	r3, #2304
 5479 0032 2DDC     		bgt	.L378
 5480 0034 B3F5006F 		cmp	r3, #2048
 5481 0038 19D0     		beq	.L375
 5482 003a B3F5006F 		cmp	r3, #2048
 5483 003e 27DC     		bgt	.L378
 5484 0040 182B     		cmp	r3, #24
 5485 0042 23D0     		beq	.L377
 5486 0044 182B     		cmp	r3, #24
 5487 0046 23DC     		bgt	.L378
 5488 0048 002B     		cmp	r3, #0
 5489 004a 1FD0     		beq	.L377
 5490 004c 102B     		cmp	r3, #16
 5491 004e 1FD1     		bne	.L378
2051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_HXTAL:
2052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* HXTALEN must be reset before disable the oscillator bypass mode */
2053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         reg = RCU_CTL0;
 5492              		.loc 1 2053 15
 5493 0050 124B     		ldr	r3, .L380
 5494              		.loc 1 2053 13
 5495 0052 1B68     		ldr	r3, [r3]
 5496 0054 FB60     		str	r3, [r7, #12]
2054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CTL0 &= ~RCU_CTL0_HXTALEN;
 5497              		.loc 1 2054 18
 5498 0056 114B     		ldr	r3, .L380
 5499 0058 1B68     		ldr	r3, [r3]
 5500 005a 104A     		ldr	r2, .L380
 5501 005c 23F48033 		bic	r3, r3, #65536
 5502 0060 1360     		str	r3, [r2]
2055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_CTL0 = (reg & (~RCU_CTL0_HXTALBPS));
 5503              		.loc 1 2055 9
 5504 0062 0E4A     		ldr	r2, .L380
 5505              		.loc 1 2055 25
 5506 0064 FB68     		ldr	r3, [r7, #12]
 5507 0066 23F48023 		bic	r3, r3, #262144
 5508              		.loc 1 2055 18
 5509 006a 1360     		str	r3, [r2]
2056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5510              		.loc 1 2056 9
 5511 006c 11E0     		b	.L376
 5512              	.L375:
2057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_LXTAL:
2058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         /* LXTALEN must be reset before disable the oscillator bypass mode */
2059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         reg = RCU_BDCTL;
 5513              		.loc 1 2059 15
 5514 006e 0C4B     		ldr	r3, .L380+4
 5515              		.loc 1 2059 13
 5516 0070 1B68     		ldr	r3, [r3]
 5517 0072 FB60     		str	r3, [r7, #12]
2060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_BDCTL &= ~RCU_BDCTL_LXTALEN;
 5518              		.loc 1 2060 19
 5519 0074 0A4B     		ldr	r3, .L380+4
 5520 0076 1B68     		ldr	r3, [r3]
 5521 0078 094A     		ldr	r2, .L380+4
 5522 007a 23F00103 		bic	r3, r3, #1
 5523 007e 1360     		str	r3, [r2]
2061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         RCU_BDCTL = (reg & (~RCU_BDCTL_LXTALBPS));
 5524              		.loc 1 2061 9
 5525 0080 074A     		ldr	r2, .L380+4
 5526              		.loc 1 2061 26
 5527 0082 FB68     		ldr	r3, [r7, #12]
 5528 0084 23F00403 		bic	r3, r3, #4
 5529              		.loc 1 2061 19
 5530 0088 1360     		str	r3, [r2]
2062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5531              		.loc 1 2062 9
 5532 008a 02E0     		b	.L376
 5533              	.L377:
2063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC8M:
2064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC28M:
2065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC48M:
2066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_IRC40K:
2067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     case RCU_PLL_CK:
2068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5534              		.loc 1 2068 9
 5535 008c 00BF     		nop
 5536 008e 00E0     		b	.L379
 5537              	.L378:
2069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     default:
2070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         break;
 5538              		.loc 1 2070 9
 5539 0090 00BF     		nop
 5540              	.L376:
 5541              	.L379:
2071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
2072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5542              		.loc 1 2072 1
 5543 0092 00BF     		nop
 5544 0094 1437     		adds	r7, r7, #20
 5545              		.cfi_def_cfa_offset 4
 5546 0096 BD46     		mov	sp, r7
 5547              		.cfi_def_cfa_register 13
 5548              		@ sp needed
 5549 0098 80BC     		pop	{r7}
 5550              		.cfi_restore 7
 5551              		.cfi_def_cfa_offset 0
 5552 009a 7047     		bx	lr
 5553              	.L381:
 5554              		.align	2
 5555              	.L380:
 5556 009c 00100240 		.word	1073876992
 5557 00a0 20100240 		.word	1073877024
 5558              		.cfi_endproc
 5559              	.LFE153:
 5561              		.section	.text.hals_rcu_irc8m_adjust_value_set,"ax",%progbits
 5562              		.align	1
 5563              		.global	hals_rcu_irc8m_adjust_value_set
 5564              		.syntax unified
 5565              		.thumb
 5566              		.thumb_func
 5567              		.fpu softvfp
 5569              	hals_rcu_irc8m_adjust_value_set:
 5570              	.LFB154:
2073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      set the IRC8M adjust value
2076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  irc8m_adjval: IRC8M adjust value, must be between 0 and 0x1F
2077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_irc8m_adjust_value_set(uint8_t irc8m_adjval)
2081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5571              		.loc 1 2081 1
 5572              		.cfi_startproc
 5573              		@ args = 0, pretend = 0, frame = 16
 5574              		@ frame_needed = 1, uses_anonymous_args = 0
 5575              		@ link register save eliminated.
 5576 0000 80B4     		push	{r7}
 5577              		.cfi_def_cfa_offset 4
 5578              		.cfi_offset 7, -4
 5579 0002 85B0     		sub	sp, sp, #20
 5580              		.cfi_def_cfa_offset 24
 5581 0004 00AF     		add	r7, sp, #0
 5582              		.cfi_def_cfa_register 7
 5583 0006 0346     		mov	r3, r0
 5584 0008 FB71     		strb	r3, [r7, #7]
2082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t adjust = 0U;
 5585              		.loc 1 2082 14
 5586 000a 0023     		movs	r3, #0
 5587 000c FB60     		str	r3, [r7, #12]
2083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     adjust = RCU_CTL0;
 5588              		.loc 1 2083 14
 5589 000e 094B     		ldr	r3, .L383
 5590              		.loc 1 2083 12
 5591 0010 1B68     		ldr	r3, [r3]
 5592 0012 FB60     		str	r3, [r7, #12]
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the IRC8MADJ bits and set according to irc8m_adjval */
2085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     adjust &= ~RCU_CTL0_IRC8MADJ;
 5593              		.loc 1 2085 12
 5594 0014 FB68     		ldr	r3, [r7, #12]
 5595 0016 23F0F803 		bic	r3, r3, #248
 5596 001a FB60     		str	r3, [r7, #12]
2086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL0 = (adjust | (((uint32_t)irc8m_adjval) << 3));
 5597              		.loc 1 2086 28
 5598 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5599              		.loc 1 2086 52
 5600 001e DA00     		lsls	r2, r3, #3
 5601              		.loc 1 2086 5
 5602 0020 0449     		ldr	r1, .L383
 5603              		.loc 1 2086 24
 5604 0022 FB68     		ldr	r3, [r7, #12]
 5605 0024 1343     		orrs	r3, r3, r2
 5606              		.loc 1 2086 14
 5607 0026 0B60     		str	r3, [r1]
2087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5608              		.loc 1 2087 1
 5609 0028 00BF     		nop
 5610 002a 1437     		adds	r7, r7, #20
 5611              		.cfi_def_cfa_offset 4
 5612 002c BD46     		mov	sp, r7
 5613              		.cfi_def_cfa_register 13
 5614              		@ sp needed
 5615 002e 80BC     		pop	{r7}
 5616              		.cfi_restore 7
 5617              		.cfi_def_cfa_offset 0
 5618 0030 7047     		bx	lr
 5619              	.L384:
 5620 0032 00BF     		.align	2
 5621              	.L383:
 5622 0034 00100240 		.word	1073876992
 5623              		.cfi_endproc
 5624              	.LFE154:
 5626              		.section	.text.hals_rcu_irc28m_adjust_value_set,"ax",%progbits
 5627              		.align	1
 5628              		.global	hals_rcu_irc28m_adjust_value_set
 5629              		.syntax unified
 5630              		.thumb
 5631              		.thumb_func
 5632              		.fpu softvfp
 5634              	hals_rcu_irc28m_adjust_value_set:
 5635              	.LFB155:
2088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      set the IRC28M adjust value
2091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  irc28m_adjval: IRC28M adjust value, must be between 0 and 0x1F
2092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_irc28m_adjust_value_set(uint8_t irc28m_adjval)
2096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5636              		.loc 1 2096 1
 5637              		.cfi_startproc
 5638              		@ args = 0, pretend = 0, frame = 16
 5639              		@ frame_needed = 1, uses_anonymous_args = 0
 5640              		@ link register save eliminated.
 5641 0000 80B4     		push	{r7}
 5642              		.cfi_def_cfa_offset 4
 5643              		.cfi_offset 7, -4
 5644 0002 85B0     		sub	sp, sp, #20
 5645              		.cfi_def_cfa_offset 24
 5646 0004 00AF     		add	r7, sp, #0
 5647              		.cfi_def_cfa_register 7
 5648 0006 0346     		mov	r3, r0
 5649 0008 FB71     		strb	r3, [r7, #7]
2097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t adjust = 0U;
 5650              		.loc 1 2097 14
 5651 000a 0023     		movs	r3, #0
 5652 000c FB60     		str	r3, [r7, #12]
2098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     adjust = RCU_CTL1;
 5653              		.loc 1 2098 14
 5654 000e 094B     		ldr	r3, .L386
 5655              		.loc 1 2098 12
 5656 0010 1B68     		ldr	r3, [r3]
 5657 0012 FB60     		str	r3, [r7, #12]
2099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the IRC28MADJ bits and set according to irc28m_adjval */
2100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     adjust &= ~RCU_CTL1_IRC28MADJ;
 5658              		.loc 1 2100 12
 5659 0014 FB68     		ldr	r3, [r7, #12]
 5660 0016 23F0F803 		bic	r3, r3, #248
 5661 001a FB60     		str	r3, [r7, #12]
2101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CTL1 = (adjust | (((uint32_t)irc28m_adjval) << 3));
 5662              		.loc 1 2101 28
 5663 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5664              		.loc 1 2101 53
 5665 001e DA00     		lsls	r2, r3, #3
 5666              		.loc 1 2101 5
 5667 0020 0449     		ldr	r1, .L386
 5668              		.loc 1 2101 24
 5669 0022 FB68     		ldr	r3, [r7, #12]
 5670 0024 1343     		orrs	r3, r3, r2
 5671              		.loc 1 2101 14
 5672 0026 0B60     		str	r3, [r1]
2102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5673              		.loc 1 2102 1
 5674 0028 00BF     		nop
 5675 002a 1437     		adds	r7, r7, #20
 5676              		.cfi_def_cfa_offset 4
 5677 002c BD46     		mov	sp, r7
 5678              		.cfi_def_cfa_register 13
 5679              		@ sp needed
 5680 002e 80BC     		pop	{r7}
 5681              		.cfi_restore 7
 5682              		.cfi_def_cfa_offset 0
 5683 0030 7047     		bx	lr
 5684              	.L387:
 5685 0032 00BF     		.align	2
 5686              	.L386:
 5687 0034 34100240 		.word	1073877044
 5688              		.cfi_endproc
 5689              	.LFE155:
 5691              		.section	.text.hals_rcu_pll_preselection_config,"ax",%progbits
 5692              		.align	1
 5693              		.global	hals_rcu_pll_preselection_config
 5694              		.syntax unified
 5695              		.thumb
 5696              		.thumb_func
 5697              		.fpu softvfp
 5699              	hals_rcu_pll_preselection_config:
 5700              	.LFB156:
2103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the PLL clock source preselection
2106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  pll_presel: PLL clock source preselection
2107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLLPRESEL_IRC48M: select IRC48M as PLL preselection clock
2109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLLPRESEL_HXTAL: select HXTAL as PLL preselection clock
2110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_pll_preselection_config(uint32_t pll_presel)
2114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5701              		.loc 1 2114 1
 5702              		.cfi_startproc
 5703              		@ args = 0, pretend = 0, frame = 8
 5704              		@ frame_needed = 1, uses_anonymous_args = 0
 5705              		@ link register save eliminated.
 5706 0000 80B4     		push	{r7}
 5707              		.cfi_def_cfa_offset 4
 5708              		.cfi_offset 7, -4
 5709 0002 83B0     		sub	sp, sp, #12
 5710              		.cfi_def_cfa_offset 16
 5711 0004 00AF     		add	r7, sp, #0
 5712              		.cfi_def_cfa_register 7
 5713 0006 7860     		str	r0, [r7, #4]
2115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG1 &= ~(RCU_CFG1_PLLPRESEL);
 5714              		.loc 1 2115 14
 5715 0008 084B     		ldr	r3, .L389
 5716 000a 1B68     		ldr	r3, [r3]
 5717 000c 074A     		ldr	r2, .L389
 5718 000e 23F08043 		bic	r3, r3, #1073741824
 5719 0012 1360     		str	r3, [r2]
2116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG1 |= pll_presel;
 5720              		.loc 1 2116 14
 5721 0014 054B     		ldr	r3, .L389
 5722 0016 1A68     		ldr	r2, [r3]
 5723 0018 0449     		ldr	r1, .L389
 5724 001a 7B68     		ldr	r3, [r7, #4]
 5725 001c 1343     		orrs	r3, r3, r2
 5726 001e 0B60     		str	r3, [r1]
2117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5727              		.loc 1 2117 1
 5728 0020 00BF     		nop
 5729 0022 0C37     		adds	r7, r7, #12
 5730              		.cfi_def_cfa_offset 4
 5731 0024 BD46     		mov	sp, r7
 5732              		.cfi_def_cfa_register 13
 5733              		@ sp needed
 5734 0026 80BC     		pop	{r7}
 5735              		.cfi_restore 7
 5736              		.cfi_def_cfa_offset 0
 5737 0028 7047     		bx	lr
 5738              	.L390:
 5739 002a 00BF     		.align	2
 5740              	.L389:
 5741 002c 2C100240 		.word	1073877036
 5742              		.cfi_endproc
 5743              	.LFE156:
 5745              		.section	.text.hals_rcu_hxtal_prediv_config,"ax",%progbits
 5746              		.align	1
 5747              		.global	hals_rcu_hxtal_prediv_config
 5748              		.syntax unified
 5749              		.thumb
 5750              		.thumb_func
 5751              		.fpu softvfp
 5753              	hals_rcu_hxtal_prediv_config:
 5754              	.LFB157:
2118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the HXTAL divider used as input of PLL
2121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  hxtal_prediv: HXTAL divider used as input of PLL
2122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLL_PREDVx(x=1..16): HXTAL or IRC48M divided x used as input of PLL
2124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_hxtal_prediv_config(uint32_t hxtal_prediv)
2128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5755              		.loc 1 2128 1
 5756              		.cfi_startproc
 5757              		@ args = 0, pretend = 0, frame = 16
 5758              		@ frame_needed = 1, uses_anonymous_args = 0
 5759              		@ link register save eliminated.
 5760 0000 80B4     		push	{r7}
 5761              		.cfi_def_cfa_offset 4
 5762              		.cfi_offset 7, -4
 5763 0002 85B0     		sub	sp, sp, #20
 5764              		.cfi_def_cfa_offset 24
 5765 0004 00AF     		add	r7, sp, #0
 5766              		.cfi_def_cfa_register 7
 5767 0006 7860     		str	r0, [r7, #4]
2129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t prediv = 0U;
 5768              		.loc 1 2129 14
 5769 0008 0023     		movs	r3, #0
 5770 000a FB60     		str	r3, [r7, #12]
2130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     prediv = RCU_CFG1;
 5771              		.loc 1 2130 14
 5772 000c 084B     		ldr	r3, .L392
 5773              		.loc 1 2130 12
 5774 000e 1B68     		ldr	r3, [r3]
 5775 0010 FB60     		str	r3, [r7, #12]
2131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the HXTALPREDV bits and set according to hxtal_prediv */
2132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     prediv &= ~RCU_CFG1_PREDV;
 5776              		.loc 1 2132 12
 5777 0012 FB68     		ldr	r3, [r7, #12]
 5778 0014 23F00F03 		bic	r3, r3, #15
 5779 0018 FB60     		str	r3, [r7, #12]
2133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG1 = (prediv | hxtal_prediv);
 5780              		.loc 1 2133 5
 5781 001a 0549     		ldr	r1, .L392
 5782              		.loc 1 2133 24
 5783 001c FA68     		ldr	r2, [r7, #12]
 5784 001e 7B68     		ldr	r3, [r7, #4]
 5785 0020 1343     		orrs	r3, r3, r2
 5786              		.loc 1 2133 14
 5787 0022 0B60     		str	r3, [r1]
2134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5788              		.loc 1 2134 1
 5789 0024 00BF     		nop
 5790 0026 1437     		adds	r7, r7, #20
 5791              		.cfi_def_cfa_offset 4
 5792 0028 BD46     		mov	sp, r7
 5793              		.cfi_def_cfa_register 13
 5794              		@ sp needed
 5795 002a 80BC     		pop	{r7}
 5796              		.cfi_restore 7
 5797              		.cfi_def_cfa_offset 0
 5798 002c 7047     		bx	lr
 5799              	.L393:
 5800 002e 00BF     		.align	2
 5801              	.L392:
 5802 0030 2C100240 		.word	1073877036
 5803              		.cfi_endproc
 5804              	.LFE157:
 5806              		.section	.text.hals_rcu_pll_config,"ax",%progbits
 5807              		.align	1
 5808              		.global	hals_rcu_pll_config
 5809              		.syntax unified
 5810              		.thumb
 5811              		.thumb_func
 5812              		.fpu softvfp
 5814              	hals_rcu_pll_config:
 5815              	.LFB158:
2135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the PLL clock source selection and PLL multiply factor
2138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  pll_src: PLL clock source selection
2139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLLSRC_IRC8M_DIV2: select CK_IRC8M/2 as PLL source clock
2141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLLSRC_HXTAL_IRC48M: select HXTAL or IRC48M as PLL source clock
2142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  pll_mul: PLL multiply factor
2143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_PLL_MULx(x=2..64): PLL source clock * x
2145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_pll_config(uint32_t pll_src, uint32_t pll_mul)
2149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5816              		.loc 1 2149 1
 5817              		.cfi_startproc
 5818              		@ args = 0, pretend = 0, frame = 8
 5819              		@ frame_needed = 1, uses_anonymous_args = 0
 5820              		@ link register save eliminated.
 5821 0000 80B4     		push	{r7}
 5822              		.cfi_def_cfa_offset 4
 5823              		.cfi_offset 7, -4
 5824 0002 83B0     		sub	sp, sp, #12
 5825              		.cfi_def_cfa_offset 16
 5826 0004 00AF     		add	r7, sp, #0
 5827              		.cfi_def_cfa_register 7
 5828 0006 7860     		str	r0, [r7, #4]
 5829 0008 3960     		str	r1, [r7]
2150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 &= ~(RCU_CFG0_PLLSEL | RCU_CFG0_PLLMF | RCU_CFG0_PLLMF4);
 5830              		.loc 1 2150 14
 5831 000a 124B     		ldr	r3, .L395
 5832 000c 1B68     		ldr	r3, [r3]
 5833 000e 114A     		ldr	r2, .L395
 5834 0010 23F00363 		bic	r3, r3, #137363456
 5835 0014 23F45023 		bic	r3, r3, #851968
 5836 0018 1360     		str	r3, [r2]
2151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG1 &= ~(RCU_CFG1_PLLMF5);
 5837              		.loc 1 2151 14
 5838 001a 0F4B     		ldr	r3, .L395+4
 5839 001c 1B68     		ldr	r3, [r3]
 5840 001e 0E4A     		ldr	r2, .L395+4
 5841 0020 23F00043 		bic	r3, r3, #-2147483648
 5842 0024 1360     		str	r3, [r2]
2152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 |= (pll_src | (pll_mul & (~RCU_CFG1_PLLMF5)));
 5843              		.loc 1 2152 14
 5844 0026 0B4B     		ldr	r3, .L395
 5845 0028 1A68     		ldr	r2, [r3]
 5846              		.loc 1 2152 37
 5847 002a 3B68     		ldr	r3, [r7]
 5848 002c 23F00041 		bic	r1, r3, #-2147483648
 5849              		.loc 1 2152 26
 5850 0030 7B68     		ldr	r3, [r7, #4]
 5851 0032 0B43     		orrs	r3, r3, r1
 5852              		.loc 1 2152 14
 5853 0034 0749     		ldr	r1, .L395
 5854 0036 1343     		orrs	r3, r3, r2
 5855 0038 0B60     		str	r3, [r1]
2153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG1 |= (pll_mul & RCU_CFG1_PLLMF5);
 5856              		.loc 1 2153 14
 5857 003a 074B     		ldr	r3, .L395+4
 5858 003c 1A68     		ldr	r2, [r3]
 5859              		.loc 1 2153 26
 5860 003e 3B68     		ldr	r3, [r7]
 5861 0040 03F00043 		and	r3, r3, #-2147483648
 5862              		.loc 1 2153 14
 5863 0044 0449     		ldr	r1, .L395+4
 5864 0046 1343     		orrs	r3, r3, r2
 5865 0048 0B60     		str	r3, [r1]
2154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5866              		.loc 1 2154 1
 5867 004a 00BF     		nop
 5868 004c 0C37     		adds	r7, r7, #12
 5869              		.cfi_def_cfa_offset 4
 5870 004e BD46     		mov	sp, r7
 5871              		.cfi_def_cfa_register 13
 5872              		@ sp needed
 5873 0050 80BC     		pop	{r7}
 5874              		.cfi_restore 7
 5875              		.cfi_def_cfa_offset 0
 5876 0052 7047     		bx	lr
 5877              	.L396:
 5878              		.align	2
 5879              	.L395:
 5880 0054 04100240 		.word	1073876996
 5881 0058 2C100240 		.word	1073877036
 5882              		.cfi_endproc
 5883              	.LFE158:
 5885              		.section	.text.hals_rcu_system_clock_source_config,"ax",%progbits
 5886              		.align	1
 5887              		.global	hals_rcu_system_clock_source_config
 5888              		.syntax unified
 5889              		.thumb
 5890              		.thumb_func
 5891              		.fpu softvfp
 5893              	hals_rcu_system_clock_source_config:
 5894              	.LFB159:
2155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the system clock source
2158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_sys: system clock source select
2159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKSYSSRC_IRC8M: select CK_IRC8M as the CK_SYS source
2161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKSYSSRC_HXTAL: select CK_HXTAL as the CK_SYS source
2162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKSYSSRC_PLL: select CK_PLL as the CK_SYS source
2163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_system_clock_source_config(uint32_t ck_sys)
2167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5895              		.loc 1 2167 1
 5896              		.cfi_startproc
 5897              		@ args = 0, pretend = 0, frame = 16
 5898              		@ frame_needed = 1, uses_anonymous_args = 0
 5899              		@ link register save eliminated.
 5900 0000 80B4     		push	{r7}
 5901              		.cfi_def_cfa_offset 4
 5902              		.cfi_offset 7, -4
 5903 0002 85B0     		sub	sp, sp, #20
 5904              		.cfi_def_cfa_offset 24
 5905 0004 00AF     		add	r7, sp, #0
 5906              		.cfi_def_cfa_register 7
 5907 0006 7860     		str	r0, [r7, #4]
2168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t cksys_source = 0U;
 5908              		.loc 1 2168 14
 5909 0008 0023     		movs	r3, #0
 5910 000a FB60     		str	r3, [r7, #12]
2169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     cksys_source = RCU_CFG0;
 5911              		.loc 1 2169 20
 5912 000c 084B     		ldr	r3, .L398
 5913              		.loc 1 2169 18
 5914 000e 1B68     		ldr	r3, [r3]
 5915 0010 FB60     		str	r3, [r7, #12]
2170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the SCS bits and set according to ck_sys */
2171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     cksys_source &= ~RCU_CFG0_SCS;
 5916              		.loc 1 2171 18
 5917 0012 FB68     		ldr	r3, [r7, #12]
 5918 0014 23F00303 		bic	r3, r3, #3
 5919 0018 FB60     		str	r3, [r7, #12]
2172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 = (ck_sys | cksys_source);
 5920              		.loc 1 2172 5
 5921 001a 0549     		ldr	r1, .L398
 5922              		.loc 1 2172 24
 5923 001c 7A68     		ldr	r2, [r7, #4]
 5924 001e FB68     		ldr	r3, [r7, #12]
 5925 0020 1343     		orrs	r3, r3, r2
 5926              		.loc 1 2172 14
 5927 0022 0B60     		str	r3, [r1]
2173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5928              		.loc 1 2173 1
 5929 0024 00BF     		nop
 5930 0026 1437     		adds	r7, r7, #20
 5931              		.cfi_def_cfa_offset 4
 5932 0028 BD46     		mov	sp, r7
 5933              		.cfi_def_cfa_register 13
 5934              		@ sp needed
 5935 002a 80BC     		pop	{r7}
 5936              		.cfi_restore 7
 5937              		.cfi_def_cfa_offset 0
 5938 002c 7047     		bx	lr
 5939              	.L399:
 5940 002e 00BF     		.align	2
 5941              	.L398:
 5942 0030 04100240 		.word	1073876996
 5943              		.cfi_endproc
 5944              	.LFE159:
 5946              		.section	.text.hals_rcu_ahb_clock_config,"ax",%progbits
 5947              		.align	1
 5948              		.global	hals_rcu_ahb_clock_config
 5949              		.syntax unified
 5950              		.thumb
 5951              		.thumb_func
 5952              		.fpu softvfp
 5954              	hals_rcu_ahb_clock_config:
 5955              	.LFB160:
2174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the AHB clock prescaler selection
2177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_ahb: AHB clock prescaler selection
2178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_AHB_CKSYS_DIVx, x=1, 2, 4, 8, 16, 64, 128, 256, 512
2180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_ahb_clock_config(uint32_t ck_ahb)
2184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 5956              		.loc 1 2184 1
 5957              		.cfi_startproc
 5958              		@ args = 0, pretend = 0, frame = 16
 5959              		@ frame_needed = 1, uses_anonymous_args = 0
 5960              		@ link register save eliminated.
 5961 0000 80B4     		push	{r7}
 5962              		.cfi_def_cfa_offset 4
 5963              		.cfi_offset 7, -4
 5964 0002 85B0     		sub	sp, sp, #20
 5965              		.cfi_def_cfa_offset 24
 5966 0004 00AF     		add	r7, sp, #0
 5967              		.cfi_def_cfa_register 7
 5968 0006 7860     		str	r0, [r7, #4]
2185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t ahbpsc = 0U;
 5969              		.loc 1 2185 14
 5970 0008 0023     		movs	r3, #0
 5971 000a FB60     		str	r3, [r7, #12]
2186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     ahbpsc = RCU_CFG0;
 5972              		.loc 1 2186 14
 5973 000c 084B     		ldr	r3, .L401
 5974              		.loc 1 2186 12
 5975 000e 1B68     		ldr	r3, [r3]
 5976 0010 FB60     		str	r3, [r7, #12]
2187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the AHBPSC bits and set according to ck_ahb */
2188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     ahbpsc &= ~RCU_CFG0_AHBPSC;
 5977              		.loc 1 2188 12
 5978 0012 FB68     		ldr	r3, [r7, #12]
 5979 0014 23F0F003 		bic	r3, r3, #240
 5980 0018 FB60     		str	r3, [r7, #12]
2189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 = (ck_ahb | ahbpsc);
 5981              		.loc 1 2189 5
 5982 001a 0549     		ldr	r1, .L401
 5983              		.loc 1 2189 24
 5984 001c 7A68     		ldr	r2, [r7, #4]
 5985 001e FB68     		ldr	r3, [r7, #12]
 5986 0020 1343     		orrs	r3, r3, r2
 5987              		.loc 1 2189 14
 5988 0022 0B60     		str	r3, [r1]
2190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 5989              		.loc 1 2190 1
 5990 0024 00BF     		nop
 5991 0026 1437     		adds	r7, r7, #20
 5992              		.cfi_def_cfa_offset 4
 5993 0028 BD46     		mov	sp, r7
 5994              		.cfi_def_cfa_register 13
 5995              		@ sp needed
 5996 002a 80BC     		pop	{r7}
 5997              		.cfi_restore 7
 5998              		.cfi_def_cfa_offset 0
 5999 002c 7047     		bx	lr
 6000              	.L402:
 6001 002e 00BF     		.align	2
 6002              	.L401:
 6003 0030 04100240 		.word	1073876996
 6004              		.cfi_endproc
 6005              	.LFE160:
 6007              		.section	.text.hals_rcu_apb1_clock_config,"ax",%progbits
 6008              		.align	1
 6009              		.global	hals_rcu_apb1_clock_config
 6010              		.syntax unified
 6011              		.thumb
 6012              		.thumb_func
 6013              		.fpu softvfp
 6015              	hals_rcu_apb1_clock_config:
 6016              	.LFB161:
2191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the APB1 clock prescaler selection
2194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_apb1: APB1 clock prescaler selection
2195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB1_CKAHB_DIV1: select CK_AHB as CK_APB1
2197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB1_CKAHB_DIV2: select CK_AHB/2 as CK_APB1
2198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB1_CKAHB_DIV4: select CK_AHB/4 as CK_APB1
2199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB1_CKAHB_DIV8: select CK_AHB/8 as CK_APB1
2200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB1_CKAHB_DIV16: select CK_AHB/16 as CK_APB1
2201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_apb1_clock_config(uint32_t ck_apb1)
2205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6017              		.loc 1 2205 1
 6018              		.cfi_startproc
 6019              		@ args = 0, pretend = 0, frame = 16
 6020              		@ frame_needed = 1, uses_anonymous_args = 0
 6021              		@ link register save eliminated.
 6022 0000 80B4     		push	{r7}
 6023              		.cfi_def_cfa_offset 4
 6024              		.cfi_offset 7, -4
 6025 0002 85B0     		sub	sp, sp, #20
 6026              		.cfi_def_cfa_offset 24
 6027 0004 00AF     		add	r7, sp, #0
 6028              		.cfi_def_cfa_register 7
 6029 0006 7860     		str	r0, [r7, #4]
2206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t apb1psc = 0U;
 6030              		.loc 1 2206 14
 6031 0008 0023     		movs	r3, #0
 6032 000a FB60     		str	r3, [r7, #12]
2207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     apb1psc = RCU_CFG0;
 6033              		.loc 1 2207 15
 6034 000c 084B     		ldr	r3, .L404
 6035              		.loc 1 2207 13
 6036 000e 1B68     		ldr	r3, [r3]
 6037 0010 FB60     		str	r3, [r7, #12]
2208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the APB1PSC and set according to ck_apb1 */
2209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     apb1psc &= ~RCU_CFG0_APB1PSC;
 6038              		.loc 1 2209 13
 6039 0012 FB68     		ldr	r3, [r7, #12]
 6040 0014 23F4E063 		bic	r3, r3, #1792
 6041 0018 FB60     		str	r3, [r7, #12]
2210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 = (ck_apb1 | apb1psc);
 6042              		.loc 1 2210 5
 6043 001a 0549     		ldr	r1, .L404
 6044              		.loc 1 2210 25
 6045 001c 7A68     		ldr	r2, [r7, #4]
 6046 001e FB68     		ldr	r3, [r7, #12]
 6047 0020 1343     		orrs	r3, r3, r2
 6048              		.loc 1 2210 14
 6049 0022 0B60     		str	r3, [r1]
2211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6050              		.loc 1 2211 1
 6051 0024 00BF     		nop
 6052 0026 1437     		adds	r7, r7, #20
 6053              		.cfi_def_cfa_offset 4
 6054 0028 BD46     		mov	sp, r7
 6055              		.cfi_def_cfa_register 13
 6056              		@ sp needed
 6057 002a 80BC     		pop	{r7}
 6058              		.cfi_restore 7
 6059              		.cfi_def_cfa_offset 0
 6060 002c 7047     		bx	lr
 6061              	.L405:
 6062 002e 00BF     		.align	2
 6063              	.L404:
 6064 0030 04100240 		.word	1073876996
 6065              		.cfi_endproc
 6066              	.LFE161:
 6068              		.section	.text.hals_rcu_apb2_clock_config,"ax",%progbits
 6069              		.align	1
 6070              		.global	hals_rcu_apb2_clock_config
 6071              		.syntax unified
 6072              		.thumb
 6073              		.thumb_func
 6074              		.fpu softvfp
 6076              	hals_rcu_apb2_clock_config:
 6077              	.LFB162:
2212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the APB2 clock prescaler selection
2215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck_apb2: APB2 clock prescaler selection
2216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB2_CKAHB_DIV1: select CK_AHB as CK_APB2
2218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB2_CKAHB_DIV2: select CK_AHB/2 as CK_APB2
2219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB2_CKAHB_DIV4: select CK_AHB/4 as CK_APB2
2220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB2_CKAHB_DIV8: select CK_AHB/8 as CK_APB2
2221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_APB2_CKAHB_DIV16: select CK_AHB/16 as CK_APB2
2222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_apb2_clock_config(uint32_t ck_apb2)
2226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6078              		.loc 1 2226 1
 6079              		.cfi_startproc
 6080              		@ args = 0, pretend = 0, frame = 16
 6081              		@ frame_needed = 1, uses_anonymous_args = 0
 6082              		@ link register save eliminated.
 6083 0000 80B4     		push	{r7}
 6084              		.cfi_def_cfa_offset 4
 6085              		.cfi_offset 7, -4
 6086 0002 85B0     		sub	sp, sp, #20
 6087              		.cfi_def_cfa_offset 24
 6088 0004 00AF     		add	r7, sp, #0
 6089              		.cfi_def_cfa_register 7
 6090 0006 7860     		str	r0, [r7, #4]
2227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t apb2psc = 0U;
 6091              		.loc 1 2227 14
 6092 0008 0023     		movs	r3, #0
 6093 000a FB60     		str	r3, [r7, #12]
2228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     apb2psc = RCU_CFG0;
 6094              		.loc 1 2228 15
 6095 000c 084B     		ldr	r3, .L407
 6096              		.loc 1 2228 13
 6097 000e 1B68     		ldr	r3, [r3]
 6098 0010 FB60     		str	r3, [r7, #12]
2229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the APB2PSC and set according to ck_apb2 */
2230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     apb2psc &= ~RCU_CFG0_APB2PSC;
 6099              		.loc 1 2230 13
 6100 0012 FB68     		ldr	r3, [r7, #12]
 6101 0014 23F46053 		bic	r3, r3, #14336
 6102 0018 FB60     		str	r3, [r7, #12]
2231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 = (ck_apb2 | apb2psc);
 6103              		.loc 1 2231 5
 6104 001a 0549     		ldr	r1, .L407
 6105              		.loc 1 2231 25
 6106 001c 7A68     		ldr	r2, [r7, #4]
 6107 001e FB68     		ldr	r3, [r7, #12]
 6108 0020 1343     		orrs	r3, r3, r2
 6109              		.loc 1 2231 14
 6110 0022 0B60     		str	r3, [r1]
2232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6111              		.loc 1 2232 1
 6112 0024 00BF     		nop
 6113 0026 1437     		adds	r7, r7, #20
 6114              		.cfi_def_cfa_offset 4
 6115 0028 BD46     		mov	sp, r7
 6116              		.cfi_def_cfa_register 13
 6117              		@ sp needed
 6118 002a 80BC     		pop	{r7}
 6119              		.cfi_restore 7
 6120              		.cfi_def_cfa_offset 0
 6121 002c 7047     		bx	lr
 6122              	.L408:
 6123 002e 00BF     		.align	2
 6124              	.L407:
 6125 0030 04100240 		.word	1073876996
 6126              		.cfi_endproc
 6127              	.LFE162:
 6129              		.section	.text.hals_rcu_ck48m_clock_config,"ax",%progbits
 6130              		.align	1
 6131              		.global	hals_rcu_ck48m_clock_config
 6132              		.syntax unified
 6133              		.thumb
 6134              		.thumb_func
 6135              		.fpu softvfp
 6137              	hals_rcu_ck48m_clock_config:
 6138              	.LFB163:
2233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the CK48M clock source selection
2236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ck48m_clock_source: CK48M clock source selection
2237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CK48MSRC_PLL48M: CK_PLL48M selected as CK48M source clock
2239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CK48MSRC_IRC48M: CK_IRC48M selected as CK48M source clock
2240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_ck48m_clock_config(uint32_t ck48m_clock_source)
2244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6139              		.loc 1 2244 1
 6140              		.cfi_startproc
 6141              		@ args = 0, pretend = 0, frame = 16
 6142              		@ frame_needed = 1, uses_anonymous_args = 0
 6143              		@ link register save eliminated.
 6144 0000 80B4     		push	{r7}
 6145              		.cfi_def_cfa_offset 4
 6146              		.cfi_offset 7, -4
 6147 0002 85B0     		sub	sp, sp, #20
 6148              		.cfi_def_cfa_offset 24
 6149 0004 00AF     		add	r7, sp, #0
 6150              		.cfi_def_cfa_register 7
 6151 0006 7860     		str	r0, [r7, #4]
2245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t reg;
2246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     reg = RCU_ADDCTL;
 6152              		.loc 1 2247 11
 6153 0008 084B     		ldr	r3, .L410
 6154              		.loc 1 2247 9
 6155 000a 1B68     		ldr	r3, [r3]
 6156 000c FB60     		str	r3, [r7, #12]
2248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the CK48MSEL bit and set according to ck48m_clock_source */
2249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     reg &= ~RCU_ADDCTL_CK48MSEL;
 6157              		.loc 1 2249 9
 6158 000e FB68     		ldr	r3, [r7, #12]
 6159 0010 23F00103 		bic	r3, r3, #1
 6160 0014 FB60     		str	r3, [r7, #12]
2250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_ADDCTL = (reg | ck48m_clock_source);
 6161              		.loc 1 2250 5
 6162 0016 0549     		ldr	r1, .L410
 6163              		.loc 1 2250 23
 6164 0018 FA68     		ldr	r2, [r7, #12]
 6165 001a 7B68     		ldr	r3, [r7, #4]
 6166 001c 1343     		orrs	r3, r3, r2
 6167              		.loc 1 2250 16
 6168 001e 0B60     		str	r3, [r1]
2251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6169              		.loc 1 2251 1
 6170 0020 00BF     		nop
 6171 0022 1437     		adds	r7, r7, #20
 6172              		.cfi_def_cfa_offset 4
 6173 0024 BD46     		mov	sp, r7
 6174              		.cfi_def_cfa_register 13
 6175              		@ sp needed
 6176 0026 80BC     		pop	{r7}
 6177              		.cfi_restore 7
 6178              		.cfi_def_cfa_offset 0
 6179 0028 7047     		bx	lr
 6180              	.L411:
 6181 002a 00BF     		.align	2
 6182              	.L410:
 6183 002c C0100240 		.word	1073877184
 6184              		.cfi_endproc
 6185              	.LFE163:
 6187              		.section	.text.hals_rcu_ckout_config,"ax",%progbits
 6188              		.align	1
 6189              		.global	hals_rcu_ckout_config
 6190              		.syntax unified
 6191              		.thumb
 6192              		.thumb_func
 6193              		.fpu softvfp
 6195              	hals_rcu_ckout_config:
 6196              	.LFB164:
2252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      configure the CK_OUT clock source and divider
2255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ckout_src: CK_OUT clock source selection
2256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_NONE: no clock selected
2258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_IRC28M: IRC28M selected
2259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_IRC40K: IRC40K selected
2260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_LXTAL: LXTAL selected
2261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_CKSYS: CKSYS selected
2262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_IRC8M: IRC8M selected
2263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_HXTAL: HXTAL selected
2264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_CKPLL_DIV1: CK_PLL selected
2265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUTSRC_CKPLL_DIV2: CK_PLL/2 selected
2266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  ckout_div: CK_OUT divider
2267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_CKOUT_DIVx(x=1,2,4,8,16,32,64,128): CK_OUT is divided by x
2268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_ckout_config(uint32_t ckout_src, uint32_t ckout_div)
2272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6197              		.loc 1 2272 1
 6198              		.cfi_startproc
 6199              		@ args = 0, pretend = 0, frame = 16
 6200              		@ frame_needed = 1, uses_anonymous_args = 0
 6201              		@ link register save eliminated.
 6202 0000 80B4     		push	{r7}
 6203              		.cfi_def_cfa_offset 4
 6204              		.cfi_offset 7, -4
 6205 0002 85B0     		sub	sp, sp, #20
 6206              		.cfi_def_cfa_offset 24
 6207 0004 00AF     		add	r7, sp, #0
 6208              		.cfi_def_cfa_register 7
 6209 0006 7860     		str	r0, [r7, #4]
 6210 0008 3960     		str	r1, [r7]
2273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     uint32_t ckout = 0U;
 6211              		.loc 1 2273 14
 6212 000a 0023     		movs	r3, #0
 6213 000c FB60     		str	r3, [r7, #12]
2274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     ckout = RCU_CFG0;
 6214              		.loc 1 2274 13
 6215 000e 094B     		ldr	r3, .L413
 6216              		.loc 1 2274 11
 6217 0010 1B68     		ldr	r3, [r3]
 6218 0012 FB60     		str	r3, [r7, #12]
2275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     /* reset the CKOUTSEL, CKOUTDIV and PLLDV bits and set according to ckout_src and ckout_div */
2276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     ckout &= ~(RCU_CFG0_CKOUTSEL | RCU_CFG0_CKOUTDIV | RCU_CFG0_PLLDV);
 6219              		.loc 1 2276 11
 6220 0014 FB68     		ldr	r3, [r7, #12]
 6221 0016 23F07743 		bic	r3, r3, #-150994944
 6222 001a FB60     		str	r3, [r7, #12]
2277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_CFG0 = (ckout | ckout_src | ckout_div);
 6223              		.loc 1 2277 23
 6224 001c FA68     		ldr	r2, [r7, #12]
 6225 001e 7B68     		ldr	r3, [r7, #4]
 6226 0020 1A43     		orrs	r2, r2, r3
 6227              		.loc 1 2277 5
 6228 0022 0449     		ldr	r1, .L413
 6229              		.loc 1 2277 35
 6230 0024 3B68     		ldr	r3, [r7]
 6231 0026 1343     		orrs	r3, r3, r2
 6232              		.loc 1 2277 14
 6233 0028 0B60     		str	r3, [r1]
2278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6234              		.loc 1 2278 1
 6235 002a 00BF     		nop
 6236 002c 1437     		adds	r7, r7, #20
 6237              		.cfi_def_cfa_offset 4
 6238 002e BD46     		mov	sp, r7
 6239              		.cfi_def_cfa_register 13
 6240              		@ sp needed
 6241 0030 80BC     		pop	{r7}
 6242              		.cfi_restore 7
 6243              		.cfi_def_cfa_offset 0
 6244 0032 7047     		bx	lr
 6245              	.L414:
 6246              		.align	2
 6247              	.L413:
 6248 0034 04100240 		.word	1073876996
 6249              		.cfi_endproc
 6250              	.LFE164:
 6252              		.section	.text.hals_rcu_interrupt_flag_get,"ax",%progbits
 6253              		.align	1
 6254              		.global	hals_rcu_interrupt_flag_get
 6255              		.syntax unified
 6256              		.thumb
 6257              		.thumb_func
 6258              		.fpu softvfp
 6260              	hals_rcu_interrupt_flag_get:
 6261              	.LFB165:
2279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      get the clock stabilization interrupt and ckm flags
2282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  int_flag: interrupt and ckm flags, refer to rcu_int_flag_enum
2283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC40KSTB: IRC40K stabilization interrupt flag
2285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_LXTALSTB: LXTAL stabilization interrupt flag
2286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC8MSTB: IRC8M stabilization interrupt flag
2287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_HXTALSTB: HXTAL stabilization interrupt flag
2288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_PLLSTB: PLL stabilization interrupt flag
2289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC28MSTB: IRC28M stabilization interrupt flag
2290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC48MSTB: IRC48M stabilization interrupt flag
2291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_CKM: HXTAL clock stuck interrupt flag
2292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     FlagStatus: SET or RESET
2294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** FlagStatus hals_rcu_interrupt_flag_get(hal_rcu_int_flag_enum int_flag)
2296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6262              		.loc 1 2296 1
 6263              		.cfi_startproc
 6264              		@ args = 0, pretend = 0, frame = 8
 6265              		@ frame_needed = 1, uses_anonymous_args = 0
 6266              		@ link register save eliminated.
 6267 0000 80B4     		push	{r7}
 6268              		.cfi_def_cfa_offset 4
 6269              		.cfi_offset 7, -4
 6270 0002 83B0     		sub	sp, sp, #12
 6271              		.cfi_def_cfa_offset 16
 6272 0004 00AF     		add	r7, sp, #0
 6273              		.cfi_def_cfa_register 7
 6274 0006 0346     		mov	r3, r0
 6275 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     if(RESET != (RCU_REG_VAL(int_flag) & BIT(RCU_BIT_POS(int_flag)))) {
 6276              		.loc 1 2297 18
 6277 000a FB88     		ldrh	r3, [r7, #6]
 6278 000c 9B09     		lsrs	r3, r3, #6
 6279 000e 9BB2     		uxth	r3, r3
 6280 0010 03F18043 		add	r3, r3, #1073741824
 6281 0014 03F50433 		add	r3, r3, #135168
 6282 0018 1A68     		ldr	r2, [r3]
 6283              		.loc 1 2297 42
 6284 001a FB88     		ldrh	r3, [r7, #6]
 6285 001c 03F01F03 		and	r3, r3, #31
 6286              		.loc 1 2297 14
 6287 0020 22FA03F3 		lsr	r3, r2, r3
 6288 0024 03F00103 		and	r3, r3, #1
 6289              		.loc 1 2297 7
 6290 0028 002B     		cmp	r3, #0
 6291 002a 01D0     		beq	.L416
2298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return SET;
 6292              		.loc 1 2298 16
 6293 002c 0123     		movs	r3, #1
 6294 002e 00E0     		b	.L417
 6295              	.L416:
2299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     } else {
2300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****         return RESET;
 6296              		.loc 1 2300 16
 6297 0030 0023     		movs	r3, #0
 6298              	.L417:
2301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     }
2302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6299              		.loc 1 2302 1
 6300 0032 1846     		mov	r0, r3
 6301 0034 0C37     		adds	r7, r7, #12
 6302              		.cfi_def_cfa_offset 4
 6303 0036 BD46     		mov	sp, r7
 6304              		.cfi_def_cfa_register 13
 6305              		@ sp needed
 6306 0038 80BC     		pop	{r7}
 6307              		.cfi_restore 7
 6308              		.cfi_def_cfa_offset 0
 6309 003a 7047     		bx	lr
 6310              		.cfi_endproc
 6311              	.LFE165:
 6313              		.section	.text.hals_rcu_interrupt_flag_clear,"ax",%progbits
 6314              		.align	1
 6315              		.global	hals_rcu_interrupt_flag_clear
 6316              		.syntax unified
 6317              		.thumb
 6318              		.thumb_func
 6319              		.fpu softvfp
 6321              	hals_rcu_interrupt_flag_clear:
 6322              	.LFB166:
2303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      clear the interrupt flags
2306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  int_flag_clear: clock stabilization and stuck interrupt flags clear, refer to rcu_i
2307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC40KSTB_CLR: IRC40K stabilization interrupt flag clear
2309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_LXTALSTB_CLR: LXTAL stabilization interrupt flag clear
2310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC8MSTB_CLR: IRC8M stabilization interrupt flag clear
2311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_HXTALSTB_CLR: HXTAL stabilization interrupt flag clear
2312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_PLLSTB_CLR: PLL stabilization interrupt flag clear
2313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC28MSTB_CLR: IRC28M stabilization interrupt flag clear
2314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_IRC48MSTB_CLR: IRC48M stabilization interrupt flag clear
2315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_FLAG_CKM_CLR: clock stuck interrupt flag clear
2316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_interrupt_flag_clear(hal_rcu_int_flag_clear_enum int_flag_clear)
2320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6323              		.loc 1 2320 1
 6324              		.cfi_startproc
 6325              		@ args = 0, pretend = 0, frame = 8
 6326              		@ frame_needed = 1, uses_anonymous_args = 0
 6327              		@ link register save eliminated.
 6328 0000 80B4     		push	{r7}
 6329              		.cfi_def_cfa_offset 4
 6330              		.cfi_offset 7, -4
 6331 0002 83B0     		sub	sp, sp, #12
 6332              		.cfi_def_cfa_offset 16
 6333 0004 00AF     		add	r7, sp, #0
 6334              		.cfi_def_cfa_register 7
 6335 0006 0346     		mov	r3, r0
 6336 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(int_flag_clear) |= BIT(RCU_BIT_POS(int_flag_clear));
 6337              		.loc 1 2321 33
 6338 000a FB88     		ldrh	r3, [r7, #6]
 6339 000c 9B09     		lsrs	r3, r3, #6
 6340 000e 9BB2     		uxth	r3, r3
 6341 0010 03F18043 		add	r3, r3, #1073741824
 6342 0014 03F50433 		add	r3, r3, #135168
 6343 0018 1968     		ldr	r1, [r3]
 6344              		.loc 1 2321 36
 6345 001a FB88     		ldrh	r3, [r7, #6]
 6346 001c 03F01F03 		and	r3, r3, #31
 6347 0020 0122     		movs	r2, #1
 6348 0022 9A40     		lsls	r2, r2, r3
 6349              		.loc 1 2321 33
 6350 0024 FB88     		ldrh	r3, [r7, #6]
 6351 0026 9B09     		lsrs	r3, r3, #6
 6352 0028 9BB2     		uxth	r3, r3
 6353 002a 03F18043 		add	r3, r3, #1073741824
 6354 002e 03F50433 		add	r3, r3, #135168
 6355 0032 1846     		mov	r0, r3
 6356 0034 41EA0203 		orr	r3, r1, r2
 6357 0038 0360     		str	r3, [r0]
2322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6358              		.loc 1 2322 1
 6359 003a 00BF     		nop
 6360 003c 0C37     		adds	r7, r7, #12
 6361              		.cfi_def_cfa_offset 4
 6362 003e BD46     		mov	sp, r7
 6363              		.cfi_def_cfa_register 13
 6364              		@ sp needed
 6365 0040 80BC     		pop	{r7}
 6366              		.cfi_restore 7
 6367              		.cfi_def_cfa_offset 0
 6368 0042 7047     		bx	lr
 6369              		.cfi_endproc
 6370              	.LFE166:
 6372              		.section	.text.hals_rcu_interrupt_enable,"ax",%progbits
 6373              		.align	1
 6374              		.global	hals_rcu_interrupt_enable
 6375              		.syntax unified
 6376              		.thumb
 6377              		.thumb_func
 6378              		.fpu softvfp
 6380              	hals_rcu_interrupt_enable:
 6381              	.LFB167:
2323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      enable the stabilization interrupt
2326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  stab_int: clock stabilization interrupt, refer to rcu_int_enum
2327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC40KSTB: IRC40K stabilization interrupt enable
2329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_LXTALSTB: LXTAL stabilization interrupt enable
2330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC8MSTB: IRC8M stabilization interrupt enable
2331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_HXTALSTB: HXTAL stabilization interrupt enable
2332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_PLLSTB: PLL stabilization interrupt enable
2333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC28MSTB: IRC28M stabilization interrupt enable
2334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC48MSTB: IRC48M stabilization interrupt enable
2335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_interrupt_enable(hal_rcu_int_enum stab_int)
2339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6382              		.loc 1 2339 1
 6383              		.cfi_startproc
 6384              		@ args = 0, pretend = 0, frame = 8
 6385              		@ frame_needed = 1, uses_anonymous_args = 0
 6386              		@ link register save eliminated.
 6387 0000 80B4     		push	{r7}
 6388              		.cfi_def_cfa_offset 4
 6389              		.cfi_offset 7, -4
 6390 0002 83B0     		sub	sp, sp, #12
 6391              		.cfi_def_cfa_offset 16
 6392 0004 00AF     		add	r7, sp, #0
 6393              		.cfi_def_cfa_register 7
 6394 0006 0346     		mov	r3, r0
 6395 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(stab_int) |= BIT(RCU_BIT_POS(stab_int));
 6396              		.loc 1 2340 27
 6397 000a FB88     		ldrh	r3, [r7, #6]
 6398 000c 9B09     		lsrs	r3, r3, #6
 6399 000e 9BB2     		uxth	r3, r3
 6400 0010 03F18043 		add	r3, r3, #1073741824
 6401 0014 03F50433 		add	r3, r3, #135168
 6402 0018 1968     		ldr	r1, [r3]
 6403              		.loc 1 2340 30
 6404 001a FB88     		ldrh	r3, [r7, #6]
 6405 001c 03F01F03 		and	r3, r3, #31
 6406 0020 0122     		movs	r2, #1
 6407 0022 9A40     		lsls	r2, r2, r3
 6408              		.loc 1 2340 27
 6409 0024 FB88     		ldrh	r3, [r7, #6]
 6410 0026 9B09     		lsrs	r3, r3, #6
 6411 0028 9BB2     		uxth	r3, r3
 6412 002a 03F18043 		add	r3, r3, #1073741824
 6413 002e 03F50433 		add	r3, r3, #135168
 6414 0032 1846     		mov	r0, r3
 6415 0034 41EA0203 		orr	r3, r1, r2
 6416 0038 0360     		str	r3, [r0]
2341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6417              		.loc 1 2341 1
 6418 003a 00BF     		nop
 6419 003c 0C37     		adds	r7, r7, #12
 6420              		.cfi_def_cfa_offset 4
 6421 003e BD46     		mov	sp, r7
 6422              		.cfi_def_cfa_register 13
 6423              		@ sp needed
 6424 0040 80BC     		pop	{r7}
 6425              		.cfi_restore 7
 6426              		.cfi_def_cfa_offset 0
 6427 0042 7047     		bx	lr
 6428              		.cfi_endproc
 6429              	.LFE167:
 6431              		.section	.text.hals_rcu_interrupt_disable,"ax",%progbits
 6432              		.align	1
 6433              		.global	hals_rcu_interrupt_disable
 6434              		.syntax unified
 6435              		.thumb
 6436              		.thumb_func
 6437              		.fpu softvfp
 6439              	hals_rcu_interrupt_disable:
 6440              	.LFB168:
2342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** 
2343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** /*!
2344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \brief      disable the stabilization interrupt
2345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[in]  stab_int: clock stabilization interrupt, refer to rcu_int_enum
2346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****                 only one parameter can be selected which is shown as below:
2347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC40KSTB: IRC40K stabilization interrupt disable
2348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_LXTALSTB: LXTAL stabilization interrupt disable
2349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC8MSTB: IRC8M stabilization interrupt disable
2350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_HXTALSTB: HXTAL stabilization interrupt disable
2351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_PLLSTB: PLL stabilization interrupt disable
2352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC28MSTB: IRC28M stabilization interrupt disable
2353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****       \arg        RCU_INT_IRC48MSTB: IRC48M stabilization interrupt disable
2354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \param[out] none
2355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     \retval     none
2356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** */
2357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** void hals_rcu_interrupt_disable(hal_rcu_int_enum stab_int)
2358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** {
 6441              		.loc 1 2358 1
 6442              		.cfi_startproc
 6443              		@ args = 0, pretend = 0, frame = 8
 6444              		@ frame_needed = 1, uses_anonymous_args = 0
 6445              		@ link register save eliminated.
 6446 0000 80B4     		push	{r7}
 6447              		.cfi_def_cfa_offset 4
 6448              		.cfi_offset 7, -4
 6449 0002 83B0     		sub	sp, sp, #12
 6450              		.cfi_def_cfa_offset 16
 6451 0004 00AF     		add	r7, sp, #0
 6452              		.cfi_def_cfa_register 7
 6453 0006 0346     		mov	r3, r0
 6454 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c ****     RCU_REG_VAL(stab_int) &= ~BIT(RCU_BIT_POS(stab_int));
 6455              		.loc 1 2359 27
 6456 000a FB88     		ldrh	r3, [r7, #6]
 6457 000c 9B09     		lsrs	r3, r3, #6
 6458 000e 9BB2     		uxth	r3, r3
 6459 0010 03F18043 		add	r3, r3, #1073741824
 6460 0014 03F50433 		add	r3, r3, #135168
 6461 0018 1968     		ldr	r1, [r3]
 6462              		.loc 1 2359 31
 6463 001a FB88     		ldrh	r3, [r7, #6]
 6464 001c 03F01F03 		and	r3, r3, #31
 6465 0020 0122     		movs	r2, #1
 6466 0022 02FA03F3 		lsl	r3, r2, r3
 6467              		.loc 1 2359 30
 6468 0026 DA43     		mvns	r2, r3
 6469              		.loc 1 2359 27
 6470 0028 FB88     		ldrh	r3, [r7, #6]
 6471 002a 9B09     		lsrs	r3, r3, #6
 6472 002c 9BB2     		uxth	r3, r3
 6473 002e 03F18043 		add	r3, r3, #1073741824
 6474 0032 03F50433 		add	r3, r3, #135168
 6475 0036 1846     		mov	r0, r3
 6476 0038 01EA0203 		and	r3, r1, r2
 6477 003c 0360     		str	r3, [r0]
2360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rcu.c **** }
 6478              		.loc 1 2360 1
 6479 003e 00BF     		nop
 6480 0040 0C37     		adds	r7, r7, #12
 6481              		.cfi_def_cfa_offset 4
 6482 0042 BD46     		mov	sp, r7
 6483              		.cfi_def_cfa_register 13
 6484              		@ sp needed
 6485 0044 80BC     		pop	{r7}
 6486              		.cfi_restore 7
 6487              		.cfi_def_cfa_offset 0
 6488 0046 7047     		bx	lr
 6489              		.cfi_endproc
 6490              	.LFE168:
 6492              		.text
 6493              	.Letext0:
 6494              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6495              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6496              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6497              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6498              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6499              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6500              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 6501              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 6502              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 6503              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 6504              		.file 12 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 6505              		.file 13 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_gpio.h"
 6506              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 6507              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_exti.h"
 6508              		.file 16 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_sys.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_rcu.c
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:20     .bss.rcu_irq:00000000 rcu_irq
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:17     .bss.rcu_irq:00000000 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:27     .data.g_systemcoreclock:00000000 g_systemcoreclock
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:24     .data.g_systemcoreclock:00000000 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:30     .rodata.s_rcu_stab_flag:00000000 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:33     .rodata.s_rcu_stab_flag:00000000 s_rcu_stab_flag
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:38     .rodata.s_rcu_timeout:00000000 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:41     .rodata.s_rcu_timeout:00000000 s_rcu_timeout
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:46     .rodata.s_rcu_scss:00000000 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:49     .rodata.s_rcu_scss:00000000 s_rcu_scss
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:54     .text.hal_rcu_osci_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:62     .text.hal_rcu_osci_config:00000000 hal_rcu_osci_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1014   .text.hal_rcu_deinit:00000000 hal_rcu_deinit
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5167   .text.hals_rcu_system_clock_source_get:00000000 hals_rcu_system_clock_source_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5266   .text.hals_rcu_osci_off:00000000 hals_rcu_osci_off
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5448   .text.hals_rcu_osci_bypass_mode_disable:00000000 hals_rcu_osci_bypass_mode_disable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5207   .text.hals_rcu_osci_on:00000000 hals_rcu_osci_on
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5327   .text.hals_rcu_osci_bypass_mode_enable:00000000 hals_rcu_osci_bypass_mode_enable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3698   .text.hals_rcu_osci_stab_wait:00000000 hals_rcu_osci_stab_wait
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1368   .text.hal_rcu_periph_clk_enable:00000000 hal_rcu_periph_clk_enable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1427   .text.hal_rcu_periph_clk_disable:00000000 hal_rcu_periph_clk_disable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5569   .text.hals_rcu_irc8m_adjust_value_set:00000000 hals_rcu_irc8m_adjust_value_set
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5634   .text.hals_rcu_irc28m_adjust_value_set:00000000 hals_rcu_irc28m_adjust_value_set
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:566    .text.hal_rcu_osci_config:000002f4 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:574    .text.hal_rcu_osci_config:0000030c $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5699   .text.hals_rcu_pll_preselection_config:00000000 hals_rcu_pll_preselection_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5753   .text.hals_rcu_hxtal_prediv_config:00000000 hals_rcu_hxtal_prediv_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5814   .text.hals_rcu_pll_config:00000000 hals_rcu_pll_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:918    .text.hal_rcu_osci_config:00000520 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:927    .text.hal_rcu_clock_out_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:934    .text.hal_rcu_clock_out_config:00000000 hal_rcu_clock_out_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6195   .text.hals_rcu_ckout_config:00000000 hals_rcu_ckout_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1007   .text.hal_rcu_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1178   .text.hal_rcu_deinit:00000100 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1193   .text.hal_rcu_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1200   .text.hal_rcu_struct_init:00000000 hal_rcu_struct_init
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1361   .text.hal_rcu_periph_clk_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1420   .text.hal_rcu_periph_clk_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1481   .text.hal_rcu_hxtal_clock_monitor_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1488   .text.hal_rcu_hxtal_clock_monitor_enable:00000000 hal_rcu_hxtal_clock_monitor_enable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1518   .text.hal_rcu_hxtal_clock_monitor_enable:00000018 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1523   .text.hal_rcu_hxtal_clock_monitor_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1530   .text.hal_rcu_hxtal_clock_monitor_disable:00000000 hal_rcu_hxtal_clock_monitor_disable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1560   .text.hal_rcu_hxtal_clock_monitor_disable:00000018 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1565   .text.hal_rcu_periph_reset_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1572   .text.hal_rcu_periph_reset_enable:00000000 hal_rcu_periph_reset_enable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1624   .text.hal_rcu_periph_reset_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1631   .text.hal_rcu_periph_reset_disable:00000000 hal_rcu_periph_reset_disable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1685   .text.hal_rcu_periph_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1692   .text.hal_rcu_periph_clock_config:00000000 hal_rcu_periph_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3511   .text.hals_rcu_bkp_reset_enable:00000000 hals_rcu_bkp_reset_enable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3553   .text.hals_rcu_bkp_reset_disable:00000000 hals_rcu_bkp_reset_disable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4039   .text.hals_rcu_rtc_clock_config:00000000 hals_rcu_rtc_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4093   .text.hals_rcu_usart_clock_config:00000000 hals_rcu_usart_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4147   .text.hals_rcu_adc_clock_config:00000000 hals_rcu_adc_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1889   .text.hal_rcu_periph_clock_config:00000118 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1896   .text.hal_rcu_periph_clkfreq_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1903   .text.hal_rcu_periph_clkfreq_get:00000000 hal_rcu_periph_clkfreq_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1932   .text.hal_rcu_periph_clkfreq_get:00000020 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:1948   .text.hal_rcu_periph_clkfreq_get:00000060 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3595   .text.hals_rcu_flag_get:00000000 hals_rcu_flag_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4531   .text.hals_rcu_clock_freq_get:00000000 hals_rcu_clock_freq_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2092   .text.hal_rcu_periph_clkfreq_get:00000130 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2099   .text.hal_rcu_osci_config_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2106   .text.hal_rcu_osci_config_get:00000000 hal_rcu_osci_config_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2392   .text.hal_rcu_osci_config_get:00000178 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2405   .text.hal_rcu_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2412   .text.hal_rcu_clock_config:00000000 hal_rcu_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5893   .text.hals_rcu_system_clock_source_config:00000000 hals_rcu_system_clock_source_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6137   .text.hals_rcu_ck48m_clock_config:00000000 hals_rcu_ck48m_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5954   .text.hals_rcu_ahb_clock_config:00000000 hals_rcu_ahb_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6015   .text.hals_rcu_apb1_clock_config:00000000 hals_rcu_apb1_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6076   .text.hals_rcu_apb2_clock_config:00000000 hals_rcu_apb2_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2591   .text.hal_rcu_clock_config:000000fc $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2600   .text.hal_rcu_clock_config_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2607   .text.hal_rcu_clock_config_get:00000000 hal_rcu_clock_config_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2695   .text.hal_rcu_clock_config_get:00000068 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2701   .rodata:00000000 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2706   .text.hal_SystemCoreClockUpdate:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2713   .text.hal_SystemCoreClockUpdate:00000000 hal_SystemCoreClockUpdate
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2977   .text.hal_SystemCoreClockUpdate:00000170 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2988   .text.hal_rcu_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:2995   .text.hal_rcu_irq:00000000 hal_rcu_irq
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6260   .text.hals_rcu_interrupt_flag_get:00000000 hals_rcu_interrupt_flag_get
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6321   .text.hals_rcu_interrupt_flag_clear:00000000 hals_rcu_interrupt_flag_clear
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3205   .text.hal_rcu_irq:00000138 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3210   .text.hal_rcu_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3217   .text.hal_rcu_irq_handle_set:00000000 hal_rcu_irq_handle_set
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6380   .text.hals_rcu_interrupt_enable:00000000 hals_rcu_interrupt_enable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6439   .text.hals_rcu_interrupt_disable:00000000 hals_rcu_interrupt_disable
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3431   .text.hal_rcu_irq_handle_set:00000138 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3436   .text.hal_rcu_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3443   .text.hal_rcu_irq_handle_all_reset:00000000 hal_rcu_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3499   .text.hal_rcu_irq_handle_all_reset:0000003c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3504   .text.hals_rcu_bkp_reset_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3541   .text.hals_rcu_bkp_reset_enable:00000018 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3546   .text.hals_rcu_bkp_reset_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3583   .text.hals_rcu_bkp_reset_disable:00000018 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3588   .text.hals_rcu_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3649   .text.hals_rcu_all_reset_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3656   .text.hals_rcu_all_reset_flag_clear:00000000 hals_rcu_all_reset_flag_clear
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3686   .text.hals_rcu_all_reset_flag_clear:00000018 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:3691   .text.hals_rcu_osci_stab_wait:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4027   .text.hals_rcu_osci_stab_wait:00000200 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4032   .text.hals_rcu_rtc_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4081   .text.hals_rcu_rtc_clock_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4086   .text.hals_rcu_usart_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4135   .text.hals_rcu_usart_clock_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4140   .text.hals_rcu_adc_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4184   .text.hals_rcu_adc_clock_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4194   .text.hals_rcu_adc_clock_config:00000058 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4385   .text.hals_rcu_adc_clock_config:00000190 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4392   .text.hals_rcu_cec_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4399   .text.hals_rcu_cec_clock_config:00000000 hals_rcu_cec_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4441   .text.hals_rcu_cec_clock_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4446   .text.hals_rcu_usbfs_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4453   .text.hals_rcu_usbfs_clock_config:00000000 hals_rcu_usbfs_clock_config
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4514   .text.hals_rcu_usbfs_clock_config:0000004c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4524   .text.hals_rcu_clock_freq_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4857   .text.hals_rcu_clock_freq_get:000001f8 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4864   .text.hals_rcu_clock_freq_get:00000214 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4937   .text.hals_rcu_clock_freq_get:00000278 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:4941   .text.hals_rcu_clock_freq_get:00000288 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5010   .text.hals_rcu_clock_freq_get:000002e8 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5025   .text.hals_rcu_clock_freq_get:0000031c $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5153   .text.hals_rcu_clock_freq_get:000003bc $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5160   .text.hals_rcu_system_clock_source_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5195   .text.hals_rcu_system_clock_source_get:00000014 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5200   .text.hals_rcu_osci_on:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5259   .text.hals_rcu_osci_off:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5320   .text.hals_rcu_osci_bypass_mode_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5435   .text.hals_rcu_osci_bypass_mode_enable:0000009c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5441   .text.hals_rcu_osci_bypass_mode_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5556   .text.hals_rcu_osci_bypass_mode_disable:0000009c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5562   .text.hals_rcu_irc8m_adjust_value_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5622   .text.hals_rcu_irc8m_adjust_value_set:00000034 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5627   .text.hals_rcu_irc28m_adjust_value_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5687   .text.hals_rcu_irc28m_adjust_value_set:00000034 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5692   .text.hals_rcu_pll_preselection_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5741   .text.hals_rcu_pll_preselection_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5746   .text.hals_rcu_hxtal_prediv_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5802   .text.hals_rcu_hxtal_prediv_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5807   .text.hals_rcu_pll_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5880   .text.hals_rcu_pll_config:00000054 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5886   .text.hals_rcu_system_clock_source_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5942   .text.hals_rcu_system_clock_source_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:5947   .text.hals_rcu_ahb_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6003   .text.hals_rcu_ahb_clock_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6008   .text.hals_rcu_apb1_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6064   .text.hals_rcu_apb1_clock_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6069   .text.hals_rcu_apb2_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6125   .text.hals_rcu_apb2_clock_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6130   .text.hals_rcu_ck48m_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6183   .text.hals_rcu_ck48m_clock_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6188   .text.hals_rcu_ckout_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6248   .text.hals_rcu_ckout_config:00000034 $d
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6253   .text.hals_rcu_interrupt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6314   .text.hals_rcu_interrupt_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6373   .text.hals_rcu_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cct1uXd8.s:6432   .text.hals_rcu_interrupt_disable:00000000 $t
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
hals_pmu_backup_write_enable
hal_gpio_init
hal_sys_timesource_init
g_basetick_source
