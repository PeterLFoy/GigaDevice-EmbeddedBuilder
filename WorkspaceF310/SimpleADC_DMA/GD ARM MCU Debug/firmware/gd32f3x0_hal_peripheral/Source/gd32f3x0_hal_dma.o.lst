   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_dma.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hal_dma_init,"ax",%progbits
  16              		.align	1
  17              		.global	hal_dma_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hal_dma_init:
  25              	.LFB119:
  26              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \file    gd32f3x0_hal_dma.h
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief   DMA driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #define _DEV_VALID_ADDRESS           ((uint32_t)0x68000000)
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      initialize DMA channel
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structure
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx:specify which DMA channel is initialized.
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the argument could be selected from enumeration <dma_channel_enum>
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   \arg        DMA_CHx(x=0..6)
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma: the pointer of DMA init structure
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   direction: DMA_DIR_PERIPH_TO_MEMORY, DMA_DIR_MEMORY_TO_PERIPH, DMA_DIR_MEMORY_TO_
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   priority: DMA_PRIORITY_LEVEL_LOW, DMA_PRIORITY_LEVEL_MEDIUM, DMA_PRIORITY_LEVEL_H
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                             DMA_PRIORITY_LEVEL_ULTRA_HIGH:
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   mode: DMA_NORMAL_MODE, DMA_CIRCULAR_MODE
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   periph_inc: ENABLE, DISABLE
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   memory_inc: ENABLE, DISABLE
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   periph_width: DMA_PERIPH_SIZE_8BITS,DMA_PERIPH_SIZE_16BITS,DMA_PERIPH_SIZE_32BITS
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   memory_width: DMA_MEMORY_SIZE_8BITS,DMA_MEMORY_SIZE_16BITS,DMA_MEMORY_SIZE_32BITS
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE,HAL_ERR_VAL details refer to gd32f3x0_hal
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_init(hal_dma_dev_struct *dma_dev, dma_channel_enum channelx, \
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                      hal_dma_init_struct *dma)
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
  27              		.loc 1 61 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 86B0     		sub	sp, sp, #24
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 0B46     		mov	r3, r1
  41 000a 7A60     		str	r2, [r7, #4]
  42 000c FB72     		strb	r3, [r7, #11]
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     uint32_t ctl;
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if((NULL == dma_dev) || (NULL == dma)) {
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("pointer [dma] or [dma_dev] address is invalid");
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check DMA mode and direction parameters */
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if((DMA_CIRCULAR_MODE == dma->mode) && (DMA_DIR_MEMORY_TO_MEMORY  \
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         == dma->direction)) {
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGI("circular mode is invalid due to 'memory to memory' has been configured");
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_VAL;
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* change DMA device state */
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->state = HAL_DMA_STATE_BUSY;
  43              		.loc 1 77 20
  44 000e FB68     		ldr	r3, [r7, #12]
  45 0010 0222     		movs	r2, #2
  46 0012 9A74     		strb	r2, [r3, #18]
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->channel = channelx;
  47              		.loc 1 79 22
  48 0014 FB68     		ldr	r3, [r7, #12]
  49 0016 FA7A     		ldrb	r2, [r7, #11]
  50 0018 1A70     		strb	r2, [r3]
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* disable dma channelx */
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     hals_dma_channel_disable(dma_dev->channel);
  51              		.loc 1 81 5
  52 001a FB68     		ldr	r3, [r7, #12]
  53 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 001e 1846     		mov	r0, r3
  55 0020 FFF7FEFF 		bl	hals_dma_channel_disable
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* configure peripheral transfer width,memory transfer width,channel priority */
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl = DMA_CHCTL(channelx);
  56              		.loc 1 84 11
  57 0024 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
  58 0026 1346     		mov	r3, r2
  59 0028 9B00     		lsls	r3, r3, #2
  60 002a 1344     		add	r3, r3, r2
  61 002c 9B00     		lsls	r3, r3, #2
  62 002e 1A46     		mov	r2, r3
  63 0030 454B     		ldr	r3, .L7
  64 0032 1344     		add	r3, r3, r2
  65              		.loc 1 84 9
  66 0034 1B68     		ldr	r3, [r3]
  67 0036 7B61     		str	r3, [r7, #20]
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl &= ~(DMA_CHXCTL_PWIDTH | DMA_CHXCTL_MWIDTH | DMA_CHXCTL_PRIO | \
  68              		.loc 1 85 9
  69 0038 7B69     		ldr	r3, [r7, #20]
  70 003a 23F4FE43 		bic	r3, r3, #32512
  71 003e 23F03003 		bic	r3, r3, #48
  72 0042 7B61     		str	r3, [r7, #20]
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****              DMA_CHXCTL_M2M | DMA_CHXCTL_DIR | DMA_CHXCTL_CMEN);
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl |= (dma->periph_width | dma->memory_width | dma->priority | \
  73              		.loc 1 87 16
  74 0044 7B68     		ldr	r3, [r7, #4]
  75 0046 5A69     		ldr	r2, [r3, #20]
  76              		.loc 1 87 36
  77 0048 7B68     		ldr	r3, [r7, #4]
  78 004a 9B69     		ldr	r3, [r3, #24]
  79              		.loc 1 87 31
  80 004c 1A43     		orrs	r2, r2, r3
  81              		.loc 1 87 56
  82 004e 7B68     		ldr	r3, [r7, #4]
  83 0050 5B68     		ldr	r3, [r3, #4]
  84              		.loc 1 87 51
  85 0052 1A43     		orrs	r2, r2, r3
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma->direction | dma->mode);
  86              		.loc 1 88 16
  87 0054 7B68     		ldr	r3, [r7, #4]
  88 0056 1B68     		ldr	r3, [r3]
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma->direction | dma->mode);
  89              		.loc 1 87 67
  90 0058 1A43     		orrs	r2, r2, r3
  91              		.loc 1 88 33
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 9B68     		ldr	r3, [r3, #8]
  94              		.loc 1 88 28
  95 005e 1343     		orrs	r3, r3, r2
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma->direction | dma->mode);
  96              		.loc 1 87 9
  97 0060 7A69     		ldr	r2, [r7, #20]
  98 0062 1343     		orrs	r3, r3, r2
  99 0064 7B61     		str	r3, [r7, #20]
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) = ctl;
 100              		.loc 1 89 5
 101 0066 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 102 0068 1346     		mov	r3, r2
 103 006a 9B00     		lsls	r3, r3, #2
 104 006c 1344     		add	r3, r3, r2
 105 006e 9B00     		lsls	r3, r3, #2
 106 0070 1A46     		mov	r2, r3
 107 0072 354B     		ldr	r3, .L7
 108 0074 1344     		add	r3, r3, r2
 109 0076 1A46     		mov	r2, r3
 110              		.loc 1 89 25
 111 0078 7B69     		ldr	r3, [r7, #20]
 112 007a 1360     		str	r3, [r2]
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* configure peripheral increasing mode */
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(ENABLE == dma->periph_inc) {
 113              		.loc 1 91 21
 114 007c 7B68     		ldr	r3, [r7, #4]
 115 007e DB68     		ldr	r3, [r3, #12]
 116              		.loc 1 91 7
 117 0080 012B     		cmp	r3, #1
 118 0082 15D1     		bne	.L2
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         DMA_CHCTL(channelx) |= DMA_CHXCTL_PNAGA;
 119              		.loc 1 92 29
 120 0084 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 121 0086 1346     		mov	r3, r2
 122 0088 9B00     		lsls	r3, r3, #2
 123 008a 1344     		add	r3, r3, r2
 124 008c 9B00     		lsls	r3, r3, #2
 125 008e 1A46     		mov	r2, r3
 126 0090 2D4B     		ldr	r3, .L7
 127 0092 1344     		add	r3, r3, r2
 128 0094 1968     		ldr	r1, [r3]
 129 0096 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 130 0098 1346     		mov	r3, r2
 131 009a 9B00     		lsls	r3, r3, #2
 132 009c 1344     		add	r3, r3, r2
 133 009e 9B00     		lsls	r3, r3, #2
 134 00a0 1A46     		mov	r2, r3
 135 00a2 294B     		ldr	r3, .L7
 136 00a4 1344     		add	r3, r3, r2
 137 00a6 1A46     		mov	r2, r3
 138 00a8 41F04003 		orr	r3, r1, #64
 139 00ac 1360     		str	r3, [r2]
 140 00ae 14E0     		b	.L3
 141              	.L2:
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         DMA_CHCTL(channelx) &= ~DMA_CHXCTL_PNAGA;
 142              		.loc 1 94 29
 143 00b0 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 144 00b2 1346     		mov	r3, r2
 145 00b4 9B00     		lsls	r3, r3, #2
 146 00b6 1344     		add	r3, r3, r2
 147 00b8 9B00     		lsls	r3, r3, #2
 148 00ba 1A46     		mov	r2, r3
 149 00bc 224B     		ldr	r3, .L7
 150 00be 1344     		add	r3, r3, r2
 151 00c0 1968     		ldr	r1, [r3]
 152 00c2 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 153 00c4 1346     		mov	r3, r2
 154 00c6 9B00     		lsls	r3, r3, #2
 155 00c8 1344     		add	r3, r3, r2
 156 00ca 9B00     		lsls	r3, r3, #2
 157 00cc 1A46     		mov	r2, r3
 158 00ce 1E4B     		ldr	r3, .L7
 159 00d0 1344     		add	r3, r3, r2
 160 00d2 1A46     		mov	r2, r3
 161 00d4 21F04003 		bic	r3, r1, #64
 162 00d8 1360     		str	r3, [r2]
 163              	.L3:
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* configure memory increasing mode */
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(ENABLE == dma->memory_inc) {
 164              		.loc 1 98 21
 165 00da 7B68     		ldr	r3, [r7, #4]
 166 00dc 1B69     		ldr	r3, [r3, #16]
 167              		.loc 1 98 7
 168 00de 012B     		cmp	r3, #1
 169 00e0 15D1     		bne	.L4
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         DMA_CHCTL(channelx) |= DMA_CHXCTL_MNAGA;
 170              		.loc 1 99 29
 171 00e2 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 172 00e4 1346     		mov	r3, r2
 173 00e6 9B00     		lsls	r3, r3, #2
 174 00e8 1344     		add	r3, r3, r2
 175 00ea 9B00     		lsls	r3, r3, #2
 176 00ec 1A46     		mov	r2, r3
 177 00ee 164B     		ldr	r3, .L7
 178 00f0 1344     		add	r3, r3, r2
 179 00f2 1968     		ldr	r1, [r3]
 180 00f4 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 181 00f6 1346     		mov	r3, r2
 182 00f8 9B00     		lsls	r3, r3, #2
 183 00fa 1344     		add	r3, r3, r2
 184 00fc 9B00     		lsls	r3, r3, #2
 185 00fe 1A46     		mov	r2, r3
 186 0100 114B     		ldr	r3, .L7
 187 0102 1344     		add	r3, r3, r2
 188 0104 1A46     		mov	r2, r3
 189 0106 41F08003 		orr	r3, r1, #128
 190 010a 1360     		str	r3, [r2]
 191 010c 14E0     		b	.L5
 192              	.L4:
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         DMA_CHCTL(channelx) &= ~DMA_CHXCTL_MNAGA;
 193              		.loc 1 101 29
 194 010e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 195 0110 1346     		mov	r3, r2
 196 0112 9B00     		lsls	r3, r3, #2
 197 0114 1344     		add	r3, r3, r2
 198 0116 9B00     		lsls	r3, r3, #2
 199 0118 1A46     		mov	r2, r3
 200 011a 0B4B     		ldr	r3, .L7
 201 011c 1344     		add	r3, r3, r2
 202 011e 1968     		ldr	r1, [r3]
 203 0120 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 204 0122 1346     		mov	r3, r2
 205 0124 9B00     		lsls	r3, r3, #2
 206 0126 1344     		add	r3, r3, r2
 207 0128 9B00     		lsls	r3, r3, #2
 208 012a 1A46     		mov	r2, r3
 209 012c 064B     		ldr	r3, .L7
 210 012e 1344     		add	r3, r3, r2
 211 0130 1A46     		mov	r2, r3
 212 0132 21F08003 		bic	r3, r1, #128
 213 0136 1360     		str	r3, [r2]
 214              	.L5:
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* change DMA device state */
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->state = HAL_DMA_STATE_READY;
 215              		.loc 1 104 20
 216 0138 FB68     		ldr	r3, [r7, #12]
 217 013a 0522     		movs	r2, #5
 218 013c 9A74     		strb	r2, [r3, #18]
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 219              		.loc 1 106 12
 220 013e 0023     		movs	r3, #0
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 221              		.loc 1 107 1
 222 0140 1846     		mov	r0, r3
 223 0142 1837     		adds	r7, r7, #24
 224              		.cfi_def_cfa_offset 8
 225 0144 BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 0146 80BD     		pop	{r7, pc}
 229              	.L8:
 230              		.align	2
 231              	.L7:
 232 0148 08000240 		.word	1073872904
 233              		.cfi_endproc
 234              	.LFE119:
 236              		.section	.text.hal_dma_struct_init,"ax",%progbits
 237              		.align	1
 238              		.global	hal_dma_struct_init
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu softvfp
 244              	hal_dma_struct_init:
 245              	.LFB120:
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      initialize the DMA structure with the default values
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  struct_type: the argument could be selected from enumeration <hal_dma_struct_type_e
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  p_struct: pointer to DMA structure that contains the configuration information
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE,HAL_ERR_VAL details refer to gd32f3x0_hal
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_struct_init(hal_dma_struct_type_enum struct_type, void *p_struct)
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 246              		.loc 1 117 1
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 80B4     		push	{r7}
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 7, -4
 254 0002 83B0     		sub	sp, sp, #12
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 258 0006 0346     		mov	r3, r0
 259 0008 3960     		str	r1, [r7]
 260 000a FB71     		strb	r3, [r7, #7]
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == p_struct) {
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [*p_struct] value is invalid");
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     switch(struct_type) {
 261              		.loc 1 125 5
 262 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 263 000e 022B     		cmp	r3, #2
 264 0010 35D0     		beq	.L10
 265 0012 022B     		cmp	r3, #2
 266 0014 3DDC     		bgt	.L11
 267 0016 002B     		cmp	r3, #0
 268 0018 02D0     		beq	.L12
 269 001a 012B     		cmp	r3, #1
 270 001c 16D0     		beq	.L13
 271 001e 38E0     		b	.L11
 272              	.L12:
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case HAL_DMA_INIT_STRUCT:
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* initialize DMA initialization structure with the default values */
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->direction = DMA_DIR_PERIPH_TO_MEMORY;
 273              		.loc 1 128 54
 274 0020 3B68     		ldr	r3, [r7]
 275 0022 0022     		movs	r2, #0
 276 0024 1A60     		str	r2, [r3]
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->priority = DMA_PRIORITY_LEVEL_LOW;
 277              		.loc 1 129 53
 278 0026 3B68     		ldr	r3, [r7]
 279 0028 0022     		movs	r2, #0
 280 002a 5A60     		str	r2, [r3, #4]
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->mode = DMA_NORMAL_MODE;
 281              		.loc 1 130 49
 282 002c 3B68     		ldr	r3, [r7]
 283 002e 0022     		movs	r2, #0
 284 0030 9A60     		str	r2, [r3, #8]
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->periph_inc = DISABLE;
 285              		.loc 1 131 55
 286 0032 3B68     		ldr	r3, [r7]
 287 0034 0022     		movs	r2, #0
 288 0036 DA60     		str	r2, [r3, #12]
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->memory_inc = ENABLE;
 289              		.loc 1 132 55
 290 0038 3B68     		ldr	r3, [r7]
 291 003a 0122     		movs	r2, #1
 292 003c 1A61     		str	r2, [r3, #16]
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->periph_width = DMA_PERIPH_SIZE_8BITS;
 293              		.loc 1 133 57
 294 003e 3B68     		ldr	r3, [r7]
 295 0040 0022     		movs	r2, #0
 296 0042 5A61     		str	r2, [r3, #20]
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_init_struct *)p_struct)->memory_width = DMA_MEMORY_SIZE_8BITS;
 297              		.loc 1 134 57
 298 0044 3B68     		ldr	r3, [r7]
 299 0046 0022     		movs	r2, #0
 300 0048 9A61     		str	r2, [r3, #24]
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 301              		.loc 1 136 9
 302 004a 25E0     		b	.L14
 303              	.L13:
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case HAL_DMA_DEV_STRUCT:
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* initialize DMA device information structure with the default values */
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->channel = DMA_CH0;
 304              		.loc 1 140 51
 305 004c 3B68     		ldr	r3, [r7]
 306 004e 0022     		movs	r2, #0
 307 0050 1A70     		strb	r2, [r3]
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->dma_irq.error_handle = NULL;
 308              		.loc 1 141 64
 309 0052 3B68     		ldr	r3, [r7]
 310 0054 0022     		movs	r2, #0
 311 0056 5A60     		str	r2, [r3, #4]
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->dma_irq.half_finish_handle = NULL;
 312              		.loc 1 142 70
 313 0058 3B68     		ldr	r3, [r7]
 314 005a 0022     		movs	r2, #0
 315 005c 9A60     		str	r2, [r3, #8]
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->dma_irq.full_finish_handle = NULL;
 316              		.loc 1 143 70
 317 005e 3B68     		ldr	r3, [r7]
 318 0060 0022     		movs	r2, #0
 319 0062 DA60     		str	r2, [r3, #12]
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->error_state = HAL_DMA_ERROR_NONE;
 320              		.loc 1 144 55
 321 0064 3B68     		ldr	r3, [r7]
 322 0066 0022     		movs	r2, #0
 323 0068 5A74     		strb	r2, [r3, #17]
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->state = HAL_DMA_STATE_NONE;
 324              		.loc 1 145 49
 325 006a 3B68     		ldr	r3, [r7]
 326 006c 0022     		movs	r2, #0
 327 006e 9A74     		strb	r2, [r3, #18]
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->p_periph = NULL;
 328              		.loc 1 146 52
 329 0070 3B68     		ldr	r3, [r7]
 330 0072 0022     		movs	r2, #0
 331 0074 5A61     		str	r2, [r3, #20]
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_dev_struct *)p_struct)->mutex = HAL_MUTEX_UNLOCKED;
 332              		.loc 1 147 49
 333 0076 3B68     		ldr	r3, [r7]
 334 0078 0022     		movs	r2, #0
 335 007a 1A76     		strb	r2, [r3, #24]
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 336              		.loc 1 149 9
 337 007c 0CE0     		b	.L14
 338              	.L10:
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case HAL_DMA_IRQ_STRUCT:
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* initialize DMA device interrupt callback function structure with the default values */
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_irq_struct *)p_struct)->error_handle = NULL;
 339              		.loc 1 153 56
 340 007e 3B68     		ldr	r3, [r7]
 341 0080 0022     		movs	r2, #0
 342 0082 1A60     		str	r2, [r3]
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_irq_struct *)p_struct)->full_finish_handle = NULL;
 343              		.loc 1 154 62
 344 0084 3B68     		ldr	r3, [r7]
 345 0086 0022     		movs	r2, #0
 346 0088 9A60     		str	r2, [r3, #8]
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         ((hal_dma_irq_struct *)p_struct)->half_finish_handle = NULL;
 347              		.loc 1 155 62
 348 008a 3B68     		ldr	r3, [r7]
 349 008c 0022     		movs	r2, #0
 350 008e 5A60     		str	r2, [r3, #4]
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 351              		.loc 1 157 9
 352 0090 02E0     		b	.L14
 353              	.L11:
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     default:
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [struct_type] value is invalid");
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_VAL;
 354              		.loc 1 160 16
 355 0092 6FF00503 		mvn	r3, #5
 356 0096 00E0     		b	.L15
 357              	.L14:
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* return function state */
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 358              		.loc 1 164 12
 359 0098 0023     		movs	r3, #0
 360              	.L15:
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 361              		.loc 1 165 1
 362 009a 1846     		mov	r0, r3
 363 009c 0C37     		adds	r7, r7, #12
 364              		.cfi_def_cfa_offset 4
 365 009e BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 00a0 80BC     		pop	{r7}
 369              		.cfi_restore 7
 370              		.cfi_def_cfa_offset 0
 371 00a2 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE120:
 375              		.section	.text.hal_dma_deinit,"ax",%progbits
 376              		.align	1
 377              		.global	hal_dma_deinit
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu softvfp
 383              	hal_dma_deinit:
 384              	.LFB121:
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      deinitialize DMA device structure and init structure
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structure
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_deinit(hal_dma_dev_struct *dma_dev)
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 385              		.loc 1 176 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 8
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 82B0     		sub	sp, sp, #8
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [*dma_dev] value is invalid");
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* deinitialize DMA a channel registers */
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* disable DMA a channel */
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(dma_dev->channel) &= ~DMA_CHXCTL_CHEN;
 398              		.loc 1 185 5
 399 0008 7B68     		ldr	r3, [r7, #4]
 400 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 401              		.loc 1 185 33
 402 000c 1A46     		mov	r2, r3
 403 000e 1346     		mov	r3, r2
 404 0010 9B00     		lsls	r3, r3, #2
 405 0012 1344     		add	r3, r3, r2
 406 0014 9B00     		lsls	r3, r3, #2
 407 0016 1A46     		mov	r2, r3
 408 0018 364B     		ldr	r3, .L18
 409 001a 1344     		add	r3, r3, r2
 410 001c 1A68     		ldr	r2, [r3]
 411              		.loc 1 185 5
 412 001e 7B68     		ldr	r3, [r7, #4]
 413 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414              		.loc 1 185 33
 415 0022 1946     		mov	r1, r3
 416 0024 0B46     		mov	r3, r1
 417 0026 9B00     		lsls	r3, r3, #2
 418 0028 0B44     		add	r3, r3, r1
 419 002a 9B00     		lsls	r3, r3, #2
 420 002c 1946     		mov	r1, r3
 421 002e 314B     		ldr	r3, .L18
 422 0030 0B44     		add	r3, r3, r1
 423 0032 1946     		mov	r1, r3
 424 0034 22F00103 		bic	r3, r2, #1
 425 0038 0B60     		str	r3, [r1]
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* reset DMA channel registers */
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(dma_dev->channel) = DMA_CHCTL_RESET_VALUE;
 426              		.loc 1 187 5
 427 003a 7B68     		ldr	r3, [r7, #4]
 428 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 003e 1A46     		mov	r2, r3
 430 0040 1346     		mov	r3, r2
 431 0042 9B00     		lsls	r3, r3, #2
 432 0044 1344     		add	r3, r3, r2
 433 0046 9B00     		lsls	r3, r3, #2
 434 0048 1A46     		mov	r2, r3
 435 004a 2A4B     		ldr	r3, .L18
 436 004c 1344     		add	r3, r3, r2
 437 004e 1A46     		mov	r2, r3
 438              		.loc 1 187 33
 439 0050 0023     		movs	r3, #0
 440 0052 1360     		str	r3, [r2]
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCNT(dma_dev->channel) = DMA_CHCNT_RESET_VALUE;
 441              		.loc 1 188 5
 442 0054 7B68     		ldr	r3, [r7, #4]
 443 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 0058 1A46     		mov	r2, r3
 445 005a 1346     		mov	r3, r2
 446 005c 9B00     		lsls	r3, r3, #2
 447 005e 1344     		add	r3, r3, r2
 448 0060 9B00     		lsls	r3, r3, #2
 449 0062 1A46     		mov	r2, r3
 450 0064 244B     		ldr	r3, .L18+4
 451 0066 1344     		add	r3, r3, r2
 452 0068 1A46     		mov	r2, r3
 453              		.loc 1 188 33
 454 006a 0023     		movs	r3, #0
 455 006c 1360     		str	r3, [r2]
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHPADDR(dma_dev->channel) = DMA_CHPADDR_RESET_VALUE;
 456              		.loc 1 189 5
 457 006e 7B68     		ldr	r3, [r7, #4]
 458 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 459 0072 1A46     		mov	r2, r3
 460 0074 1346     		mov	r3, r2
 461 0076 9B00     		lsls	r3, r3, #2
 462 0078 1344     		add	r3, r3, r2
 463 007a 9B00     		lsls	r3, r3, #2
 464 007c 1A46     		mov	r2, r3
 465 007e 1F4B     		ldr	r3, .L18+8
 466 0080 1344     		add	r3, r3, r2
 467 0082 1A46     		mov	r2, r3
 468              		.loc 1 189 35
 469 0084 0023     		movs	r3, #0
 470 0086 1360     		str	r3, [r2]
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHMADDR(dma_dev->channel) = DMA_CHMADDR_RESET_VALUE;
 471              		.loc 1 190 5
 472 0088 7B68     		ldr	r3, [r7, #4]
 473 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 474 008c 1A46     		mov	r2, r3
 475 008e 1346     		mov	r3, r2
 476 0090 9B00     		lsls	r3, r3, #2
 477 0092 1344     		add	r3, r3, r2
 478 0094 9B00     		lsls	r3, r3, #2
 479 0096 1A46     		mov	r2, r3
 480 0098 194B     		ldr	r3, .L18+12
 481 009a 1344     		add	r3, r3, r2
 482 009c 1A46     		mov	r2, r3
 483              		.loc 1 190 35
 484 009e 0023     		movs	r3, #0
 485 00a0 1360     		str	r3, [r2]
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_INTC |= DMA_FLAG_ADD(DMA_CHINTF_RESET_VALUE, dma_dev->channel);
 486              		.loc 1 191 14
 487 00a2 184B     		ldr	r3, .L18+16
 488 00a4 1A68     		ldr	r2, [r3]
 489              		.loc 1 191 17
 490 00a6 7B68     		ldr	r3, [r7, #4]
 491 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492 00aa 9B00     		lsls	r3, r3, #2
 493 00ac 0F21     		movs	r1, #15
 494 00ae 01FA03F3 		lsl	r3, r1, r3
 495              		.loc 1 191 14
 496 00b2 1449     		ldr	r1, .L18+16
 497 00b4 1343     		orrs	r3, r3, r2
 498 00b6 0B60     		str	r3, [r1]
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* reset DMA devices */
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     hal_dma_struct_init(HAL_DMA_DEV_STRUCT, dma_dev);
 499              		.loc 1 193 5
 500 00b8 7968     		ldr	r1, [r7, #4]
 501 00ba 0120     		movs	r0, #1
 502 00bc FFF7FEFF 		bl	hal_dma_struct_init
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* reset DMA device interrupt callback functions */
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->dma_irq.error_handle = NULL;
 503              		.loc 1 195 35
 504 00c0 7B68     		ldr	r3, [r7, #4]
 505 00c2 0022     		movs	r2, #0
 506 00c4 5A60     		str	r2, [r3, #4]
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->dma_irq.full_finish_handle = NULL;
 507              		.loc 1 196 41
 508 00c6 7B68     		ldr	r3, [r7, #4]
 509 00c8 0022     		movs	r2, #0
 510 00ca DA60     		str	r2, [r3, #12]
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->dma_irq.half_finish_handle = NULL;
 511              		.loc 1 197 41
 512 00cc 7B68     		ldr	r3, [r7, #4]
 513 00ce 0022     		movs	r2, #0
 514 00d0 9A60     		str	r2, [r3, #8]
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->error_state = HAL_DMA_ERROR_NONE;
 515              		.loc 1 198 26
 516 00d2 7B68     		ldr	r3, [r7, #4]
 517 00d4 0022     		movs	r2, #0
 518 00d6 5A74     		strb	r2, [r3, #17]
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->state = HAL_DMA_STATE_RESET;
 519              		.loc 1 199 20
 520 00d8 7B68     		ldr	r3, [r7, #4]
 521 00da 0122     		movs	r2, #1
 522 00dc 9A74     		strb	r2, [r3, #18]
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->p_periph = NULL;
 523              		.loc 1 200 23
 524 00de 7B68     		ldr	r3, [r7, #4]
 525 00e0 0022     		movs	r2, #0
 526 00e2 5A61     		str	r2, [r3, #20]
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->mutex = HAL_MUTEX_UNLOCKED;
 527              		.loc 1 201 20
 528 00e4 7B68     		ldr	r3, [r7, #4]
 529 00e6 0022     		movs	r2, #0
 530 00e8 1A76     		strb	r2, [r3, #24]
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 531              		.loc 1 203 12
 532 00ea 0023     		movs	r3, #0
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 533              		.loc 1 204 1
 534 00ec 1846     		mov	r0, r3
 535 00ee 0837     		adds	r7, r7, #8
 536              		.cfi_def_cfa_offset 8
 537 00f0 BD46     		mov	sp, r7
 538              		.cfi_def_cfa_register 13
 539              		@ sp needed
 540 00f2 80BD     		pop	{r7, pc}
 541              	.L19:
 542              		.align	2
 543              	.L18:
 544 00f4 08000240 		.word	1073872904
 545 00f8 0C000240 		.word	1073872908
 546 00fc 10000240 		.word	1073872912
 547 0100 14000240 		.word	1073872916
 548 0104 04000240 		.word	1073872900
 549              		.cfi_endproc
 550              	.LFE121:
 552              		.section	.text.hal_dma_start,"ax",%progbits
 553              		.align	1
 554              		.global	hal_dma_start
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu softvfp
 560              	hal_dma_start:
 561              	.LFB122:
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      start DMA transfering
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structure
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  src_addr: the source memory buffer address
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dst_addr: the destination memory buffer address
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  length: the number of data to be transferred from source to destination
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_BUSY, HAL_ERR_NONE, details refer to gd32f3x0_
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_start(hal_dma_dev_struct *dma_dev, uint32_t src_addr, \
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                       uint32_t dst_addr, uint16_t length)
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 562              		.loc 1 219 1
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 16
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566 0000 80B5     		push	{r7, lr}
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 84B0     		sub	sp, sp, #16
 571              		.cfi_def_cfa_offset 24
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 F860     		str	r0, [r7, #12]
 575 0008 B960     		str	r1, [r7, #8]
 576 000a 7A60     		str	r2, [r7, #4]
 577 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check DMA pointer address */
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("pointer [dma_dev] address is invalid");
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(0 == (src_addr & _DEV_VALID_ADDRESS)) {
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [src_addr] value is invalid");
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(0 == (dst_addr & _DEV_VALID_ADDRESS)) {
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dst_addr] value is invalid");
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* lock DMA */
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_LOCK(dma_dev);
 578              		.loc 1 237 5
 579 000e FB68     		ldr	r3, [r7, #12]
 580 0010 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 581 0012 012B     		cmp	r3, #1
 582 0014 02D1     		bne	.L21
 583              		.loc 1 237 5 is_stmt 0 discriminator 1
 584 0016 6FF00103 		mvn	r3, #1
 585 001a 4CE0     		b	.L22
 586              	.L21:
 587              		.loc 1 237 5 discriminator 2
 588 001c FB68     		ldr	r3, [r7, #12]
 589 001e 0122     		movs	r2, #1
 590 0020 1A76     		strb	r2, [r3, #24]
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_STATE_READY == dma_dev->state) {
 591              		.loc 1 238 38 is_stmt 1 discriminator 2
 592 0022 FB68     		ldr	r3, [r7, #12]
 593 0024 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 594              		.loc 1 238 7 discriminator 2
 595 0026 052B     		cmp	r3, #5
 596 0028 40D1     		bne	.L23
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->state = HAL_DMA_STATE_BUSY ;
 597              		.loc 1 240 24
 598 002a FB68     		ldr	r3, [r7, #12]
 599 002c 0222     		movs	r2, #2
 600 002e 9A74     		strb	r2, [r3, #18]
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->error_state =  HAL_DMA_ERROR_NONE;
 601              		.loc 1 241 30
 602 0030 FB68     		ldr	r3, [r7, #12]
 603 0032 0022     		movs	r2, #0
 604 0034 5A74     		strb	r2, [r3, #17]
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* disable DMA channel */
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_channel_disable(dma_dev->channel);
 605              		.loc 1 243 9
 606 0036 FB68     		ldr	r3, [r7, #12]
 607 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 608 003a 1846     		mov	r0, r3
 609 003c FFF7FEFF 		bl	hals_dma_channel_disable
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(RESET != (DMA_CHCTL(dma_dev->channel) & DMA_CHXCTL_DIR)) {
 610              		.loc 1 245 22
 611 0040 FB68     		ldr	r3, [r7, #12]
 612 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 613 0044 1A46     		mov	r2, r3
 614 0046 1346     		mov	r3, r2
 615 0048 9B00     		lsls	r3, r3, #2
 616 004a 1344     		add	r3, r3, r2
 617 004c 9B00     		lsls	r3, r3, #2
 618 004e 1A46     		mov	r2, r3
 619 0050 1B4B     		ldr	r3, .L27
 620 0052 1344     		add	r3, r3, r2
 621 0054 1B68     		ldr	r3, [r3]
 622              		.loc 1 245 50
 623 0056 03F01003 		and	r3, r3, #16
 624              		.loc 1 245 11
 625 005a 002B     		cmp	r3, #0
 626 005c 0CD0     		beq	.L24
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             /* configure the transfer destination and source address */
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_memory_address_config(dma_dev->channel, src_addr);
 627              		.loc 1 247 13
 628 005e FB68     		ldr	r3, [r7, #12]
 629 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0062 B968     		ldr	r1, [r7, #8]
 631 0064 1846     		mov	r0, r3
 632 0066 FFF7FEFF 		bl	hals_dma_memory_address_config
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_periph_address_config(dma_dev->channel, dst_addr);
 633              		.loc 1 248 13
 634 006a FB68     		ldr	r3, [r7, #12]
 635 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 636 006e 7968     		ldr	r1, [r7, #4]
 637 0070 1846     		mov	r0, r3
 638 0072 FFF7FEFF 		bl	hals_dma_periph_address_config
 639 0076 0BE0     		b	.L25
 640              	.L24:
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         } else {
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             /* configure the transfer destination and source address */
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_memory_address_config(dma_dev->channel, dst_addr);
 641              		.loc 1 251 13
 642 0078 FB68     		ldr	r3, [r7, #12]
 643 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 644 007c 7968     		ldr	r1, [r7, #4]
 645 007e 1846     		mov	r0, r3
 646 0080 FFF7FEFF 		bl	hals_dma_memory_address_config
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_periph_address_config(dma_dev->channel, src_addr);
 647              		.loc 1 252 13
 648 0084 FB68     		ldr	r3, [r7, #12]
 649 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 0088 B968     		ldr	r1, [r7, #8]
 651 008a 1846     		mov	r0, r3
 652 008c FFF7FEFF 		bl	hals_dma_periph_address_config
 653              	.L25:
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* configure the transfer number */
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_transfer_number_config(dma_dev->channel, length);
 654              		.loc 1 255 9
 655 0090 FB68     		ldr	r3, [r7, #12]
 656 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657 0094 7A88     		ldrh	r2, [r7, #2]
 658 0096 1146     		mov	r1, r2
 659 0098 1846     		mov	r0, r3
 660 009a FFF7FEFF 		bl	hals_dma_transfer_number_config
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* enable DMA channel */
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_channel_enable(dma_dev->channel);
 661              		.loc 1 257 9
 662 009e FB68     		ldr	r3, [r7, #12]
 663 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664 00a2 1846     		mov	r0, r3
 665 00a4 FFF7FEFF 		bl	hals_dma_channel_enable
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* unlock DMA */
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_BUSY;
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 666              		.loc 1 265 12
 667 00a8 0023     		movs	r3, #0
 668 00aa 04E0     		b	.L22
 669              	.L23:
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         
 670              		.loc 1 260 9
 671 00ac FB68     		ldr	r3, [r7, #12]
 672 00ae 0022     		movs	r2, #0
 673 00b0 1A76     		strb	r2, [r3, #24]
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 674              		.loc 1 262 16
 675 00b2 6FF00203 		mvn	r3, #2
 676              	.L22:
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 677              		.loc 1 266 1
 678 00b6 1846     		mov	r0, r3
 679 00b8 1037     		adds	r7, r7, #16
 680              		.cfi_def_cfa_offset 8
 681 00ba BD46     		mov	sp, r7
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 00bc 80BD     		pop	{r7, pc}
 685              	.L28:
 686 00be 00BF     		.align	2
 687              	.L27:
 688 00c0 08000240 		.word	1073872904
 689              		.cfi_endproc
 690              	.LFE122:
 692              		.section	.text.hal_dma_stop,"ax",%progbits
 693              		.align	1
 694              		.global	hal_dma_stop
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu softvfp
 700              	hal_dma_stop:
 701              	.LFB123:
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      stop DMA transfering
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structure
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE,HAL_ERR_ALREADY_DONE details refer to gd3
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_stop(hal_dma_dev_struct *dma_dev)
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {   
 702              		.loc 1 277 1
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706 0000 80B5     		push	{r7, lr}
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 714 0006 7860     		str	r0, [r7, #4]
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check DMA pointer address */
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("pointer [dma_dev] address is invalid");
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_STATE_BUSY != dma_dev->state) {
 715              		.loc 1 285 37
 716 0008 7B68     		ldr	r3, [r7, #4]
 717 000a 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 718              		.loc 1 285 7
 719 000c 022B     		cmp	r3, #2
 720 000e 08D0     		beq	.L30
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* dma not in transfer state */
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->error_state = HAL_DMA_ERROR_NOTRANSFER;
 721              		.loc 1 287 30
 722 0010 7B68     		ldr	r3, [r7, #4]
 723 0012 0222     		movs	r2, #2
 724 0014 5A74     		strb	r2, [r3, #17]
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* unlock DMA */
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 725              		.loc 1 289 9
 726 0016 7B68     		ldr	r3, [r7, #4]
 727 0018 0022     		movs	r2, #0
 728 001a 1A76     		strb	r2, [r3, #24]
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ALREADY_DONE;
 729              		.loc 1 291 16
 730 001c 4FF0FF33 		mov	r3, #-1
 731 0020 11E0     		b	.L31
 732              	.L30:
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* disable DMA channel */
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_channel_disable(dma_dev->channel);
 733              		.loc 1 296 9
 734 0022 7B68     		ldr	r3, [r7, #4]
 735 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 736 0026 1846     		mov	r0, r3
 737 0028 FFF7FEFF 		bl	hals_dma_channel_disable
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* clear all flags */
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_flag_clear(dma_dev->channel, DMA_INTF_GIF);
 738              		.loc 1 298 9
 739 002c 7B68     		ldr	r3, [r7, #4]
 740 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 0030 0121     		movs	r1, #1
 742 0032 1846     		mov	r0, r3
 743 0034 FFF7FEFF 		bl	hals_dma_flag_clear
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->state = HAL_DMA_STATE_READY ;
 744              		.loc 1 301 20
 745 0038 7B68     		ldr	r3, [r7, #4]
 746 003a 0522     		movs	r2, #5
 747 003c 9A74     		strb	r2, [r3, #18]
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* unlock DMA */
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_UNLOCK(dma_dev);
 748              		.loc 1 303 5
 749 003e 7B68     		ldr	r3, [r7, #4]
 750 0040 0022     		movs	r2, #0
 751 0042 1A76     		strb	r2, [r3, #24]
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 752              		.loc 1 305 12
 753 0044 0023     		movs	r3, #0
 754              	.L31:
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 755              		.loc 1 306 1
 756 0046 1846     		mov	r0, r3
 757 0048 0837     		adds	r7, r7, #8
 758              		.cfi_def_cfa_offset 8
 759 004a BD46     		mov	sp, r7
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 004c 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE123:
 766              		.section	.text.hal_dma_irq,"ax",%progbits
 767              		.align	1
 768              		.global	hal_dma_irq
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu softvfp
 774              	hal_dma_irq:
 775              	.LFB124:
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      DMA interrupt handler content function,which is merely used in dma_handler
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structrue
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE details refer to gd32f3x0_hal.h
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_irq(hal_dma_dev_struct *dma_dev)
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 776              		.loc 1 317 1
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 80B5     		push	{r7, lr}
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 82B0     		sub	sp, sp, #8
 785              		.cfi_def_cfa_offset 16
 786 0004 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 788 0006 7860     		str	r0, [r7, #4]
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check the DMA pointer address and the number length parameter */
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dma_dev] value is invalid");
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* full transfer finish interrupt handler */
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(SET == hals_dma_interrupt_flag_get(dma_dev->channel, DMA_INTF_FTFIF)) {
 789              		.loc 1 326 15
 790 0008 7B68     		ldr	r3, [r7, #4]
 791 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 792 000c 0221     		movs	r1, #2
 793 000e 1846     		mov	r0, r3
 794 0010 FFF7FEFF 		bl	hals_dma_interrupt_flag_get
 795 0014 0346     		mov	r3, r0
 796              		.loc 1 326 7
 797 0016 012B     		cmp	r3, #1
 798 0018 13D1     		bne	.L33
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_flag_clear(dma_dev->channel, DMA_INTF_FTFIF);
 799              		.loc 1 327 9
 800 001a 7B68     		ldr	r3, [r7, #4]
 801 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 802 001e 0221     		movs	r1, #2
 803 0020 1846     		mov	r0, r3
 804 0022 FFF7FEFF 		bl	hals_dma_interrupt_flag_clear
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(dma_dev->dma_irq.full_finish_handle != NULL) {
 805              		.loc 1 328 28
 806 0026 7B68     		ldr	r3, [r7, #4]
 807 0028 DB68     		ldr	r3, [r3, #12]
 808              		.loc 1 328 11
 809 002a 002B     		cmp	r3, #0
 810 002c 09D0     		beq	.L33
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->dma_irq.full_finish_handle(dma_dev);
 811              		.loc 1 329 29
 812 002e 7B68     		ldr	r3, [r7, #4]
 813 0030 DB68     		ldr	r3, [r3, #12]
 814              		.loc 1 329 13
 815 0032 7868     		ldr	r0, [r7, #4]
 816 0034 9847     		blx	r3
 817              	.LVL0:
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             /* unlock DMA */
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->state = HAL_DMA_STATE_READY;
 818              		.loc 1 331 28
 819 0036 7B68     		ldr	r3, [r7, #4]
 820 0038 0522     		movs	r2, #5
 821 003a 9A74     		strb	r2, [r3, #18]
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_UNLOCK(dma_dev);
 822              		.loc 1 332 13
 823 003c 7B68     		ldr	r3, [r7, #4]
 824 003e 0022     		movs	r2, #0
 825 0040 1A76     		strb	r2, [r3, #24]
 826              	.L33:
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* half transfer finish interrupt handler */
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(SET == hals_dma_interrupt_flag_get(dma_dev->channel, DMA_INTF_HTFIF)) {
 827              		.loc 1 337 15
 828 0042 7B68     		ldr	r3, [r7, #4]
 829 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0046 0421     		movs	r1, #4
 831 0048 1846     		mov	r0, r3
 832 004a FFF7FEFF 		bl	hals_dma_interrupt_flag_get
 833 004e 0346     		mov	r3, r0
 834              		.loc 1 337 7
 835 0050 012B     		cmp	r3, #1
 836 0052 22D1     		bne	.L34
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* if DMA not in circular mode */
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(0 == (DMA_CHCTL(dma_dev->channel) & DMA_CHXCTL_CMEN)) {
 837              		.loc 1 339 18
 838 0054 7B68     		ldr	r3, [r7, #4]
 839 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 840 0058 1A46     		mov	r2, r3
 841 005a 1346     		mov	r3, r2
 842 005c 9B00     		lsls	r3, r3, #2
 843 005e 1344     		add	r3, r3, r2
 844 0060 9B00     		lsls	r3, r3, #2
 845 0062 1A46     		mov	r2, r3
 846 0064 1F4B     		ldr	r3, .L38
 847 0066 1344     		add	r3, r3, r2
 848 0068 1B68     		ldr	r3, [r3]
 849              		.loc 1 339 46
 850 006a 03F02003 		and	r3, r3, #32
 851              		.loc 1 339 11
 852 006e 002B     		cmp	r3, #0
 853 0070 05D1     		bne	.L35
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_HTF);
 854              		.loc 1 340 13
 855 0072 7B68     		ldr	r3, [r7, #4]
 856 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 0076 0421     		movs	r1, #4
 858 0078 1846     		mov	r0, r3
 859 007a FFF7FEFF 		bl	hals_dma_interrupt_disable
 860              	.L35:
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                     }
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_flag_clear(dma_dev->channel, DMA_INTF_HTFIF);
 861              		.loc 1 342 9
 862 007e 7B68     		ldr	r3, [r7, #4]
 863 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 0082 0421     		movs	r1, #4
 865 0084 1846     		mov	r0, r3
 866 0086 FFF7FEFF 		bl	hals_dma_interrupt_flag_clear
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(dma_dev->dma_irq.half_finish_handle != NULL) {
 867              		.loc 1 343 28
 868 008a 7B68     		ldr	r3, [r7, #4]
 869 008c 9B68     		ldr	r3, [r3, #8]
 870              		.loc 1 343 11
 871 008e 002B     		cmp	r3, #0
 872 0090 03D0     		beq	.L34
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->dma_irq.half_finish_handle(dma_dev);
 873              		.loc 1 344 29
 874 0092 7B68     		ldr	r3, [r7, #4]
 875 0094 9B68     		ldr	r3, [r3, #8]
 876              		.loc 1 344 13
 877 0096 7868     		ldr	r0, [r7, #4]
 878 0098 9847     		blx	r3
 879              	.LVL1:
 880              	.L34:
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* error interrupt handler */
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(SET == hals_dma_interrupt_flag_get(dma_dev->channel, DMA_INTF_ERRIF)) {
 881              		.loc 1 351 15
 882 009a 7B68     		ldr	r3, [r7, #4]
 883 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 009e 0821     		movs	r1, #8
 885 00a0 1846     		mov	r0, r3
 886 00a2 FFF7FEFF 		bl	hals_dma_interrupt_flag_get
 887 00a6 0346     		mov	r3, r0
 888              		.loc 1 351 7
 889 00a8 012B     		cmp	r3, #1
 890 00aa 16D1     		bne	.L36
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_flag_clear(dma_dev->channel, DMA_INTF_GIF);
 891              		.loc 1 352 9
 892 00ac 7B68     		ldr	r3, [r7, #4]
 893 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 00b0 0121     		movs	r1, #1
 895 00b2 1846     		mov	r0, r3
 896 00b4 FFF7FEFF 		bl	hals_dma_interrupt_flag_clear
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->state = HAL_DMA_STATE_READY;
 897              		.loc 1 353 24
 898 00b8 7B68     		ldr	r3, [r7, #4]
 899 00ba 0522     		movs	r2, #5
 900 00bc 9A74     		strb	r2, [r3, #18]
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->error_state = HAL_DMA_ERROR_TRANSFER;
 901              		.loc 1 354 30
 902 00be 7B68     		ldr	r3, [r7, #4]
 903 00c0 0122     		movs	r2, #1
 904 00c2 5A74     		strb	r2, [r3, #17]
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* unlock DMA */
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 905              		.loc 1 356 9
 906 00c4 7B68     		ldr	r3, [r7, #4]
 907 00c6 0022     		movs	r2, #0
 908 00c8 1A76     		strb	r2, [r3, #24]
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(dma_dev->dma_irq.error_handle != NULL) {
 909              		.loc 1 357 28
 910 00ca 7B68     		ldr	r3, [r7, #4]
 911 00cc 5B68     		ldr	r3, [r3, #4]
 912              		.loc 1 357 11
 913 00ce 002B     		cmp	r3, #0
 914 00d0 03D0     		beq	.L36
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->dma_irq.error_handle(dma_dev);
 915              		.loc 1 358 29
 916 00d2 7B68     		ldr	r3, [r7, #4]
 917 00d4 5B68     		ldr	r3, [r3, #4]
 918              		.loc 1 358 13
 919 00d6 7868     		ldr	r0, [r7, #4]
 920 00d8 9847     		blx	r3
 921              	.LVL2:
 922              	.L36:
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 923              		.loc 1 362 12
 924 00da 0023     		movs	r3, #0
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 925              		.loc 1 363 1
 926 00dc 1846     		mov	r0, r3
 927 00de 0837     		adds	r7, r7, #8
 928              		.cfi_def_cfa_offset 8
 929 00e0 BD46     		mov	sp, r7
 930              		.cfi_def_cfa_register 13
 931              		@ sp needed
 932 00e2 80BD     		pop	{r7, pc}
 933              	.L39:
 934              		.align	2
 935              	.L38:
 936 00e4 08000240 		.word	1073872904
 937              		.cfi_endproc
 938              	.LFE124:
 940              		.section	.text.hal_dma_irq_handle_set,"ax",%progbits
 941              		.align	1
 942              		.global	hal_dma_irq_handle_set
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu softvfp
 948              	hal_dma_irq_handle_set:
 949              	.LFB125:
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      set user-defined interrupt callback function,
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 which will be registered and called when corresponding interrupt be triggered
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma: DMA device information structrue
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  p_irq: point to DMA interrupt callback function pointer structure
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   The structure member can be assigned as following parameters:
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        hal_irq_handle_cb function pointer: the function is user-defined,
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                     the corresponding callback mechanism is in use, and enable corresponding interr
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE details refer to gd32f3x0_hal.h
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_irq_handle_set(hal_dma_dev_struct *dma_dev, hal_dma_irq_struct *p_irq)
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 950              		.loc 1 379 1
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954 0000 80B5     		push	{r7, lr}
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
 961              		.cfi_def_cfa_register 7
 962 0006 7860     		str	r0, [r7, #4]
 963 0008 3960     		str	r1, [r7]
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check the DMA pointer address and the number length parameter */
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dma_dev] value is invalid");
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* lock DMA */
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_LOCK(dma_dev);
 964              		.loc 1 388 5
 965 000a 7B68     		ldr	r3, [r7, #4]
 966 000c 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 967 000e 012B     		cmp	r3, #1
 968 0010 02D1     		bne	.L41
 969              		.loc 1 388 5 is_stmt 0 discriminator 1
 970 0012 6FF00103 		mvn	r3, #1
 971 0016 52E0     		b	.L42
 972              	.L41:
 973              		.loc 1 388 5 discriminator 2
 974 0018 7B68     		ldr	r3, [r7, #4]
 975 001a 0122     		movs	r2, #1
 976 001c 1A76     		strb	r2, [r3, #24]
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* disable DMA channel */
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     hals_dma_channel_disable(dma_dev->channel);
 977              		.loc 1 390 5 is_stmt 1 discriminator 2
 978 001e 7B68     		ldr	r3, [r7, #4]
 979 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0022 1846     		mov	r0, r3
 981 0024 FFF7FEFF 		bl	hals_dma_channel_disable
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* set the handler pointer  */
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL != p_irq) {
 982              		.loc 1 392 7 discriminator 2
 983 0028 3B68     		ldr	r3, [r7]
 984 002a 002B     		cmp	r3, #0
 985 002c 0BD0     		beq	.L43
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->dma_irq.error_handle = p_irq->error_handle;
 986              		.loc 1 393 46
 987 002e 3B68     		ldr	r3, [r7]
 988 0030 1A68     		ldr	r2, [r3]
 989              		.loc 1 393 39
 990 0032 7B68     		ldr	r3, [r7, #4]
 991 0034 5A60     		str	r2, [r3, #4]
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->dma_irq.full_finish_handle = p_irq->full_finish_handle;
 992              		.loc 1 394 52
 993 0036 3B68     		ldr	r3, [r7]
 994 0038 9A68     		ldr	r2, [r3, #8]
 995              		.loc 1 394 45
 996 003a 7B68     		ldr	r3, [r7, #4]
 997 003c DA60     		str	r2, [r3, #12]
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->dma_irq.half_finish_handle = p_irq->half_finish_handle;
 998              		.loc 1 395 52
 999 003e 3B68     		ldr	r3, [r7]
 1000 0040 5A68     		ldr	r2, [r3, #4]
 1001              		.loc 1 395 45
 1002 0042 7B68     		ldr	r3, [r7, #4]
 1003 0044 9A60     		str	r2, [r3, #8]
 1004              	.L43:
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* enable the channel error interrupt */
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL != dma_dev->dma_irq.error_handle) {
 1005              		.loc 1 399 32
 1006 0046 7B68     		ldr	r3, [r7, #4]
 1007 0048 5B68     		ldr	r3, [r3, #4]
 1008              		.loc 1 399 7
 1009 004a 002B     		cmp	r3, #0
 1010 004c 06D0     		beq	.L44
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_enable(dma_dev->channel, DMA_INT_ERR);
 1011              		.loc 1 400 9
 1012 004e 7B68     		ldr	r3, [r7, #4]
 1013 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1014 0052 0821     		movs	r1, #8
 1015 0054 1846     		mov	r0, r3
 1016 0056 FFF7FEFF 		bl	hals_dma_interrupt_enable
 1017 005a 05E0     		b	.L45
 1018              	.L44:
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_ERR);
 1019              		.loc 1 402 9
 1020 005c 7B68     		ldr	r3, [r7, #4]
 1021 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1022 0060 0821     		movs	r1, #8
 1023 0062 1846     		mov	r0, r3
 1024 0064 FFF7FEFF 		bl	hals_dma_interrupt_disable
 1025              	.L45:
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [error_handle] value is invalid");
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* set the full finish handler pointer and enable the channel full transfer finish  interrupt *
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL != dma_dev->dma_irq.full_finish_handle) {
 1026              		.loc 1 407 32
 1027 0068 7B68     		ldr	r3, [r7, #4]
 1028 006a DB68     		ldr	r3, [r3, #12]
 1029              		.loc 1 407 7
 1030 006c 002B     		cmp	r3, #0
 1031 006e 06D0     		beq	.L46
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_enable(dma_dev->channel, DMA_INT_FTF);
 1032              		.loc 1 408 9
 1033 0070 7B68     		ldr	r3, [r7, #4]
 1034 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 0074 0221     		movs	r1, #2
 1036 0076 1846     		mov	r0, r3
 1037 0078 FFF7FEFF 		bl	hals_dma_interrupt_enable
 1038 007c 05E0     		b	.L47
 1039              	.L46:
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_FTF);
 1040              		.loc 1 410 9
 1041 007e 7B68     		ldr	r3, [r7, #4]
 1042 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1043 0082 0221     		movs	r1, #2
 1044 0084 1846     		mov	r0, r3
 1045 0086 FFF7FEFF 		bl	hals_dma_interrupt_disable
 1046              	.L47:
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [full_finish_handle] value is invalid");
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* set the half finish handler pointer and enable the channel half transfer finish interrupt */
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL != dma_dev->dma_irq.half_finish_handle) {
 1047              		.loc 1 415 32
 1048 008a 7B68     		ldr	r3, [r7, #4]
 1049 008c 9B68     		ldr	r3, [r3, #8]
 1050              		.loc 1 415 7
 1051 008e 002B     		cmp	r3, #0
 1052 0090 06D0     		beq	.L48
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_enable(dma_dev->channel, DMA_INT_HTF);
 1053              		.loc 1 416 9
 1054 0092 7B68     		ldr	r3, [r7, #4]
 1055 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1056 0096 0421     		movs	r1, #4
 1057 0098 1846     		mov	r0, r3
 1058 009a FFF7FEFF 		bl	hals_dma_interrupt_enable
 1059 009e 05E0     		b	.L49
 1060              	.L48:
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_HTF);
 1061              		.loc 1 418 9
 1062 00a0 7B68     		ldr	r3, [r7, #4]
 1063 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1064 00a4 0421     		movs	r1, #4
 1065 00a6 1846     		mov	r0, r3
 1066 00a8 FFF7FEFF 		bl	hals_dma_interrupt_disable
 1067              	.L49:
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [half_finish_handle] value is invalid");
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* enable DMA channel */
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     hals_dma_channel_enable(dma_dev->channel);
 1068              		.loc 1 422 5
 1069 00ac 7B68     		ldr	r3, [r7, #4]
 1070 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1071 00b0 1846     		mov	r0, r3
 1072 00b2 FFF7FEFF 		bl	hals_dma_channel_enable
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* unlock DMA */
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_UNLOCK(dma_dev);
 1073              		.loc 1 424 5
 1074 00b6 7B68     		ldr	r3, [r7, #4]
 1075 00b8 0022     		movs	r2, #0
 1076 00ba 1A76     		strb	r2, [r3, #24]
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1077              		.loc 1 426 12
 1078 00bc 0023     		movs	r3, #0
 1079              	.L42:
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1080              		.loc 1 427 1
 1081 00be 1846     		mov	r0, r3
 1082 00c0 0837     		adds	r7, r7, #8
 1083              		.cfi_def_cfa_offset 8
 1084 00c2 BD46     		mov	sp, r7
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 00c4 80BD     		pop	{r7, pc}
 1088              		.cfi_endproc
 1089              	.LFE125:
 1091              		.section	.text.hal_dma_irq_handle_all_reset,"ax",%progbits
 1092              		.align	1
 1093              		.global	hal_dma_irq_handle_all_reset
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu softvfp
 1099              	hal_dma_irq_handle_all_reset:
 1100              	.LFB126:
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      reset all user-defined interrupt callback function,
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 which will be registered and called when corresponding interrupt be triggered
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma: DMA device information structrue
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE details refer to gd32f3x0_hal.h
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_irq_handle_all_reset(hal_dma_dev_struct *dma_dev)
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1101              		.loc 1 439 1
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 8
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106 0000 80B4     		push	{r7}
 1107              		.cfi_def_cfa_offset 4
 1108              		.cfi_offset 7, -4
 1109 0002 83B0     		sub	sp, sp, #12
 1110              		.cfi_def_cfa_offset 16
 1111 0004 00AF     		add	r7, sp, #0
 1112              		.cfi_def_cfa_register 7
 1113 0006 7860     		str	r0, [r7, #4]
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check the DMA pointer address and the number length parameter */
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dma_dev] value is invalid");
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* lock DMA */
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_LOCK(dma_dev);
 1114              		.loc 1 448 5
 1115 0008 7B68     		ldr	r3, [r7, #4]
 1116 000a 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1117 000c 012B     		cmp	r3, #1
 1118 000e 02D1     		bne	.L51
 1119              		.loc 1 448 5 is_stmt 0 discriminator 1
 1120 0010 6FF00103 		mvn	r3, #1
 1121 0014 0FE0     		b	.L52
 1122              	.L51:
 1123              		.loc 1 448 5 discriminator 2
 1124 0016 7B68     		ldr	r3, [r7, #4]
 1125 0018 0122     		movs	r2, #1
 1126 001a 1A76     		strb	r2, [r3, #24]
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* DMA interrupt handler reset */
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->dma_irq.error_handle = NULL;
 1127              		.loc 1 450 35 is_stmt 1 discriminator 2
 1128 001c 7B68     		ldr	r3, [r7, #4]
 1129 001e 0022     		movs	r2, #0
 1130 0020 5A60     		str	r2, [r3, #4]
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->dma_irq.half_finish_handle = NULL;
 1131              		.loc 1 451 41 discriminator 2
 1132 0022 7B68     		ldr	r3, [r7, #4]
 1133 0024 0022     		movs	r2, #0
 1134 0026 9A60     		str	r2, [r3, #8]
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     dma_dev->dma_irq.full_finish_handle = NULL;
 1135              		.loc 1 452 41 discriminator 2
 1136 0028 7B68     		ldr	r3, [r7, #4]
 1137 002a 0022     		movs	r2, #0
 1138 002c DA60     		str	r2, [r3, #12]
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* unlock DMA */
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_UNLOCK(dma_dev);
 1139              		.loc 1 454 5 discriminator 2
 1140 002e 7B68     		ldr	r3, [r7, #4]
 1141 0030 0022     		movs	r2, #0
 1142 0032 1A76     		strb	r2, [r3, #24]
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1143              		.loc 1 456 12 discriminator 2
 1144 0034 0023     		movs	r3, #0
 1145              	.L52:
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1146              		.loc 1 457 1
 1147 0036 1846     		mov	r0, r3
 1148 0038 0C37     		adds	r7, r7, #12
 1149              		.cfi_def_cfa_offset 4
 1150 003a BD46     		mov	sp, r7
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 003c 80BC     		pop	{r7}
 1154              		.cfi_restore 7
 1155              		.cfi_def_cfa_offset 0
 1156 003e 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE126:
 1160              		.section	.text.hal_dma_start_poll,"ax",%progbits
 1161              		.align	1
 1162              		.global	hal_dma_start_poll
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu softvfp
 1168              	hal_dma_start_poll:
 1169              	.LFB127:
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      start transfering amounts of data, poll transmit process and completed status
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structrue
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  transfer_state: refer to hal_dma_transfer_state_enum
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  timeout_ms: time out duration
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_HARDWARE, HAL_ERR_NONE, HAL_ERR_NO_SUPPORT,  \
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 HAL_ERR_ALREADY_DONE, HAL_ERR_TIMEOUT  details refer to gd32f3x0_hal.h
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_start_poll(hal_dma_dev_struct *dma_dev, hal_dma_transfer_state_enum \
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                            transfer_state, uint32_t timeout_ms)
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1170              		.loc 1 472 1
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 24
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174 0000 80B5     		push	{r7, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 86B0     		sub	sp, sp, #24
 1179              		.cfi_def_cfa_offset 32
 1180 0004 00AF     		add	r7, sp, #0
 1181              		.cfi_def_cfa_register 7
 1182 0006 F860     		str	r0, [r7, #12]
 1183 0008 0B46     		mov	r3, r1
 1184 000a 7A60     		str	r2, [r7, #4]
 1185 000c FB72     		strb	r3, [r7, #11]
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     uint32_t flag, tick_start = 0;
 1186              		.loc 1 473 20
 1187 000e 0023     		movs	r3, #0
 1188 0010 3B61     		str	r3, [r7, #16]
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check the parameters */
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dma_dev] value is invalid");
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check the cirulation mode of the data transfer */
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(RESET != (DMA_CHCTL(dma_dev->channel) & DMA_CHXCTL_CMEN)) {
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* polling mode is not supported in circular mode */
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("DMA poll function is invalid in circulation mode");
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_NO_SUPPORT;
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_STATE_BUSY != dma_dev->state) {
 1189              		.loc 1 490 37
 1190 0012 FB68     		ldr	r3, [r7, #12]
 1191 0014 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1192              		.loc 1 490 7
 1193 0016 022B     		cmp	r3, #2
 1194 0018 08D0     		beq	.L54
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* no transfer */
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->error_state = HAL_DMA_ERROR_NOTRANSFER;
 1195              		.loc 1 492 30
 1196 001a FB68     		ldr	r3, [r7, #12]
 1197 001c 0222     		movs	r2, #2
 1198 001e 5A74     		strb	r2, [r3, #17]
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 1199              		.loc 1 493 9
 1200 0020 FB68     		ldr	r3, [r7, #12]
 1201 0022 0022     		movs	r2, #0
 1202 0024 1A76     		strb	r2, [r3, #24]
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ALREADY_DONE;
 1203              		.loc 1 495 16
 1204 0026 4FF0FF33 		mov	r3, #-1
 1205 002a 5DE0     		b	.L55
 1206              	.L54:
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* get the transfer flag */
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_TARNSFER_HALF == transfer_state) {
 1207              		.loc 1 498 7
 1208 002c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1209 002e 002B     		cmp	r3, #0
 1210 0030 07D1     		bne	.L56
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         flag = DMA_FLAG_ADD(DMA_INTF_HTFIF, dma_dev->channel);
 1211              		.loc 1 499 16
 1212 0032 FB68     		ldr	r3, [r7, #12]
 1213 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 0036 9B00     		lsls	r3, r3, #2
 1215              		.loc 1 499 14
 1216 0038 0422     		movs	r2, #4
 1217 003a 02FA03F3 		lsl	r3, r2, r3
 1218 003e 7B61     		str	r3, [r7, #20]
 1219 0040 06E0     		b	.L57
 1220              	.L56:
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         flag = DMA_FLAG_ADD(DMA_INTF_FTFIF, dma_dev->channel);
 1221              		.loc 1 501 16
 1222 0042 FB68     		ldr	r3, [r7, #12]
 1223 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1224 0046 9B00     		lsls	r3, r3, #2
 1225              		.loc 1 501 14
 1226 0048 0222     		movs	r2, #2
 1227 004a 02FA03F3 		lsl	r3, r2, r3
 1228 004e 7B61     		str	r3, [r7, #20]
 1229              	.L57:
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* set timeout */
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     tick_start = hal_sys_basetick_count_get();
 1230              		.loc 1 505 18
 1231 0050 FFF7FEFF 		bl	hal_sys_basetick_count_get
 1232 0054 3861     		str	r0, [r7, #16]
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     while(RESET == (DMA_INTF & flag)) {
 1233              		.loc 1 507 10
 1234 0056 31E0     		b	.L58
 1235              	.L60:
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(SET == hals_dma_flag_get(dma_dev->channel, DMA_INTF_ERRIF)) {
 1236              		.loc 1 508 19
 1237 0058 FB68     		ldr	r3, [r7, #12]
 1238 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 005c 0821     		movs	r1, #8
 1240 005e 1846     		mov	r0, r3
 1241 0060 FFF7FEFF 		bl	hals_dma_flag_get
 1242 0064 0346     		mov	r3, r0
 1243              		.loc 1 508 11
 1244 0066 012B     		cmp	r3, #1
 1245 0068 11D1     		bne	.L59
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             /* when error occurs, clear all flags and output error message */
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->error_state = HAL_DMA_ERROR_TRANSFER;
 1246              		.loc 1 510 34
 1247 006a FB68     		ldr	r3, [r7, #12]
 1248 006c 0122     		movs	r2, #1
 1249 006e 5A74     		strb	r2, [r3, #17]
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->state = HAL_DMA_STATE_READY;
 1250              		.loc 1 511 28
 1251 0070 FB68     		ldr	r3, [r7, #12]
 1252 0072 0522     		movs	r2, #5
 1253 0074 9A74     		strb	r2, [r3, #18]
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_flag_clear(dma_dev->channel, DMA_INTF_GIF);
 1254              		.loc 1 512 13
 1255 0076 FB68     		ldr	r3, [r7, #12]
 1256 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 007a 0121     		movs	r1, #1
 1258 007c 1846     		mov	r0, r3
 1259 007e FFF7FEFF 		bl	hals_dma_flag_clear
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_UNLOCK(dma_dev);
 1260              		.loc 1 513 13
 1261 0082 FB68     		ldr	r3, [r7, #12]
 1262 0084 0022     		movs	r2, #0
 1263 0086 1A76     		strb	r2, [r3, #24]
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_DEBUGE("dma transfer error, poll stop");
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             return HAL_ERR_HARDWARE;
 1264              		.loc 1 516 20
 1265 0088 6FF00703 		mvn	r3, #7
 1266 008c 2CE0     		b	.L55
 1267              	.L59:
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* check for the timeout */
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1268              		.loc 1 519 11
 1269 008e 7B68     		ldr	r3, [r7, #4]
 1270 0090 B3F1FF3F 		cmp	r3, #-1
 1271 0094 12D0     		beq	.L58
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)){
 1272              		.loc 1 520 23
 1273 0096 7968     		ldr	r1, [r7, #4]
 1274 0098 3869     		ldr	r0, [r7, #16]
 1275 009a FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1276 009e 0346     		mov	r3, r0
 1277              		.loc 1 520 15
 1278 00a0 012B     		cmp	r3, #1
 1279 00a2 0BD1     		bne	.L58
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 dma_dev->error_state = HAL_DMA_ERROR_TIMEOUT;
 1280              		.loc 1 522 38
 1281 00a4 FB68     		ldr	r3, [r7, #12]
 1282 00a6 0322     		movs	r2, #3
 1283 00a8 5A74     		strb	r2, [r3, #17]
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 dma_dev->state = HAL_DMA_STATE_TIMEOUT;
 1284              		.loc 1 523 32
 1285 00aa FB68     		ldr	r3, [r7, #12]
 1286 00ac 0322     		movs	r2, #3
 1287 00ae 9A74     		strb	r2, [r3, #18]
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 /* when timeout occurs, output timeout warning message */
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 HAL_DEBUGW("dma transfer state poll timeout");
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 HAL_UNLOCK(dma_dev);
 1288              		.loc 1 526 17
 1289 00b0 FB68     		ldr	r3, [r7, #12]
 1290 00b2 0022     		movs	r2, #0
 1291 00b4 1A76     		strb	r2, [r3, #24]
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 return HAL_ERR_TIMEOUT;
 1292              		.loc 1 528 24
 1293 00b6 6FF00403 		mvn	r3, #4
 1294 00ba 15E0     		b	.L55
 1295              	.L58:
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(SET == hals_dma_flag_get(dma_dev->channel, DMA_INTF_ERRIF)) {
 1296              		.loc 1 507 21
 1297 00bc 0C4B     		ldr	r3, .L62
 1298 00be 1A68     		ldr	r2, [r3]
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(SET == hals_dma_flag_get(dma_dev->channel, DMA_INTF_ERRIF)) {
 1299              		.loc 1 507 30
 1300 00c0 7B69     		ldr	r3, [r7, #20]
 1301 00c2 1340     		ands	r3, r3, r2
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(SET == hals_dma_flag_get(dma_dev->channel, DMA_INTF_ERRIF)) {
 1302              		.loc 1 507 10
 1303 00c4 002B     		cmp	r3, #0
 1304 00c6 C7D0     		beq	.L60
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             }
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     hals_dma_flag_clear(dma_dev->channel, DMA_INTF_GIF);
 1305              		.loc 1 534 5
 1306 00c8 FB68     		ldr	r3, [r7, #12]
 1307 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 00cc 0121     		movs	r1, #1
 1309 00ce 1846     		mov	r0, r3
 1310 00d0 FFF7FEFF 		bl	hals_dma_flag_clear
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_TARNSFER_FULL == transfer_state) {
 1311              		.loc 1 536 7
 1312 00d4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1313 00d6 012B     		cmp	r3, #1
 1314 00d8 02D1     		bne	.L61
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->state = HAL_DMA_STATE_READY;
 1315              		.loc 1 537 24
 1316 00da FB68     		ldr	r3, [r7, #12]
 1317 00dc 0522     		movs	r2, #5
 1318 00de 9A74     		strb	r2, [r3, #18]
 1319              	.L61:
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* unlock DMA */
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_UNLOCK(dma_dev);
 1320              		.loc 1 540 5
 1321 00e0 FB68     		ldr	r3, [r7, #12]
 1322 00e2 0022     		movs	r2, #0
 1323 00e4 1A76     		strb	r2, [r3, #24]
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1324              		.loc 1 542 12
 1325 00e6 0023     		movs	r3, #0
 1326              	.L55:
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1327              		.loc 1 543 1
 1328 00e8 1846     		mov	r0, r3
 1329 00ea 1837     		adds	r7, r7, #24
 1330              		.cfi_def_cfa_offset 8
 1331 00ec BD46     		mov	sp, r7
 1332              		.cfi_def_cfa_register 13
 1333              		@ sp needed
 1334 00ee 80BD     		pop	{r7, pc}
 1335              	.L63:
 1336              		.align	2
 1337              	.L62:
 1338 00f0 00000240 		.word	1073872896
 1339              		.cfi_endproc
 1340              	.LFE127:
 1342              		.section	.text.hal_dma_start_interrupt,"ax",%progbits
 1343              		.align	1
 1344              		.global	hal_dma_start_interrupt
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1348              		.fpu softvfp
 1350              	hal_dma_start_interrupt:
 1351              	.LFB128:
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      start transfering amounts of data by interrupt method,the function is non-blocking
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structrue
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  src_addr: the source memory buffer address
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dst_addr: the destination memory buffer address
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  length: the number of data to be transferred from source to destination
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  p_irq: device interrupt callback function structure
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   error_handle: channel error interrupt handler pointer
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   half_finish_handle: channel half transfer finish interrupt handler pointer
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   full_finish_handle: channel full transfer finish interrupt handler pointer
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_start_interrupt(hal_dma_dev_struct *dma_dev, uint32_t src_addr, \
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                                 uint32_t dst_addr, uint16_t length, \
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                                 hal_dma_irq_struct *p_irq)
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1352              		.loc 1 562 1
 1353              		.cfi_startproc
 1354              		@ args = 4, pretend = 0, frame = 16
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356 0000 80B5     		push	{r7, lr}
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 84B0     		sub	sp, sp, #16
 1361              		.cfi_def_cfa_offset 24
 1362 0004 00AF     		add	r7, sp, #0
 1363              		.cfi_def_cfa_register 7
 1364 0006 F860     		str	r0, [r7, #12]
 1365 0008 B960     		str	r1, [r7, #8]
 1366 000a 7A60     		str	r2, [r7, #4]
 1367 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check the DMA pointer address and the number length parameter */
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if((NULL == dma_dev) || (0 == length)) {
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dma_dev] and [length] value is invalid");
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check src_addr parameter */
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(0 == (src_addr & _DEV_VALID_ADDRESS)) {
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [src_addr] value is invalid");
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check dst_addr parameter */
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(0 == (dst_addr & _DEV_VALID_ADDRESS)) {
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("parameter [dst_addr] value is invalid");
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* lock DMA */
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     HAL_LOCK(dma_dev);
 1368              		.loc 1 583 5
 1369 000e FB68     		ldr	r3, [r7, #12]
 1370 0010 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1371 0012 012B     		cmp	r3, #1
 1372 0014 02D1     		bne	.L65
 1373              		.loc 1 583 5 is_stmt 0 discriminator 1
 1374 0016 6FF00103 		mvn	r3, #1
 1375 001a 95E0     		b	.L66
 1376              	.L65:
 1377              		.loc 1 583 5 discriminator 2
 1378 001c FB68     		ldr	r3, [r7, #12]
 1379 001e 0122     		movs	r2, #1
 1380 0020 1A76     		strb	r2, [r3, #24]
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_STATE_READY == dma_dev->state) {
 1381              		.loc 1 585 38 is_stmt 1 discriminator 2
 1382 0022 FB68     		ldr	r3, [r7, #12]
 1383 0024 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1384              		.loc 1 585 7 discriminator 2
 1385 0026 052B     		cmp	r3, #5
 1386 0028 40F08980 		bne	.L67
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->state = HAL_DMA_STATE_BUSY;
 1387              		.loc 1 587 24
 1388 002c FB68     		ldr	r3, [r7, #12]
 1389 002e 0222     		movs	r2, #2
 1390 0030 9A74     		strb	r2, [r3, #18]
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->error_state = HAL_DMA_ERROR_NONE;
 1391              		.loc 1 588 30
 1392 0032 FB68     		ldr	r3, [r7, #12]
 1393 0034 0022     		movs	r2, #0
 1394 0036 5A74     		strb	r2, [r3, #17]
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* set the handler pointer  */
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_channel_disable(dma_dev->channel);
 1395              		.loc 1 590 9
 1396 0038 FB68     		ldr	r3, [r7, #12]
 1397 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1398 003c 1846     		mov	r0, r3
 1399 003e FFF7FEFF 		bl	hals_dma_channel_disable
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* set the handler pointer  */
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(NULL != p_irq) {
 1400              		.loc 1 592 11
 1401 0042 BB69     		ldr	r3, [r7, #24]
 1402 0044 002B     		cmp	r3, #0
 1403 0046 0BD0     		beq	.L68
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->dma_irq.error_handle = p_irq->error_handle;
 1404              		.loc 1 593 50
 1405 0048 BB69     		ldr	r3, [r7, #24]
 1406 004a 1A68     		ldr	r2, [r3]
 1407              		.loc 1 593 43
 1408 004c FB68     		ldr	r3, [r7, #12]
 1409 004e 5A60     		str	r2, [r3, #4]
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->dma_irq.full_finish_handle = p_irq->full_finish_handle;
 1410              		.loc 1 594 56
 1411 0050 BB69     		ldr	r3, [r7, #24]
 1412 0052 9A68     		ldr	r2, [r3, #8]
 1413              		.loc 1 594 49
 1414 0054 FB68     		ldr	r3, [r7, #12]
 1415 0056 DA60     		str	r2, [r3, #12]
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             dma_dev->dma_irq.half_finish_handle = p_irq->half_finish_handle;
 1416              		.loc 1 595 56
 1417 0058 BB69     		ldr	r3, [r7, #24]
 1418 005a 5A68     		ldr	r2, [r3, #4]
 1419              		.loc 1 595 49
 1420 005c FB68     		ldr	r3, [r7, #12]
 1421 005e 9A60     		str	r2, [r3, #8]
 1422              	.L68:
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* enable the channel error interrupt */
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(NULL != dma_dev->dma_irq.error_handle) {
 1423              		.loc 1 599 36
 1424 0060 FB68     		ldr	r3, [r7, #12]
 1425 0062 5B68     		ldr	r3, [r3, #4]
 1426              		.loc 1 599 11
 1427 0064 002B     		cmp	r3, #0
 1428 0066 06D0     		beq	.L69
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_enable(dma_dev->channel, DMA_INT_ERR);
 1429              		.loc 1 600 13
 1430 0068 FB68     		ldr	r3, [r7, #12]
 1431 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 006c 0821     		movs	r1, #8
 1433 006e 1846     		mov	r0, r3
 1434 0070 FFF7FEFF 		bl	hals_dma_interrupt_enable
 1435 0074 05E0     		b	.L70
 1436              	.L69:
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         } else {
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_ERR);
 1437              		.loc 1 602 13
 1438 0076 FB68     		ldr	r3, [r7, #12]
 1439 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1440 007a 0821     		movs	r1, #8
 1441 007c 1846     		mov	r0, r3
 1442 007e FFF7FEFF 		bl	hals_dma_interrupt_disable
 1443              	.L70:
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_DEBUGE("parameter [error_handle] value is invalid");
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* set the full finish handler pointer and enable the channel full transfer finish  interru
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(NULL != dma_dev->dma_irq.full_finish_handle) {
 1444              		.loc 1 608 36
 1445 0082 FB68     		ldr	r3, [r7, #12]
 1446 0084 DB68     		ldr	r3, [r3, #12]
 1447              		.loc 1 608 11
 1448 0086 002B     		cmp	r3, #0
 1449 0088 06D0     		beq	.L71
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_enable(dma_dev->channel, DMA_INT_FTF);
 1450              		.loc 1 609 13
 1451 008a FB68     		ldr	r3, [r7, #12]
 1452 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 008e 0221     		movs	r1, #2
 1454 0090 1846     		mov	r0, r3
 1455 0092 FFF7FEFF 		bl	hals_dma_interrupt_enable
 1456 0096 05E0     		b	.L72
 1457              	.L71:
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         } else {
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_FTF);
 1458              		.loc 1 611 13
 1459 0098 FB68     		ldr	r3, [r7, #12]
 1460 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 009c 0221     		movs	r1, #2
 1462 009e 1846     		mov	r0, r3
 1463 00a0 FFF7FEFF 		bl	hals_dma_interrupt_disable
 1464              	.L72:
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_DEBUGE("parameter [full_finish_handle] value is invalid");
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* set the half finish handler pointer and enable the channel half transfer finish interrup
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(NULL != dma_dev->dma_irq.half_finish_handle) {
 1465              		.loc 1 617 36
 1466 00a4 FB68     		ldr	r3, [r7, #12]
 1467 00a6 9B68     		ldr	r3, [r3, #8]
 1468              		.loc 1 617 11
 1469 00a8 002B     		cmp	r3, #0
 1470 00aa 06D0     		beq	.L73
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_enable(dma_dev->channel, DMA_INT_HTF);
 1471              		.loc 1 618 13
 1472 00ac FB68     		ldr	r3, [r7, #12]
 1473 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1474 00b0 0421     		movs	r1, #4
 1475 00b2 1846     		mov	r0, r3
 1476 00b4 FFF7FEFF 		bl	hals_dma_interrupt_enable
 1477 00b8 05E0     		b	.L74
 1478              	.L73:
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         } else {
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_HTF);
 1479              		.loc 1 620 13
 1480 00ba FB68     		ldr	r3, [r7, #12]
 1481 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 00be 0421     		movs	r1, #4
 1483 00c0 1846     		mov	r0, r3
 1484 00c2 FFF7FEFF 		bl	hals_dma_interrupt_disable
 1485              	.L74:
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_DEBUGE("parameter [half_finish_handle] value is invalid");
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* clear all flags */
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_flag_clear(dma_dev->channel, DMA_INTF_GIF);
 1486              		.loc 1 626 9
 1487 00c6 FB68     		ldr	r3, [r7, #12]
 1488 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 00ca 0121     		movs	r1, #1
 1490 00cc 1846     		mov	r0, r3
 1491 00ce FFF7FEFF 		bl	hals_dma_flag_clear
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* check the direction of the data transfer */
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if(RESET != (DMA_CHCTL(dma_dev->channel) & DMA_CHXCTL_DIR)) {
 1492              		.loc 1 629 22
 1493 00d2 FB68     		ldr	r3, [r7, #12]
 1494 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 00d6 1A46     		mov	r2, r3
 1496 00d8 1346     		mov	r3, r2
 1497 00da 9B00     		lsls	r3, r3, #2
 1498 00dc 1344     		add	r3, r3, r2
 1499 00de 9B00     		lsls	r3, r3, #2
 1500 00e0 1A46     		mov	r2, r3
 1501 00e2 1B4B     		ldr	r3, .L78
 1502 00e4 1344     		add	r3, r3, r2
 1503 00e6 1B68     		ldr	r3, [r3]
 1504              		.loc 1 629 50
 1505 00e8 03F01003 		and	r3, r3, #16
 1506              		.loc 1 629 11
 1507 00ec 002B     		cmp	r3, #0
 1508 00ee 0CD0     		beq	.L75
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             /* configure the transfer destination and source address */
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_memory_address_config(dma_dev->channel, src_addr);
 1509              		.loc 1 631 13
 1510 00f0 FB68     		ldr	r3, [r7, #12]
 1511 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1512 00f4 B968     		ldr	r1, [r7, #8]
 1513 00f6 1846     		mov	r0, r3
 1514 00f8 FFF7FEFF 		bl	hals_dma_memory_address_config
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_periph_address_config(dma_dev->channel, dst_addr);
 1515              		.loc 1 632 13
 1516 00fc FB68     		ldr	r3, [r7, #12]
 1517 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1518 0100 7968     		ldr	r1, [r7, #4]
 1519 0102 1846     		mov	r0, r3
 1520 0104 FFF7FEFF 		bl	hals_dma_periph_address_config
 1521 0108 0BE0     		b	.L76
 1522              	.L75:
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         } else {
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             /* configure the transfer destination and source address */
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_memory_address_config(dma_dev->channel, dst_addr);
 1523              		.loc 1 635 13
 1524 010a FB68     		ldr	r3, [r7, #12]
 1525 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1526 010e 7968     		ldr	r1, [r7, #4]
 1527 0110 1846     		mov	r0, r3
 1528 0112 FFF7FEFF 		bl	hals_dma_memory_address_config
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             hals_dma_periph_address_config(dma_dev->channel, src_addr);
 1529              		.loc 1 636 13
 1530 0116 FB68     		ldr	r3, [r7, #12]
 1531 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1532 011a B968     		ldr	r1, [r7, #8]
 1533 011c 1846     		mov	r0, r3
 1534 011e FFF7FEFF 		bl	hals_dma_periph_address_config
 1535              	.L76:
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* configure the transfer number */
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_transfer_number_config(dma_dev->channel, length);
 1536              		.loc 1 639 9
 1537 0122 FB68     		ldr	r3, [r7, #12]
 1538 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1539 0126 7A88     		ldrh	r2, [r7, #2]
 1540 0128 1146     		mov	r1, r2
 1541 012a 1846     		mov	r0, r3
 1542 012c FFF7FEFF 		bl	hals_dma_transfer_number_config
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* enable DMA channel */
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_channel_enable(dma_dev->channel);
 1543              		.loc 1 642 9
 1544 0130 FB68     		ldr	r3, [r7, #12]
 1545 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 0134 1846     		mov	r0, r3
 1547 0136 FFF7FEFF 		bl	hals_dma_channel_enable
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* unlock DMA */
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_BUSY;
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1548              		.loc 1 649 12
 1549 013a 0023     		movs	r3, #0
 1550 013c 04E0     		b	.L66
 1551              	.L67:
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_BUSY;
 1552              		.loc 1 645 9
 1553 013e FB68     		ldr	r3, [r7, #12]
 1554 0140 0022     		movs	r2, #0
 1555 0142 1A76     		strb	r2, [r3, #24]
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 1556              		.loc 1 646 16
 1557 0144 6FF00203 		mvn	r3, #2
 1558              	.L66:
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1559              		.loc 1 650 1
 1560 0148 1846     		mov	r0, r3
 1561 014a 1037     		adds	r7, r7, #16
 1562              		.cfi_def_cfa_offset 8
 1563 014c BD46     		mov	sp, r7
 1564              		.cfi_def_cfa_register 13
 1565              		@ sp needed
 1566 014e 80BD     		pop	{r7, pc}
 1567              	.L79:
 1568              		.align	2
 1569              	.L78:
 1570 0150 08000240 		.word	1073872904
 1571              		.cfi_endproc
 1572              	.LFE128:
 1574              		.section	.text.hal_dma_stop_interrupt,"ax",%progbits
 1575              		.align	1
 1576              		.global	hal_dma_stop_interrupt
 1577              		.syntax unified
 1578              		.thumb
 1579              		.thumb_func
 1580              		.fpu softvfp
 1582              	hal_dma_stop_interrupt:
 1583              	.LFB129:
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      stop transfering amounts of data by interrupt method,the function is non-blocking
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_dev: DMA device information structrue
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                   the structure parameters altering is automatically configured by core
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     error code: HAL_ERR_ADDRESS, HAL_ERR_NONE, HAL_ERR_ALREADY_DONE \
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 details refer to gd32f3x0_hal.h
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_stop_interrupt(hal_dma_dev_struct *dma_dev)
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1584              		.loc 1 661 1
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 8
 1587              		@ frame_needed = 1, uses_anonymous_args = 0
 1588 0000 80B5     		push	{r7, lr}
 1589              		.cfi_def_cfa_offset 8
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 82B0     		sub	sp, sp, #8
 1593              		.cfi_def_cfa_offset 16
 1594 0004 00AF     		add	r7, sp, #0
 1595              		.cfi_def_cfa_register 7
 1596 0006 7860     		str	r0, [r7, #4]
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #if (1 == HAL_PARAMETER_CHECK)
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* check DMA pointer address */
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(NULL == dma_dev) {
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_DEBUGE("pointer [dma_dev] address is invalid");
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ADDRESS;
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(HAL_DMA_STATE_BUSY != dma_dev->state) {
 1597              		.loc 1 670 37
 1598 0008 7B68     		ldr	r3, [r7, #4]
 1599 000a 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1600              		.loc 1 670 7
 1601 000c 022B     		cmp	r3, #2
 1602 000e 08D0     		beq	.L81
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* no transfer ongoing */
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->error_state = HAL_DMA_ERROR_NOTRANSFER;
 1603              		.loc 1 672 30
 1604 0010 7B68     		ldr	r3, [r7, #4]
 1605 0012 0222     		movs	r2, #2
 1606 0014 5A74     		strb	r2, [r3, #17]
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* unlock DMA */
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 1607              		.loc 1 674 9
 1608 0016 7B68     		ldr	r3, [r7, #4]
 1609 0018 0022     		movs	r2, #0
 1610 001a 1A76     		strb	r2, [r3, #24]
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return HAL_ERR_ALREADY_DONE;
 1611              		.loc 1 676 16
 1612 001c 4FF0FF33 		mov	r3, #-1
 1613 0020 2AE0     		b	.L82
 1614              	.L81:
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* lock DMA */
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_LOCK(dma_dev);
 1615              		.loc 1 679 9
 1616 0022 7B68     		ldr	r3, [r7, #4]
 1617 0024 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1618 0026 012B     		cmp	r3, #1
 1619 0028 02D1     		bne	.L83
 1620              		.loc 1 679 9 is_stmt 0 discriminator 1
 1621 002a 6FF00103 		mvn	r3, #1
 1622 002e 23E0     		b	.L82
 1623              	.L83:
 1624              		.loc 1 679 9 discriminator 2
 1625 0030 7B68     		ldr	r3, [r7, #4]
 1626 0032 0122     		movs	r2, #1
 1627 0034 1A76     		strb	r2, [r3, #24]
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* disable DMA channel */
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_channel_disable(dma_dev->channel);
 1628              		.loc 1 681 9 is_stmt 1 discriminator 2
 1629 0036 7B68     		ldr	r3, [r7, #4]
 1630 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1631 003a 1846     		mov	r0, r3
 1632 003c FFF7FEFF 		bl	hals_dma_channel_disable
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* disable DMA IT */
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_interrupt_disable(dma_dev->channel, DMA_INT_ERR | \
 1633              		.loc 1 683 9 discriminator 2
 1634 0040 7B68     		ldr	r3, [r7, #4]
 1635 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 0044 0E21     		movs	r1, #14
 1637 0046 1846     		mov	r0, r3
 1638 0048 FFF7FEFF 		bl	hals_dma_interrupt_disable
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                                    DMA_INT_HTF | DMA_INT_FTF);
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->state = HAL_DMA_STATE_READY;
 1639              		.loc 1 685 24 discriminator 2
 1640 004c 7B68     		ldr	r3, [r7, #4]
 1641 004e 0522     		movs	r2, #5
 1642 0050 9A74     		strb	r2, [r3, #18]
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* reset the interrupt handle */
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->dma_irq.error_handle = NULL;
 1643              		.loc 1 687 39 discriminator 2
 1644 0052 7B68     		ldr	r3, [r7, #4]
 1645 0054 0022     		movs	r2, #0
 1646 0056 5A60     		str	r2, [r3, #4]
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->dma_irq.full_finish_handle = NULL;
 1647              		.loc 1 688 45 discriminator 2
 1648 0058 7B68     		ldr	r3, [r7, #4]
 1649 005a 0022     		movs	r2, #0
 1650 005c DA60     		str	r2, [r3, #12]
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         dma_dev->dma_irq.half_finish_handle = NULL;
 1651              		.loc 1 689 45 discriminator 2
 1652 005e 7B68     		ldr	r3, [r7, #4]
 1653 0060 0022     		movs	r2, #0
 1654 0062 9A60     		str	r2, [r3, #8]
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* clear all flags */
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         hals_dma_flag_clear(dma_dev->channel, DMA_INTF_GIF);
 1655              		.loc 1 691 9 discriminator 2
 1656 0064 7B68     		ldr	r3, [r7, #4]
 1657 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1658 0068 0121     		movs	r1, #1
 1659 006a 1846     		mov	r0, r3
 1660 006c FFF7FEFF 		bl	hals_dma_flag_clear
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* unlock DMA */
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         HAL_UNLOCK(dma_dev);
 1661              		.loc 1 693 9 discriminator 2
 1662 0070 7B68     		ldr	r3, [r7, #4]
 1663 0072 0022     		movs	r2, #0
 1664 0074 1A76     		strb	r2, [r3, #24]
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1665              		.loc 1 696 12 discriminator 2
 1666 0076 0023     		movs	r3, #0
 1667              	.L82:
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1668              		.loc 1 697 1
 1669 0078 1846     		mov	r0, r3
 1670 007a 0837     		adds	r7, r7, #8
 1671              		.cfi_def_cfa_offset 8
 1672 007c BD46     		mov	sp, r7
 1673              		.cfi_def_cfa_register 13
 1674              		@ sp needed
 1675 007e 80BD     		pop	{r7, pc}
 1676              		.cfi_endproc
 1677              	.LFE129:
 1679              		.section	.text.hal_dma_channel_remap_enable,"ax",%progbits
 1680              		.align	1
 1681              		.global	hal_dma_channel_remap_enable
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1685              		.fpu softvfp
 1687              	hal_dma_channel_remap_enable:
 1688              	.LFB130:
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable the DMA channels remapping
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_remap: specify the DMA channels to remap
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 one or more parameters can be selected which are shown as below:
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_TIMER16_CH0_UP: remap TIMER16 channel0 and UP DMA requests to channel1(
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_TIMER15_CH0_UP: remap TIMER15 channel2 and UP DMA requests to channel3(
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_USART0_RX: remap USART0 Rx DMA request to channel4(default channel2)
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_USART0_TX: remap USART0 Tx DMA request to channel3(default channel1)
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_ADC: remap ADC DMA requests from channel0 to channel1
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     int32_t: HAL_ERR_VAL, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_channel_remap_enable(uint32_t dma_remap){
 1689              		.loc 1 711 57
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 8
 1692              		@ frame_needed = 1, uses_anonymous_args = 0
 1693              		@ link register save eliminated.
 1694 0000 80B4     		push	{r7}
 1695              		.cfi_def_cfa_offset 4
 1696              		.cfi_offset 7, -4
 1697 0002 83B0     		sub	sp, sp, #12
 1698              		.cfi_def_cfa_offset 16
 1699 0004 00AF     		add	r7, sp, #0
 1700              		.cfi_def_cfa_register 7
 1701 0006 7860     		str	r0, [r7, #4]
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     #if (1 == HAL_PARAMETER_CHECK)
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* check syscfg_dma_remap parameter */
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if((DMA_REMAP_TIMER16_CH0_UP != dma_remap)  && \
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_TIMER15_CH0_UP != dma_remap)  && \
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_USART0_RX != dma_remap) && \
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_USART0_TX != dma_remap) && \
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_ADC != dma_remap)){
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_DEBUGE("parameter [dma_remap] value is invalid");
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             return HAL_ERR_VAL;
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     #endif /* 1 == HAL_PARAMETER_CHECK */
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     SYSCFG_CFG0 |= dma_remap;
 1702              		.loc 1 725 17
 1703 0008 054B     		ldr	r3, .L86
 1704 000a 1A68     		ldr	r2, [r3]
 1705 000c 0449     		ldr	r1, .L86
 1706 000e 7B68     		ldr	r3, [r7, #4]
 1707 0010 1343     		orrs	r3, r3, r2
 1708 0012 0B60     		str	r3, [r1]
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1709              		.loc 1 727 12
 1710 0014 0023     		movs	r3, #0
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1711              		.loc 1 728 1
 1712 0016 1846     		mov	r0, r3
 1713 0018 0C37     		adds	r7, r7, #12
 1714              		.cfi_def_cfa_offset 4
 1715 001a BD46     		mov	sp, r7
 1716              		.cfi_def_cfa_register 13
 1717              		@ sp needed
 1718 001c 80BC     		pop	{r7}
 1719              		.cfi_restore 7
 1720              		.cfi_def_cfa_offset 0
 1721 001e 7047     		bx	lr
 1722              	.L87:
 1723              		.align	2
 1724              	.L86:
 1725 0020 00000140 		.word	1073807360
 1726              		.cfi_endproc
 1727              	.LFE130:
 1729              		.section	.text.hal_dma_channel_remap_disable,"ax",%progbits
 1730              		.align	1
 1731              		.global	hal_dma_channel_remap_disable
 1732              		.syntax unified
 1733              		.thumb
 1734              		.thumb_func
 1735              		.fpu softvfp
 1737              	hal_dma_channel_remap_disable:
 1738              	.LFB131:
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable the DMA channels remapping
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  dma_remap: specify the DMA channels to remap
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 one or more parameters can be selected which are shown as below:
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_TIMER16_CH0_UP: remap TIMER16 channel0 and UP DMA requests to channel1(
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_TIMER15_CH0_UP: remap TIMER15 channel2 and UP DMA requests to channel3(
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_USART0_RX: remap USART0 Rx DMA request to channel4(default channel2)
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_USART0_TX: remap USART0 Tx DMA request to channel3(default channel1)
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_REMAP_ADC: remap ADC DMA requests from channel0 to channel1
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     int32_t: HAL_ERR_VAL, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** int32_t hal_dma_channel_remap_disable(uint32_t dma_remap){
 1739              		.loc 1 742 58
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 8
 1742              		@ frame_needed = 1, uses_anonymous_args = 0
 1743              		@ link register save eliminated.
 1744 0000 80B4     		push	{r7}
 1745              		.cfi_def_cfa_offset 4
 1746              		.cfi_offset 7, -4
 1747 0002 83B0     		sub	sp, sp, #12
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
 1751 0006 7860     		str	r0, [r7, #4]
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     #if (1 == HAL_PARAMETER_CHECK)
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         /* check syscfg_dma_remap parameter */
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         if((DMA_REMAP_TIMER16_CH0_UP != dma_remap)  && \
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_TIMER15_CH0_UP != dma_remap)  && \
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_USART0_RX != dma_remap) && \
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_USART0_TX != dma_remap) && \
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         (DMA_REMAP_ADC != dma_remap)){
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             HAL_DEBUGE("parameter [dma_remap] value is invalid");
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****             return HAL_ERR_VAL;
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         }
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     #endif /* 1 == HAL_PARAMETER_CHECK */
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     SYSCFG_CFG0 &= ~dma_remap;
 1752              		.loc 1 756 17
 1753 0008 064B     		ldr	r3, .L90
 1754 000a 1A68     		ldr	r2, [r3]
 1755              		.loc 1 756 20
 1756 000c 7B68     		ldr	r3, [r7, #4]
 1757 000e DB43     		mvns	r3, r3
 1758              		.loc 1 756 17
 1759 0010 0449     		ldr	r1, .L90
 1760 0012 1340     		ands	r3, r3, r2
 1761 0014 0B60     		str	r3, [r1]
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return HAL_ERR_NONE;
 1762              		.loc 1 758 12
 1763 0016 0023     		movs	r3, #0
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1764              		.loc 1 759 1
 1765 0018 1846     		mov	r0, r3
 1766 001a 0C37     		adds	r7, r7, #12
 1767              		.cfi_def_cfa_offset 4
 1768 001c BD46     		mov	sp, r7
 1769              		.cfi_def_cfa_register 13
 1770              		@ sp needed
 1771 001e 80BC     		pop	{r7}
 1772              		.cfi_restore 7
 1773              		.cfi_def_cfa_offset 0
 1774 0020 7047     		bx	lr
 1775              	.L91:
 1776 0022 00BF     		.align	2
 1777              	.L90:
 1778 0024 00000140 		.word	1073807360
 1779              		.cfi_endproc
 1780              	.LFE131:
 1782              		.section	.text.hals_dma_circulation_enable,"ax",%progbits
 1783              		.align	1
 1784              		.global	hals_dma_circulation_enable
 1785              		.syntax unified
 1786              		.thumb
 1787              		.thumb_func
 1788              		.fpu softvfp
 1790              	hals_dma_circulation_enable:
 1791              	.LFB132:
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable DMA circulation mode
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_circulation_enable(dma_channel_enum channelx)
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1792              		.loc 1 770 1
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 1, uses_anonymous_args = 0
 1796              		@ link register save eliminated.
 1797 0000 80B4     		push	{r7}
 1798              		.cfi_def_cfa_offset 4
 1799              		.cfi_offset 7, -4
 1800 0002 83B0     		sub	sp, sp, #12
 1801              		.cfi_def_cfa_offset 16
 1802 0004 00AF     		add	r7, sp, #0
 1803              		.cfi_def_cfa_register 7
 1804 0006 0346     		mov	r3, r0
 1805 0008 FB71     		strb	r3, [r7, #7]
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) |= DMA_CHXCTL_CMEN;
 1806              		.loc 1 771 25
 1807 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1808 000c 1346     		mov	r3, r2
 1809 000e 9B00     		lsls	r3, r3, #2
 1810 0010 1344     		add	r3, r3, r2
 1811 0012 9B00     		lsls	r3, r3, #2
 1812 0014 1A46     		mov	r2, r3
 1813 0016 0A4B     		ldr	r3, .L93
 1814 0018 1344     		add	r3, r3, r2
 1815 001a 1968     		ldr	r1, [r3]
 1816 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1817 001e 1346     		mov	r3, r2
 1818 0020 9B00     		lsls	r3, r3, #2
 1819 0022 1344     		add	r3, r3, r2
 1820 0024 9B00     		lsls	r3, r3, #2
 1821 0026 1A46     		mov	r2, r3
 1822 0028 054B     		ldr	r3, .L93
 1823 002a 1344     		add	r3, r3, r2
 1824 002c 1A46     		mov	r2, r3
 1825 002e 41F02003 		orr	r3, r1, #32
 1826 0032 1360     		str	r3, [r2]
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1827              		.loc 1 772 1
 1828 0034 00BF     		nop
 1829 0036 0C37     		adds	r7, r7, #12
 1830              		.cfi_def_cfa_offset 4
 1831 0038 BD46     		mov	sp, r7
 1832              		.cfi_def_cfa_register 13
 1833              		@ sp needed
 1834 003a 80BC     		pop	{r7}
 1835              		.cfi_restore 7
 1836              		.cfi_def_cfa_offset 0
 1837 003c 7047     		bx	lr
 1838              	.L94:
 1839 003e 00BF     		.align	2
 1840              	.L93:
 1841 0040 08000240 		.word	1073872904
 1842              		.cfi_endproc
 1843              	.LFE132:
 1845              		.section	.text.hals_dma_circulation_disable,"ax",%progbits
 1846              		.align	1
 1847              		.global	hals_dma_circulation_disable
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1851              		.fpu softvfp
 1853              	hals_dma_circulation_disable:
 1854              	.LFB133:
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable DMA circulation mode
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_circulation_disable(dma_channel_enum channelx)
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1855              		.loc 1 783 1
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 8
 1858              		@ frame_needed = 1, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
 1860 0000 80B4     		push	{r7}
 1861              		.cfi_def_cfa_offset 4
 1862              		.cfi_offset 7, -4
 1863 0002 83B0     		sub	sp, sp, #12
 1864              		.cfi_def_cfa_offset 16
 1865 0004 00AF     		add	r7, sp, #0
 1866              		.cfi_def_cfa_register 7
 1867 0006 0346     		mov	r3, r0
 1868 0008 FB71     		strb	r3, [r7, #7]
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) &= ~DMA_CHXCTL_CMEN;
 1869              		.loc 1 784 25
 1870 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1871 000c 1346     		mov	r3, r2
 1872 000e 9B00     		lsls	r3, r3, #2
 1873 0010 1344     		add	r3, r3, r2
 1874 0012 9B00     		lsls	r3, r3, #2
 1875 0014 1A46     		mov	r2, r3
 1876 0016 0A4B     		ldr	r3, .L96
 1877 0018 1344     		add	r3, r3, r2
 1878 001a 1968     		ldr	r1, [r3]
 1879 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1880 001e 1346     		mov	r3, r2
 1881 0020 9B00     		lsls	r3, r3, #2
 1882 0022 1344     		add	r3, r3, r2
 1883 0024 9B00     		lsls	r3, r3, #2
 1884 0026 1A46     		mov	r2, r3
 1885 0028 054B     		ldr	r3, .L96
 1886 002a 1344     		add	r3, r3, r2
 1887 002c 1A46     		mov	r2, r3
 1888 002e 21F02003 		bic	r3, r1, #32
 1889 0032 1360     		str	r3, [r2]
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1890              		.loc 1 785 1
 1891 0034 00BF     		nop
 1892 0036 0C37     		adds	r7, r7, #12
 1893              		.cfi_def_cfa_offset 4
 1894 0038 BD46     		mov	sp, r7
 1895              		.cfi_def_cfa_register 13
 1896              		@ sp needed
 1897 003a 80BC     		pop	{r7}
 1898              		.cfi_restore 7
 1899              		.cfi_def_cfa_offset 0
 1900 003c 7047     		bx	lr
 1901              	.L97:
 1902 003e 00BF     		.align	2
 1903              	.L96:
 1904 0040 08000240 		.word	1073872904
 1905              		.cfi_endproc
 1906              	.LFE133:
 1908              		.section	.text.hals_dma_memory_to_memory_enable,"ax",%progbits
 1909              		.align	1
 1910              		.global	hals_dma_memory_to_memory_enable
 1911              		.syntax unified
 1912              		.thumb
 1913              		.thumb_func
 1914              		.fpu softvfp
 1916              	hals_dma_memory_to_memory_enable:
 1917              	.LFB134:
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable memory to memory mode
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_memory_to_memory_enable(dma_channel_enum channelx)
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1918              		.loc 1 796 1
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 8
 1921              		@ frame_needed = 1, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 1923 0000 80B4     		push	{r7}
 1924              		.cfi_def_cfa_offset 4
 1925              		.cfi_offset 7, -4
 1926 0002 83B0     		sub	sp, sp, #12
 1927              		.cfi_def_cfa_offset 16
 1928 0004 00AF     		add	r7, sp, #0
 1929              		.cfi_def_cfa_register 7
 1930 0006 0346     		mov	r3, r0
 1931 0008 FB71     		strb	r3, [r7, #7]
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) |= DMA_CHXCTL_M2M;
 1932              		.loc 1 797 25
 1933 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1934 000c 1346     		mov	r3, r2
 1935 000e 9B00     		lsls	r3, r3, #2
 1936 0010 1344     		add	r3, r3, r2
 1937 0012 9B00     		lsls	r3, r3, #2
 1938 0014 1A46     		mov	r2, r3
 1939 0016 0A4B     		ldr	r3, .L99
 1940 0018 1344     		add	r3, r3, r2
 1941 001a 1968     		ldr	r1, [r3]
 1942 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1943 001e 1346     		mov	r3, r2
 1944 0020 9B00     		lsls	r3, r3, #2
 1945 0022 1344     		add	r3, r3, r2
 1946 0024 9B00     		lsls	r3, r3, #2
 1947 0026 1A46     		mov	r2, r3
 1948 0028 054B     		ldr	r3, .L99
 1949 002a 1344     		add	r3, r3, r2
 1950 002c 1A46     		mov	r2, r3
 1951 002e 41F48043 		orr	r3, r1, #16384
 1952 0032 1360     		str	r3, [r2]
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 1953              		.loc 1 798 1
 1954 0034 00BF     		nop
 1955 0036 0C37     		adds	r7, r7, #12
 1956              		.cfi_def_cfa_offset 4
 1957 0038 BD46     		mov	sp, r7
 1958              		.cfi_def_cfa_register 13
 1959              		@ sp needed
 1960 003a 80BC     		pop	{r7}
 1961              		.cfi_restore 7
 1962              		.cfi_def_cfa_offset 0
 1963 003c 7047     		bx	lr
 1964              	.L100:
 1965 003e 00BF     		.align	2
 1966              	.L99:
 1967 0040 08000240 		.word	1073872904
 1968              		.cfi_endproc
 1969              	.LFE134:
 1971              		.section	.text.hals_dma_memory_to_memory_disable,"ax",%progbits
 1972              		.align	1
 1973              		.global	hals_dma_memory_to_memory_disable
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1977              		.fpu softvfp
 1979              	hals_dma_memory_to_memory_disable:
 1980              	.LFB135:
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable memory to memory mode
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_memory_to_memory_disable(dma_channel_enum channelx)
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 1981              		.loc 1 809 1
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 8
 1984              		@ frame_needed = 1, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
 1986 0000 80B4     		push	{r7}
 1987              		.cfi_def_cfa_offset 4
 1988              		.cfi_offset 7, -4
 1989 0002 83B0     		sub	sp, sp, #12
 1990              		.cfi_def_cfa_offset 16
 1991 0004 00AF     		add	r7, sp, #0
 1992              		.cfi_def_cfa_register 7
 1993 0006 0346     		mov	r3, r0
 1994 0008 FB71     		strb	r3, [r7, #7]
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) &= ~DMA_CHXCTL_M2M;
 1995              		.loc 1 810 25
 1996 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1997 000c 1346     		mov	r3, r2
 1998 000e 9B00     		lsls	r3, r3, #2
 1999 0010 1344     		add	r3, r3, r2
 2000 0012 9B00     		lsls	r3, r3, #2
 2001 0014 1A46     		mov	r2, r3
 2002 0016 0A4B     		ldr	r3, .L102
 2003 0018 1344     		add	r3, r3, r2
 2004 001a 1968     		ldr	r1, [r3]
 2005 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2006 001e 1346     		mov	r3, r2
 2007 0020 9B00     		lsls	r3, r3, #2
 2008 0022 1344     		add	r3, r3, r2
 2009 0024 9B00     		lsls	r3, r3, #2
 2010 0026 1A46     		mov	r2, r3
 2011 0028 054B     		ldr	r3, .L102
 2012 002a 1344     		add	r3, r3, r2
 2013 002c 1A46     		mov	r2, r3
 2014 002e 21F48043 		bic	r3, r1, #16384
 2015 0032 1360     		str	r3, [r2]
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2016              		.loc 1 811 1
 2017 0034 00BF     		nop
 2018 0036 0C37     		adds	r7, r7, #12
 2019              		.cfi_def_cfa_offset 4
 2020 0038 BD46     		mov	sp, r7
 2021              		.cfi_def_cfa_register 13
 2022              		@ sp needed
 2023 003a 80BC     		pop	{r7}
 2024              		.cfi_restore 7
 2025              		.cfi_def_cfa_offset 0
 2026 003c 7047     		bx	lr
 2027              	.L103:
 2028 003e 00BF     		.align	2
 2029              	.L102:
 2030 0040 08000240 		.word	1073872904
 2031              		.cfi_endproc
 2032              	.LFE135:
 2034              		.section	.text.hals_dma_channel_enable,"ax",%progbits
 2035              		.align	1
 2036              		.global	hals_dma_channel_enable
 2037              		.syntax unified
 2038              		.thumb
 2039              		.thumb_func
 2040              		.fpu softvfp
 2042              	hals_dma_channel_enable:
 2043              	.LFB136:
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable DMA channel
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_channel_enable(dma_channel_enum channelx)
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2044              		.loc 1 822 1
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 8
 2047              		@ frame_needed = 1, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049 0000 80B4     		push	{r7}
 2050              		.cfi_def_cfa_offset 4
 2051              		.cfi_offset 7, -4
 2052 0002 83B0     		sub	sp, sp, #12
 2053              		.cfi_def_cfa_offset 16
 2054 0004 00AF     		add	r7, sp, #0
 2055              		.cfi_def_cfa_register 7
 2056 0006 0346     		mov	r3, r0
 2057 0008 FB71     		strb	r3, [r7, #7]
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) |= DMA_CHXCTL_CHEN;
 2058              		.loc 1 823 25
 2059 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2060 000c 1346     		mov	r3, r2
 2061 000e 9B00     		lsls	r3, r3, #2
 2062 0010 1344     		add	r3, r3, r2
 2063 0012 9B00     		lsls	r3, r3, #2
 2064 0014 1A46     		mov	r2, r3
 2065 0016 0A4B     		ldr	r3, .L105
 2066 0018 1344     		add	r3, r3, r2
 2067 001a 1968     		ldr	r1, [r3]
 2068 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2069 001e 1346     		mov	r3, r2
 2070 0020 9B00     		lsls	r3, r3, #2
 2071 0022 1344     		add	r3, r3, r2
 2072 0024 9B00     		lsls	r3, r3, #2
 2073 0026 1A46     		mov	r2, r3
 2074 0028 054B     		ldr	r3, .L105
 2075 002a 1344     		add	r3, r3, r2
 2076 002c 1A46     		mov	r2, r3
 2077 002e 41F00103 		orr	r3, r1, #1
 2078 0032 1360     		str	r3, [r2]
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2079              		.loc 1 824 1
 2080 0034 00BF     		nop
 2081 0036 0C37     		adds	r7, r7, #12
 2082              		.cfi_def_cfa_offset 4
 2083 0038 BD46     		mov	sp, r7
 2084              		.cfi_def_cfa_register 13
 2085              		@ sp needed
 2086 003a 80BC     		pop	{r7}
 2087              		.cfi_restore 7
 2088              		.cfi_def_cfa_offset 0
 2089 003c 7047     		bx	lr
 2090              	.L106:
 2091 003e 00BF     		.align	2
 2092              	.L105:
 2093 0040 08000240 		.word	1073872904
 2094              		.cfi_endproc
 2095              	.LFE136:
 2097              		.section	.text.hals_dma_channel_disable,"ax",%progbits
 2098              		.align	1
 2099              		.global	hals_dma_channel_disable
 2100              		.syntax unified
 2101              		.thumb
 2102              		.thumb_func
 2103              		.fpu softvfp
 2105              	hals_dma_channel_disable:
 2106              	.LFB137:
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable DMA channel
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_channel_disable(dma_channel_enum channelx)
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2107              		.loc 1 835 1
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 8
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112 0000 80B4     		push	{r7}
 2113              		.cfi_def_cfa_offset 4
 2114              		.cfi_offset 7, -4
 2115 0002 83B0     		sub	sp, sp, #12
 2116              		.cfi_def_cfa_offset 16
 2117 0004 00AF     		add	r7, sp, #0
 2118              		.cfi_def_cfa_register 7
 2119 0006 0346     		mov	r3, r0
 2120 0008 FB71     		strb	r3, [r7, #7]
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) &= ~DMA_CHXCTL_CHEN;
 2121              		.loc 1 836 25
 2122 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2123 000c 1346     		mov	r3, r2
 2124 000e 9B00     		lsls	r3, r3, #2
 2125 0010 1344     		add	r3, r3, r2
 2126 0012 9B00     		lsls	r3, r3, #2
 2127 0014 1A46     		mov	r2, r3
 2128 0016 0A4B     		ldr	r3, .L108
 2129 0018 1344     		add	r3, r3, r2
 2130 001a 1968     		ldr	r1, [r3]
 2131 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2132 001e 1346     		mov	r3, r2
 2133 0020 9B00     		lsls	r3, r3, #2
 2134 0022 1344     		add	r3, r3, r2
 2135 0024 9B00     		lsls	r3, r3, #2
 2136 0026 1A46     		mov	r2, r3
 2137 0028 054B     		ldr	r3, .L108
 2138 002a 1344     		add	r3, r3, r2
 2139 002c 1A46     		mov	r2, r3
 2140 002e 21F00103 		bic	r3, r1, #1
 2141 0032 1360     		str	r3, [r2]
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2142              		.loc 1 837 1
 2143 0034 00BF     		nop
 2144 0036 0C37     		adds	r7, r7, #12
 2145              		.cfi_def_cfa_offset 4
 2146 0038 BD46     		mov	sp, r7
 2147              		.cfi_def_cfa_register 13
 2148              		@ sp needed
 2149 003a 80BC     		pop	{r7}
 2150              		.cfi_restore 7
 2151              		.cfi_def_cfa_offset 0
 2152 003c 7047     		bx	lr
 2153              	.L109:
 2154 003e 00BF     		.align	2
 2155              	.L108:
 2156 0040 08000240 		.word	1073872904
 2157              		.cfi_endproc
 2158              	.LFE137:
 2160              		.section	.text.hals_dma_periph_address_config,"ax",%progbits
 2161              		.align	1
 2162              		.global	hals_dma_periph_address_config
 2163              		.syntax unified
 2164              		.thumb
 2165              		.thumb_func
 2166              		.fpu softvfp
 2168              	hals_dma_periph_address_config:
 2169              	.LFB138:
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      set DMA peripheral base address
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set peripheral base address
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  address: peripheral base address
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_periph_address_config(dma_channel_enum channelx, uint32_t address)
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2170              		.loc 1 849 1
 2171              		.cfi_startproc
 2172              		@ args = 0, pretend = 0, frame = 8
 2173              		@ frame_needed = 1, uses_anonymous_args = 0
 2174              		@ link register save eliminated.
 2175 0000 80B4     		push	{r7}
 2176              		.cfi_def_cfa_offset 4
 2177              		.cfi_offset 7, -4
 2178 0002 83B0     		sub	sp, sp, #12
 2179              		.cfi_def_cfa_offset 16
 2180 0004 00AF     		add	r7, sp, #0
 2181              		.cfi_def_cfa_register 7
 2182 0006 0346     		mov	r3, r0
 2183 0008 3960     		str	r1, [r7]
 2184 000a FB71     		strb	r3, [r7, #7]
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHPADDR(channelx) = address;
 2185              		.loc 1 850 5
 2186 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2187 000e 1346     		mov	r3, r2
 2188 0010 9B00     		lsls	r3, r3, #2
 2189 0012 1344     		add	r3, r3, r2
 2190 0014 9B00     		lsls	r3, r3, #2
 2191 0016 1A46     		mov	r2, r3
 2192 0018 044B     		ldr	r3, .L111
 2193 001a 1344     		add	r3, r3, r2
 2194 001c 1A46     		mov	r2, r3
 2195              		.loc 1 850 27
 2196 001e 3B68     		ldr	r3, [r7]
 2197 0020 1360     		str	r3, [r2]
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2198              		.loc 1 851 1
 2199 0022 00BF     		nop
 2200 0024 0C37     		adds	r7, r7, #12
 2201              		.cfi_def_cfa_offset 4
 2202 0026 BD46     		mov	sp, r7
 2203              		.cfi_def_cfa_register 13
 2204              		@ sp needed
 2205 0028 80BC     		pop	{r7}
 2206              		.cfi_restore 7
 2207              		.cfi_def_cfa_offset 0
 2208 002a 7047     		bx	lr
 2209              	.L112:
 2210              		.align	2
 2211              	.L111:
 2212 002c 10000240 		.word	1073872912
 2213              		.cfi_endproc
 2214              	.LFE138:
 2216              		.section	.text.hals_dma_memory_address_config,"ax",%progbits
 2217              		.align	1
 2218              		.global	hals_dma_memory_address_config
 2219              		.syntax unified
 2220              		.thumb
 2221              		.thumb_func
 2222              		.fpu softvfp
 2224              	hals_dma_memory_address_config:
 2225              	.LFB139:
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      set DMA memory base address
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set memory base address
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  address: memory base address
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_memory_address_config(dma_channel_enum channelx, uint32_t address)
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2226              		.loc 1 863 1
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 8
 2229              		@ frame_needed = 1, uses_anonymous_args = 0
 2230              		@ link register save eliminated.
 2231 0000 80B4     		push	{r7}
 2232              		.cfi_def_cfa_offset 4
 2233              		.cfi_offset 7, -4
 2234 0002 83B0     		sub	sp, sp, #12
 2235              		.cfi_def_cfa_offset 16
 2236 0004 00AF     		add	r7, sp, #0
 2237              		.cfi_def_cfa_register 7
 2238 0006 0346     		mov	r3, r0
 2239 0008 3960     		str	r1, [r7]
 2240 000a FB71     		strb	r3, [r7, #7]
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHMADDR(channelx) = address;
 2241              		.loc 1 864 5
 2242 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2243 000e 1346     		mov	r3, r2
 2244 0010 9B00     		lsls	r3, r3, #2
 2245 0012 1344     		add	r3, r3, r2
 2246 0014 9B00     		lsls	r3, r3, #2
 2247 0016 1A46     		mov	r2, r3
 2248 0018 044B     		ldr	r3, .L114
 2249 001a 1344     		add	r3, r3, r2
 2250 001c 1A46     		mov	r2, r3
 2251              		.loc 1 864 27
 2252 001e 3B68     		ldr	r3, [r7]
 2253 0020 1360     		str	r3, [r2]
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2254              		.loc 1 865 1
 2255 0022 00BF     		nop
 2256 0024 0C37     		adds	r7, r7, #12
 2257              		.cfi_def_cfa_offset 4
 2258 0026 BD46     		mov	sp, r7
 2259              		.cfi_def_cfa_register 13
 2260              		@ sp needed
 2261 0028 80BC     		pop	{r7}
 2262              		.cfi_restore 7
 2263              		.cfi_def_cfa_offset 0
 2264 002a 7047     		bx	lr
 2265              	.L115:
 2266              		.align	2
 2267              	.L114:
 2268 002c 14000240 		.word	1073872916
 2269              		.cfi_endproc
 2270              	.LFE139:
 2272              		.section	.text.hals_dma_transfer_number_config,"ax",%progbits
 2273              		.align	1
 2274              		.global	hals_dma_transfer_number_config
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu softvfp
 2280              	hals_dma_transfer_number_config:
 2281              	.LFB140:
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      set the number of remaining data to be transferred by the DMA
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set number
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  number: the number of remaining data to be transferred by the DMA
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_transfer_number_config(dma_channel_enum channelx, uint16_t number)
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2282              		.loc 1 877 1
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 8
 2285              		@ frame_needed = 1, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
 2287 0000 80B4     		push	{r7}
 2288              		.cfi_def_cfa_offset 4
 2289              		.cfi_offset 7, -4
 2290 0002 83B0     		sub	sp, sp, #12
 2291              		.cfi_def_cfa_offset 16
 2292 0004 00AF     		add	r7, sp, #0
 2293              		.cfi_def_cfa_register 7
 2294 0006 0346     		mov	r3, r0
 2295 0008 0A46     		mov	r2, r1
 2296 000a FB71     		strb	r3, [r7, #7]
 2297 000c 1346     		mov	r3, r2	@ movhi
 2298 000e BB80     		strh	r3, [r7, #4]	@ movhi
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCNT(channelx) = (number & DMA_CHANNEL_CNT_MASK);
 2299              		.loc 1 878 5
 2300 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2301 0012 1346     		mov	r3, r2
 2302 0014 9B00     		lsls	r3, r3, #2
 2303 0016 1344     		add	r3, r3, r2
 2304 0018 9B00     		lsls	r3, r3, #2
 2305 001a 1A46     		mov	r2, r3
 2306 001c 044B     		ldr	r3, .L117
 2307 001e 1344     		add	r3, r3, r2
 2308 0020 1A46     		mov	r2, r3
 2309              		.loc 1 878 35
 2310 0022 BB88     		ldrh	r3, [r7, #4]
 2311              		.loc 1 878 25
 2312 0024 1360     		str	r3, [r2]
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2313              		.loc 1 879 1
 2314 0026 00BF     		nop
 2315 0028 0C37     		adds	r7, r7, #12
 2316              		.cfi_def_cfa_offset 4
 2317 002a BD46     		mov	sp, r7
 2318              		.cfi_def_cfa_register 13
 2319              		@ sp needed
 2320 002c 80BC     		pop	{r7}
 2321              		.cfi_restore 7
 2322              		.cfi_def_cfa_offset 0
 2323 002e 7047     		bx	lr
 2324              	.L118:
 2325              		.align	2
 2326              	.L117:
 2327 0030 0C000240 		.word	1073872908
 2328              		.cfi_endproc
 2329              	.LFE140:
 2331              		.section	.text.hals_dma_transfer_number_get,"ax",%progbits
 2332              		.align	1
 2333              		.global	hals_dma_transfer_number_get
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2337              		.fpu softvfp
 2339              	hals_dma_transfer_number_get:
 2340              	.LFB141:
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      get the number of remaining data to be transferred by the DMA
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set number
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     the number of remaining data to be transferred by the DMA
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** uint32_t hals_dma_transfer_number_get(dma_channel_enum channelx)
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2341              		.loc 1 890 1
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 8
 2344              		@ frame_needed = 1, uses_anonymous_args = 0
 2345              		@ link register save eliminated.
 2346 0000 80B4     		push	{r7}
 2347              		.cfi_def_cfa_offset 4
 2348              		.cfi_offset 7, -4
 2349 0002 83B0     		sub	sp, sp, #12
 2350              		.cfi_def_cfa_offset 16
 2351 0004 00AF     		add	r7, sp, #0
 2352              		.cfi_def_cfa_register 7
 2353 0006 0346     		mov	r3, r0
 2354 0008 FB71     		strb	r3, [r7, #7]
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return (uint32_t)DMA_CHCNT(channelx);
 2355              		.loc 1 891 22
 2356 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2357 000c 1346     		mov	r3, r2
 2358 000e 9B00     		lsls	r3, r3, #2
 2359 0010 1344     		add	r3, r3, r2
 2360 0012 9B00     		lsls	r3, r3, #2
 2361 0014 1A46     		mov	r2, r3
 2362 0016 044B     		ldr	r3, .L121
 2363 0018 1344     		add	r3, r3, r2
 2364              		.loc 1 891 12
 2365 001a 1B68     		ldr	r3, [r3]
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2366              		.loc 1 892 1
 2367 001c 1846     		mov	r0, r3
 2368 001e 0C37     		adds	r7, r7, #12
 2369              		.cfi_def_cfa_offset 4
 2370 0020 BD46     		mov	sp, r7
 2371              		.cfi_def_cfa_register 13
 2372              		@ sp needed
 2373 0022 80BC     		pop	{r7}
 2374              		.cfi_restore 7
 2375              		.cfi_def_cfa_offset 0
 2376 0024 7047     		bx	lr
 2377              	.L122:
 2378 0026 00BF     		.align	2
 2379              	.L121:
 2380 0028 0C000240 		.word	1073872908
 2381              		.cfi_endproc
 2382              	.LFE141:
 2384              		.section	.text.hals_dma_priority_config,"ax",%progbits
 2385              		.align	1
 2386              		.global	hals_dma_priority_config
 2387              		.syntax unified
 2388              		.thumb
 2389              		.thumb_func
 2390              		.fpu softvfp
 2392              	hals_dma_priority_config:
 2393              	.LFB142:
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      configure priority level of DMA channel
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  priority: priority level of this channel
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PRIORITY_LEVEL_LOW: low priority
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PRIORITY_LEVEL_MEDIUM: medium priority
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PRIORITY_LEVEL_HIGH: high priority
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PRIORITY_LEVEL_ULTRA_HIGH: ultra high priority
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_priority_config(dma_channel_enum channelx, uint32_t priority)
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2394              		.loc 1 909 1
 2395              		.cfi_startproc
 2396              		@ args = 0, pretend = 0, frame = 16
 2397              		@ frame_needed = 1, uses_anonymous_args = 0
 2398              		@ link register save eliminated.
 2399 0000 80B4     		push	{r7}
 2400              		.cfi_def_cfa_offset 4
 2401              		.cfi_offset 7, -4
 2402 0002 85B0     		sub	sp, sp, #20
 2403              		.cfi_def_cfa_offset 24
 2404 0004 00AF     		add	r7, sp, #0
 2405              		.cfi_def_cfa_register 7
 2406 0006 0346     		mov	r3, r0
 2407 0008 3960     		str	r1, [r7]
 2408 000a FB71     		strb	r3, [r7, #7]
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     uint32_t ctl;
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* acquire DMA_CHxCTL register */
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl = DMA_CHCTL(channelx);
 2409              		.loc 1 913 11
 2410 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2411 000e 1346     		mov	r3, r2
 2412 0010 9B00     		lsls	r3, r3, #2
 2413 0012 1344     		add	r3, r3, r2
 2414 0014 9B00     		lsls	r3, r3, #2
 2415 0016 1A46     		mov	r2, r3
 2416 0018 0D4B     		ldr	r3, .L124
 2417 001a 1344     		add	r3, r3, r2
 2418              		.loc 1 913 9
 2419 001c 1B68     		ldr	r3, [r3]
 2420 001e FB60     		str	r3, [r7, #12]
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* assign regiser */
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl &= ~DMA_CHXCTL_PRIO;
 2421              		.loc 1 915 9
 2422 0020 FB68     		ldr	r3, [r7, #12]
 2423 0022 23F44053 		bic	r3, r3, #12288
 2424 0026 FB60     		str	r3, [r7, #12]
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl |= priority;
 2425              		.loc 1 916 9
 2426 0028 FA68     		ldr	r2, [r7, #12]
 2427 002a 3B68     		ldr	r3, [r7]
 2428 002c 1343     		orrs	r3, r3, r2
 2429 002e FB60     		str	r3, [r7, #12]
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) = ctl;
 2430              		.loc 1 917 5
 2431 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2432 0032 1346     		mov	r3, r2
 2433 0034 9B00     		lsls	r3, r3, #2
 2434 0036 1344     		add	r3, r3, r2
 2435 0038 9B00     		lsls	r3, r3, #2
 2436 003a 1A46     		mov	r2, r3
 2437 003c 044B     		ldr	r3, .L124
 2438 003e 1344     		add	r3, r3, r2
 2439 0040 1A46     		mov	r2, r3
 2440              		.loc 1 917 25
 2441 0042 FB68     		ldr	r3, [r7, #12]
 2442 0044 1360     		str	r3, [r2]
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2443              		.loc 1 918 1
 2444 0046 00BF     		nop
 2445 0048 1437     		adds	r7, r7, #20
 2446              		.cfi_def_cfa_offset 4
 2447 004a BD46     		mov	sp, r7
 2448              		.cfi_def_cfa_register 13
 2449              		@ sp needed
 2450 004c 80BC     		pop	{r7}
 2451              		.cfi_restore 7
 2452              		.cfi_def_cfa_offset 0
 2453 004e 7047     		bx	lr
 2454              	.L125:
 2455              		.align	2
 2456              	.L124:
 2457 0050 08000240 		.word	1073872904
 2458              		.cfi_endproc
 2459              	.LFE142:
 2461              		.section	.text.hals_dma_memory_width_config,"ax",%progbits
 2462              		.align	1
 2463              		.global	hals_dma_memory_width_config
 2464              		.syntax unified
 2465              		.thumb
 2466              		.thumb_func
 2467              		.fpu softvfp
 2469              	hals_dma_memory_width_config:
 2470              	.LFB143:
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      configure transfer data width of memory
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  mwidth: transfer data width of memory
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_MEMORY_SIZE_8BITS: transfer data width of memory is 8-bit
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_MEMORY_SIZE_16BITS: transfer data width of memory is 16-bit
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_MEMORY_SIZE_32BITS: transfer data width of memory is 32-bit
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_memory_width_config(dma_channel_enum channelx, uint32_t mwidth)
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2471              		.loc 1 934 1
 2472              		.cfi_startproc
 2473              		@ args = 0, pretend = 0, frame = 16
 2474              		@ frame_needed = 1, uses_anonymous_args = 0
 2475              		@ link register save eliminated.
 2476 0000 80B4     		push	{r7}
 2477              		.cfi_def_cfa_offset 4
 2478              		.cfi_offset 7, -4
 2479 0002 85B0     		sub	sp, sp, #20
 2480              		.cfi_def_cfa_offset 24
 2481 0004 00AF     		add	r7, sp, #0
 2482              		.cfi_def_cfa_register 7
 2483 0006 0346     		mov	r3, r0
 2484 0008 3960     		str	r1, [r7]
 2485 000a FB71     		strb	r3, [r7, #7]
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     uint32_t ctl;
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* acquire DMA_CHxCTL register */
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl = DMA_CHCTL(channelx);
 2486              		.loc 1 938 11
 2487 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2488 000e 1346     		mov	r3, r2
 2489 0010 9B00     		lsls	r3, r3, #2
 2490 0012 1344     		add	r3, r3, r2
 2491 0014 9B00     		lsls	r3, r3, #2
 2492 0016 1A46     		mov	r2, r3
 2493 0018 0D4B     		ldr	r3, .L127
 2494 001a 1344     		add	r3, r3, r2
 2495              		.loc 1 938 9
 2496 001c 1B68     		ldr	r3, [r3]
 2497 001e FB60     		str	r3, [r7, #12]
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* assign regiser */
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl &= ~DMA_CHXCTL_MWIDTH;
 2498              		.loc 1 940 9
 2499 0020 FB68     		ldr	r3, [r7, #12]
 2500 0022 23F44063 		bic	r3, r3, #3072
 2501 0026 FB60     		str	r3, [r7, #12]
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl |= mwidth;
 2502              		.loc 1 941 9
 2503 0028 FA68     		ldr	r2, [r7, #12]
 2504 002a 3B68     		ldr	r3, [r7]
 2505 002c 1343     		orrs	r3, r3, r2
 2506 002e FB60     		str	r3, [r7, #12]
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) = ctl;
 2507              		.loc 1 942 5
 2508 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2509 0032 1346     		mov	r3, r2
 2510 0034 9B00     		lsls	r3, r3, #2
 2511 0036 1344     		add	r3, r3, r2
 2512 0038 9B00     		lsls	r3, r3, #2
 2513 003a 1A46     		mov	r2, r3
 2514 003c 044B     		ldr	r3, .L127
 2515 003e 1344     		add	r3, r3, r2
 2516 0040 1A46     		mov	r2, r3
 2517              		.loc 1 942 25
 2518 0042 FB68     		ldr	r3, [r7, #12]
 2519 0044 1360     		str	r3, [r2]
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2520              		.loc 1 943 1
 2521 0046 00BF     		nop
 2522 0048 1437     		adds	r7, r7, #20
 2523              		.cfi_def_cfa_offset 4
 2524 004a BD46     		mov	sp, r7
 2525              		.cfi_def_cfa_register 13
 2526              		@ sp needed
 2527 004c 80BC     		pop	{r7}
 2528              		.cfi_restore 7
 2529              		.cfi_def_cfa_offset 0
 2530 004e 7047     		bx	lr
 2531              	.L128:
 2532              		.align	2
 2533              	.L127:
 2534 0050 08000240 		.word	1073872904
 2535              		.cfi_endproc
 2536              	.LFE143:
 2538              		.section	.text.hasl_dma_periph_width_config,"ax",%progbits
 2539              		.align	1
 2540              		.global	hasl_dma_periph_width_config
 2541              		.syntax unified
 2542              		.thumb
 2543              		.thumb_func
 2544              		.fpu softvfp
 2546              	hasl_dma_periph_width_config:
 2547              	.LFB144:
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      configure transfer data width of peripheral
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  pwidth: transfer data width of peripheral
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PERIPH_SIZE_8BITS: transfer data width of peripheral is 8-bit
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PERIPH_SIZE_16BITS: transfer data width of peripheral is 16-bit
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PERIPH_SIZE_32BITS: transfer data width of peripheral is 32-bit
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hasl_dma_periph_width_config(dma_channel_enum channelx, uint32_t pwidth)
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2548              		.loc 1 959 1
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 16
 2551              		@ frame_needed = 1, uses_anonymous_args = 0
 2552              		@ link register save eliminated.
 2553 0000 80B4     		push	{r7}
 2554              		.cfi_def_cfa_offset 4
 2555              		.cfi_offset 7, -4
 2556 0002 85B0     		sub	sp, sp, #20
 2557              		.cfi_def_cfa_offset 24
 2558 0004 00AF     		add	r7, sp, #0
 2559              		.cfi_def_cfa_register 7
 2560 0006 0346     		mov	r3, r0
 2561 0008 3960     		str	r1, [r7]
 2562 000a FB71     		strb	r3, [r7, #7]
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     uint32_t ctl;
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* acquire DMA_CHxCTL register */
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl = DMA_CHCTL(channelx);
 2563              		.loc 1 963 11
 2564 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2565 000e 1346     		mov	r3, r2
 2566 0010 9B00     		lsls	r3, r3, #2
 2567 0012 1344     		add	r3, r3, r2
 2568 0014 9B00     		lsls	r3, r3, #2
 2569 0016 1A46     		mov	r2, r3
 2570 0018 0D4B     		ldr	r3, .L130
 2571 001a 1344     		add	r3, r3, r2
 2572              		.loc 1 963 9
 2573 001c 1B68     		ldr	r3, [r3]
 2574 001e FB60     		str	r3, [r7, #12]
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     /* assign regiser */
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl &= ~DMA_CHXCTL_PWIDTH;
 2575              		.loc 1 965 9
 2576 0020 FB68     		ldr	r3, [r7, #12]
 2577 0022 23F44073 		bic	r3, r3, #768
 2578 0026 FB60     		str	r3, [r7, #12]
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     ctl |= pwidth;
 2579              		.loc 1 966 9
 2580 0028 FA68     		ldr	r2, [r7, #12]
 2581 002a 3B68     		ldr	r3, [r7]
 2582 002c 1343     		orrs	r3, r3, r2
 2583 002e FB60     		str	r3, [r7, #12]
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) = ctl;
 2584              		.loc 1 967 5
 2585 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2586 0032 1346     		mov	r3, r2
 2587 0034 9B00     		lsls	r3, r3, #2
 2588 0036 1344     		add	r3, r3, r2
 2589 0038 9B00     		lsls	r3, r3, #2
 2590 003a 1A46     		mov	r2, r3
 2591 003c 044B     		ldr	r3, .L130
 2592 003e 1344     		add	r3, r3, r2
 2593 0040 1A46     		mov	r2, r3
 2594              		.loc 1 967 25
 2595 0042 FB68     		ldr	r3, [r7, #12]
 2596 0044 1360     		str	r3, [r2]
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2597              		.loc 1 968 1
 2598 0046 00BF     		nop
 2599 0048 1437     		adds	r7, r7, #20
 2600              		.cfi_def_cfa_offset 4
 2601 004a BD46     		mov	sp, r7
 2602              		.cfi_def_cfa_register 13
 2603              		@ sp needed
 2604 004c 80BC     		pop	{r7}
 2605              		.cfi_restore 7
 2606              		.cfi_def_cfa_offset 0
 2607 004e 7047     		bx	lr
 2608              	.L131:
 2609              		.align	2
 2610              	.L130:
 2611 0050 08000240 		.word	1073872904
 2612              		.cfi_endproc
 2613              	.LFE144:
 2615              		.section	.text.hals_dma_memory_increase_enable,"ax",%progbits
 2616              		.align	1
 2617              		.global	hals_dma_memory_increase_enable
 2618              		.syntax unified
 2619              		.thumb
 2620              		.thumb_func
 2621              		.fpu softvfp
 2623              	hals_dma_memory_increase_enable:
 2624              	.LFB145:
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable next address increasement algorithm of memory
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_memory_increase_enable(dma_channel_enum channelx)
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2625              		.loc 1 979 1
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 8
 2628              		@ frame_needed = 1, uses_anonymous_args = 0
 2629              		@ link register save eliminated.
 2630 0000 80B4     		push	{r7}
 2631              		.cfi_def_cfa_offset 4
 2632              		.cfi_offset 7, -4
 2633 0002 83B0     		sub	sp, sp, #12
 2634              		.cfi_def_cfa_offset 16
 2635 0004 00AF     		add	r7, sp, #0
 2636              		.cfi_def_cfa_register 7
 2637 0006 0346     		mov	r3, r0
 2638 0008 FB71     		strb	r3, [r7, #7]
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) |= DMA_CHXCTL_MNAGA;
 2639              		.loc 1 980 25
 2640 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2641 000c 1346     		mov	r3, r2
 2642 000e 9B00     		lsls	r3, r3, #2
 2643 0010 1344     		add	r3, r3, r2
 2644 0012 9B00     		lsls	r3, r3, #2
 2645 0014 1A46     		mov	r2, r3
 2646 0016 0A4B     		ldr	r3, .L133
 2647 0018 1344     		add	r3, r3, r2
 2648 001a 1968     		ldr	r1, [r3]
 2649 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2650 001e 1346     		mov	r3, r2
 2651 0020 9B00     		lsls	r3, r3, #2
 2652 0022 1344     		add	r3, r3, r2
 2653 0024 9B00     		lsls	r3, r3, #2
 2654 0026 1A46     		mov	r2, r3
 2655 0028 054B     		ldr	r3, .L133
 2656 002a 1344     		add	r3, r3, r2
 2657 002c 1A46     		mov	r2, r3
 2658 002e 41F08003 		orr	r3, r1, #128
 2659 0032 1360     		str	r3, [r2]
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2660              		.loc 1 981 1
 2661 0034 00BF     		nop
 2662 0036 0C37     		adds	r7, r7, #12
 2663              		.cfi_def_cfa_offset 4
 2664 0038 BD46     		mov	sp, r7
 2665              		.cfi_def_cfa_register 13
 2666              		@ sp needed
 2667 003a 80BC     		pop	{r7}
 2668              		.cfi_restore 7
 2669              		.cfi_def_cfa_offset 0
 2670 003c 7047     		bx	lr
 2671              	.L134:
 2672 003e 00BF     		.align	2
 2673              	.L133:
 2674 0040 08000240 		.word	1073872904
 2675              		.cfi_endproc
 2676              	.LFE145:
 2678              		.section	.text.dma_memory_increase_disable,"ax",%progbits
 2679              		.align	1
 2680              		.global	dma_memory_increase_disable
 2681              		.syntax unified
 2682              		.thumb
 2683              		.thumb_func
 2684              		.fpu softvfp
 2686              	dma_memory_increase_disable:
 2687              	.LFB146:
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable next address increasement algorithm of memory
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void dma_memory_increase_disable(dma_channel_enum channelx)
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2688              		.loc 1 992 1
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 8
 2691              		@ frame_needed = 1, uses_anonymous_args = 0
 2692              		@ link register save eliminated.
 2693 0000 80B4     		push	{r7}
 2694              		.cfi_def_cfa_offset 4
 2695              		.cfi_offset 7, -4
 2696 0002 83B0     		sub	sp, sp, #12
 2697              		.cfi_def_cfa_offset 16
 2698 0004 00AF     		add	r7, sp, #0
 2699              		.cfi_def_cfa_register 7
 2700 0006 0346     		mov	r3, r0
 2701 0008 FB71     		strb	r3, [r7, #7]
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) &= ~DMA_CHXCTL_MNAGA;
 2702              		.loc 1 993 25
 2703 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2704 000c 1346     		mov	r3, r2
 2705 000e 9B00     		lsls	r3, r3, #2
 2706 0010 1344     		add	r3, r3, r2
 2707 0012 9B00     		lsls	r3, r3, #2
 2708 0014 1A46     		mov	r2, r3
 2709 0016 0A4B     		ldr	r3, .L136
 2710 0018 1344     		add	r3, r3, r2
 2711 001a 1968     		ldr	r1, [r3]
 2712 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2713 001e 1346     		mov	r3, r2
 2714 0020 9B00     		lsls	r3, r3, #2
 2715 0022 1344     		add	r3, r3, r2
 2716 0024 9B00     		lsls	r3, r3, #2
 2717 0026 1A46     		mov	r2, r3
 2718 0028 054B     		ldr	r3, .L136
 2719 002a 1344     		add	r3, r3, r2
 2720 002c 1A46     		mov	r2, r3
 2721 002e 21F08003 		bic	r3, r1, #128
 2722 0032 1360     		str	r3, [r2]
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2723              		.loc 1 994 1
 2724 0034 00BF     		nop
 2725 0036 0C37     		adds	r7, r7, #12
 2726              		.cfi_def_cfa_offset 4
 2727 0038 BD46     		mov	sp, r7
 2728              		.cfi_def_cfa_register 13
 2729              		@ sp needed
 2730 003a 80BC     		pop	{r7}
 2731              		.cfi_restore 7
 2732              		.cfi_def_cfa_offset 0
 2733 003c 7047     		bx	lr
 2734              	.L137:
 2735 003e 00BF     		.align	2
 2736              	.L136:
 2737 0040 08000240 		.word	1073872904
 2738              		.cfi_endproc
 2739              	.LFE146:
 2741              		.section	.text.hals_dma_periph_increase_enable,"ax",%progbits
 2742              		.align	1
 2743              		.global	hals_dma_periph_increase_enable
 2744              		.syntax unified
 2745              		.thumb
 2746              		.thumb_func
 2747              		.fpu softvfp
 2749              	hals_dma_periph_increase_enable:
 2750              	.LFB147:
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable next address increasement algorithm of peripheral
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_periph_increase_enable(dma_channel_enum channelx)
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2751              		.loc 1 1005 1
 2752              		.cfi_startproc
 2753              		@ args = 0, pretend = 0, frame = 8
 2754              		@ frame_needed = 1, uses_anonymous_args = 0
 2755              		@ link register save eliminated.
 2756 0000 80B4     		push	{r7}
 2757              		.cfi_def_cfa_offset 4
 2758              		.cfi_offset 7, -4
 2759 0002 83B0     		sub	sp, sp, #12
 2760              		.cfi_def_cfa_offset 16
 2761 0004 00AF     		add	r7, sp, #0
 2762              		.cfi_def_cfa_register 7
 2763 0006 0346     		mov	r3, r0
 2764 0008 FB71     		strb	r3, [r7, #7]
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) |= DMA_CHXCTL_PNAGA;
 2765              		.loc 1 1006 25
 2766 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2767 000c 1346     		mov	r3, r2
 2768 000e 9B00     		lsls	r3, r3, #2
 2769 0010 1344     		add	r3, r3, r2
 2770 0012 9B00     		lsls	r3, r3, #2
 2771 0014 1A46     		mov	r2, r3
 2772 0016 0A4B     		ldr	r3, .L139
 2773 0018 1344     		add	r3, r3, r2
 2774 001a 1968     		ldr	r1, [r3]
 2775 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2776 001e 1346     		mov	r3, r2
 2777 0020 9B00     		lsls	r3, r3, #2
 2778 0022 1344     		add	r3, r3, r2
 2779 0024 9B00     		lsls	r3, r3, #2
 2780 0026 1A46     		mov	r2, r3
 2781 0028 054B     		ldr	r3, .L139
 2782 002a 1344     		add	r3, r3, r2
 2783 002c 1A46     		mov	r2, r3
 2784 002e 41F04003 		orr	r3, r1, #64
 2785 0032 1360     		str	r3, [r2]
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2786              		.loc 1 1007 1
 2787 0034 00BF     		nop
 2788 0036 0C37     		adds	r7, r7, #12
 2789              		.cfi_def_cfa_offset 4
 2790 0038 BD46     		mov	sp, r7
 2791              		.cfi_def_cfa_register 13
 2792              		@ sp needed
 2793 003a 80BC     		pop	{r7}
 2794              		.cfi_restore 7
 2795              		.cfi_def_cfa_offset 0
 2796 003c 7047     		bx	lr
 2797              	.L140:
 2798 003e 00BF     		.align	2
 2799              	.L139:
 2800 0040 08000240 		.word	1073872904
 2801              		.cfi_endproc
 2802              	.LFE147:
 2804              		.section	.text.dma_periph_increase_disable,"ax",%progbits
 2805              		.align	1
 2806              		.global	dma_periph_increase_disable
 2807              		.syntax unified
 2808              		.thumb
 2809              		.thumb_func
 2810              		.fpu softvfp
 2812              	dma_periph_increase_disable:
 2813              	.LFB148:
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable next address increasement algorithm of peripheral
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void dma_periph_increase_disable(dma_channel_enum channelx)
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2814              		.loc 1 1018 1
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 8
 2817              		@ frame_needed = 1, uses_anonymous_args = 0
 2818              		@ link register save eliminated.
 2819 0000 80B4     		push	{r7}
 2820              		.cfi_def_cfa_offset 4
 2821              		.cfi_offset 7, -4
 2822 0002 83B0     		sub	sp, sp, #12
 2823              		.cfi_def_cfa_offset 16
 2824 0004 00AF     		add	r7, sp, #0
 2825              		.cfi_def_cfa_register 7
 2826 0006 0346     		mov	r3, r0
 2827 0008 FB71     		strb	r3, [r7, #7]
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) &= ~DMA_CHXCTL_PNAGA;
 2828              		.loc 1 1019 25
 2829 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2830 000c 1346     		mov	r3, r2
 2831 000e 9B00     		lsls	r3, r3, #2
 2832 0010 1344     		add	r3, r3, r2
 2833 0012 9B00     		lsls	r3, r3, #2
 2834 0014 1A46     		mov	r2, r3
 2835 0016 0A4B     		ldr	r3, .L142
 2836 0018 1344     		add	r3, r3, r2
 2837 001a 1968     		ldr	r1, [r3]
 2838 001c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2839 001e 1346     		mov	r3, r2
 2840 0020 9B00     		lsls	r3, r3, #2
 2841 0022 1344     		add	r3, r3, r2
 2842 0024 9B00     		lsls	r3, r3, #2
 2843 0026 1A46     		mov	r2, r3
 2844 0028 054B     		ldr	r3, .L142
 2845 002a 1344     		add	r3, r3, r2
 2846 002c 1A46     		mov	r2, r3
 2847 002e 21F04003 		bic	r3, r1, #64
 2848 0032 1360     		str	r3, [r2]
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2849              		.loc 1 1020 1
 2850 0034 00BF     		nop
 2851 0036 0C37     		adds	r7, r7, #12
 2852              		.cfi_def_cfa_offset 4
 2853 0038 BD46     		mov	sp, r7
 2854              		.cfi_def_cfa_register 13
 2855              		@ sp needed
 2856 003a 80BC     		pop	{r7}
 2857              		.cfi_restore 7
 2858              		.cfi_def_cfa_offset 0
 2859 003c 7047     		bx	lr
 2860              	.L143:
 2861 003e 00BF     		.align	2
 2862              	.L142:
 2863 0040 08000240 		.word	1073872904
 2864              		.cfi_endproc
 2865              	.LFE148:
 2867              		.section	.text.hals_dma_transfer_direction_config,"ax",%progbits
 2868              		.align	1
 2869              		.global	hals_dma_transfer_direction_config
 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2873              		.fpu softvfp
 2875              	hals_dma_transfer_direction_config:
 2876              	.LFB149:
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      configure the direction of data transfer on the channel
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  direction: specify the direction of  data transfer
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_PERIPHERAL_TO_MEMORY: read from peripheral and write to memory
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_MEMORY_TO_PERIPHERAL: read from memory and write to peripheral
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_transfer_direction_config(dma_channel_enum channelx, uint32_t direction)
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2877              		.loc 1 1035 1
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 8
 2880              		@ frame_needed = 1, uses_anonymous_args = 0
 2881              		@ link register save eliminated.
 2882 0000 80B4     		push	{r7}
 2883              		.cfi_def_cfa_offset 4
 2884              		.cfi_offset 7, -4
 2885 0002 83B0     		sub	sp, sp, #12
 2886              		.cfi_def_cfa_offset 16
 2887 0004 00AF     		add	r7, sp, #0
 2888              		.cfi_def_cfa_register 7
 2889 0006 0346     		mov	r3, r0
 2890 0008 3960     		str	r1, [r7]
 2891 000a FB71     		strb	r3, [r7, #7]
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(DMA_DIR_PERIPH_TO_MEMORY == direction) {
 2892              		.loc 1 1036 7
 2893 000c 3B68     		ldr	r3, [r7]
 2894 000e 002B     		cmp	r3, #0
 2895 0010 15D1     		bne	.L145
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         DMA_CHCTL(channelx) &= ~DMA_CHXCTL_DIR;
 2896              		.loc 1 1037 29
 2897 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2898 0014 1346     		mov	r3, r2
 2899 0016 9B00     		lsls	r3, r3, #2
 2900 0018 1344     		add	r3, r3, r2
 2901 001a 9B00     		lsls	r3, r3, #2
 2902 001c 1A46     		mov	r2, r3
 2903 001e 154B     		ldr	r3, .L148
 2904 0020 1344     		add	r3, r3, r2
 2905 0022 1968     		ldr	r1, [r3]
 2906 0024 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2907 0026 1346     		mov	r3, r2
 2908 0028 9B00     		lsls	r3, r3, #2
 2909 002a 1344     		add	r3, r3, r2
 2910 002c 9B00     		lsls	r3, r3, #2
 2911 002e 1A46     		mov	r2, r3
 2912 0030 104B     		ldr	r3, .L148
 2913 0032 1344     		add	r3, r3, r2
 2914 0034 1A46     		mov	r2, r3
 2915 0036 21F01003 		bic	r3, r1, #16
 2916 003a 1360     		str	r3, [r2]
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         DMA_CHCTL(channelx) |= DMA_CHXCTL_DIR;
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 2917              		.loc 1 1041 1
 2918 003c 14E0     		b	.L147
 2919              	.L145:
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
 2920              		.loc 1 1039 29
 2921 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2922 0040 1346     		mov	r3, r2
 2923 0042 9B00     		lsls	r3, r3, #2
 2924 0044 1344     		add	r3, r3, r2
 2925 0046 9B00     		lsls	r3, r3, #2
 2926 0048 1A46     		mov	r2, r3
 2927 004a 0A4B     		ldr	r3, .L148
 2928 004c 1344     		add	r3, r3, r2
 2929 004e 1968     		ldr	r1, [r3]
 2930 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2931 0052 1346     		mov	r3, r2
 2932 0054 9B00     		lsls	r3, r3, #2
 2933 0056 1344     		add	r3, r3, r2
 2934 0058 9B00     		lsls	r3, r3, #2
 2935 005a 1A46     		mov	r2, r3
 2936 005c 054B     		ldr	r3, .L148
 2937 005e 1344     		add	r3, r3, r2
 2938 0060 1A46     		mov	r2, r3
 2939 0062 41F01003 		orr	r3, r1, #16
 2940 0066 1360     		str	r3, [r2]
 2941              	.L147:
 2942              		.loc 1 1041 1
 2943 0068 00BF     		nop
 2944 006a 0C37     		adds	r7, r7, #12
 2945              		.cfi_def_cfa_offset 4
 2946 006c BD46     		mov	sp, r7
 2947              		.cfi_def_cfa_register 13
 2948              		@ sp needed
 2949 006e 80BC     		pop	{r7}
 2950              		.cfi_restore 7
 2951              		.cfi_def_cfa_offset 0
 2952 0070 7047     		bx	lr
 2953              	.L149:
 2954 0072 00BF     		.align	2
 2955              	.L148:
 2956 0074 08000240 		.word	1073872904
 2957              		.cfi_endproc
 2958              	.LFE149:
 2960              		.section	.text.hals_dma_flag_get,"ax",%progbits
 2961              		.align	1
 2962              		.global	hals_dma_flag_get
 2963              		.syntax unified
 2964              		.thumb
 2965              		.thumb_func
 2966              		.fpu softvfp
 2968              	hals_dma_flag_get:
 2969              	.LFB150:
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      check DMA flag is set or not
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to get flag
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  flag: specify get which flag
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_G: global interrupt flag of channel
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_FTF: full transfer finish flag of channel
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_HTF: half transfer finish flag of channel
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_ERR: error flag of channel
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     FlagStatus: SET or RESET
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** FlagStatus hals_dma_flag_get(dma_channel_enum channelx, uint32_t flag)
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 2970              		.loc 1 1058 1
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 16
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974              		@ link register save eliminated.
 2975 0000 80B4     		push	{r7}
 2976              		.cfi_def_cfa_offset 4
 2977              		.cfi_offset 7, -4
 2978 0002 85B0     		sub	sp, sp, #20
 2979              		.cfi_def_cfa_offset 24
 2980 0004 00AF     		add	r7, sp, #0
 2981              		.cfi_def_cfa_register 7
 2982 0006 0346     		mov	r3, r0
 2983 0008 3960     		str	r1, [r7]
 2984 000a FB71     		strb	r3, [r7, #7]
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     FlagStatus reval;
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(RESET != (DMA_INTF & DMA_FLAG_ADD(flag, channelx))) {
 2985              		.loc 1 1061 18
 2986 000c 0A4B     		ldr	r3, .L154
 2987 000e 1A68     		ldr	r2, [r3]
 2988              		.loc 1 1061 29
 2989 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2990 0012 9B00     		lsls	r3, r3, #2
 2991 0014 3968     		ldr	r1, [r7]
 2992 0016 01FA03F3 		lsl	r3, r1, r3
 2993              		.loc 1 1061 27
 2994 001a 1340     		ands	r3, r3, r2
 2995              		.loc 1 1061 7
 2996 001c 002B     		cmp	r3, #0
 2997 001e 02D0     		beq	.L151
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         reval = SET;
 2998              		.loc 1 1062 15
 2999 0020 0123     		movs	r3, #1
 3000 0022 FB73     		strb	r3, [r7, #15]
 3001 0024 01E0     		b	.L152
 3002              	.L151:
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         reval = RESET;
 3003              		.loc 1 1064 15
 3004 0026 0023     		movs	r3, #0
 3005 0028 FB73     		strb	r3, [r7, #15]
 3006              	.L152:
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     return reval;
 3007              		.loc 1 1067 12
 3008 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 3009              		.loc 1 1068 1
 3010 002c 1846     		mov	r0, r3
 3011 002e 1437     		adds	r7, r7, #20
 3012              		.cfi_def_cfa_offset 4
 3013 0030 BD46     		mov	sp, r7
 3014              		.cfi_def_cfa_register 13
 3015              		@ sp needed
 3016 0032 80BC     		pop	{r7}
 3017              		.cfi_restore 7
 3018              		.cfi_def_cfa_offset 0
 3019 0034 7047     		bx	lr
 3020              	.L155:
 3021 0036 00BF     		.align	2
 3022              	.L154:
 3023 0038 00000240 		.word	1073872896
 3024              		.cfi_endproc
 3025              	.LFE150:
 3027              		.section	.text.hals_dma_flag_clear,"ax",%progbits
 3028              		.align	1
 3029              		.global	hals_dma_flag_clear
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3033              		.fpu softvfp
 3035              	hals_dma_flag_clear:
 3036              	.LFB151:
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      clear DMA a channel flag
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to clear flag
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  flag: specify get which flag
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_G: global interrupt flag of channel
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_FTF: full transfer finish flag of channel
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_HTF: half transfer finish flag of channel
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_FLAG_ERR: error flag of channel
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_flag_clear(dma_channel_enum channelx, uint32_t flag)
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 3037              		.loc 1 1085 1
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 8
 3040              		@ frame_needed = 1, uses_anonymous_args = 0
 3041              		@ link register save eliminated.
 3042 0000 80B4     		push	{r7}
 3043              		.cfi_def_cfa_offset 4
 3044              		.cfi_offset 7, -4
 3045 0002 83B0     		sub	sp, sp, #12
 3046              		.cfi_def_cfa_offset 16
 3047 0004 00AF     		add	r7, sp, #0
 3048              		.cfi_def_cfa_register 7
 3049 0006 0346     		mov	r3, r0
 3050 0008 3960     		str	r1, [r7]
 3051 000a FB71     		strb	r3, [r7, #7]
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_INTC |= DMA_FLAG_ADD(flag, channelx);
 3052              		.loc 1 1086 14
 3053 000c 074B     		ldr	r3, .L157
 3054 000e 1A68     		ldr	r2, [r3]
 3055              		.loc 1 1086 17
 3056 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3057 0012 9B00     		lsls	r3, r3, #2
 3058 0014 3968     		ldr	r1, [r7]
 3059 0016 01FA03F3 		lsl	r3, r1, r3
 3060              		.loc 1 1086 14
 3061 001a 0449     		ldr	r1, .L157
 3062 001c 1343     		orrs	r3, r3, r2
 3063 001e 0B60     		str	r3, [r1]
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 3064              		.loc 1 1087 1
 3065 0020 00BF     		nop
 3066 0022 0C37     		adds	r7, r7, #12
 3067              		.cfi_def_cfa_offset 4
 3068 0024 BD46     		mov	sp, r7
 3069              		.cfi_def_cfa_register 13
 3070              		@ sp needed
 3071 0026 80BC     		pop	{r7}
 3072              		.cfi_restore 7
 3073              		.cfi_def_cfa_offset 0
 3074 0028 7047     		bx	lr
 3075              	.L158:
 3076 002a 00BF     		.align	2
 3077              	.L157:
 3078 002c 04000240 		.word	1073872900
 3079              		.cfi_endproc
 3080              	.LFE151:
 3082              		.section	.text.hals_dma_interrupt_enable,"ax",%progbits
 3083              		.align	1
 3084              		.global	hals_dma_interrupt_enable
 3085              		.syntax unified
 3086              		.thumb
 3087              		.thumb_func
 3088              		.fpu softvfp
 3090              	hals_dma_interrupt_enable:
 3091              	.LFB152:
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      enable DMA interrupt
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  source: specify which interrupt to enable
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_ERR: channel error interrupt
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_HTF: channel half transfer finish interrupt
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_FTF: channel full transfer finish interrupt
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_interrupt_enable(dma_channel_enum channelx, uint32_t source)
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 3092              		.loc 1 1103 1
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 8
 3095              		@ frame_needed = 1, uses_anonymous_args = 0
 3096              		@ link register save eliminated.
 3097 0000 80B4     		push	{r7}
 3098              		.cfi_def_cfa_offset 4
 3099              		.cfi_offset 7, -4
 3100 0002 83B0     		sub	sp, sp, #12
 3101              		.cfi_def_cfa_offset 16
 3102 0004 00AF     		add	r7, sp, #0
 3103              		.cfi_def_cfa_register 7
 3104 0006 0346     		mov	r3, r0
 3105 0008 3960     		str	r1, [r7]
 3106 000a FB71     		strb	r3, [r7, #7]
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) |= source;
 3107              		.loc 1 1104 25
 3108 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3109 000e 1346     		mov	r3, r2
 3110 0010 9B00     		lsls	r3, r3, #2
 3111 0012 1344     		add	r3, r3, r2
 3112 0014 9B00     		lsls	r3, r3, #2
 3113 0016 1A46     		mov	r2, r3
 3114 0018 094B     		ldr	r3, .L160
 3115 001a 1344     		add	r3, r3, r2
 3116 001c 1968     		ldr	r1, [r3]
 3117 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3118 0020 1346     		mov	r3, r2
 3119 0022 9B00     		lsls	r3, r3, #2
 3120 0024 1344     		add	r3, r3, r2
 3121 0026 9B00     		lsls	r3, r3, #2
 3122 0028 1A46     		mov	r2, r3
 3123 002a 054B     		ldr	r3, .L160
 3124 002c 1344     		add	r3, r3, r2
 3125 002e 1A46     		mov	r2, r3
 3126 0030 3B68     		ldr	r3, [r7]
 3127 0032 0B43     		orrs	r3, r3, r1
 3128 0034 1360     		str	r3, [r2]
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 3129              		.loc 1 1105 1
 3130 0036 00BF     		nop
 3131 0038 0C37     		adds	r7, r7, #12
 3132              		.cfi_def_cfa_offset 4
 3133 003a BD46     		mov	sp, r7
 3134              		.cfi_def_cfa_register 13
 3135              		@ sp needed
 3136 003c 80BC     		pop	{r7}
 3137              		.cfi_restore 7
 3138              		.cfi_def_cfa_offset 0
 3139 003e 7047     		bx	lr
 3140              	.L161:
 3141              		.align	2
 3142              	.L160:
 3143 0040 08000240 		.word	1073872904
 3144              		.cfi_endproc
 3145              	.LFE152:
 3147              		.section	.text.hals_dma_interrupt_disable,"ax",%progbits
 3148              		.align	1
 3149              		.global	hals_dma_interrupt_disable
 3150              		.syntax unified
 3151              		.thumb
 3152              		.thumb_func
 3153              		.fpu softvfp
 3155              	hals_dma_interrupt_disable:
 3156              	.LFB153:
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      disable DMA interrupt
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to set
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  source: specify which interrupt to disable
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_ERR: channel error interrupt
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_HTF: channel half transfer finish interrupt
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_FTF: channel full transfer finish interrupt
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_interrupt_disable(dma_channel_enum channelx, uint32_t source)
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 3157              		.loc 1 1121 1
 3158              		.cfi_startproc
 3159              		@ args = 0, pretend = 0, frame = 8
 3160              		@ frame_needed = 1, uses_anonymous_args = 0
 3161              		@ link register save eliminated.
 3162 0000 80B4     		push	{r7}
 3163              		.cfi_def_cfa_offset 4
 3164              		.cfi_offset 7, -4
 3165 0002 83B0     		sub	sp, sp, #12
 3166              		.cfi_def_cfa_offset 16
 3167 0004 00AF     		add	r7, sp, #0
 3168              		.cfi_def_cfa_register 7
 3169 0006 0346     		mov	r3, r0
 3170 0008 3960     		str	r1, [r7]
 3171 000a FB71     		strb	r3, [r7, #7]
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_CHCTL(channelx) &= ~source;
 3172              		.loc 1 1122 25
 3173 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3174 000e 1346     		mov	r3, r2
 3175 0010 9B00     		lsls	r3, r3, #2
 3176 0012 1344     		add	r3, r3, r2
 3177 0014 9B00     		lsls	r3, r3, #2
 3178 0016 1A46     		mov	r2, r3
 3179 0018 0A4B     		ldr	r3, .L163
 3180 001a 1344     		add	r3, r3, r2
 3181 001c 1868     		ldr	r0, [r3]
 3182              		.loc 1 1122 28
 3183 001e 3B68     		ldr	r3, [r7]
 3184 0020 D943     		mvns	r1, r3
 3185              		.loc 1 1122 25
 3186 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3187 0024 1346     		mov	r3, r2
 3188 0026 9B00     		lsls	r3, r3, #2
 3189 0028 1344     		add	r3, r3, r2
 3190 002a 9B00     		lsls	r3, r3, #2
 3191 002c 1A46     		mov	r2, r3
 3192 002e 054B     		ldr	r3, .L163
 3193 0030 1344     		add	r3, r3, r2
 3194 0032 1A46     		mov	r2, r3
 3195 0034 00EA0103 		and	r3, r0, r1
 3196 0038 1360     		str	r3, [r2]
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 3197              		.loc 1 1123 1
 3198 003a 00BF     		nop
 3199 003c 0C37     		adds	r7, r7, #12
 3200              		.cfi_def_cfa_offset 4
 3201 003e BD46     		mov	sp, r7
 3202              		.cfi_def_cfa_register 13
 3203              		@ sp needed
 3204 0040 80BC     		pop	{r7}
 3205              		.cfi_restore 7
 3206              		.cfi_def_cfa_offset 0
 3207 0042 7047     		bx	lr
 3208              	.L164:
 3209              		.align	2
 3210              	.L163:
 3211 0044 08000240 		.word	1073872904
 3212              		.cfi_endproc
 3213              	.LFE153:
 3215              		.section	.text.hals_dma_interrupt_flag_get,"ax",%progbits
 3216              		.align	1
 3217              		.global	hals_dma_interrupt_flag_get
 3218              		.syntax unified
 3219              		.thumb
 3220              		.thumb_func
 3221              		.fpu softvfp
 3223              	hals_dma_interrupt_flag_get:
 3224              	.LFB154:
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      check DMA flag and interrupt enable bit is set or not
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to get flag
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  flag: specify get which flag
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_INT_FLAG_FTF: transfer finish flag of channel
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_INT_FLAG_HTF: half transfer finish flag of channel
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_INT_FLAG_ERR: error flag of channel
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     FlagStatus: SET or RESET
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** FlagStatus hals_dma_interrupt_flag_get(dma_channel_enum channelx, uint32_t flag)
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 3225              		.loc 1 1139 1
 3226              		.cfi_startproc
 3227              		@ args = 0, pretend = 0, frame = 16
 3228              		@ frame_needed = 1, uses_anonymous_args = 0
 3229              		@ link register save eliminated.
 3230 0000 80B4     		push	{r7}
 3231              		.cfi_def_cfa_offset 4
 3232              		.cfi_offset 7, -4
 3233 0002 85B0     		sub	sp, sp, #20
 3234              		.cfi_def_cfa_offset 24
 3235 0004 00AF     		add	r7, sp, #0
 3236              		.cfi_def_cfa_register 7
 3237 0006 0346     		mov	r3, r0
 3238 0008 3960     		str	r1, [r7]
 3239 000a FB71     		strb	r3, [r7, #7]
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     uint32_t interrupt_enable = 0U, interrupt_flag = 0U;
 3240              		.loc 1 1140 14
 3241 000c 0023     		movs	r3, #0
 3242 000e FB60     		str	r3, [r7, #12]
 3243              		.loc 1 1140 37
 3244 0010 0023     		movs	r3, #0
 3245 0012 BB60     		str	r3, [r7, #8]
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     switch(flag) {
 3246              		.loc 1 1142 5
 3247 0014 3B68     		ldr	r3, [r7]
 3248 0016 082B     		cmp	r3, #8
 3249 0018 35D0     		beq	.L166
 3250 001a 3B68     		ldr	r3, [r7]
 3251 001c 082B     		cmp	r3, #8
 3252 001e 48D8     		bhi	.L173
 3253 0020 3B68     		ldr	r3, [r7]
 3254 0022 022B     		cmp	r3, #2
 3255 0024 03D0     		beq	.L168
 3256 0026 3B68     		ldr	r3, [r7]
 3257 0028 042B     		cmp	r3, #4
 3258 002a 16D0     		beq	.L169
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case DMA_INTF_FTFIF:
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_flag = DMA_INTF & DMA_FLAG_ADD(flag, channelx);
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_FTFIE;
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case DMA_INTF_HTFIF:
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_flag = DMA_INTF & DMA_FLAG_ADD(flag, channelx);
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_HTFIE;
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case DMA_INTF_ERRIF:
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_flag = DMA_INTF & DMA_FLAG_ADD(flag, channelx);
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_ERRIE;
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     default:
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3259              		.loc 1 1156 9
 3260 002c 41E0     		b	.L173
 3261              	.L168:
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_FTFIE;
 3262              		.loc 1 1144 26
 3263 002e 284B     		ldr	r3, .L174
 3264 0030 1A68     		ldr	r2, [r3]
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_FTFIE;
 3265              		.loc 1 1144 37
 3266 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3267 0034 9B00     		lsls	r3, r3, #2
 3268 0036 3968     		ldr	r1, [r7]
 3269 0038 01FA03F3 		lsl	r3, r1, r3
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_FTFIE;
 3270              		.loc 1 1144 24
 3271 003c 1340     		ands	r3, r3, r2
 3272 003e BB60     		str	r3, [r7, #8]
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3273              		.loc 1 1145 28
 3274 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3275 0042 1346     		mov	r3, r2
 3276 0044 9B00     		lsls	r3, r3, #2
 3277 0046 1344     		add	r3, r3, r2
 3278 0048 9B00     		lsls	r3, r3, #2
 3279 004a 1A46     		mov	r2, r3
 3280 004c 214B     		ldr	r3, .L174+4
 3281 004e 1344     		add	r3, r3, r2
 3282 0050 1B68     		ldr	r3, [r3]
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3283              		.loc 1 1145 26
 3284 0052 03F00203 		and	r3, r3, #2
 3285 0056 FB60     		str	r3, [r7, #12]
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case DMA_INTF_HTFIF:
 3286              		.loc 1 1146 9
 3287 0058 2CE0     		b	.L170
 3288              	.L169:
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_HTFIE;
 3289              		.loc 1 1148 26
 3290 005a 1D4B     		ldr	r3, .L174
 3291 005c 1A68     		ldr	r2, [r3]
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_HTFIE;
 3292              		.loc 1 1148 37
 3293 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3294 0060 9B00     		lsls	r3, r3, #2
 3295 0062 3968     		ldr	r1, [r7]
 3296 0064 01FA03F3 		lsl	r3, r1, r3
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_HTFIE;
 3297              		.loc 1 1148 24
 3298 0068 1340     		ands	r3, r3, r2
 3299 006a BB60     		str	r3, [r7, #8]
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3300              		.loc 1 1149 28
 3301 006c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3302 006e 1346     		mov	r3, r2
 3303 0070 9B00     		lsls	r3, r3, #2
 3304 0072 1344     		add	r3, r3, r2
 3305 0074 9B00     		lsls	r3, r3, #2
 3306 0076 1A46     		mov	r2, r3
 3307 0078 164B     		ldr	r3, .L174+4
 3308 007a 1344     		add	r3, r3, r2
 3309 007c 1B68     		ldr	r3, [r3]
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3310              		.loc 1 1149 26
 3311 007e 03F00403 		and	r3, r3, #4
 3312 0082 FB60     		str	r3, [r7, #12]
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     case DMA_INTF_ERRIF:
 3313              		.loc 1 1150 9
 3314 0084 16E0     		b	.L170
 3315              	.L166:
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_ERRIE;
 3316              		.loc 1 1152 26
 3317 0086 124B     		ldr	r3, .L174
 3318 0088 1A68     		ldr	r2, [r3]
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_ERRIE;
 3319              		.loc 1 1152 37
 3320 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3321 008c 9B00     		lsls	r3, r3, #2
 3322 008e 3968     		ldr	r1, [r7]
 3323 0090 01FA03F3 		lsl	r3, r1, r3
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         interrupt_enable = DMA_CHCTL(channelx) & DMA_CHXCTL_ERRIE;
 3324              		.loc 1 1152 24
 3325 0094 1340     		ands	r3, r3, r2
 3326 0096 BB60     		str	r3, [r7, #8]
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3327              		.loc 1 1153 28
 3328 0098 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3329 009a 1346     		mov	r3, r2
 3330 009c 9B00     		lsls	r3, r3, #2
 3331 009e 1344     		add	r3, r3, r2
 3332 00a0 9B00     		lsls	r3, r3, #2
 3333 00a2 1A46     		mov	r2, r3
 3334 00a4 0B4B     		ldr	r3, .L174+4
 3335 00a6 1344     		add	r3, r3, r2
 3336 00a8 1B68     		ldr	r3, [r3]
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         break;
 3337              		.loc 1 1153 26
 3338 00aa 03F00803 		and	r3, r3, #8
 3339 00ae FB60     		str	r3, [r7, #12]
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     default:
 3340              		.loc 1 1154 9
 3341 00b0 00E0     		b	.L170
 3342              	.L173:
 3343              		.loc 1 1156 9
 3344 00b2 00BF     		nop
 3345              	.L170:
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     if(interrupt_flag && interrupt_enable) {
 3346              		.loc 1 1159 7
 3347 00b4 BB68     		ldr	r3, [r7, #8]
 3348 00b6 002B     		cmp	r3, #0
 3349 00b8 04D0     		beq	.L171
 3350              		.loc 1 1159 23 discriminator 1
 3351 00ba FB68     		ldr	r3, [r7, #12]
 3352 00bc 002B     		cmp	r3, #0
 3353 00be 01D0     		beq	.L171
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return SET;
 3354              		.loc 1 1160 16
 3355 00c0 0123     		movs	r3, #1
 3356 00c2 00E0     		b	.L172
 3357              	.L171:
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     } else {
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****         return RESET;
 3358              		.loc 1 1162 16
 3359 00c4 0023     		movs	r3, #0
 3360              	.L172:
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     }
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 3361              		.loc 1 1164 1
 3362 00c6 1846     		mov	r0, r3
 3363 00c8 1437     		adds	r7, r7, #20
 3364              		.cfi_def_cfa_offset 4
 3365 00ca BD46     		mov	sp, r7
 3366              		.cfi_def_cfa_register 13
 3367              		@ sp needed
 3368 00cc 80BC     		pop	{r7}
 3369              		.cfi_restore 7
 3370              		.cfi_def_cfa_offset 0
 3371 00ce 7047     		bx	lr
 3372              	.L175:
 3373              		.align	2
 3374              	.L174:
 3375 00d0 00000240 		.word	1073872896
 3376 00d4 08000240 		.word	1073872904
 3377              		.cfi_endproc
 3378              	.LFE154:
 3380              		.section	.text.hals_dma_interrupt_flag_clear,"ax",%progbits
 3381              		.align	1
 3382              		.global	hals_dma_interrupt_flag_clear
 3383              		.syntax unified
 3384              		.thumb
 3385              		.thumb_func
 3386              		.fpu softvfp
 3388              	hals_dma_interrupt_flag_clear:
 3389              	.LFB155:
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** 
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** /*!
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \brief      clear DMA a channel interrupt flag
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  channelx: specify which DMA channel to clear flag
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_CHx(x=0..6)
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[in]  flag: specify get which flag
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****                 only one parameter can be selected which is shown as below:
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        DMA_INT_FLAG_G: global interrupt flag of channel
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_INT_FLAG_FTF: transfer finish flag of channel
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_INT_FLAG_HTF: half transfer finish flag of channel
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****       \arg        HAL_DMA_INT_FLAG_ERR: error flag of channel
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \param[out] none
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     \retval     none
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** */
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** void hals_dma_interrupt_flag_clear(dma_channel_enum channelx, uint32_t flag)
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** {
 3390              		.loc 1 1181 1
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 8
 3393              		@ frame_needed = 1, uses_anonymous_args = 0
 3394              		@ link register save eliminated.
 3395 0000 80B4     		push	{r7}
 3396              		.cfi_def_cfa_offset 4
 3397              		.cfi_offset 7, -4
 3398 0002 83B0     		sub	sp, sp, #12
 3399              		.cfi_def_cfa_offset 16
 3400 0004 00AF     		add	r7, sp, #0
 3401              		.cfi_def_cfa_register 7
 3402 0006 0346     		mov	r3, r0
 3403 0008 3960     		str	r1, [r7]
 3404 000a FB71     		strb	r3, [r7, #7]
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c ****     DMA_INTC |= DMA_FLAG_ADD(flag, channelx);
 3405              		.loc 1 1182 14
 3406 000c 074B     		ldr	r3, .L177
 3407 000e 1A68     		ldr	r2, [r3]
 3408              		.loc 1 1182 17
 3409 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3410 0012 9B00     		lsls	r3, r3, #2
 3411 0014 3968     		ldr	r1, [r7]
 3412 0016 01FA03F3 		lsl	r3, r1, r3
 3413              		.loc 1 1182 14
 3414 001a 0449     		ldr	r1, .L177
 3415 001c 1343     		orrs	r3, r3, r2
 3416 001e 0B60     		str	r3, [r1]
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_dma.c **** }
 3417              		.loc 1 1183 1
 3418 0020 00BF     		nop
 3419 0022 0C37     		adds	r7, r7, #12
 3420              		.cfi_def_cfa_offset 4
 3421 0024 BD46     		mov	sp, r7
 3422              		.cfi_def_cfa_register 13
 3423              		@ sp needed
 3424 0026 80BC     		pop	{r7}
 3425              		.cfi_restore 7
 3426              		.cfi_def_cfa_offset 0
 3427 0028 7047     		bx	lr
 3428              	.L178:
 3429 002a 00BF     		.align	2
 3430              	.L177:
 3431 002c 04000240 		.word	1073872900
 3432              		.cfi_endproc
 3433              	.LFE155:
 3435              		.text
 3436              	.Letext0:
 3437              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3438              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3439              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3440              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3441              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3442              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3443              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 3444              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 3445              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 3446              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 3447              		.file 12 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_dma.h"
 3448              		.file 13 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_dma.c
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:16     .text.hal_dma_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:24     .text.hal_dma_init:00000000 hal_dma_init
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2105   .text.hals_dma_channel_disable:00000000 hals_dma_channel_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:232    .text.hal_dma_init:00000148 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:237    .text.hal_dma_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:244    .text.hal_dma_struct_init:00000000 hal_dma_struct_init
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:376    .text.hal_dma_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:383    .text.hal_dma_deinit:00000000 hal_dma_deinit
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:544    .text.hal_dma_deinit:000000f4 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:553    .text.hal_dma_start:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:560    .text.hal_dma_start:00000000 hal_dma_start
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2224   .text.hals_dma_memory_address_config:00000000 hals_dma_memory_address_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2168   .text.hals_dma_periph_address_config:00000000 hals_dma_periph_address_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2280   .text.hals_dma_transfer_number_config:00000000 hals_dma_transfer_number_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2042   .text.hals_dma_channel_enable:00000000 hals_dma_channel_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:688    .text.hal_dma_start:000000c0 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:693    .text.hal_dma_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:700    .text.hal_dma_stop:00000000 hal_dma_stop
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3035   .text.hals_dma_flag_clear:00000000 hals_dma_flag_clear
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:767    .text.hal_dma_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:774    .text.hal_dma_irq:00000000 hal_dma_irq
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3223   .text.hals_dma_interrupt_flag_get:00000000 hals_dma_interrupt_flag_get
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3388   .text.hals_dma_interrupt_flag_clear:00000000 hals_dma_interrupt_flag_clear
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3155   .text.hals_dma_interrupt_disable:00000000 hals_dma_interrupt_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:936    .text.hal_dma_irq:000000e4 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:941    .text.hal_dma_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:948    .text.hal_dma_irq_handle_set:00000000 hal_dma_irq_handle_set
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3090   .text.hals_dma_interrupt_enable:00000000 hals_dma_interrupt_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1092   .text.hal_dma_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1099   .text.hal_dma_irq_handle_all_reset:00000000 hal_dma_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1161   .text.hal_dma_start_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1168   .text.hal_dma_start_poll:00000000 hal_dma_start_poll
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2968   .text.hals_dma_flag_get:00000000 hals_dma_flag_get
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1338   .text.hal_dma_start_poll:000000f0 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1343   .text.hal_dma_start_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1350   .text.hal_dma_start_interrupt:00000000 hal_dma_start_interrupt
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1570   .text.hal_dma_start_interrupt:00000150 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1575   .text.hal_dma_stop_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1582   .text.hal_dma_stop_interrupt:00000000 hal_dma_stop_interrupt
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1680   .text.hal_dma_channel_remap_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1687   .text.hal_dma_channel_remap_enable:00000000 hal_dma_channel_remap_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1725   .text.hal_dma_channel_remap_enable:00000020 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1730   .text.hal_dma_channel_remap_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1737   .text.hal_dma_channel_remap_disable:00000000 hal_dma_channel_remap_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1778   .text.hal_dma_channel_remap_disable:00000024 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1783   .text.hals_dma_circulation_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1790   .text.hals_dma_circulation_enable:00000000 hals_dma_circulation_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1841   .text.hals_dma_circulation_enable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1846   .text.hals_dma_circulation_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1853   .text.hals_dma_circulation_disable:00000000 hals_dma_circulation_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1904   .text.hals_dma_circulation_disable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1909   .text.hals_dma_memory_to_memory_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1916   .text.hals_dma_memory_to_memory_enable:00000000 hals_dma_memory_to_memory_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1967   .text.hals_dma_memory_to_memory_enable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1972   .text.hals_dma_memory_to_memory_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:1979   .text.hals_dma_memory_to_memory_disable:00000000 hals_dma_memory_to_memory_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2030   .text.hals_dma_memory_to_memory_disable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2035   .text.hals_dma_channel_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2093   .text.hals_dma_channel_enable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2098   .text.hals_dma_channel_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2156   .text.hals_dma_channel_disable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2161   .text.hals_dma_periph_address_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2212   .text.hals_dma_periph_address_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2217   .text.hals_dma_memory_address_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2268   .text.hals_dma_memory_address_config:0000002c $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2273   .text.hals_dma_transfer_number_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2327   .text.hals_dma_transfer_number_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2332   .text.hals_dma_transfer_number_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2339   .text.hals_dma_transfer_number_get:00000000 hals_dma_transfer_number_get
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2380   .text.hals_dma_transfer_number_get:00000028 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2385   .text.hals_dma_priority_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2392   .text.hals_dma_priority_config:00000000 hals_dma_priority_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2457   .text.hals_dma_priority_config:00000050 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2462   .text.hals_dma_memory_width_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2469   .text.hals_dma_memory_width_config:00000000 hals_dma_memory_width_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2534   .text.hals_dma_memory_width_config:00000050 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2539   .text.hasl_dma_periph_width_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2546   .text.hasl_dma_periph_width_config:00000000 hasl_dma_periph_width_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2611   .text.hasl_dma_periph_width_config:00000050 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2616   .text.hals_dma_memory_increase_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2623   .text.hals_dma_memory_increase_enable:00000000 hals_dma_memory_increase_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2674   .text.hals_dma_memory_increase_enable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2679   .text.dma_memory_increase_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2686   .text.dma_memory_increase_disable:00000000 dma_memory_increase_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2737   .text.dma_memory_increase_disable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2742   .text.hals_dma_periph_increase_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2749   .text.hals_dma_periph_increase_enable:00000000 hals_dma_periph_increase_enable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2800   .text.hals_dma_periph_increase_enable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2805   .text.dma_periph_increase_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2812   .text.dma_periph_increase_disable:00000000 dma_periph_increase_disable
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2863   .text.dma_periph_increase_disable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2868   .text.hals_dma_transfer_direction_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2875   .text.hals_dma_transfer_direction_config:00000000 hals_dma_transfer_direction_config
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2956   .text.hals_dma_transfer_direction_config:00000074 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:2961   .text.hals_dma_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3023   .text.hals_dma_flag_get:00000038 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3028   .text.hals_dma_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3078   .text.hals_dma_flag_clear:0000002c $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3083   .text.hals_dma_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3143   .text.hals_dma_interrupt_enable:00000040 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3148   .text.hals_dma_interrupt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3211   .text.hals_dma_interrupt_disable:00000044 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3216   .text.hals_dma_interrupt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3375   .text.hals_dma_interrupt_flag_get:000000d0 $d
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3381   .text.hals_dma_interrupt_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccPdLmwn.s:3431   .text.hals_dma_interrupt_flag_clear:0000002c $d
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
