   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_usrt.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hal_usrt_struct_init,"ax",%progbits
  16              		.align	1
  17              		.global	hal_usrt_struct_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hal_usrt_struct_init:
  25              	.LFB119:
  26              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \file    gd32f3x0_hal_usrt.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief   USRT driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #define USRT_DUMMY_DATA            ((uint16_t) 0xFFFFU)
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static uint16_t _usrt_data_bit_mask_get(hal_usrt_dev_struct *usrt);
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static FlagStatus _usrt_error_flag_get(hal_usrt_dev_struct *usrt);
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_transmit_complete_interrupt(void *usrt);
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_transmit_interrupt(void *usrt);
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_receive_interrupt(void *usrt);
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_tx_rx_interrupt(void *usrt);
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_transmit_dma(void *dma);
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_receive_dma(void *dma);
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_dma_error(void *dma);
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      initialize the usrt structure with the default values
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 note: this function must be called after the structure is created
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  hal_struct_type: type of usrt structure for initialization
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        HAL_USRT_INIT_STRUCT: initialization structure
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        HAL_USRT_DEV_STRUCT: device information structure
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        HAL_USRT_USER_CALLBCAK_STRUCT: user callback structure
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_struct: structure pointer
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hal_usrt_struct_init(hal_usrt_struct_type_enum hal_struct_type, void *p_struct)
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
  27              		.loc 1 61 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 3960     		str	r1, [r7]
  41 000a FB71     		strb	r3, [r7, #7]
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == p_struct) {
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [*p_struct] value is invalid");
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return;
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     switch(hal_struct_type) {
  42              		.loc 1 69 5
  43 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  44 000e 022B     		cmp	r3, #2
  45 0010 69D0     		beq	.L2
  46 0012 022B     		cmp	r3, #2
  47 0014 6EDC     		bgt	.L7
  48 0016 002B     		cmp	r3, #0
  49 0018 02D0     		beq	.L4
  50 001a 012B     		cmp	r3, #1
  51 001c 1DD0     		beq	.L5
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case HAL_USRT_INIT_STRUCT:
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* initialize usrt initialization structure with the default values */
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->baudrate             = 115200U;
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->parity               = USRT_PARITY_NONE;
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->word_length          = USRT_WORD_LENGTH_8BIT;
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->stop_bit             = USRT_STOP_BIT_1;
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->direction            = USRT_DIRECTION_RX_TX;
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->rx_fifo_en           = DISABLE;
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->clock_polarity       = USRT_CLOCK_POLARITY_LOW;
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->clock_phase          = USRT_CLOCK_PHASE_1CK;
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->clock_length_lastbit = USRT_LAST_BIT_NOT_OUTPUT;
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case HAL_USRT_DEV_STRUCT:
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* initialize usrt device information structure with the default values */
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->periph                            = 0U;
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.error_handle             = NULL;
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.receive_complete_handle  = NULL;
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.transmit_complete_handle = NULL;
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.transmit_ready_handle    = NULL;
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->p_dma_rx                          = NULL;
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->p_dma_tx                          = NULL;
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->txbuffer.buffer                   = NULL;
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->txbuffer.length                   = 0U;
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->txbuffer.pos                      = 0U;
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rxbuffer.buffer                   = NULL;
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rxbuffer.length                   = 0U;
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rxbuffer.pos                      = 0U;
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->data_bit_mask                     = 0U;
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->last_error                        = HAL_USRT_ERROR_NONE;
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->error_state                       = HAL_USRT_ERROR_NONE;
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->tx_state                          = USRT_STATE_FREE;
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rx_state                          = USRT_STATE_FREE;
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rx_callback                       = NULL;
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->tx_callback                       = NULL;
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->mutex                             = HAL_MUTEX_UNLOCKED;
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->priv                              = NULL;
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case HAL_USRT_USER_CALLBCAK_STRUCT:
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* initialize user callback structure with the default values */
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_user_callback_struct *)p_struct)->complete_func = NULL;
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_user_callback_struct *)p_struct)->error_func = NULL;
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     default:
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGW("parameter [hal_struct_type] value is undefine");
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
  52              		.loc 1 117 9
  53 001e 69E0     		b	.L7
  54              	.L4:
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->parity               = USRT_PARITY_NONE;
  55              		.loc 1 72 66
  56 0020 3B68     		ldr	r3, [r7]
  57 0022 4FF4E132 		mov	r2, #115200
  58 0026 1A60     		str	r2, [r3]
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->word_length          = USRT_WORD_LENGTH_8BIT;
  59              		.loc 1 73 66
  60 0028 3B68     		ldr	r3, [r7]
  61 002a 0022     		movs	r2, #0
  62 002c 5A60     		str	r2, [r3, #4]
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->stop_bit             = USRT_STOP_BIT_1;
  63              		.loc 1 74 66
  64 002e 3B68     		ldr	r3, [r7]
  65 0030 0022     		movs	r2, #0
  66 0032 9A60     		str	r2, [r3, #8]
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->direction            = USRT_DIRECTION_RX_TX;
  67              		.loc 1 75 66
  68 0034 3B68     		ldr	r3, [r7]
  69 0036 0022     		movs	r2, #0
  70 0038 DA60     		str	r2, [r3, #12]
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->rx_fifo_en           = DISABLE;
  71              		.loc 1 76 66
  72 003a 3B68     		ldr	r3, [r7]
  73 003c 0C22     		movs	r2, #12
  74 003e 1A61     		str	r2, [r3, #16]
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->clock_polarity       = USRT_CLOCK_POLARITY_LOW;
  75              		.loc 1 77 66
  76 0040 3B68     		ldr	r3, [r7]
  77 0042 0022     		movs	r2, #0
  78 0044 1A75     		strb	r2, [r3, #20]
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->clock_phase          = USRT_CLOCK_PHASE_1CK;
  79              		.loc 1 78 66
  80 0046 3B68     		ldr	r3, [r7]
  81 0048 0022     		movs	r2, #0
  82 004a 9A61     		str	r2, [r3, #24]
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_init_struct *)p_struct)->clock_length_lastbit = USRT_LAST_BIT_NOT_OUTPUT;
  83              		.loc 1 79 66
  84 004c 3B68     		ldr	r3, [r7]
  85 004e 0022     		movs	r2, #0
  86 0050 DA61     		str	r2, [r3, #28]
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
  87              		.loc 1 80 66
  88 0052 3B68     		ldr	r3, [r7]
  89 0054 0022     		movs	r2, #0
  90 0056 1A62     		str	r2, [r3, #32]
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
  91              		.loc 1 81 9
  92 0058 4DE0     		b	.L6
  93              	.L5:
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.error_handle             = NULL;
  94              		.loc 1 85 78
  95 005a 3B68     		ldr	r3, [r7]
  96 005c 0022     		movs	r2, #0
  97 005e 1A60     		str	r2, [r3]
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.receive_complete_handle  = NULL;
  98              		.loc 1 86 78
  99 0060 3B68     		ldr	r3, [r7]
 100 0062 0022     		movs	r2, #0
 101 0064 1A61     		str	r2, [r3, #16]
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.transmit_complete_handle = NULL;
 102              		.loc 1 87 78
 103 0066 3B68     		ldr	r3, [r7]
 104 0068 0022     		movs	r2, #0
 105 006a 5A60     		str	r2, [r3, #4]
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->usrt_irq.transmit_ready_handle    = NULL;
 106              		.loc 1 88 78
 107 006c 3B68     		ldr	r3, [r7]
 108 006e 0022     		movs	r2, #0
 109 0070 DA60     		str	r2, [r3, #12]
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->p_dma_rx                          = NULL;
 110              		.loc 1 89 78
 111 0072 3B68     		ldr	r3, [r7]
 112 0074 0022     		movs	r2, #0
 113 0076 9A60     		str	r2, [r3, #8]
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->p_dma_tx                          = NULL;
 114              		.loc 1 90 78
 115 0078 3B68     		ldr	r3, [r7]
 116 007a 0022     		movs	r2, #0
 117 007c 5A61     		str	r2, [r3, #20]
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->txbuffer.buffer                   = NULL;
 118              		.loc 1 91 78
 119 007e 3B68     		ldr	r3, [r7]
 120 0080 0022     		movs	r2, #0
 121 0082 9A61     		str	r2, [r3, #24]
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->txbuffer.length                   = 0U;
 122              		.loc 1 92 78
 123 0084 3B68     		ldr	r3, [r7]
 124 0086 0022     		movs	r2, #0
 125 0088 DA61     		str	r2, [r3, #28]
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->txbuffer.pos                      = 0U;
 126              		.loc 1 93 78
 127 008a 3B68     		ldr	r3, [r7]
 128 008c 0022     		movs	r2, #0
 129 008e 1A62     		str	r2, [r3, #32]
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rxbuffer.buffer                   = NULL;
 130              		.loc 1 94 78
 131 0090 3B68     		ldr	r3, [r7]
 132 0092 0022     		movs	r2, #0
 133 0094 5A62     		str	r2, [r3, #36]
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rxbuffer.length                   = 0U;
 134              		.loc 1 95 78
 135 0096 3B68     		ldr	r3, [r7]
 136 0098 0022     		movs	r2, #0
 137 009a 9A62     		str	r2, [r3, #40]
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rxbuffer.pos                      = 0U;
 138              		.loc 1 96 78
 139 009c 3B68     		ldr	r3, [r7]
 140 009e 0022     		movs	r2, #0
 141 00a0 DA62     		str	r2, [r3, #44]
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->data_bit_mask                     = 0U;
 142              		.loc 1 97 78
 143 00a2 3B68     		ldr	r3, [r7]
 144 00a4 0022     		movs	r2, #0
 145 00a6 1A63     		str	r2, [r3, #48]
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->last_error                        = HAL_USRT_ERROR_NONE;
 146              		.loc 1 98 78
 147 00a8 3B68     		ldr	r3, [r7]
 148 00aa 0022     		movs	r2, #0
 149 00ac 9A86     		strh	r2, [r3, #52]	@ movhi
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->error_state                       = HAL_USRT_ERROR_NONE;
 150              		.loc 1 99 78
 151 00ae 3B68     		ldr	r3, [r7]
 152 00b0 0022     		movs	r2, #0
 153 00b2 DA86     		strh	r2, [r3, #54]	@ movhi
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->tx_state                          = USRT_STATE_FREE;
 154              		.loc 1 100 78
 155 00b4 3B68     		ldr	r3, [r7]
 156 00b6 0022     		movs	r2, #0
 157 00b8 1A87     		strh	r2, [r3, #56]	@ movhi
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rx_state                          = USRT_STATE_FREE;
 158              		.loc 1 101 78
 159 00ba 3B68     		ldr	r3, [r7]
 160 00bc 0022     		movs	r2, #0
 161 00be 83F83A20 		strb	r2, [r3, #58]
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->rx_callback                       = NULL;
 162              		.loc 1 102 78
 163 00c2 3B68     		ldr	r3, [r7]
 164 00c4 0022     		movs	r2, #0
 165 00c6 83F83B20 		strb	r2, [r3, #59]
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->tx_callback                       = NULL;
 166              		.loc 1 103 78
 167 00ca 3B68     		ldr	r3, [r7]
 168 00cc 0022     		movs	r2, #0
 169 00ce DA63     		str	r2, [r3, #60]
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->mutex                             = HAL_MUTEX_UNLOCKED;
 170              		.loc 1 104 78
 171 00d0 3B68     		ldr	r3, [r7]
 172 00d2 0022     		movs	r2, #0
 173 00d4 1A64     		str	r2, [r3, #64]
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_dev_struct *)p_struct)->priv                              = NULL;
 174              		.loc 1 105 78
 175 00d6 3B68     		ldr	r3, [r7]
 176 00d8 0022     		movs	r2, #0
 177 00da 83F84420 		strb	r2, [r3, #68]
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 178              		.loc 1 106 78
 179 00de 3B68     		ldr	r3, [r7]
 180 00e0 0022     		movs	r2, #0
 181 00e2 9A64     		str	r2, [r3, #72]
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 182              		.loc 1 107 9
 183 00e4 07E0     		b	.L6
 184              	.L2:
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         ((hal_usrt_user_callback_struct *)p_struct)->error_func = NULL;
 185              		.loc 1 111 68
 186 00e6 3B68     		ldr	r3, [r7]
 187 00e8 0022     		movs	r2, #0
 188 00ea 1A60     		str	r2, [r3]
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 189              		.loc 1 112 65
 190 00ec 3B68     		ldr	r3, [r7]
 191 00ee 0022     		movs	r2, #0
 192 00f0 5A60     		str	r2, [r3, #4]
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 193              		.loc 1 113 9
 194 00f2 00E0     		b	.L6
 195              	.L7:
 196              		.loc 1 117 9
 197 00f4 00BF     		nop
 198              	.L6:
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 199              		.loc 1 119 1
 200 00f6 00BF     		nop
 201 00f8 0C37     		adds	r7, r7, #12
 202              		.cfi_def_cfa_offset 4
 203 00fa BD46     		mov	sp, r7
 204              		.cfi_def_cfa_register 13
 205              		@ sp needed
 206 00fc 80BC     		pop	{r7}
 207              		.cfi_restore 7
 208              		.cfi_def_cfa_offset 0
 209 00fe 7047     		bx	lr
 210              		.cfi_endproc
 211              	.LFE119:
 213              		.section	.text.hal_usrt_deinit,"ax",%progbits
 214              		.align	1
 215              		.global	hal_usrt_deinit
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	hal_usrt_deinit:
 222              	.LFB120:
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      deinitialize the usrt
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hal_usrt_deinit(hal_usrt_dev_struct *usrt)
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 223              		.loc 1 130 1
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 16
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 84B0     		sub	sp, sp, #16
 232              		.cfi_def_cfa_offset 24
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 235 0006 7860     		str	r0, [r7, #4]
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t periph;
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     periph = usrt->periph;
 236              		.loc 1 133 12
 237 0008 7B68     		ldr	r3, [r7, #4]
 238 000a 1B68     		ldr	r3, [r3]
 239 000c FB60     		str	r3, [r7, #12]
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((USART0 == periph) || (USART1 == periph)) {
 240              		.loc 1 134 7
 241 000e FB68     		ldr	r3, [r7, #12]
 242 0010 0A4A     		ldr	r2, .L12
 243 0012 9342     		cmp	r3, r2
 244 0014 03D0     		beq	.L9
 245              		.loc 1 134 27 discriminator 1
 246 0016 FB68     		ldr	r3, [r7, #12]
 247 0018 094A     		ldr	r2, .L12+4
 248 001a 9342     		cmp	r3, r2
 249 001c 09D1     		bne	.L11
 250              	.L9:
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* deinitialize the periph and the device information sturcture */
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_deinit(periph);
 251              		.loc 1 136 9
 252 001e F868     		ldr	r0, [r7, #12]
 253 0020 FFF7FEFF 		bl	hals_usrt_deinit
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hal_usrt_struct_init(HAL_USRT_DEV_STRUCT, usrt);
 254              		.loc 1 137 9
 255 0024 7968     		ldr	r1, [r7, #4]
 256 0026 0120     		movs	r0, #1
 257 0028 FFF7FEFF 		bl	hal_usrt_struct_init
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->periph = periph;
 258              		.loc 1 138 22
 259 002c 7B68     		ldr	r3, [r7, #4]
 260 002e FA68     		ldr	r2, [r7, #12]
 261 0030 1A60     		str	r2, [r3]
 262              	.L11:
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt->periph] value is invalid");
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 263              		.loc 1 142 1
 264 0032 00BF     		nop
 265 0034 1037     		adds	r7, r7, #16
 266              		.cfi_def_cfa_offset 8
 267 0036 BD46     		mov	sp, r7
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 0038 80BD     		pop	{r7, pc}
 271              	.L13:
 272 003a 00BF     		.align	2
 273              	.L12:
 274 003c 00380140 		.word	1073821696
 275 0040 00440040 		.word	1073759232
 276              		.cfi_endproc
 277              	.LFE120:
 279              		.section	.text.hal_usrt_init,"ax",%progbits
 280              		.align	1
 281              		.global	hal_usrt_init
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu softvfp
 287              	hal_usrt_init:
 288              	.LFB121:
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      initialize the usrt with specified values
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  periph: specify which USRT is initialized
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_init: the initialization data needed to initialize usrt
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   baudrate: communication baudrate
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   parity: USRT_PARITY_NONE, USRT_PARITY_EVEN, USRT_PARITY_ODD
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   word_length: USRT_WORD_LENGTH_8BIT, USRT_WORD_LENGTH_9BIT
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   stop_bit: USRT_STOP_BIT_1, USRT_STOP_BIT_2, USRT_STOP_BIT_1_5
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   direction: USRT_DIRECTION_RX_TX, USRT_DIRECTION_RX_ONLY, USRT_DIRECTION_TX_ONLY
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   rx_fifo_en：DISABLE, ENABLE
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   clock_polarity: USRT_CLOCK_POLARITY_LOW, USRT_CLOCK_POLARITY_HIGH
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   clock_phase: USRT_CLOCK_PHASE_1CK, USRT_CLOCK_PHASE_2CK
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   clock_length_lastbit: USRT_LAST_BIT_NOT_OUTPUT, USRT_LAST_BIT_OUTPUT
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_init(hal_usrt_dev_struct *usrt, uint32_t periph, hal_usrt_init_struct *p_init)
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 289              		.loc 1 164 1
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 24
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0000 80B5     		push	{r7, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 86B0     		sub	sp, sp, #24
 298              		.cfi_def_cfa_offset 32
 299 0004 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 301 0006 F860     		str	r0, [r7, #12]
 302 0008 B960     		str	r1, [r7, #8]
 303 000a 7A60     		str	r2, [r7, #4]
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t reg_temp;
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check usrt pointer and p_init address */
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_init)) {
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("pointer [usrt] or [p_init] address is invalid");
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check periph parameter */
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((USART0 != periph) && (USART1 != periph)) {
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [periph] value is invalid");
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_VAL;
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check periph value from usrt device struct */
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(0U != usrt->periph) {
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGI("periph value from usrt device struct has been rewrite");
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock uart */
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 304              		.loc 1 187 5
 305 000c FB68     		ldr	r3, [r7, #12]
 306 000e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 307 0012 012B     		cmp	r3, #1
 308 0014 02D1     		bne	.L15
 309              		.loc 1 187 5 is_stmt 0 discriminator 1
 310 0016 6FF00103 		mvn	r3, #1
 311 001a 71E0     		b	.L16
 312              	.L15:
 313              		.loc 1 187 5 discriminator 2
 314 001c FB68     		ldr	r3, [r7, #12]
 315 001e 0122     		movs	r2, #1
 316 0020 83F84420 		strb	r2, [r3, #68]
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->periph = periph;
 317              		.loc 1 189 18 is_stmt 1 discriminator 2
 318 0024 FB68     		ldr	r3, [r7, #12]
 319 0026 BA68     		ldr	r2, [r7, #8]
 320 0028 1A60     		str	r2, [r3]
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable usrt */
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_disable(periph);
 321              		.loc 1 192 5 discriminator 2
 322 002a B868     		ldr	r0, [r7, #8]
 323 002c FFF7FEFF 		bl	hals_usrt_disable
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure CTL0 register */
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     reg_temp = USART_CTL0(periph);
 324              		.loc 1 195 16 discriminator 2
 325 0030 BB68     		ldr	r3, [r7, #8]
 326              		.loc 1 195 14 discriminator 2
 327 0032 1B68     		ldr	r3, [r3]
 328 0034 7B61     		str	r3, [r7, #20]
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     reg_temp &= ~(USART_CTL0_PM | USART_CTL0_PCEN | USART_CTL0_WL | USART_CTL0_REN | USART_CTL0_TEN
 329              		.loc 1 196 14 discriminator 2
 330 0036 7B69     		ldr	r3, [r7, #20]
 331 0038 23F4B053 		bic	r3, r3, #5632
 332 003c 23F00C03 		bic	r3, r3, #12
 333 0040 7B61     		str	r3, [r7, #20]
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     reg_temp |= (p_init->direction | p_init->parity | p_init->word_length);
 334              		.loc 1 197 24 discriminator 2
 335 0042 7B68     		ldr	r3, [r7, #4]
 336 0044 1A69     		ldr	r2, [r3, #16]
 337              		.loc 1 197 44 discriminator 2
 338 0046 7B68     		ldr	r3, [r7, #4]
 339 0048 5B68     		ldr	r3, [r3, #4]
 340              		.loc 1 197 36 discriminator 2
 341 004a 1A43     		orrs	r2, r2, r3
 342              		.loc 1 197 61 discriminator 2
 343 004c 7B68     		ldr	r3, [r7, #4]
 344 004e 9B68     		ldr	r3, [r3, #8]
 345              		.loc 1 197 53 discriminator 2
 346 0050 1343     		orrs	r3, r3, r2
 347              		.loc 1 197 14 discriminator 2
 348 0052 7A69     		ldr	r2, [r7, #20]
 349 0054 1343     		orrs	r3, r3, r2
 350 0056 7B61     		str	r3, [r7, #20]
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(periph) = reg_temp;
 351              		.loc 1 198 5 discriminator 2
 352 0058 BB68     		ldr	r3, [r7, #8]
 353              		.loc 1 198 24 discriminator 2
 354 005a 7A69     		ldr	r2, [r7, #20]
 355 005c 1A60     		str	r2, [r3]
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure CTL1 register */
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     reg_temp = USART_CTL1(periph);
 356              		.loc 1 201 16 discriminator 2
 357 005e BB68     		ldr	r3, [r7, #8]
 358 0060 0433     		adds	r3, r3, #4
 359              		.loc 1 201 14 discriminator 2
 360 0062 1B68     		ldr	r3, [r3]
 361 0064 7B61     		str	r3, [r7, #20]
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     reg_temp &= ~(USART_CTL1_STB | USART_CTL1_CLEN | USART_CTL1_CPH | USART_CTL1_CPL);
 362              		.loc 1 202 14 discriminator 2
 363 0066 7B69     		ldr	r3, [r7, #20]
 364 0068 23F45C53 		bic	r3, r3, #14080
 365 006c 7B61     		str	r3, [r7, #20]
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     reg_temp |= (p_init->stop_bit | p_init->clock_length_lastbit | p_init->clock_phase | p_init->cl
 366              		.loc 1 203 24 discriminator 2
 367 006e 7B68     		ldr	r3, [r7, #4]
 368 0070 DA68     		ldr	r2, [r3, #12]
 369              		.loc 1 203 43 discriminator 2
 370 0072 7B68     		ldr	r3, [r7, #4]
 371 0074 1B6A     		ldr	r3, [r3, #32]
 372              		.loc 1 203 35 discriminator 2
 373 0076 1A43     		orrs	r2, r2, r3
 374              		.loc 1 203 74 discriminator 2
 375 0078 7B68     		ldr	r3, [r7, #4]
 376 007a DB69     		ldr	r3, [r3, #28]
 377              		.loc 1 203 66 discriminator 2
 378 007c 1A43     		orrs	r2, r2, r3
 379              		.loc 1 203 96 discriminator 2
 380 007e 7B68     		ldr	r3, [r7, #4]
 381 0080 9B69     		ldr	r3, [r3, #24]
 382              		.loc 1 203 88 discriminator 2
 383 0082 1A43     		orrs	r2, r2, r3
 384              		.loc 1 203 14 discriminator 2
 385 0084 7B69     		ldr	r3, [r7, #20]
 386 0086 1343     		orrs	r3, r3, r2
 387 0088 43F40063 		orr	r3, r3, #2048
 388 008c 7B61     		str	r3, [r7, #20]
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(periph) = reg_temp;
 389              		.loc 1 204 5 discriminator 2
 390 008e BB68     		ldr	r3, [r7, #8]
 391 0090 0433     		adds	r3, r3, #4
 392 0092 1A46     		mov	r2, r3
 393              		.loc 1 204 24 discriminator 2
 394 0094 7B69     		ldr	r3, [r7, #20]
 395 0096 1360     		str	r3, [r2]
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure RFCS register */
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(ENABLE == p_init->rx_fifo_en) {
 396              		.loc 1 207 24 discriminator 2
 397 0098 7B68     		ldr	r3, [r7, #4]
 398 009a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 399              		.loc 1 207 7 discriminator 2
 400 009c 012B     		cmp	r3, #1
 401 009e 08D1     		bne	.L17
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_RFCS(periph) |= USART_RFCS_RFEN;
 402              		.loc 1 208 28
 403 00a0 BB68     		ldr	r3, [r7, #8]
 404 00a2 D033     		adds	r3, r3, #208
 405 00a4 1B68     		ldr	r3, [r3]
 406 00a6 BA68     		ldr	r2, [r7, #8]
 407 00a8 D032     		adds	r2, r2, #208
 408 00aa 43F48073 		orr	r3, r3, #256
 409 00ae 1360     		str	r3, [r2]
 410 00b0 07E0     		b	.L18
 411              	.L17:
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_RFCS(periph) &= ~USART_RFCS_RFEN;
 412              		.loc 1 210 28
 413 00b2 BB68     		ldr	r3, [r7, #8]
 414 00b4 D033     		adds	r3, r3, #208
 415 00b6 1B68     		ldr	r3, [r3]
 416 00b8 BA68     		ldr	r2, [r7, #8]
 417 00ba D032     		adds	r2, r2, #208
 418 00bc 23F48073 		bic	r3, r3, #256
 419 00c0 1360     		str	r3, [r2]
 420              	.L18:
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure baudrate */
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_baudrate_set(periph, p_init->baudrate);
 421              		.loc 1 214 5
 422 00c2 7B68     		ldr	r3, [r7, #4]
 423 00c4 1B68     		ldr	r3, [r3]
 424 00c6 1946     		mov	r1, r3
 425 00c8 B868     		ldr	r0, [r7, #8]
 426 00ca FFF7FEFF 		bl	hals_usrt_baudrate_set
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask = _usrt_data_bit_mask_get(usrt);
 427              		.loc 1 215 27
 428 00ce F868     		ldr	r0, [r7, #12]
 429 00d0 FFF7FEFF 		bl	_usrt_data_bit_mask_get
 430 00d4 0346     		mov	r3, r0
 431 00d6 1A46     		mov	r2, r3
 432              		.loc 1 215 25
 433 00d8 FB68     		ldr	r3, [r7, #12]
 434 00da 9A86     		strh	r2, [r3, #52]	@ movhi
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* reset the Rx and Tx state */
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_FREE;
 435              		.loc 1 218 20
 436 00dc FB68     		ldr	r3, [r7, #12]
 437 00de 0022     		movs	r2, #0
 438 00e0 83F83A20 		strb	r2, [r3, #58]
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_FREE;
 439              		.loc 1 219 20
 440 00e4 FB68     		ldr	r3, [r7, #12]
 441 00e6 0022     		movs	r2, #0
 442 00e8 83F83B20 		strb	r2, [r3, #59]
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable usart */
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_enable(usrt->periph);
 443              		.loc 1 222 5
 444 00ec FB68     		ldr	r3, [r7, #12]
 445 00ee 1B68     		ldr	r3, [r3]
 446 00f0 1846     		mov	r0, r3
 447 00f2 FFF7FEFF 		bl	hals_usrt_enable
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 448              		.loc 1 225 5
 449 00f6 FB68     		ldr	r3, [r7, #12]
 450 00f8 0022     		movs	r2, #0
 451 00fa 83F84420 		strb	r2, [r3, #68]
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 452              		.loc 1 227 12
 453 00fe 0023     		movs	r3, #0
 454              	.L16:
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 455              		.loc 1 228 1
 456 0100 1846     		mov	r0, r3
 457 0102 1837     		adds	r7, r7, #24
 458              		.cfi_def_cfa_offset 8
 459 0104 BD46     		mov	sp, r7
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 0106 80BD     		pop	{r7, pc}
 463              		.cfi_endproc
 464              	.LFE121:
 466              		.section	.text.hal_usrt_irq,"ax",%progbits
 467              		.align	1
 468              		.global	hal_usrt_irq
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu softvfp
 474              	hal_usrt_irq:
 475              	.LFB122:
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      usrt interrupt handler content function,which is merely used in usrt_handler
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hal_usrt_irq(hal_usrt_dev_struct *usrt)
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 476              		.loc 1 239 1
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 8
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480 0000 80B5     		push	{r7, lr}
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 7, -8
 483              		.cfi_offset 14, -4
 484 0002 82B0     		sub	sp, sp, #8
 485              		.cfi_def_cfa_offset 16
 486 0004 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 488 0006 7860     		str	r0, [r7, #4]
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET == _usrt_error_flag_get(usrt)) {
 489              		.loc 1 240 17
 490 0008 7868     		ldr	r0, [r7, #4]
 491 000a FFF7FEFF 		bl	_usrt_error_flag_get
 492 000e 0346     		mov	r3, r0
 493              		.loc 1 240 7
 494 0010 002B     		cmp	r3, #0
 495 0012 13D1     		bne	.L20
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether USRT is in receiver mode or not */
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_interrupt_flag_get(usrt->periph, USART_INT_FLAG_RBNE)) {
 496              		.loc 1 242 21
 497 0014 7B68     		ldr	r3, [r7, #4]
 498 0016 1B68     		ldr	r3, [r3]
 499 0018 6C49     		ldr	r1, .L37
 500 001a 1846     		mov	r0, r3
 501 001c FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 502 0020 0346     		mov	r3, r0
 503              		.loc 1 242 11
 504 0022 002B     		cmp	r3, #0
 505 0024 00F09D80 		beq	.L21
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(NULL != usrt->usrt_irq.receive_complete_handle) {
 506              		.loc 1 243 38
 507 0028 7B68     		ldr	r3, [r7, #4]
 508 002a 5B68     		ldr	r3, [r3, #4]
 509              		.loc 1 243 15
 510 002c 002B     		cmp	r3, #0
 511 002e 00F0C280 		beq	.L33
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 usrt->usrt_irq.receive_complete_handle(usrt);
 512              		.loc 1 244 31
 513 0032 7B68     		ldr	r3, [r7, #4]
 514 0034 5B68     		ldr	r3, [r3, #4]
 515              		.loc 1 244 17
 516 0036 7868     		ldr	r0, [r7, #4]
 517 0038 9847     		blx	r3
 518              	.LVL0:
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             return;
 519              		.loc 1 246 13
 520 003a BCE0     		b	.L33
 521              	.L20:
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the PERR flag is set or not */
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_interrupt_flag_get(usrt->periph, USART_INT_FLAG_PERR)) {
 522              		.loc 1 250 21
 523 003c 7B68     		ldr	r3, [r7, #4]
 524 003e 1B68     		ldr	r3, [r3]
 525 0040 6349     		ldr	r1, .L37+4
 526 0042 1846     		mov	r0, r3
 527 0044 FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 528 0048 0346     		mov	r3, r0
 529              		.loc 1 250 11
 530 004a 002B     		cmp	r3, #0
 531 004c 10D0     		beq	.L24
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_PERR);
 532              		.loc 1 251 13
 533 004e 7B68     		ldr	r3, [r7, #4]
 534 0050 1B68     		ldr	r3, [r3]
 535 0052 5F49     		ldr	r1, .L37+4
 536 0054 1846     		mov	r0, r3
 537 0056 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->error_state |= HAL_USRT_ERROR_PERR;
 538              		.loc 1 252 31
 539 005a 7B68     		ldr	r3, [r7, #4]
 540 005c 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 541 005e 9BB2     		uxth	r3, r3
 542 0060 43F00103 		orr	r3, r3, #1
 543 0064 9AB2     		uxth	r2, r3
 544 0066 7B68     		ldr	r3, [r7, #4]
 545 0068 1A87     		strh	r2, [r3, #56]	@ movhi
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->last_error = HAL_USRT_ERROR_PERR;
 546              		.loc 1 253 30
 547 006a 7B68     		ldr	r3, [r7, #4]
 548 006c 0122     		movs	r2, #1
 549 006e DA86     		strh	r2, [r3, #54]	@ movhi
 550              	.L24:
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the NERR flag is set or not */
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_interrupt_flag_get(usrt->periph,
 551              		.loc 1 257 21
 552 0070 7B68     		ldr	r3, [r7, #4]
 553 0072 1B68     		ldr	r3, [r3]
 554 0074 5749     		ldr	r1, .L37+8
 555 0076 1846     		mov	r0, r3
 556 0078 FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 557 007c 0346     		mov	r3, r0
 558              		.loc 1 257 11
 559 007e 002B     		cmp	r3, #0
 560 0080 10D0     		beq	.L25
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 USART_INT_FLAG_ERR_NERR)) {
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_ERR_NERR);
 561              		.loc 1 259 13
 562 0082 7B68     		ldr	r3, [r7, #4]
 563 0084 1B68     		ldr	r3, [r3]
 564 0086 5349     		ldr	r1, .L37+8
 565 0088 1846     		mov	r0, r3
 566 008a FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->error_state |= HAL_USRT_ERROR_NERR;
 567              		.loc 1 260 31
 568 008e 7B68     		ldr	r3, [r7, #4]
 569 0090 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 570 0092 9BB2     		uxth	r3, r3
 571 0094 43F00203 		orr	r3, r3, #2
 572 0098 9AB2     		uxth	r2, r3
 573 009a 7B68     		ldr	r3, [r7, #4]
 574 009c 1A87     		strh	r2, [r3, #56]	@ movhi
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->last_error = HAL_USRT_ERROR_NERR;
 575              		.loc 1 261 30
 576 009e 7B68     		ldr	r3, [r7, #4]
 577 00a0 0222     		movs	r2, #2
 578 00a2 DA86     		strh	r2, [r3, #54]	@ movhi
 579              	.L25:
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the FERR flag is set or not */
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_interrupt_flag_get(usrt->periph,
 580              		.loc 1 265 21
 581 00a4 7B68     		ldr	r3, [r7, #4]
 582 00a6 1B68     		ldr	r3, [r3]
 583 00a8 4B49     		ldr	r1, .L37+12
 584 00aa 1846     		mov	r0, r3
 585 00ac FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 586 00b0 0346     		mov	r3, r0
 587              		.loc 1 265 11
 588 00b2 002B     		cmp	r3, #0
 589 00b4 10D0     		beq	.L26
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 USART_INT_FLAG_ERR_FERR)) {
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_ERR_FERR);
 590              		.loc 1 267 13
 591 00b6 7B68     		ldr	r3, [r7, #4]
 592 00b8 1B68     		ldr	r3, [r3]
 593 00ba 4749     		ldr	r1, .L37+12
 594 00bc 1846     		mov	r0, r3
 595 00be FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->error_state |= HAL_USRT_ERROR_FERR;
 596              		.loc 1 268 31
 597 00c2 7B68     		ldr	r3, [r7, #4]
 598 00c4 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 599 00c6 9BB2     		uxth	r3, r3
 600 00c8 43F00403 		orr	r3, r3, #4
 601 00cc 9AB2     		uxth	r2, r3
 602 00ce 7B68     		ldr	r3, [r7, #4]
 603 00d0 1A87     		strh	r2, [r3, #56]	@ movhi
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->last_error = HAL_USRT_ERROR_FERR;
 604              		.loc 1 269 30
 605 00d2 7B68     		ldr	r3, [r7, #4]
 606 00d4 0422     		movs	r2, #4
 607 00d6 DA86     		strh	r2, [r3, #54]	@ movhi
 608              	.L26:
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the ERR ORERR is set or not */
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_interrupt_flag_get(usrt->periph,
 609              		.loc 1 273 21
 610 00d8 7B68     		ldr	r3, [r7, #4]
 611 00da 1B68     		ldr	r3, [r3]
 612 00dc 3F49     		ldr	r1, .L37+16
 613 00de 1846     		mov	r0, r3
 614 00e0 FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 615 00e4 0346     		mov	r3, r0
 616              		.loc 1 273 11
 617 00e6 002B     		cmp	r3, #0
 618 00e8 10D0     		beq	.L27
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 USART_INT_FLAG_ERR_ORERR)) {
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_ERR_ORERR);
 619              		.loc 1 275 13
 620 00ea 7B68     		ldr	r3, [r7, #4]
 621 00ec 1B68     		ldr	r3, [r3]
 622 00ee 3B49     		ldr	r1, .L37+16
 623 00f0 1846     		mov	r0, r3
 624 00f2 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->error_state |= HAL_USRT_ERROR_ORERR;
 625              		.loc 1 276 31
 626 00f6 7B68     		ldr	r3, [r7, #4]
 627 00f8 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 628 00fa 9BB2     		uxth	r3, r3
 629 00fc 43F00803 		orr	r3, r3, #8
 630 0100 9AB2     		uxth	r2, r3
 631 0102 7B68     		ldr	r3, [r7, #4]
 632 0104 1A87     		strh	r2, [r3, #56]	@ movhi
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->last_error = HAL_USRT_ERROR_ORERR;
 633              		.loc 1 277 30
 634 0106 7B68     		ldr	r3, [r7, #4]
 635 0108 0822     		movs	r2, #8
 636 010a DA86     		strh	r2, [r3, #54]	@ movhi
 637              	.L27:
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether RBNE ORERR is set or not */
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_interrupt_flag_get(usrt->periph,
 638              		.loc 1 281 21
 639 010c 7B68     		ldr	r3, [r7, #4]
 640 010e 1B68     		ldr	r3, [r3]
 641 0110 3349     		ldr	r1, .L37+20
 642 0112 1846     		mov	r0, r3
 643 0114 FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 644 0118 0346     		mov	r3, r0
 645              		.loc 1 281 11
 646 011a 002B     		cmp	r3, #0
 647 011c 10D0     		beq	.L28
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 USART_INT_FLAG_RBNE_ORERR)) {
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_RBNE_ORERR);
 648              		.loc 1 283 13
 649 011e 7B68     		ldr	r3, [r7, #4]
 650 0120 1B68     		ldr	r3, [r3]
 651 0122 2F49     		ldr	r1, .L37+20
 652 0124 1846     		mov	r0, r3
 653 0126 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->error_state |= HAL_USRT_ERROR_ORERR;
 654              		.loc 1 284 31
 655 012a 7B68     		ldr	r3, [r7, #4]
 656 012c 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 657 012e 9BB2     		uxth	r3, r3
 658 0130 43F00803 		orr	r3, r3, #8
 659 0134 9AB2     		uxth	r2, r3
 660 0136 7B68     		ldr	r3, [r7, #4]
 661 0138 1A87     		strh	r2, [r3, #56]	@ movhi
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->last_error = HAL_USRT_ERROR_ORERR;
 662              		.loc 1 285 30
 663 013a 7B68     		ldr	r3, [r7, #4]
 664 013c 0822     		movs	r2, #8
 665 013e DA86     		strh	r2, [r3, #54]	@ movhi
 666              	.L28:
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether error state is none or not */
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(HAL_USRT_ERROR_NONE != usrt->error_state) {
 667              		.loc 1 289 39
 668 0140 7B68     		ldr	r3, [r7, #4]
 669 0142 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 670 0144 9BB2     		uxth	r3, r3
 671              		.loc 1 289 11
 672 0146 002B     		cmp	r3, #0
 673 0148 0BD0     		beq	.L21
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(NULL != usrt->usrt_irq.error_handle) {
 674              		.loc 1 290 38
 675 014a 7B68     		ldr	r3, [r7, #4]
 676 014c 1B69     		ldr	r3, [r3, #16]
 677              		.loc 1 290 15
 678 014e 002B     		cmp	r3, #0
 679 0150 33D0     		beq	.L34
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 usrt->usrt_irq.error_handle(usrt);
 680              		.loc 1 291 31
 681 0152 7B68     		ldr	r3, [r7, #4]
 682 0154 1B69     		ldr	r3, [r3, #16]
 683              		.loc 1 291 17
 684 0156 7868     		ldr	r0, [r7, #4]
 685 0158 9847     		blx	r3
 686              	.LVL1:
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 usrt->error_state = HAL_USRT_ERROR_NONE;
 687              		.loc 1 292 35
 688 015a 7B68     		ldr	r3, [r7, #4]
 689 015c 0022     		movs	r2, #0
 690 015e 1A87     		strh	r2, [r3, #56]	@ movhi
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             return;
 691              		.loc 1 294 13
 692 0160 2BE0     		b	.L34
 693              	.L21:
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* transmitter buffer empty interrupt handle */
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != hals_usrt_interrupt_flag_get(usrt->periph, USART_INT_FLAG_TBE)) {
 694              		.loc 1 299 17
 695 0162 7B68     		ldr	r3, [r7, #4]
 696 0164 1B68     		ldr	r3, [r3]
 697 0166 1F49     		ldr	r1, .L37+24
 698 0168 1846     		mov	r0, r3
 699 016a FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 700 016e 0346     		mov	r3, r0
 701              		.loc 1 299 7
 702 0170 002B     		cmp	r3, #0
 703 0172 08D0     		beq	.L30
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(NULL != usrt->usrt_irq.transmit_ready_handle) {
 704              		.loc 1 300 34
 705 0174 7B68     		ldr	r3, [r7, #4]
 706 0176 9B68     		ldr	r3, [r3, #8]
 707              		.loc 1 300 11
 708 0178 002B     		cmp	r3, #0
 709 017a 20D0     		beq	.L35
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->usrt_irq.transmit_ready_handle(usrt);
 710              		.loc 1 301 27
 711 017c 7B68     		ldr	r3, [r7, #4]
 712 017e 9B68     		ldr	r3, [r3, #8]
 713              		.loc 1 301 13
 714 0180 7868     		ldr	r0, [r7, #4]
 715 0182 9847     		blx	r3
 716              	.LVL2:
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return;
 717              		.loc 1 303 9
 718 0184 1BE0     		b	.L35
 719              	.L30:
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* transmission complete interrupt handle */
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != hals_usrt_interrupt_flag_get(usrt->periph, USART_INT_FLAG_TC)) {
 720              		.loc 1 307 17
 721 0186 7B68     		ldr	r3, [r7, #4]
 722 0188 1B68     		ldr	r3, [r3]
 723 018a 1749     		ldr	r1, .L37+28
 724 018c 1846     		mov	r0, r3
 725 018e FFF7FEFF 		bl	hals_usrt_interrupt_flag_get
 726 0192 0346     		mov	r3, r0
 727              		.loc 1 307 7
 728 0194 002B     		cmp	r3, #0
 729 0196 15D0     		beq	.L19
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_TC);
 730              		.loc 1 308 9
 731 0198 7B68     		ldr	r3, [r7, #4]
 732 019a 1B68     		ldr	r3, [r3]
 733 019c 1249     		ldr	r1, .L37+28
 734 019e 1846     		mov	r0, r3
 735 01a0 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(NULL != usrt->usrt_irq.transmit_complete_handle) {
 736              		.loc 1 310 34
 737 01a4 7B68     		ldr	r3, [r7, #4]
 738 01a6 DB68     		ldr	r3, [r3, #12]
 739              		.loc 1 310 11
 740 01a8 002B     		cmp	r3, #0
 741 01aa 0AD0     		beq	.L36
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->usrt_irq.transmit_complete_handle(usrt);
 742              		.loc 1 311 27
 743 01ac 7B68     		ldr	r3, [r7, #4]
 744 01ae DB68     		ldr	r3, [r3, #12]
 745              		.loc 1 311 13
 746 01b0 7868     		ldr	r0, [r7, #4]
 747 01b2 9847     		blx	r3
 748              	.LVL3:
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return;
 749              		.loc 1 313 9
 750 01b4 05E0     		b	.L36
 751              	.L33:
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 752              		.loc 1 246 13
 753 01b6 00BF     		nop
 754 01b8 04E0     		b	.L19
 755              	.L34:
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 756              		.loc 1 294 13
 757 01ba 00BF     		nop
 758 01bc 02E0     		b	.L19
 759              	.L35:
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 760              		.loc 1 303 9
 761 01be 00BF     		nop
 762 01c0 00E0     		b	.L19
 763              	.L36:
 764              		.loc 1 313 9
 765 01c2 00BF     		nop
 766              	.L19:
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 767              		.loc 1 315 1
 768 01c4 0837     		adds	r7, r7, #8
 769              		.cfi_def_cfa_offset 8
 770 01c6 BD46     		mov	sp, r7
 771              		.cfi_def_cfa_register 13
 772              		@ sp needed
 773 01c8 80BD     		pop	{r7, pc}
 774              	.L38:
 775 01ca 00BF     		.align	2
 776              	.L37:
 777 01cc 05000507 		.word	117768197
 778 01d0 08000007 		.word	117440520
 779 01d4 00020207 		.word	117572096
 780 01d8 00020107 		.word	117506560
 781 01dc 00020307 		.word	117637632
 782 01e0 05000307 		.word	117637125
 783 01e4 07000707 		.word	117899271
 784 01e8 06000607 		.word	117833734
 785              		.cfi_endproc
 786              	.LFE122:
 788              		.section	.text.hal_usrt_irq_handle_set,"ax",%progbits
 789              		.align	1
 790              		.global	hal_usrt_irq_handle_set
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu softvfp
 796              	hal_usrt_irq_handle_set:
 797              	.LFB123:
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      set user-defined interrupt callback function,
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 which will be registered and called when corresponding interrupt be triggered
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structrue
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   the structure parameters altering is automatically configured by core
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_irq: point to usrt interrupt callback functions structure
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                   The structure member can be assigned as following parameters:
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        hal_irq_handle_cb function pointer: the function is user-defined,
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the corresponding callback mechanism is in use, and enable corresponding interr
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        NULL: The corresponding callback mechanism is out of use, and
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     disable corresponding interrupt
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hal_usrt_irq_handle_set(hal_usrt_dev_struct *usrt,
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                              hal_usrt_irq_struct *p_irq)
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 798              		.loc 1 334 1
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 82B0     		sub	sp, sp, #8
 807              		.cfi_def_cfa_offset 16
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 811 0008 3960     		str	r1, [r7]
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* set user-defined error interrupt callback */
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_irq->error_handle) {
 812              		.loc 1 336 21
 813 000a 3B68     		ldr	r3, [r7]
 814 000c DB68     		ldr	r3, [r3, #12]
 815              		.loc 1 336 7
 816 000e 002B     		cmp	r3, #0
 817 0010 11D0     		beq	.L40
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = p_irq->error_handle;
 818              		.loc 1 337 44
 819 0012 3B68     		ldr	r3, [r7]
 820 0014 DA68     		ldr	r2, [r3, #12]
 821              		.loc 1 337 37
 822 0016 7B68     		ldr	r3, [r7, #4]
 823 0018 1A61     		str	r2, [r3, #16]
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_ERR);
 824              		.loc 1 338 9
 825 001a 7B68     		ldr	r3, [r7, #4]
 826 001c 1B68     		ldr	r3, [r3]
 827 001e 4FF40071 		mov	r1, #512
 828 0022 1846     		mov	r0, r3
 829 0024 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_PERR);
 830              		.loc 1 339 9
 831 0028 7B68     		ldr	r3, [r7, #4]
 832 002a 1B68     		ldr	r3, [r3]
 833 002c 0821     		movs	r1, #8
 834 002e 1846     		mov	r0, r3
 835 0030 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 836 0034 0FE0     		b	.L41
 837              	.L40:
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = NULL;
 838              		.loc 1 341 37
 839 0036 7B68     		ldr	r3, [r7, #4]
 840 0038 0022     		movs	r2, #0
 841 003a 1A61     		str	r2, [r3, #16]
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_ERR);
 842              		.loc 1 342 9
 843 003c 7B68     		ldr	r3, [r7, #4]
 844 003e 1B68     		ldr	r3, [r3]
 845 0040 4FF40071 		mov	r1, #512
 846 0044 1846     		mov	r0, r3
 847 0046 FFF7FEFF 		bl	hals_usrt_interrupt_disable
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_PERR);
 848              		.loc 1 343 9
 849 004a 7B68     		ldr	r3, [r7, #4]
 850 004c 1B68     		ldr	r3, [r3]
 851 004e 0821     		movs	r1, #8
 852 0050 1846     		mov	r0, r3
 853 0052 FFF7FEFF 		bl	hals_usrt_interrupt_disable
 854              	.L41:
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* set user-defined receive complete interrupt callback */
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_irq->receive_complete_handle) {
 855              		.loc 1 347 21
 856 0056 3B68     		ldr	r3, [r7]
 857 0058 1B68     		ldr	r3, [r3]
 858              		.loc 1 347 7
 859 005a 002B     		cmp	r3, #0
 860 005c 0AD0     		beq	.L42
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.receive_complete_handle = p_irq->receive_complete_handle;
 861              		.loc 1 348 55
 862 005e 3B68     		ldr	r3, [r7]
 863 0060 1A68     		ldr	r2, [r3]
 864              		.loc 1 348 48
 865 0062 7B68     		ldr	r3, [r7, #4]
 866 0064 5A60     		str	r2, [r3, #4]
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_RBNE);
 867              		.loc 1 349 9
 868 0066 7B68     		ldr	r3, [r7, #4]
 869 0068 1B68     		ldr	r3, [r3]
 870 006a 0521     		movs	r1, #5
 871 006c 1846     		mov	r0, r3
 872 006e FFF7FEFF 		bl	hals_usrt_interrupt_enable
 873 0072 08E0     		b	.L43
 874              	.L42:
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.receive_complete_handle = NULL;
 875              		.loc 1 351 48
 876 0074 7B68     		ldr	r3, [r7, #4]
 877 0076 0022     		movs	r2, #0
 878 0078 5A60     		str	r2, [r3, #4]
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_RBNE);
 879              		.loc 1 352 9
 880 007a 7B68     		ldr	r3, [r7, #4]
 881 007c 1B68     		ldr	r3, [r3]
 882 007e 0521     		movs	r1, #5
 883 0080 1846     		mov	r0, r3
 884 0082 FFF7FEFF 		bl	hals_usrt_interrupt_disable
 885              	.L43:
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* set user-defined transmit complete interrupt callback */
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_irq->transmit_complete_handle) {
 886              		.loc 1 356 21
 887 0086 3B68     		ldr	r3, [r7]
 888 0088 9B68     		ldr	r3, [r3, #8]
 889              		.loc 1 356 7
 890 008a 002B     		cmp	r3, #0
 891 008c 0AD0     		beq	.L44
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.transmit_complete_handle = p_irq->transmit_complete_handle;
 892              		.loc 1 357 56
 893 008e 3B68     		ldr	r3, [r7]
 894 0090 9A68     		ldr	r2, [r3, #8]
 895              		.loc 1 357 49
 896 0092 7B68     		ldr	r3, [r7, #4]
 897 0094 DA60     		str	r2, [r3, #12]
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_TC);
 898              		.loc 1 358 9
 899 0096 7B68     		ldr	r3, [r7, #4]
 900 0098 1B68     		ldr	r3, [r3]
 901 009a 0621     		movs	r1, #6
 902 009c 1846     		mov	r0, r3
 903 009e FFF7FEFF 		bl	hals_usrt_interrupt_enable
 904 00a2 08E0     		b	.L45
 905              	.L44:
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.transmit_complete_handle = NULL;
 906              		.loc 1 360 49
 907 00a4 7B68     		ldr	r3, [r7, #4]
 908 00a6 0022     		movs	r2, #0
 909 00a8 DA60     		str	r2, [r3, #12]
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_TC);
 910              		.loc 1 361 9
 911 00aa 7B68     		ldr	r3, [r7, #4]
 912 00ac 1B68     		ldr	r3, [r3]
 913 00ae 0621     		movs	r1, #6
 914 00b0 1846     		mov	r0, r3
 915 00b2 FFF7FEFF 		bl	hals_usrt_interrupt_disable
 916              	.L45:
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* set user-defined transmit ready interrupt callback */
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_irq->transmit_ready_handle) {
 917              		.loc 1 365 21
 918 00b6 3B68     		ldr	r3, [r7]
 919 00b8 5B68     		ldr	r3, [r3, #4]
 920              		.loc 1 365 7
 921 00ba 002B     		cmp	r3, #0
 922 00bc 0AD0     		beq	.L46
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.transmit_ready_handle = p_irq->transmit_ready_handle;
 923              		.loc 1 366 53
 924 00be 3B68     		ldr	r3, [r7]
 925 00c0 5A68     		ldr	r2, [r3, #4]
 926              		.loc 1 366 46
 927 00c2 7B68     		ldr	r3, [r7, #4]
 928 00c4 9A60     		str	r2, [r3, #8]
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_TBE);
 929              		.loc 1 367 9
 930 00c6 7B68     		ldr	r3, [r7, #4]
 931 00c8 1B68     		ldr	r3, [r3]
 932 00ca 0721     		movs	r1, #7
 933 00cc 1846     		mov	r0, r3
 934 00ce FFF7FEFF 		bl	hals_usrt_interrupt_enable
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.transmit_ready_handle = NULL;
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_TBE);
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 935              		.loc 1 372 1
 936 00d2 08E0     		b	.L48
 937              	.L46:
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_TBE);
 938              		.loc 1 369 46
 939 00d4 7B68     		ldr	r3, [r7, #4]
 940 00d6 0022     		movs	r2, #0
 941 00d8 9A60     		str	r2, [r3, #8]
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 942              		.loc 1 370 9
 943 00da 7B68     		ldr	r3, [r7, #4]
 944 00dc 1B68     		ldr	r3, [r3]
 945 00de 0721     		movs	r1, #7
 946 00e0 1846     		mov	r0, r3
 947 00e2 FFF7FEFF 		bl	hals_usrt_interrupt_disable
 948              	.L48:
 949              		.loc 1 372 1
 950 00e6 00BF     		nop
 951 00e8 0837     		adds	r7, r7, #8
 952              		.cfi_def_cfa_offset 8
 953 00ea BD46     		mov	sp, r7
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 00ec 80BD     		pop	{r7, pc}
 957              		.cfi_endproc
 958              	.LFE123:
 960              		.section	.text.hal_usrt_irq_handle_all_reset,"ax",%progbits
 961              		.align	1
 962              		.global	hal_usrt_irq_handle_all_reset
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 966              		.fpu softvfp
 968              	hal_usrt_irq_handle_all_reset:
 969              	.LFB124:
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      reset all user-defined interrupt callback function,
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 which will be registered and called when corresponding interrupt be triggered
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hal_usrt_irq_handle_all_reset(hal_usrt_dev_struct *usrt)
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 970              		.loc 1 384 1
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 8
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974              		@ link register save eliminated.
 975 0000 80B4     		push	{r7}
 976              		.cfi_def_cfa_offset 4
 977              		.cfi_offset 7, -4
 978 0002 83B0     		sub	sp, sp, #12
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              		.cfi_def_cfa_register 7
 982 0006 7860     		str	r0, [r7, #4]
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.error_handle             = NULL;
 983              		.loc 1 385 45
 984 0008 7B68     		ldr	r3, [r7, #4]
 985 000a 0022     		movs	r2, #0
 986 000c 1A61     		str	r2, [r3, #16]
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.receive_complete_handle  = NULL;
 987              		.loc 1 386 45
 988 000e 7B68     		ldr	r3, [r7, #4]
 989 0010 0022     		movs	r2, #0
 990 0012 5A60     		str	r2, [r3, #4]
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_complete_handle = NULL;
 991              		.loc 1 387 45
 992 0014 7B68     		ldr	r3, [r7, #4]
 993 0016 0022     		movs	r2, #0
 994 0018 DA60     		str	r2, [r3, #12]
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_ready_handle    = NULL;
 995              		.loc 1 388 45
 996 001a 7B68     		ldr	r3, [r7, #4]
 997 001c 0022     		movs	r2, #0
 998 001e 9A60     		str	r2, [r3, #8]
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 999              		.loc 1 389 1
 1000 0020 00BF     		nop
 1001 0022 0C37     		adds	r7, r7, #12
 1002              		.cfi_def_cfa_offset 4
 1003 0024 BD46     		mov	sp, r7
 1004              		.cfi_def_cfa_register 13
 1005              		@ sp needed
 1006 0026 80BC     		pop	{r7}
 1007              		.cfi_restore 7
 1008              		.cfi_def_cfa_offset 0
 1009 0028 7047     		bx	lr
 1010              		.cfi_endproc
 1011              	.LFE124:
 1013              		.section	.text.hal_usrt_transmit_poll,"ax",%progbits
 1014              		.align	1
 1015              		.global	hal_usrt_transmit_poll
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu softvfp
 1021              	hal_usrt_transmit_poll:
 1022              	.LFB125:
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit amounts of data, poll transmit process and completed status
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is blocking
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_buffer: pointer to data buffer
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be transmitted
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  timeout_ms: timeout duration
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY, HAL_ERR_TIMEO
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transmit_poll(hal_usrt_dev_struct *usrt, uint8_t *p_buffer, uint32_t length, uint3
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 1023              		.loc 1 404 1
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 24
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 86B0     		sub	sp, sp, #24
 1032              		.cfi_def_cfa_offset 32
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 1035 0006 F860     		str	r0, [r7, #12]
 1036 0008 B960     		str	r1, [r7, #8]
 1037 000a 7A60     		str	r2, [r7, #4]
 1038 000c 3B60     		str	r3, [r7]
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint8_t data_length;
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t tick_start;
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_buffer) || (0U == length)) {
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_buffer] or [length] value is invalid");
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the tx_state wheher is busy or not */
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->tx_state) {
 1039              		.loc 1 417 31
 1040 000e FB68     		ldr	r3, [r7, #12]
 1041 0010 93F83A30 		ldrb	r3, [r3, #58]
 1042 0014 DBB2     		uxtb	r3, r3
 1043              		.loc 1 417 7
 1044 0016 012B     		cmp	r3, #1
 1045 0018 02D1     		bne	.L51
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt tx has already been used, please wait until run_state change to free ");
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 1046              		.loc 1 419 16
 1047 001a 6FF00203 		mvn	r3, #2
 1048 001e ABE0     		b	.L52
 1049              	.L51:
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 1050              		.loc 1 423 5
 1051 0020 FB68     		ldr	r3, [r7, #12]
 1052 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1053 0026 012B     		cmp	r3, #1
 1054 0028 02D1     		bne	.L53
 1055              		.loc 1 423 5 is_stmt 0 discriminator 1
 1056 002a 6FF00103 		mvn	r3, #1
 1057 002e A3E0     		b	.L52
 1058              	.L53:
 1059              		.loc 1 423 5 discriminator 2
 1060 0030 FB68     		ldr	r3, [r7, #12]
 1061 0032 0122     		movs	r2, #1
 1062 0034 83F84420 		strb	r2, [r3, #68]
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state       = HAL_USRT_ERROR_NONE;
 1063              		.loc 1 425 29 is_stmt 1 discriminator 2
 1064 0038 FB68     		ldr	r3, [r7, #12]
 1065 003a 0022     		movs	r2, #0
 1066 003c 1A87     		strh	r2, [r3, #56]	@ movhi
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state          = USRT_STATE_BUSY;
 1067              		.loc 1 426 29 discriminator 2
 1068 003e FB68     		ldr	r3, [r7, #12]
 1069 0040 0122     		movs	r2, #1
 1070 0042 83F83A20 		strb	r2, [r3, #58]
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize transmit parameters */
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.buffer   = (uint8_t *)p_buffer;
 1071              		.loc 1 429 29 discriminator 2
 1072 0046 FB68     		ldr	r3, [r7, #12]
 1073 0048 BA68     		ldr	r2, [r7, #8]
 1074 004a DA61     		str	r2, [r3, #28]
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.length   = length;
 1075              		.loc 1 430 29 discriminator 2
 1076 004c FB68     		ldr	r3, [r7, #12]
 1077 004e 7A68     		ldr	r2, [r7, #4]
 1078 0050 1A62     		str	r2, [r3, #32]
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.pos      = 0U;
 1079              		.loc 1 431 29 discriminator 2
 1080 0052 FB68     		ldr	r3, [r7, #12]
 1081 0054 0022     		movs	r2, #0
 1082 0056 5A62     		str	r2, [r3, #36]
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* calculate the data length */
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     data_length = 1U;
 1083              		.loc 1 434 17 discriminator 2
 1084 0058 0123     		movs	r3, #1
 1085 005a FB75     		strb	r3, [r7, #23]
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != (USART_CTL0(usrt->periph) & USART_CTL0_WL)) {
 1086              		.loc 1 435 18 discriminator 2
 1087 005c FB68     		ldr	r3, [r7, #12]
 1088 005e 1B68     		ldr	r3, [r3]
 1089 0060 1B68     		ldr	r3, [r3]
 1090              		.loc 1 435 43 discriminator 2
 1091 0062 03F48053 		and	r3, r3, #4096
 1092              		.loc 1 435 7 discriminator 2
 1093 0066 002B     		cmp	r3, #0
 1094 0068 08D0     		beq	.L54
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN)) {
 1095              		.loc 1 436 22
 1096 006a FB68     		ldr	r3, [r7, #12]
 1097 006c 1B68     		ldr	r3, [r3]
 1098 006e 1B68     		ldr	r3, [r3]
 1099              		.loc 1 436 47
 1100 0070 03F48063 		and	r3, r3, #1024
 1101              		.loc 1 436 11
 1102 0074 002B     		cmp	r3, #0
 1103 0076 01D1     		bne	.L54
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             data_length = 2U;
 1104              		.loc 1 437 25
 1105 0078 0223     		movs	r3, #2
 1106 007a FB75     		strb	r3, [r7, #23]
 1107              	.L54:
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure timeout */
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     tick_start = hal_sys_basetick_count_get();
 1108              		.loc 1 442 18
 1109 007c FFF7FEFF 		bl	hal_sys_basetick_count_get
 1110 0080 3861     		str	r0, [r7, #16]
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     while(usrt->txbuffer.pos < usrt->txbuffer.length) {
 1111              		.loc 1 444 10
 1112 0082 49E0     		b	.L55
 1113              	.L57:
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait for transmit buffer empty */
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_TBE)) {
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1114              		.loc 1 447 15
 1115 0084 3B68     		ldr	r3, [r7]
 1116 0086 B3F1FF3F 		cmp	r3, #-1
 1117 008a 11D0     		beq	.L56
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1118              		.loc 1 448 27
 1119 008c 3968     		ldr	r1, [r7]
 1120 008e 3869     		ldr	r0, [r7, #16]
 1121 0090 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1122 0094 0346     		mov	r3, r0
 1123              		.loc 1 448 19
 1124 0096 012B     		cmp	r3, #1
 1125 0098 0AD1     		bne	.L56
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_DEBUGW("usrt transmit timeout");
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* reset the state */
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     usrt->rx_state = USRT_STATE_FREE;
 1126              		.loc 1 451 36
 1127 009a FB68     		ldr	r3, [r7, #12]
 1128 009c 0022     		movs	r2, #0
 1129 009e 83F83B20 		strb	r2, [r3, #59]
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* unlock usrt */
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_UNLOCK(usrt);
 1130              		.loc 1 453 21
 1131 00a2 FB68     		ldr	r3, [r7, #12]
 1132 00a4 0022     		movs	r2, #0
 1133 00a6 83F84420 		strb	r2, [r3, #68]
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     return HAL_ERR_TIMEOUT;
 1134              		.loc 1 454 28
 1135 00aa 6FF00403 		mvn	r3, #4
 1136 00ae 63E0     		b	.L52
 1137              	.L56:
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1138              		.loc 1 446 24
 1139 00b0 FB68     		ldr	r3, [r7, #12]
 1140 00b2 1B68     		ldr	r3, [r3]
 1141 00b4 40F20771 		movw	r1, #1799
 1142 00b8 1846     		mov	r0, r3
 1143 00ba FFF7FEFF 		bl	hals_usrt_flag_get
 1144 00be 0346     		mov	r3, r0
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1145              		.loc 1 446 14
 1146 00c0 002B     		cmp	r3, #0
 1147 00c2 DFD0     		beq	.L57
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* send the data to be transmitted */
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(2U == data_length) {
 1148              		.loc 1 460 11
 1149 00c4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1150 00c6 022B     		cmp	r3, #2
 1151 00c8 11D1     		bne	.L58
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_data_transmit(usrt->periph, (*(uint16_t *)usrt->txbuffer.buffer & (uint16_t)0
 1152              		.loc 1 461 13
 1153 00ca FB68     		ldr	r3, [r7, #12]
 1154 00cc 1A68     		ldr	r2, [r3]
 1155              		.loc 1 461 79
 1156 00ce FB68     		ldr	r3, [r7, #12]
 1157 00d0 DB69     		ldr	r3, [r3, #28]
 1158              		.loc 1 461 52
 1159 00d2 1B88     		ldrh	r3, [r3]
 1160              		.loc 1 461 13
 1161 00d4 C3F30803 		ubfx	r3, r3, #0, #9
 1162 00d8 9BB2     		uxth	r3, r3
 1163 00da 1946     		mov	r1, r3
 1164 00dc 1046     		mov	r0, r2
 1165 00de FFF7FEFF 		bl	hals_usrt_data_transmit
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->txbuffer.buffer += 2;
 1166              		.loc 1 462 35
 1167 00e2 FB68     		ldr	r3, [r7, #12]
 1168 00e4 DB69     		ldr	r3, [r3, #28]
 1169 00e6 9A1C     		adds	r2, r3, #2
 1170 00e8 FB68     		ldr	r3, [r7, #12]
 1171 00ea DA61     		str	r2, [r3, #28]
 1172 00ec 0FE0     		b	.L59
 1173              	.L58:
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_data_transmit(usrt->periph, (*usrt->txbuffer.buffer & (uint8_t)0xFFU));
 1174              		.loc 1 464 13
 1175 00ee FB68     		ldr	r3, [r7, #12]
 1176 00f0 1A68     		ldr	r2, [r3]
 1177              		.loc 1 464 67
 1178 00f2 FB68     		ldr	r3, [r7, #12]
 1179 00f4 DB69     		ldr	r3, [r3, #28]
 1180              		.loc 1 464 52
 1181 00f6 1B78     		ldrb	r3, [r3]
 1182 00f8 DBB2     		uxtb	r3, r3
 1183              		.loc 1 464 13
 1184 00fa 9BB2     		uxth	r3, r3
 1185 00fc 1946     		mov	r1, r3
 1186 00fe 1046     		mov	r0, r2
 1187 0100 FFF7FEFF 		bl	hals_usrt_data_transmit
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->txbuffer.buffer++;
 1188              		.loc 1 465 27
 1189 0104 FB68     		ldr	r3, [r7, #12]
 1190 0106 DB69     		ldr	r3, [r3, #28]
 1191              		.loc 1 465 34
 1192 0108 5A1C     		adds	r2, r3, #1
 1193 010a FB68     		ldr	r3, [r7, #12]
 1194 010c DA61     		str	r2, [r3, #28]
 1195              	.L59:
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* change the transmit pointer */
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->txbuffer.pos++;
 1196              		.loc 1 469 23
 1197 010e FB68     		ldr	r3, [r7, #12]
 1198 0110 5B6A     		ldr	r3, [r3, #36]
 1199              		.loc 1 469 27
 1200 0112 5A1C     		adds	r2, r3, #1
 1201 0114 FB68     		ldr	r3, [r7, #12]
 1202 0116 5A62     		str	r2, [r3, #36]
 1203              	.L55:
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait for transmit buffer empty */
 1204              		.loc 1 444 25
 1205 0118 FB68     		ldr	r3, [r7, #12]
 1206 011a 5A6A     		ldr	r2, [r3, #36]
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait for transmit buffer empty */
 1207              		.loc 1 444 46
 1208 011c FB68     		ldr	r3, [r7, #12]
 1209 011e 1B6A     		ldr	r3, [r3, #32]
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait for transmit buffer empty */
 1210              		.loc 1 444 10
 1211 0120 9A42     		cmp	r2, r3
 1212 0122 C5D3     		bcc	.L56
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* wait for transmit complete */
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_TC)) {
 1213              		.loc 1 473 10
 1214 0124 15E0     		b	.L61
 1215              	.L62:
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1216              		.loc 1 474 11
 1217 0126 3B68     		ldr	r3, [r7]
 1218 0128 B3F1FF3F 		cmp	r3, #-1
 1219 012c 11D0     		beq	.L61
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1220              		.loc 1 475 23
 1221 012e 3968     		ldr	r1, [r7]
 1222 0130 3869     		ldr	r0, [r7, #16]
 1223 0132 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1224 0136 0346     		mov	r3, r0
 1225              		.loc 1 475 15
 1226 0138 012B     		cmp	r3, #1
 1227 013a 0AD1     		bne	.L61
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 HAL_DEBUGW("usrt transmit timeout");
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 /* reset the state */
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 usrt->rx_state = USRT_STATE_FREE;
 1228              		.loc 1 478 32
 1229 013c FB68     		ldr	r3, [r7, #12]
 1230 013e 0022     		movs	r2, #0
 1231 0140 83F83B20 		strb	r2, [r3, #59]
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 /* unlock usrt */
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 HAL_UNLOCK(usrt);
 1232              		.loc 1 480 17
 1233 0144 FB68     		ldr	r3, [r7, #12]
 1234 0146 0022     		movs	r2, #0
 1235 0148 83F84420 		strb	r2, [r3, #68]
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 return HAL_ERR_TIMEOUT;
 1236              		.loc 1 481 24
 1237 014c 6FF00403 		mvn	r3, #4
 1238 0150 12E0     		b	.L52
 1239              	.L61:
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1240              		.loc 1 473 20
 1241 0152 FB68     		ldr	r3, [r7, #12]
 1242 0154 1B68     		ldr	r3, [r3]
 1243 0156 40F20671 		movw	r1, #1798
 1244 015a 1846     		mov	r0, r3
 1245 015c FFF7FEFF 		bl	hals_usrt_flag_get
 1246 0160 0346     		mov	r3, r0
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1247              		.loc 1 473 10
 1248 0162 002B     		cmp	r3, #0
 1249 0164 DFD0     		beq	.L62
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* change the Tx state to free */
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_FREE;
 1250              		.loc 1 487 20
 1251 0166 FB68     		ldr	r3, [r7, #12]
 1252 0168 0022     		movs	r2, #0
 1253 016a 83F83A20 		strb	r2, [r3, #58]
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 1254              		.loc 1 490 5
 1255 016e FB68     		ldr	r3, [r7, #12]
 1256 0170 0022     		movs	r2, #0
 1257 0172 83F84420 		strb	r2, [r3, #68]
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 1258              		.loc 1 492 12
 1259 0176 0023     		movs	r3, #0
 1260              	.L52:
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 1261              		.loc 1 493 1
 1262 0178 1846     		mov	r0, r3
 1263 017a 1837     		adds	r7, r7, #24
 1264              		.cfi_def_cfa_offset 8
 1265 017c BD46     		mov	sp, r7
 1266              		.cfi_def_cfa_register 13
 1267              		@ sp needed
 1268 017e 80BD     		pop	{r7, pc}
 1269              		.cfi_endproc
 1270              	.LFE125:
 1272              		.section	.text.hal_usrt_receive_poll,"ax",%progbits
 1273              		.align	1
 1274              		.global	hal_usrt_receive_poll
 1275              		.syntax unified
 1276              		.thumb
 1277              		.thumb_func
 1278              		.fpu softvfp
 1280              	hal_usrt_receive_poll:
 1281              	.LFB126:
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      receive amounts of data, poll receive process and completed status
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is blocking
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_buffer: pointer to data buffer
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be received
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  timeout_ms: timeout duration
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY, HAL_ERR_TIMEO
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_receive_poll(hal_usrt_dev_struct *usrt, uint8_t *p_buffer, uint32_t length, uint32
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 1282              		.loc 1 508 1
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 24
 1285              		@ frame_needed = 1, uses_anonymous_args = 0
 1286 0000 80B5     		push	{r7, lr}
 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 7, -8
 1289              		.cfi_offset 14, -4
 1290 0002 86B0     		sub	sp, sp, #24
 1291              		.cfi_def_cfa_offset 32
 1292 0004 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
 1294 0006 F860     		str	r0, [r7, #12]
 1295 0008 B960     		str	r1, [r7, #8]
 1296 000a 7A60     		str	r2, [r7, #4]
 1297 000c 3B60     		str	r3, [r7]
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint8_t data_length;
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t tick_start;
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_buffer) || (0U == length)) {
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_buffer] or [length] value is invalid");
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is busy or not */
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->rx_state) {
 1298              		.loc 1 521 31
 1299 000e FB68     		ldr	r3, [r7, #12]
 1300 0010 93F83B30 		ldrb	r3, [r3, #59]
 1301 0014 DBB2     		uxtb	r3, r3
 1302              		.loc 1 521 7
 1303 0016 012B     		cmp	r3, #1
 1304 0018 02D1     		bne	.L64
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt rx has already been used, please wait until run_state change to free ");
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 1305              		.loc 1 523 16
 1306 001a 6FF00203 		mvn	r3, #2
 1307 001e C2E0     		b	.L65
 1308              	.L64:
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 1309              		.loc 1 527 5
 1310 0020 FB68     		ldr	r3, [r7, #12]
 1311 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1312 0026 012B     		cmp	r3, #1
 1313 0028 02D1     		bne	.L66
 1314              		.loc 1 527 5 is_stmt 0 discriminator 1
 1315 002a 6FF00103 		mvn	r3, #1
 1316 002e BAE0     		b	.L65
 1317              	.L66:
 1318              		.loc 1 527 5 discriminator 2
 1319 0030 FB68     		ldr	r3, [r7, #12]
 1320 0032 0122     		movs	r2, #1
 1321 0034 83F84420 		strb	r2, [r3, #68]
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_BUSY;
 1322              		.loc 1 529 20 is_stmt 1 discriminator 2
 1323 0038 FB68     		ldr	r3, [r7, #12]
 1324 003a 0122     		movs	r2, #1
 1325 003c 83F83B20 		strb	r2, [r3, #59]
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 1326              		.loc 1 530 23 discriminator 2
 1327 0040 FB68     		ldr	r3, [r7, #12]
 1328 0042 0022     		movs	r2, #0
 1329 0044 1A87     		strh	r2, [r3, #56]	@ movhi
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize receive parameters */
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.buffer   = (uint8_t *)p_buffer;
 1330              		.loc 1 533 29 discriminator 2
 1331 0046 FB68     		ldr	r3, [r7, #12]
 1332 0048 BA68     		ldr	r2, [r7, #8]
 1333 004a 9A62     		str	r2, [r3, #40]
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.length   = length;
 1334              		.loc 1 534 29 discriminator 2
 1335 004c FB68     		ldr	r3, [r7, #12]
 1336 004e 7A68     		ldr	r2, [r7, #4]
 1337 0050 DA62     		str	r2, [r3, #44]
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos      = 0U;
 1338              		.loc 1 535 29 discriminator 2
 1339 0052 FB68     		ldr	r3, [r7, #12]
 1340 0054 0022     		movs	r2, #0
 1341 0056 1A63     		str	r2, [r3, #48]
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask     = _usrt_data_bit_mask_get(usrt);
 1342              		.loc 1 536 31 discriminator 2
 1343 0058 F868     		ldr	r0, [r7, #12]
 1344 005a FFF7FEFF 		bl	_usrt_data_bit_mask_get
 1345 005e 0346     		mov	r3, r0
 1346 0060 1A46     		mov	r2, r3
 1347              		.loc 1 536 29 discriminator 2
 1348 0062 FB68     		ldr	r3, [r7, #12]
 1349 0064 9A86     		strh	r2, [r3, #52]	@ movhi
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* calculate the data length */
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     data_length = 1U;
 1350              		.loc 1 539 17 discriminator 2
 1351 0066 0123     		movs	r3, #1
 1352 0068 FB75     		strb	r3, [r7, #23]
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != (USART_CTL0(usrt->periph) & USART_CTL0_WL)) {
 1353              		.loc 1 540 18 discriminator 2
 1354 006a FB68     		ldr	r3, [r7, #12]
 1355 006c 1B68     		ldr	r3, [r3]
 1356 006e 1B68     		ldr	r3, [r3]
 1357              		.loc 1 540 43 discriminator 2
 1358 0070 03F48053 		and	r3, r3, #4096
 1359              		.loc 1 540 7 discriminator 2
 1360 0074 002B     		cmp	r3, #0
 1361 0076 08D0     		beq	.L67
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN)) {
 1362              		.loc 1 541 22
 1363 0078 FB68     		ldr	r3, [r7, #12]
 1364 007a 1B68     		ldr	r3, [r3]
 1365 007c 1B68     		ldr	r3, [r3]
 1366              		.loc 1 541 47
 1367 007e 03F48063 		and	r3, r3, #1024
 1368              		.loc 1 541 11
 1369 0082 002B     		cmp	r3, #0
 1370 0084 01D1     		bne	.L67
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             data_length = 2U;
 1371              		.loc 1 542 25
 1372 0086 0223     		movs	r3, #2
 1373 0088 FB75     		strb	r3, [r7, #23]
 1374              	.L67:
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure timeout */
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     tick_start = hal_sys_basetick_count_get();
 1375              		.loc 1 547 18
 1376 008a FFF7FEFF 		bl	hal_sys_basetick_count_get
 1377 008e 3861     		str	r0, [r7, #16]
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     while(usrt->rxbuffer.pos < usrt->rxbuffer.length) {
 1378              		.loc 1 549 10
 1379 0090 7AE0     		b	.L68
 1380              	.L71:
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* send dummy byte to generate clock for the slave to send data */
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_TC)) {
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1381              		.loc 1 552 15
 1382 0092 3B68     		ldr	r3, [r7]
 1383 0094 B3F1FF3F 		cmp	r3, #-1
 1384 0098 18D0     		beq	.L69
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1385              		.loc 1 553 27
 1386 009a 3968     		ldr	r1, [r7]
 1387 009c 3869     		ldr	r0, [r7, #16]
 1388 009e FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1389 00a2 0346     		mov	r3, r0
 1390              		.loc 1 553 19
 1391 00a4 012B     		cmp	r3, #1
 1392 00a6 0AD1     		bne	.L70
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_DEBUGW("usrt transmit timeout");
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* reset the state */
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     usrt->rx_state = USRT_STATE_FREE;
 1393              		.loc 1 556 36
 1394 00a8 FB68     		ldr	r3, [r7, #12]
 1395 00aa 0022     		movs	r2, #0
 1396 00ac 83F83B20 		strb	r2, [r3, #59]
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* unlock usrt */
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_UNLOCK(usrt);
 1397              		.loc 1 558 21
 1398 00b0 FB68     		ldr	r3, [r7, #12]
 1399 00b2 0022     		movs	r2, #0
 1400 00b4 83F84420 		strb	r2, [r3, #68]
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     return HAL_ERR_TIMEOUT;
 1401              		.loc 1 559 28
 1402 00b8 6FF00403 		mvn	r3, #4
 1403 00bc 73E0     		b	.L65
 1404              	.L70:
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 hals_usrt_data_transmit(usrt->periph, USRT_DUMMY_DATA);
 1405              		.loc 1 561 17
 1406 00be FB68     		ldr	r3, [r7, #12]
 1407 00c0 1B68     		ldr	r3, [r3]
 1408 00c2 4FF6FF71 		movw	r1, #65535
 1409 00c6 1846     		mov	r0, r3
 1410 00c8 FFF7FEFF 		bl	hals_usrt_data_transmit
 1411              	.L69:
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1412              		.loc 1 551 24
 1413 00cc FB68     		ldr	r3, [r7, #12]
 1414 00ce 1B68     		ldr	r3, [r3]
 1415 00d0 40F20671 		movw	r1, #1798
 1416 00d4 1846     		mov	r0, r3
 1417 00d6 FFF7FEFF 		bl	hals_usrt_flag_get
 1418 00da 0346     		mov	r3, r0
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1419              		.loc 1 551 14
 1420 00dc 002B     		cmp	r3, #0
 1421 00de D8D0     		beq	.L71
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* reconfigure the timeout */
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         tick_start = hal_sys_basetick_count_get();
 1422              		.loc 1 566 22
 1423 00e0 FFF7FEFF 		bl	hal_sys_basetick_count_get
 1424 00e4 3861     		str	r0, [r7, #16]
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait for read data buffer not empty */
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_RBNE)) {
 1425              		.loc 1 568 14
 1426 00e6 15E0     		b	.L72
 1427              	.L73:
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1428              		.loc 1 569 15
 1429 00e8 3B68     		ldr	r3, [r7]
 1430 00ea B3F1FF3F 		cmp	r3, #-1
 1431 00ee 11D0     		beq	.L72
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1432              		.loc 1 570 27
 1433 00f0 3968     		ldr	r1, [r7]
 1434 00f2 3869     		ldr	r0, [r7, #16]
 1435 00f4 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1436 00f8 0346     		mov	r3, r0
 1437              		.loc 1 570 19
 1438 00fa 012B     		cmp	r3, #1
 1439 00fc 0AD1     		bne	.L72
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_DEBUGW("usrt receive timeout");
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* reset the state */
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     usrt->rx_state = USRT_STATE_FREE;
 1440              		.loc 1 573 36
 1441 00fe FB68     		ldr	r3, [r7, #12]
 1442 0100 0022     		movs	r2, #0
 1443 0102 83F83B20 		strb	r2, [r3, #59]
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* unlock usrt */
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_UNLOCK(usrt);
 1444              		.loc 1 575 21
 1445 0106 FB68     		ldr	r3, [r7, #12]
 1446 0108 0022     		movs	r2, #0
 1447 010a 83F84420 		strb	r2, [r3, #68]
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     return HAL_ERR_TIMEOUT;
 1448              		.loc 1 576 28
 1449 010e 6FF00403 		mvn	r3, #4
 1450 0112 48E0     		b	.L65
 1451              	.L72:
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1452              		.loc 1 568 24
 1453 0114 FB68     		ldr	r3, [r7, #12]
 1454 0116 1B68     		ldr	r3, [r3]
 1455 0118 40F20571 		movw	r1, #1797
 1456 011c 1846     		mov	r0, r3
 1457 011e FFF7FEFF 		bl	hals_usrt_flag_get
 1458 0122 0346     		mov	r3, r0
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1459              		.loc 1 568 14
 1460 0124 002B     		cmp	r3, #0
 1461 0126 DFD0     		beq	.L73
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* read data from data register */
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(2U == data_length) {
 1462              		.loc 1 582 11
 1463 0128 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1464 012a 022B     		cmp	r3, #2
 1465 012c 14D1     		bne	.L74
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             *usrt->rxbuffer.buffer = (uint8_t)(hals_usrt_data_receive(usrt->periph) & usrt->data_bi
 1466              		.loc 1 583 48
 1467 012e FB68     		ldr	r3, [r7, #12]
 1468 0130 1B68     		ldr	r3, [r3]
 1469 0132 1846     		mov	r0, r3
 1470 0134 FFF7FEFF 		bl	hals_usrt_data_receive
 1471 0138 0346     		mov	r3, r0
 1472              		.loc 1 583 38
 1473 013a D9B2     		uxtb	r1, r3
 1474              		.loc 1 583 91
 1475 013c FB68     		ldr	r3, [r7, #12]
 1476 013e 9B8E     		ldrh	r3, [r3, #52]
 1477              		.loc 1 583 38
 1478 0140 DAB2     		uxtb	r2, r3
 1479              		.loc 1 583 28
 1480 0142 FB68     		ldr	r3, [r7, #12]
 1481 0144 9B6A     		ldr	r3, [r3, #40]
 1482              		.loc 1 583 38
 1483 0146 0A40     		ands	r2, r2, r1
 1484 0148 D2B2     		uxtb	r2, r2
 1485              		.loc 1 583 36
 1486 014a 1A70     		strb	r2, [r3]
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->rxbuffer.buffer++;
 1487              		.loc 1 584 27
 1488 014c FB68     		ldr	r3, [r7, #12]
 1489 014e 9B6A     		ldr	r3, [r3, #40]
 1490              		.loc 1 584 34
 1491 0150 5A1C     		adds	r2, r3, #1
 1492 0152 FB68     		ldr	r3, [r7, #12]
 1493 0154 9A62     		str	r2, [r3, #40]
 1494 0156 12E0     		b	.L75
 1495              	.L74:
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             *(uint16_t *)usrt->rxbuffer.buffer = (hals_usrt_data_receive(usrt->periph) & usrt->data
 1496              		.loc 1 586 51
 1497 0158 FB68     		ldr	r3, [r7, #12]
 1498 015a 1B68     		ldr	r3, [r3]
 1499 015c 1846     		mov	r0, r3
 1500 015e FFF7FEFF 		bl	hals_usrt_data_receive
 1501 0162 0346     		mov	r3, r0
 1502 0164 1946     		mov	r1, r3
 1503              		.loc 1 586 94
 1504 0166 FB68     		ldr	r3, [r7, #12]
 1505 0168 9A8E     		ldrh	r2, [r3, #52]
 1506              		.loc 1 586 40
 1507 016a FB68     		ldr	r3, [r7, #12]
 1508 016c 9B6A     		ldr	r3, [r3, #40]
 1509              		.loc 1 586 48
 1510 016e 0A40     		ands	r2, r2, r1
 1511 0170 92B2     		uxth	r2, r2
 1512 0172 1A80     		strh	r2, [r3]	@ movhi
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->rxbuffer.buffer += 2;
 1513              		.loc 1 587 35
 1514 0174 FB68     		ldr	r3, [r7, #12]
 1515 0176 9B6A     		ldr	r3, [r3, #40]
 1516 0178 9A1C     		adds	r2, r3, #2
 1517 017a FB68     		ldr	r3, [r7, #12]
 1518 017c 9A62     		str	r2, [r3, #40]
 1519              	.L75:
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* change the receive pointer */
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rxbuffer.pos++;
 1520              		.loc 1 590 23
 1521 017e FB68     		ldr	r3, [r7, #12]
 1522 0180 1B6B     		ldr	r3, [r3, #48]
 1523              		.loc 1 590 27
 1524 0182 5A1C     		adds	r2, r3, #1
 1525 0184 FB68     		ldr	r3, [r7, #12]
 1526 0186 1A63     		str	r2, [r3, #48]
 1527              	.L68:
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* send dummy byte to generate clock for the slave to send data */
 1528              		.loc 1 549 25
 1529 0188 FB68     		ldr	r3, [r7, #12]
 1530 018a 1A6B     		ldr	r2, [r3, #48]
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* send dummy byte to generate clock for the slave to send data */
 1531              		.loc 1 549 46
 1532 018c FB68     		ldr	r3, [r7, #12]
 1533 018e DB6A     		ldr	r3, [r3, #44]
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* send dummy byte to generate clock for the slave to send data */
 1534              		.loc 1 549 10
 1535 0190 9A42     		cmp	r2, r3
 1536 0192 9BD3     		bcc	.L69
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* change the Rx state to free */
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_FREE;
 1537              		.loc 1 594 20
 1538 0194 FB68     		ldr	r3, [r7, #12]
 1539 0196 0022     		movs	r2, #0
 1540 0198 83F83B20 		strb	r2, [r3, #59]
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 1541              		.loc 1 597 5
 1542 019c FB68     		ldr	r3, [r7, #12]
 1543 019e 0022     		movs	r2, #0
 1544 01a0 83F84420 		strb	r2, [r3, #68]
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 1545              		.loc 1 599 12
 1546 01a4 0023     		movs	r3, #0
 1547              	.L65:
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 1548              		.loc 1 600 1
 1549 01a6 1846     		mov	r0, r3
 1550 01a8 1837     		adds	r7, r7, #24
 1551              		.cfi_def_cfa_offset 8
 1552 01aa BD46     		mov	sp, r7
 1553              		.cfi_def_cfa_register 13
 1554              		@ sp needed
 1555 01ac 80BD     		pop	{r7, pc}
 1556              		.cfi_endproc
 1557              	.LFE126:
 1559              		.section	.text.hal_usrt_transmit_receive_poll,"ax",%progbits
 1560              		.align	1
 1561              		.global	hal_usrt_transmit_receive_poll
 1562              		.syntax unified
 1563              		.thumb
 1564              		.thumb_func
 1565              		.fpu softvfp
 1567              	hal_usrt_transmit_receive_poll:
 1568              	.LFB127:
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit & receive amounts of data, poll transfer process and completed status
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is blocking
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_tx_buffer: pointer to Tx data buffer
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_rx_buffer: pointer to Rx data buffer
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be received
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  timeout_ms: timeout duration
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transmit_receive_poll(hal_usrt_dev_struct *usrt, uint8_t *p_tx_buffer, uint8_t *p_
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 1569              		.loc 1 616 1
 1570              		.cfi_startproc
 1571              		@ args = 4, pretend = 0, frame = 24
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573 0000 80B5     		push	{r7, lr}
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
 1577 0002 86B0     		sub	sp, sp, #24
 1578              		.cfi_def_cfa_offset 32
 1579 0004 00AF     		add	r7, sp, #0
 1580              		.cfi_def_cfa_register 7
 1581 0006 F860     		str	r0, [r7, #12]
 1582 0008 B960     		str	r1, [r7, #8]
 1583 000a 7A60     		str	r2, [r7, #4]
 1584 000c 3B60     		str	r3, [r7]
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint8_t data_length;
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t tick_start;
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_tx_buffer) || (NULL == p_rx_buffer) ||
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (0U == length)) {
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_tx_buffer] or [p_rx_buffer] or [length] value is invalid
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* 9-bit transfer with no parity, if tx or rx buffer address is not aligned on uint16_t, return
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((RESET != (USART_CTL0(usrt->periph) & USART_CTL0_WL)) && \
 1585              		.loc 1 630 19
 1586 000e FB68     		ldr	r3, [r7, #12]
 1587 0010 1B68     		ldr	r3, [r3]
 1588 0012 1B68     		ldr	r3, [r3]
 1589              		.loc 1 630 44
 1590 0014 03F48053 		and	r3, r3, #4096
 1591              		.loc 1 630 7
 1592 0018 002B     		cmp	r3, #0
 1593 001a 16D0     		beq	.L78
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN))) {
 1594              		.loc 1 631 24 discriminator 1
 1595 001c FB68     		ldr	r3, [r7, #12]
 1596 001e 1B68     		ldr	r3, [r3]
 1597 0020 1B68     		ldr	r3, [r3]
 1598              		.loc 1 631 49 discriminator 1
 1599 0022 03F48063 		and	r3, r3, #1024
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN))) {
 1600              		.loc 1 630 62 discriminator 1
 1601 0026 002B     		cmp	r3, #0
 1602 0028 0FD1     		bne	.L78
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != (((uint32_t)p_tx_buffer || (uint32_t)p_rx_buffer) & 1U)) {
 1603              		.loc 1 632 45
 1604 002a BB68     		ldr	r3, [r7, #8]
 1605 002c 002B     		cmp	r3, #0
 1606 002e 02D1     		bne	.L79
 1607              		.loc 1 632 45 is_stmt 0 discriminator 2
 1608 0030 7B68     		ldr	r3, [r7, #4]
 1609 0032 002B     		cmp	r3, #0
 1610 0034 01D0     		beq	.L80
 1611              	.L79:
 1612              		.loc 1 632 45 discriminator 3
 1613 0036 0123     		movs	r3, #1
 1614 0038 00E0     		b	.L81
 1615              	.L80:
 1616              		.loc 1 632 45 discriminator 4
 1617 003a 0023     		movs	r3, #0
 1618              	.L81:
 1619              		.loc 1 632 71 is_stmt 1 discriminator 6
 1620 003c 03F00103 		and	r3, r3, #1
 1621              		.loc 1 632 11 discriminator 6
 1622 0040 002B     		cmp	r3, #0
 1623 0042 02D0     		beq	.L78
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             return HAL_ERR_ADDRESS;
 1624              		.loc 1 633 20
 1625 0044 6FF00603 		mvn	r3, #6
 1626 0048 12E1     		b	.L82
 1627              	.L78:
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is busy or not */
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->rx_state) {
 1628              		.loc 1 638 31
 1629 004a FB68     		ldr	r3, [r7, #12]
 1630 004c 93F83B30 		ldrb	r3, [r3, #59]
 1631 0050 DBB2     		uxtb	r3, r3
 1632              		.loc 1 638 7
 1633 0052 012B     		cmp	r3, #1
 1634 0054 02D1     		bne	.L83
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt rx has already been used, please wait until run_state change to free ");
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 1635              		.loc 1 640 16
 1636 0056 6FF00203 		mvn	r3, #2
 1637 005a 09E1     		b	.L82
 1638              	.L83:
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 1639              		.loc 1 644 5
 1640 005c FB68     		ldr	r3, [r7, #12]
 1641 005e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1642 0062 012B     		cmp	r3, #1
 1643 0064 02D1     		bne	.L84
 1644              		.loc 1 644 5 is_stmt 0 discriminator 1
 1645 0066 6FF00103 		mvn	r3, #1
 1646 006a 01E1     		b	.L82
 1647              	.L84:
 1648              		.loc 1 644 5 discriminator 2
 1649 006c FB68     		ldr	r3, [r7, #12]
 1650 006e 0122     		movs	r2, #1
 1651 0070 83F84420 		strb	r2, [r3, #68]
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize receive parameters */
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 1652              		.loc 1 647 23 is_stmt 1 discriminator 2
 1653 0074 FB68     		ldr	r3, [r7, #12]
 1654 0076 0022     		movs	r2, #0
 1655 0078 1A87     		strh	r2, [r3, #56]	@ movhi
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_BUSY;
 1656              		.loc 1 648 20 discriminator 2
 1657 007a FB68     		ldr	r3, [r7, #12]
 1658 007c 0122     		movs	r2, #1
 1659 007e 83F83B20 		strb	r2, [r3, #59]
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.buffer   = (uint8_t *)p_rx_buffer;
 1660              		.loc 1 649 29 discriminator 2
 1661 0082 FB68     		ldr	r3, [r7, #12]
 1662 0084 7A68     		ldr	r2, [r7, #4]
 1663 0086 9A62     		str	r2, [r3, #40]
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.length   = length;
 1664              		.loc 1 650 29 discriminator 2
 1665 0088 FB68     		ldr	r3, [r7, #12]
 1666 008a 3A68     		ldr	r2, [r7]
 1667 008c DA62     		str	r2, [r3, #44]
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos      = 0U;
 1668              		.loc 1 651 29 discriminator 2
 1669 008e FB68     		ldr	r3, [r7, #12]
 1670 0090 0022     		movs	r2, #0
 1671 0092 1A63     		str	r2, [r3, #48]
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask     = _usrt_data_bit_mask_get(usrt);
 1672              		.loc 1 652 31 discriminator 2
 1673 0094 F868     		ldr	r0, [r7, #12]
 1674 0096 FFF7FEFF 		bl	_usrt_data_bit_mask_get
 1675 009a 0346     		mov	r3, r0
 1676 009c 1A46     		mov	r2, r3
 1677              		.loc 1 652 29 discriminator 2
 1678 009e FB68     		ldr	r3, [r7, #12]
 1679 00a0 9A86     		strh	r2, [r3, #52]	@ movhi
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize transmit parameters */
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_BUSY;
 1680              		.loc 1 655 20 discriminator 2
 1681 00a2 FB68     		ldr	r3, [r7, #12]
 1682 00a4 0122     		movs	r2, #1
 1683 00a6 83F83A20 		strb	r2, [r3, #58]
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.buffer = (uint8_t *)p_tx_buffer;
 1684              		.loc 1 656 27 discriminator 2
 1685 00aa FB68     		ldr	r3, [r7, #12]
 1686 00ac BA68     		ldr	r2, [r7, #8]
 1687 00ae DA61     		str	r2, [r3, #28]
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.length = length;
 1688              		.loc 1 657 27 discriminator 2
 1689 00b0 FB68     		ldr	r3, [r7, #12]
 1690 00b2 3A68     		ldr	r2, [r7]
 1691 00b4 1A62     		str	r2, [r3, #32]
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* calculate the data length */
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     data_length = 1;
 1692              		.loc 1 660 17 discriminator 2
 1693 00b6 0123     		movs	r3, #1
 1694 00b8 FB75     		strb	r3, [r7, #23]
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != (USART_CTL0(usrt->periph) & USART_CTL0_WL)) {
 1695              		.loc 1 661 18 discriminator 2
 1696 00ba FB68     		ldr	r3, [r7, #12]
 1697 00bc 1B68     		ldr	r3, [r3]
 1698 00be 1B68     		ldr	r3, [r3]
 1699              		.loc 1 661 43 discriminator 2
 1700 00c0 03F48053 		and	r3, r3, #4096
 1701              		.loc 1 661 7 discriminator 2
 1702 00c4 002B     		cmp	r3, #0
 1703 00c6 08D0     		beq	.L85
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN)) {
 1704              		.loc 1 662 22
 1705 00c8 FB68     		ldr	r3, [r7, #12]
 1706 00ca 1B68     		ldr	r3, [r3]
 1707 00cc 1B68     		ldr	r3, [r3]
 1708              		.loc 1 662 47
 1709 00ce 03F48063 		and	r3, r3, #1024
 1710              		.loc 1 662 11
 1711 00d2 002B     		cmp	r3, #0
 1712 00d4 01D1     		bne	.L85
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             data_length = 2U;
 1713              		.loc 1 663 25
 1714 00d6 0223     		movs	r3, #2
 1715 00d8 FB75     		strb	r3, [r7, #23]
 1716              	.L85:
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure timeout */
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     tick_start = hal_sys_basetick_count_get();
 1717              		.loc 1 668 18
 1718 00da FFF7FEFF 		bl	hal_sys_basetick_count_get
 1719 00de 3861     		str	r0, [r7, #16]
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     while(usrt->rxbuffer.pos < usrt->rxbuffer.length) {
 1720              		.loc 1 670 10
 1721 00e0 B2E0     		b	.L86
 1722              	.L88:
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait the TBE flag is set */
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_TBE)) {
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1723              		.loc 1 673 15
 1724 00e2 3B6A     		ldr	r3, [r7, #32]
 1725 00e4 B3F1FF3F 		cmp	r3, #-1
 1726 00e8 11D0     		beq	.L87
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1727              		.loc 1 674 27
 1728 00ea 396A     		ldr	r1, [r7, #32]
 1729 00ec 3869     		ldr	r0, [r7, #16]
 1730 00ee FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1731 00f2 0346     		mov	r3, r0
 1732              		.loc 1 674 19
 1733 00f4 012B     		cmp	r3, #1
 1734 00f6 0AD1     		bne	.L87
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_DEBUGW("usrt TBE flag set timeout");
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* reset the state */
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     usrt->tx_state = USRT_STATE_FREE;
 1735              		.loc 1 677 36
 1736 00f8 FB68     		ldr	r3, [r7, #12]
 1737 00fa 0022     		movs	r2, #0
 1738 00fc 83F83A20 		strb	r2, [r3, #58]
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* unlock usrt */
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_UNLOCK(usrt);
 1739              		.loc 1 679 21
 1740 0100 FB68     		ldr	r3, [r7, #12]
 1741 0102 0022     		movs	r2, #0
 1742 0104 83F84420 		strb	r2, [r3, #68]
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     return HAL_ERR_TIMEOUT;
 1743              		.loc 1 680 28
 1744 0108 6FF00403 		mvn	r3, #4
 1745 010c B0E0     		b	.L82
 1746              	.L87:
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1747              		.loc 1 672 24
 1748 010e FB68     		ldr	r3, [r7, #12]
 1749 0110 1B68     		ldr	r3, [r3]
 1750 0112 40F20771 		movw	r1, #1799
 1751 0116 1846     		mov	r0, r3
 1752 0118 FFF7FEFF 		bl	hals_usrt_flag_get
 1753 011c 0346     		mov	r3, r0
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1754              		.loc 1 672 14
 1755 011e 002B     		cmp	r3, #0
 1756 0120 DFD0     		beq	.L88
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* send the data to be transmitted */
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(2U == data_length) {
 1757              		.loc 1 686 11
 1758 0122 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1759 0124 022B     		cmp	r3, #2
 1760 0126 11D1     		bne	.L89
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_data_transmit(usrt->periph, (*(uint16_t *)usrt->txbuffer.buffer & usrt->data_
 1761              		.loc 1 687 13
 1762 0128 FB68     		ldr	r3, [r7, #12]
 1763 012a 1868     		ldr	r0, [r3]
 1764              		.loc 1 687 79
 1765 012c FB68     		ldr	r3, [r7, #12]
 1766 012e DB69     		ldr	r3, [r3, #28]
 1767              		.loc 1 687 52
 1768 0130 1A88     		ldrh	r2, [r3]
 1769              		.loc 1 687 93
 1770 0132 FB68     		ldr	r3, [r7, #12]
 1771 0134 9B8E     		ldrh	r3, [r3, #52]
 1772              		.loc 1 687 13
 1773 0136 1340     		ands	r3, r3, r2
 1774 0138 9BB2     		uxth	r3, r3
 1775 013a 1946     		mov	r1, r3
 1776 013c FFF7FEFF 		bl	hals_usrt_data_transmit
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->txbuffer.buffer += 2;
 1777              		.loc 1 688 35
 1778 0140 FB68     		ldr	r3, [r7, #12]
 1779 0142 DB69     		ldr	r3, [r3, #28]
 1780 0144 9A1C     		adds	r2, r3, #2
 1781 0146 FB68     		ldr	r3, [r7, #12]
 1782 0148 DA61     		str	r2, [r3, #28]
 1783 014a 22E0     		b	.L91
 1784              	.L89:
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_data_transmit(usrt->periph, (*usrt->txbuffer.buffer & (uint8_t)usrt->data_bit
 1785              		.loc 1 690 13
 1786 014c FB68     		ldr	r3, [r7, #12]
 1787 014e 1868     		ldr	r0, [r3]
 1788              		.loc 1 690 67
 1789 0150 FB68     		ldr	r3, [r7, #12]
 1790 0152 DB69     		ldr	r3, [r3, #28]
 1791              		.loc 1 690 52
 1792 0154 1B78     		ldrb	r3, [r3]
 1793 0156 DAB2     		uxtb	r2, r3
 1794              		.loc 1 690 90
 1795 0158 FB68     		ldr	r3, [r7, #12]
 1796 015a 9B8E     		ldrh	r3, [r3, #52]
 1797              		.loc 1 690 77
 1798 015c DBB2     		uxtb	r3, r3
 1799              		.loc 1 690 13
 1800 015e 1340     		ands	r3, r3, r2
 1801 0160 DBB2     		uxtb	r3, r3
 1802 0162 9BB2     		uxth	r3, r3
 1803 0164 1946     		mov	r1, r3
 1804 0166 FFF7FEFF 		bl	hals_usrt_data_transmit
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->txbuffer.buffer++;
 1805              		.loc 1 691 27
 1806 016a FB68     		ldr	r3, [r7, #12]
 1807 016c DB69     		ldr	r3, [r3, #28]
 1808              		.loc 1 691 34
 1809 016e 5A1C     		adds	r2, r3, #1
 1810 0170 FB68     		ldr	r3, [r7, #12]
 1811 0172 DA61     		str	r2, [r3, #28]
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait for transmit complete */
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_TC)) {
 1812              		.loc 1 695 14
 1813 0174 0DE0     		b	.L91
 1814              	.L92:
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1815              		.loc 1 696 15
 1816 0176 3B6A     		ldr	r3, [r7, #32]
 1817 0178 B3F1FF3F 		cmp	r3, #-1
 1818 017c 09D0     		beq	.L91
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1819              		.loc 1 697 27
 1820 017e 396A     		ldr	r1, [r7, #32]
 1821 0180 3869     		ldr	r0, [r7, #16]
 1822 0182 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1823 0186 0346     		mov	r3, r0
 1824              		.loc 1 697 19
 1825 0188 012B     		cmp	r3, #1
 1826 018a 02D1     		bne	.L91
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_DEBUGW("usrt transmit timeout");
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     return HAL_ERR_TIMEOUT;
 1827              		.loc 1 699 28
 1828 018c 6FF00403 		mvn	r3, #4
 1829 0190 6EE0     		b	.L82
 1830              	.L91:
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1831              		.loc 1 695 24
 1832 0192 FB68     		ldr	r3, [r7, #12]
 1833 0194 1B68     		ldr	r3, [r3]
 1834 0196 40F20671 		movw	r1, #1798
 1835 019a 1846     		mov	r0, r3
 1836 019c FFF7FEFF 		bl	hals_usrt_flag_get
 1837 01a0 0346     		mov	r3, r0
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1838              		.loc 1 695 14
 1839 01a2 002B     		cmp	r3, #0
 1840 01a4 E7D0     		beq	.L92
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait the RBNE flag is set */
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         while(RESET == hals_usrt_flag_get(usrt->periph, USART_FLAG_RBNE)) {
 1841              		.loc 1 705 14
 1842 01a6 15E0     		b	.L93
 1843              	.L94:
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1844              		.loc 1 706 15
 1845 01a8 3B6A     		ldr	r3, [r7, #32]
 1846 01aa B3F1FF3F 		cmp	r3, #-1
 1847 01ae 11D0     		beq	.L93
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1848              		.loc 1 707 27
 1849 01b0 396A     		ldr	r1, [r7, #32]
 1850 01b2 3869     		ldr	r0, [r7, #16]
 1851 01b4 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1852 01b8 0346     		mov	r3, r0
 1853              		.loc 1 707 19
 1854 01ba 012B     		cmp	r3, #1
 1855 01bc 0AD1     		bne	.L93
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_DEBUGW("usrt RBNE flag set timeout");
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* reset the state */
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     usrt->rx_state = USRT_STATE_FREE;
 1856              		.loc 1 710 36
 1857 01be FB68     		ldr	r3, [r7, #12]
 1858 01c0 0022     		movs	r2, #0
 1859 01c2 83F83B20 		strb	r2, [r3, #59]
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* unlock usrt */
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     HAL_UNLOCK(usrt);
 1860              		.loc 1 712 21
 1861 01c6 FB68     		ldr	r3, [r7, #12]
 1862 01c8 0022     		movs	r2, #0
 1863 01ca 83F84420 		strb	r2, [r3, #68]
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     return HAL_ERR_TIMEOUT;
 1864              		.loc 1 713 28
 1865 01ce 6FF00403 		mvn	r3, #4
 1866 01d2 4DE0     		b	.L82
 1867              	.L93:
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1868              		.loc 1 705 24
 1869 01d4 FB68     		ldr	r3, [r7, #12]
 1870 01d6 1B68     		ldr	r3, [r3]
 1871 01d8 40F20571 		movw	r1, #1797
 1872 01dc 1846     		mov	r0, r3
 1873 01de FFF7FEFF 		bl	hals_usrt_flag_get
 1874 01e2 0346     		mov	r3, r0
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1875              		.loc 1 705 14
 1876 01e4 002B     		cmp	r3, #0
 1877 01e6 DFD0     		beq	.L94
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* read data from data register */
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(2U == data_length) {
 1878              		.loc 1 719 11
 1879 01e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1880 01ea 022B     		cmp	r3, #2
 1881 01ec 13D1     		bne	.L95
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             *(uint16_t *)usrt->rxbuffer.buffer = (hals_usrt_data_receive(usrt->periph) & usrt->data
 1882              		.loc 1 720 51
 1883 01ee FB68     		ldr	r3, [r7, #12]
 1884 01f0 1B68     		ldr	r3, [r3]
 1885 01f2 1846     		mov	r0, r3
 1886 01f4 FFF7FEFF 		bl	hals_usrt_data_receive
 1887 01f8 0346     		mov	r3, r0
 1888 01fa 1946     		mov	r1, r3
 1889              		.loc 1 720 94
 1890 01fc FB68     		ldr	r3, [r7, #12]
 1891 01fe 9A8E     		ldrh	r2, [r3, #52]
 1892              		.loc 1 720 40
 1893 0200 FB68     		ldr	r3, [r7, #12]
 1894 0202 9B6A     		ldr	r3, [r3, #40]
 1895              		.loc 1 720 48
 1896 0204 0A40     		ands	r2, r2, r1
 1897 0206 92B2     		uxth	r2, r2
 1898 0208 1A80     		strh	r2, [r3]	@ movhi
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->rxbuffer.buffer += 2;
 1899              		.loc 1 721 35
 1900 020a FB68     		ldr	r3, [r7, #12]
 1901 020c 9B6A     		ldr	r3, [r3, #40]
 1902 020e 9A1C     		adds	r2, r3, #2
 1903 0210 FB68     		ldr	r3, [r7, #12]
 1904 0212 9A62     		str	r2, [r3, #40]
 1905 0214 13E0     		b	.L96
 1906              	.L95:
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             *usrt->rxbuffer.buffer = (uint8_t)(hals_usrt_data_receive(usrt->periph) & usrt->data_bi
 1907              		.loc 1 723 48
 1908 0216 FB68     		ldr	r3, [r7, #12]
 1909 0218 1B68     		ldr	r3, [r3]
 1910 021a 1846     		mov	r0, r3
 1911 021c FFF7FEFF 		bl	hals_usrt_data_receive
 1912 0220 0346     		mov	r3, r0
 1913              		.loc 1 723 38
 1914 0222 D9B2     		uxtb	r1, r3
 1915              		.loc 1 723 91
 1916 0224 FB68     		ldr	r3, [r7, #12]
 1917 0226 9B8E     		ldrh	r3, [r3, #52]
 1918              		.loc 1 723 38
 1919 0228 DAB2     		uxtb	r2, r3
 1920              		.loc 1 723 28
 1921 022a FB68     		ldr	r3, [r7, #12]
 1922 022c 9B6A     		ldr	r3, [r3, #40]
 1923              		.loc 1 723 38
 1924 022e 0A40     		ands	r2, r2, r1
 1925 0230 D2B2     		uxtb	r2, r2
 1926              		.loc 1 723 36
 1927 0232 1A70     		strb	r2, [r3]
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             usrt->rxbuffer.buffer++;
 1928              		.loc 1 724 27
 1929 0234 FB68     		ldr	r3, [r7, #12]
 1930 0236 9B6A     		ldr	r3, [r3, #40]
 1931              		.loc 1 724 34
 1932 0238 5A1C     		adds	r2, r3, #1
 1933 023a FB68     		ldr	r3, [r7, #12]
 1934 023c 9A62     		str	r2, [r3, #40]
 1935              	.L96:
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* change the receive pointer */
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rxbuffer.pos++;
 1936              		.loc 1 728 23
 1937 023e FB68     		ldr	r3, [r7, #12]
 1938 0240 1B6B     		ldr	r3, [r3, #48]
 1939              		.loc 1 728 27
 1940 0242 5A1C     		adds	r2, r3, #1
 1941 0244 FB68     		ldr	r3, [r7, #12]
 1942 0246 1A63     		str	r2, [r3, #48]
 1943              	.L86:
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait the TBE flag is set */
 1944              		.loc 1 670 25
 1945 0248 FB68     		ldr	r3, [r7, #12]
 1946 024a 1A6B     		ldr	r2, [r3, #48]
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait the TBE flag is set */
 1947              		.loc 1 670 46
 1948 024c FB68     		ldr	r3, [r7, #12]
 1949 024e DB6A     		ldr	r3, [r3, #44]
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* wait the TBE flag is set */
 1950              		.loc 1 670 10
 1951 0250 9A42     		cmp	r2, r3
 1952 0252 FFF45CAF 		bcc	.L87
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* change the Tx and Rx state to free */
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_FREE;
 1953              		.loc 1 732 20
 1954 0256 FB68     		ldr	r3, [r7, #12]
 1955 0258 0022     		movs	r2, #0
 1956 025a 83F83A20 		strb	r2, [r3, #58]
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_FREE;
 1957              		.loc 1 733 20
 1958 025e FB68     		ldr	r3, [r7, #12]
 1959 0260 0022     		movs	r2, #0
 1960 0262 83F83B20 		strb	r2, [r3, #59]
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 1961              		.loc 1 736 5
 1962 0266 FB68     		ldr	r3, [r7, #12]
 1963 0268 0022     		movs	r2, #0
 1964 026a 83F84420 		strb	r2, [r3, #68]
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 1965              		.loc 1 738 12
 1966 026e 0023     		movs	r3, #0
 1967              	.L82:
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 1968              		.loc 1 739 1
 1969 0270 1846     		mov	r0, r3
 1970 0272 1837     		adds	r7, r7, #24
 1971              		.cfi_def_cfa_offset 8
 1972 0274 BD46     		mov	sp, r7
 1973              		.cfi_def_cfa_register 13
 1974              		@ sp needed
 1975 0276 80BD     		pop	{r7, pc}
 1976              		.cfi_endproc
 1977              	.LFE127:
 1979              		.section	.text.hal_usrt_transmit_interrupt,"ax",%progbits
 1980              		.align	1
 1981              		.global	hal_usrt_transmit_interrupt
 1982              		.syntax unified
 1983              		.thumb
 1984              		.thumb_func
 1985              		.fpu softvfp
 1987              	hal_usrt_transmit_interrupt:
 1988              	.LFB128:
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit amounts of data by interrupt method
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is non-blocking
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_buffer: pointer to data buffer
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be transmitted
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_user_func: user callback function
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transmit_interrupt(hal_usrt_dev_struct *usrt, uint8_t *p_buffer, uint32_t length, 
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 1989              		.loc 1 754 1
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 16
 1992              		@ frame_needed = 1, uses_anonymous_args = 0
 1993 0000 80B5     		push	{r7, lr}
 1994              		.cfi_def_cfa_offset 8
 1995              		.cfi_offset 7, -8
 1996              		.cfi_offset 14, -4
 1997 0002 84B0     		sub	sp, sp, #16
 1998              		.cfi_def_cfa_offset 24
 1999 0004 00AF     		add	r7, sp, #0
 2000              		.cfi_def_cfa_register 7
 2001 0006 F860     		str	r0, [r7, #12]
 2002 0008 B960     		str	r1, [r7, #8]
 2003 000a 7A60     		str	r2, [r7, #4]
 2004 000c 3B60     		str	r3, [r7]
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_buffer) || (0U == length)) {
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_buffer] or [length] value is invalid");
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the tx_state wheher is busy or not */
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->tx_state) {
 2005              		.loc 1 764 31
 2006 000e FB68     		ldr	r3, [r7, #12]
 2007 0010 93F83A30 		ldrb	r3, [r3, #58]
 2008 0014 DBB2     		uxtb	r3, r3
 2009              		.loc 1 764 7
 2010 0016 012B     		cmp	r3, #1
 2011 0018 02D1     		bne	.L99
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt tx has already been used, please wait until run_state change to free ");
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 2012              		.loc 1 766 16
 2013 001a 6FF00203 		mvn	r3, #2
 2014 001e 3AE0     		b	.L100
 2015              	.L99:
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 2016              		.loc 1 770 5
 2017 0020 FB68     		ldr	r3, [r7, #12]
 2018 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2019 0026 012B     		cmp	r3, #1
 2020 0028 02D1     		bne	.L101
 2021              		.loc 1 770 5 is_stmt 0 discriminator 1
 2022 002a 6FF00103 		mvn	r3, #1
 2023 002e 32E0     		b	.L100
 2024              	.L101:
 2025              		.loc 1 770 5 discriminator 2
 2026 0030 FB68     		ldr	r3, [r7, #12]
 2027 0032 0122     		movs	r2, #1
 2028 0034 83F84420 		strb	r2, [r3, #68]
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_BUSY;
 2029              		.loc 1 772 20 is_stmt 1 discriminator 2
 2030 0038 FB68     		ldr	r3, [r7, #12]
 2031 003a 0122     		movs	r2, #1
 2032 003c 83F83A20 		strb	r2, [r3, #58]
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 2033              		.loc 1 773 23 discriminator 2
 2034 0040 FB68     		ldr	r3, [r7, #12]
 2035 0042 0022     		movs	r2, #0
 2036 0044 1A87     		strh	r2, [r3, #56]	@ movhi
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize transmit parameters */
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.buffer   = (uint8_t *)p_buffer;
 2037              		.loc 1 776 29 discriminator 2
 2038 0046 FB68     		ldr	r3, [r7, #12]
 2039 0048 BA68     		ldr	r2, [r7, #8]
 2040 004a DA61     		str	r2, [r3, #28]
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.length   = length;
 2041              		.loc 1 777 29 discriminator 2
 2042 004c FB68     		ldr	r3, [r7, #12]
 2043 004e 7A68     		ldr	r2, [r7, #4]
 2044 0050 1A62     		str	r2, [r3, #32]
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.pos      = 0U;
 2045              		.loc 1 778 29 discriminator 2
 2046 0052 FB68     		ldr	r3, [r7, #12]
 2047 0054 0022     		movs	r2, #0
 2048 0056 5A62     		str	r2, [r3, #36]
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_callback       = (void *)p_user_func;
 2049              		.loc 1 779 29 discriminator 2
 2050 0058 FB68     		ldr	r3, [r7, #12]
 2051 005a 3A68     		ldr	r2, [r7]
 2052 005c 1A64     		str	r2, [r3, #64]
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure the transmit ready and complete callback as the function implemented */
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_ready_handle = _usrt_transmit_interrupt;
 2053              		.loc 1 782 42 discriminator 2
 2054 005e FB68     		ldr	r3, [r7, #12]
 2055 0060 0F4A     		ldr	r2, .L102
 2056 0062 9A60     		str	r2, [r3, #8]
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_complete_handle = _usrt_transmit_complete_interrupt;
 2057              		.loc 1 783 45 discriminator 2
 2058 0064 FB68     		ldr	r3, [r7, #12]
 2059 0066 0F4A     		ldr	r2, .L102+4
 2060 0068 DA60     		str	r2, [r3, #12]
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USRT TC interrupt flag */
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_TC);
 2061              		.loc 1 786 5 discriminator 2
 2062 006a FB68     		ldr	r3, [r7, #12]
 2063 006c 1B68     		ldr	r3, [r3]
 2064 006e 0E49     		ldr	r1, .L102+8
 2065 0070 1846     		mov	r0, r3
 2066 0072 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable the TBE interrupt */
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_TBE);
 2067              		.loc 1 789 5 discriminator 2
 2068 0076 FB68     		ldr	r3, [r7, #12]
 2069 0078 1B68     		ldr	r3, [r3]
 2070 007a 0721     		movs	r1, #7
 2071 007c 1846     		mov	r0, r3
 2072 007e FFF7FEFF 		bl	hals_usrt_interrupt_enable
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock uart */
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 2073              		.loc 1 792 5 discriminator 2
 2074 0082 FB68     		ldr	r3, [r7, #12]
 2075 0084 0022     		movs	r2, #0
 2076 0086 83F84420 		strb	r2, [r3, #68]
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_uart_enable(usrt->periph);
 2077              		.loc 1 794 5 discriminator 2
 2078 008a FB68     		ldr	r3, [r7, #12]
 2079 008c 1B68     		ldr	r3, [r3]
 2080 008e 1846     		mov	r0, r3
 2081 0090 FFF7FEFF 		bl	hals_uart_enable
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 2082              		.loc 1 796 12 discriminator 2
 2083 0094 0023     		movs	r3, #0
 2084              	.L100:
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 2085              		.loc 1 797 1
 2086 0096 1846     		mov	r0, r3
 2087 0098 1037     		adds	r7, r7, #16
 2088              		.cfi_def_cfa_offset 8
 2089 009a BD46     		mov	sp, r7
 2090              		.cfi_def_cfa_register 13
 2091              		@ sp needed
 2092 009c 80BD     		pop	{r7, pc}
 2093              	.L103:
 2094 009e 00BF     		.align	2
 2095              	.L102:
 2096 00a0 00000000 		.word	_usrt_transmit_interrupt
 2097 00a4 00000000 		.word	_usrt_transmit_complete_interrupt
 2098 00a8 06000607 		.word	117833734
 2099              		.cfi_endproc
 2100              	.LFE128:
 2102              		.section	.text.hal_usrt_receive_interrupt,"ax",%progbits
 2103              		.align	1
 2104              		.global	hal_usrt_receive_interrupt
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu softvfp
 2110              	hal_usrt_receive_interrupt:
 2111              	.LFB129:
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      receive amounts of data by interrupt method
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is non-blocking
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_buffer: pointer to data buffer
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be received
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_user_func: user callback function
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_receive_interrupt(hal_usrt_dev_struct *usrt, uint8_t *p_buffer, uint32_t length, h
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 2112              		.loc 1 812 1
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 16
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
 2116 0000 90B5     		push	{r4, r7, lr}
 2117              		.cfi_def_cfa_offset 12
 2118              		.cfi_offset 4, -12
 2119              		.cfi_offset 7, -8
 2120              		.cfi_offset 14, -4
 2121 0002 85B0     		sub	sp, sp, #20
 2122              		.cfi_def_cfa_offset 32
 2123 0004 00AF     		add	r7, sp, #0
 2124              		.cfi_def_cfa_register 7
 2125 0006 F860     		str	r0, [r7, #12]
 2126 0008 B960     		str	r1, [r7, #8]
 2127 000a 7A60     		str	r2, [r7, #4]
 2128 000c 3B60     		str	r3, [r7]
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_buffer) || (0U == length)) {
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_buffer] or [length] value is invalid");
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is busy or not */
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->rx_state) {
 2129              		.loc 1 822 31
 2130 000e FB68     		ldr	r3, [r7, #12]
 2131 0010 93F83B30 		ldrb	r3, [r3, #59]
 2132 0014 DBB2     		uxtb	r3, r3
 2133              		.loc 1 822 7
 2134 0016 012B     		cmp	r3, #1
 2135 0018 02D1     		bne	.L105
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt rx has already been used, please wait until run_state change to free ");
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 2136              		.loc 1 824 16
 2137 001a 6FF00203 		mvn	r3, #2
 2138 001e 4AE0     		b	.L106
 2139              	.L105:
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 2140              		.loc 1 828 5
 2141 0020 FB68     		ldr	r3, [r7, #12]
 2142 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2143 0026 012B     		cmp	r3, #1
 2144 0028 02D1     		bne	.L107
 2145              		.loc 1 828 5 is_stmt 0 discriminator 1
 2146 002a 6FF00103 		mvn	r3, #1
 2147 002e 42E0     		b	.L106
 2148              	.L107:
 2149              		.loc 1 828 5 discriminator 2
 2150 0030 FB68     		ldr	r3, [r7, #12]
 2151 0032 0122     		movs	r2, #1
 2152 0034 83F84420 		strb	r2, [r3, #68]
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_BUSY;
 2153              		.loc 1 830 20 is_stmt 1 discriminator 2
 2154 0038 FB68     		ldr	r3, [r7, #12]
 2155 003a 0122     		movs	r2, #1
 2156 003c 83F83B20 		strb	r2, [r3, #59]
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 2157              		.loc 1 831 23 discriminator 2
 2158 0040 FB68     		ldr	r3, [r7, #12]
 2159 0042 0022     		movs	r2, #0
 2160 0044 1A87     		strh	r2, [r3, #56]	@ movhi
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize receive parameters */
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.buffer   = (uint8_t *)p_buffer;
 2161              		.loc 1 834 29 discriminator 2
 2162 0046 FB68     		ldr	r3, [r7, #12]
 2163 0048 BA68     		ldr	r2, [r7, #8]
 2164 004a 9A62     		str	r2, [r3, #40]
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.length   = length;
 2165              		.loc 1 835 29 discriminator 2
 2166 004c FB68     		ldr	r3, [r7, #12]
 2167 004e 7A68     		ldr	r2, [r7, #4]
 2168 0050 DA62     		str	r2, [r3, #44]
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos      = 0U;
 2169              		.loc 1 836 29 discriminator 2
 2170 0052 FB68     		ldr	r3, [r7, #12]
 2171 0054 0022     		movs	r2, #0
 2172 0056 1A63     		str	r2, [r3, #48]
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask     = _usrt_data_bit_mask_get(usrt);
 2173              		.loc 1 837 31 discriminator 2
 2174 0058 F868     		ldr	r0, [r7, #12]
 2175 005a FFF7FEFF 		bl	_usrt_data_bit_mask_get
 2176 005e 0346     		mov	r3, r0
 2177 0060 1A46     		mov	r2, r3
 2178              		.loc 1 837 29 discriminator 2
 2179 0062 FB68     		ldr	r3, [r7, #12]
 2180 0064 9A86     		strh	r2, [r3, #52]	@ movhi
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_callback       = (void *)p_user_func;
 2181              		.loc 1 838 29 discriminator 2
 2182 0066 FB68     		ldr	r3, [r7, #12]
 2183 0068 3A68     		ldr	r2, [r7]
 2184 006a DA63     		str	r2, [r3, #60]
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.receive_complete_handle = _usrt_receive_interrupt;
 2185              		.loc 1 839 44 discriminator 2
 2186 006c FB68     		ldr	r3, [r7, #12]
 2187 006e 144A     		ldr	r2, .L108
 2188 0070 5A60     		str	r2, [r3, #4]
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable PERR, ERR, RBNE interrupt */
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_PERR);
 2189              		.loc 1 842 5 discriminator 2
 2190 0072 FB68     		ldr	r3, [r7, #12]
 2191 0074 1B68     		ldr	r3, [r3]
 2192 0076 0821     		movs	r1, #8
 2193 0078 1846     		mov	r0, r3
 2194 007a FFF7FEFF 		bl	hals_usrt_interrupt_enable
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_ERR);
 2195              		.loc 1 843 5 discriminator 2
 2196 007e FB68     		ldr	r3, [r7, #12]
 2197 0080 1B68     		ldr	r3, [r3]
 2198 0082 4FF40071 		mov	r1, #512
 2199 0086 1846     		mov	r0, r3
 2200 0088 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_RBNE);
 2201              		.loc 1 844 5 discriminator 2
 2202 008c FB68     		ldr	r3, [r7, #12]
 2203 008e 1B68     		ldr	r3, [r3]
 2204 0090 0521     		movs	r1, #5
 2205 0092 1846     		mov	r0, r3
 2206 0094 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 2207              		.loc 1 847 5 discriminator 2
 2208 0098 FB68     		ldr	r3, [r7, #12]
 2209 009a 0022     		movs	r2, #0
 2210 009c 83F84420 		strb	r2, [r3, #68]
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* send dummy byte to generate clock for the slave to send data */
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_data_transmit(usrt->periph, USRT_DUMMY_DATA & _usrt_data_bit_mask_get(usrt));
 2211              		.loc 1 850 5 discriminator 2
 2212 00a0 FB68     		ldr	r3, [r7, #12]
 2213 00a2 1C68     		ldr	r4, [r3]
 2214 00a4 F868     		ldr	r0, [r7, #12]
 2215 00a6 FFF7FEFF 		bl	_usrt_data_bit_mask_get
 2216 00aa 0346     		mov	r3, r0
 2217 00ac 1946     		mov	r1, r3
 2218 00ae 2046     		mov	r0, r4
 2219 00b0 FFF7FEFF 		bl	hals_usrt_data_transmit
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 2220              		.loc 1 852 12 discriminator 2
 2221 00b4 0023     		movs	r3, #0
 2222              	.L106:
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 2223              		.loc 1 853 1
 2224 00b6 1846     		mov	r0, r3
 2225 00b8 1437     		adds	r7, r7, #20
 2226              		.cfi_def_cfa_offset 12
 2227 00ba BD46     		mov	sp, r7
 2228              		.cfi_def_cfa_register 13
 2229              		@ sp needed
 2230 00bc 90BD     		pop	{r4, r7, pc}
 2231              	.L109:
 2232 00be 00BF     		.align	2
 2233              	.L108:
 2234 00c0 00000000 		.word	_usrt_receive_interrupt
 2235              		.cfi_endproc
 2236              	.LFE129:
 2238              		.section	.text.hal_usrt_transmit_receive_interrupt,"ax",%progbits
 2239              		.align	1
 2240              		.global	hal_usrt_transmit_receive_interrupt
 2241              		.syntax unified
 2242              		.thumb
 2243              		.thumb_func
 2244              		.fpu softvfp
 2246              	hal_usrt_transmit_receive_interrupt:
 2247              	.LFB130:
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit & receive amounts of data by interrupt method
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is non-blocking
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_tx_buffer: pointer to Tx data buffer
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_rx_buffer: pointer to Rx data buffer
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be received
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_user_func: user callback function
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transmit_receive_interrupt(hal_usrt_dev_struct *usrt, uint8_t *p_tx_buffer, uint8_
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 2248              		.loc 1 869 1
 2249              		.cfi_startproc
 2250              		@ args = 4, pretend = 0, frame = 16
 2251              		@ frame_needed = 1, uses_anonymous_args = 0
 2252 0000 80B5     		push	{r7, lr}
 2253              		.cfi_def_cfa_offset 8
 2254              		.cfi_offset 7, -8
 2255              		.cfi_offset 14, -4
 2256 0002 84B0     		sub	sp, sp, #16
 2257              		.cfi_def_cfa_offset 24
 2258 0004 00AF     		add	r7, sp, #0
 2259              		.cfi_def_cfa_register 7
 2260 0006 F860     		str	r0, [r7, #12]
 2261 0008 B960     		str	r1, [r7, #8]
 2262 000a 7A60     		str	r2, [r7, #4]
 2263 000c 3B60     		str	r3, [r7]
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_tx_buffer) || (NULL == p_rx_buffer) ||
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (0U == length)) {
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_tx_buffer] or [p_rx_buffer] or [length] value is invalid
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* 9-bit transfer with no parity, if tx or rx buffer address is not aligned on uint16_t, return
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((RESET != (USART_CTL0(usrt->periph) & USART_CTL0_WL)) && \
 2264              		.loc 1 880 19
 2265 000e FB68     		ldr	r3, [r7, #12]
 2266 0010 1B68     		ldr	r3, [r3]
 2267 0012 1B68     		ldr	r3, [r3]
 2268              		.loc 1 880 44
 2269 0014 03F48053 		and	r3, r3, #4096
 2270              		.loc 1 880 7
 2271 0018 002B     		cmp	r3, #0
 2272 001a 16D0     		beq	.L111
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN))) {
 2273              		.loc 1 881 24 discriminator 1
 2274 001c FB68     		ldr	r3, [r7, #12]
 2275 001e 1B68     		ldr	r3, [r3]
 2276 0020 1B68     		ldr	r3, [r3]
 2277              		.loc 1 881 49 discriminator 1
 2278 0022 03F48063 		and	r3, r3, #1024
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (RESET == (USART_CTL0(usrt->periph) & USART_CTL0_PCEN))) {
 2279              		.loc 1 880 62 discriminator 1
 2280 0026 002B     		cmp	r3, #0
 2281 0028 0FD1     		bne	.L111
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != (((uint32_t)p_tx_buffer || (uint32_t)p_rx_buffer) & 1U)) {
 2282              		.loc 1 882 45
 2283 002a BB68     		ldr	r3, [r7, #8]
 2284 002c 002B     		cmp	r3, #0
 2285 002e 02D1     		bne	.L112
 2286              		.loc 1 882 45 is_stmt 0 discriminator 2
 2287 0030 7B68     		ldr	r3, [r7, #4]
 2288 0032 002B     		cmp	r3, #0
 2289 0034 01D0     		beq	.L113
 2290              	.L112:
 2291              		.loc 1 882 45 discriminator 3
 2292 0036 0123     		movs	r3, #1
 2293 0038 00E0     		b	.L114
 2294              	.L113:
 2295              		.loc 1 882 45 discriminator 4
 2296 003a 0023     		movs	r3, #0
 2297              	.L114:
 2298              		.loc 1 882 71 is_stmt 1 discriminator 6
 2299 003c 03F00103 		and	r3, r3, #1
 2300              		.loc 1 882 11 discriminator 6
 2301 0040 002B     		cmp	r3, #0
 2302 0042 02D0     		beq	.L111
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             return HAL_ERR_ADDRESS;
 2303              		.loc 1 883 20
 2304 0044 6FF00603 		mvn	r3, #6
 2305 0048 6DE0     		b	.L115
 2306              	.L111:
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is in busy Tx Rx or not */
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY_TX_RX == usrt->rx_state) {
 2307              		.loc 1 888 37
 2308 004a FB68     		ldr	r3, [r7, #12]
 2309 004c 93F83B30 		ldrb	r3, [r3, #59]
 2310 0050 DBB2     		uxtb	r3, r3
 2311              		.loc 1 888 7
 2312 0052 022B     		cmp	r3, #2
 2313 0054 02D1     		bne	.L116
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt tx or rx has already been used, please wait until run_state change to free
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 2314              		.loc 1 890 16
 2315 0056 6FF00203 		mvn	r3, #2
 2316 005a 64E0     		b	.L115
 2317              	.L116:
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 2318              		.loc 1 894 5
 2319 005c FB68     		ldr	r3, [r7, #12]
 2320 005e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2321 0062 012B     		cmp	r3, #1
 2322 0064 02D1     		bne	.L117
 2323              		.loc 1 894 5 is_stmt 0 discriminator 1
 2324 0066 6FF00103 		mvn	r3, #1
 2325 006a 5CE0     		b	.L115
 2326              	.L117:
 2327              		.loc 1 894 5 discriminator 2
 2328 006c FB68     		ldr	r3, [r7, #12]
 2329 006e 0122     		movs	r2, #1
 2330 0070 83F84420 		strb	r2, [r3, #68]
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 2331              		.loc 1 896 23 is_stmt 1 discriminator 2
 2332 0074 FB68     		ldr	r3, [r7, #12]
 2333 0076 0022     		movs	r2, #0
 2334 0078 1A87     		strh	r2, [r3, #56]	@ movhi
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_BUSY_TX_RX;
 2335              		.loc 1 897 20 discriminator 2
 2336 007a FB68     		ldr	r3, [r7, #12]
 2337 007c 0222     		movs	r2, #2
 2338 007e 83F83A20 		strb	r2, [r3, #58]
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_BUSY_TX_RX;
 2339              		.loc 1 898 20 discriminator 2
 2340 0082 FB68     		ldr	r3, [r7, #12]
 2341 0084 0222     		movs	r2, #2
 2342 0086 83F83B20 		strb	r2, [r3, #59]
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize transmit parameters */
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.buffer   = (uint8_t *)p_tx_buffer;
 2343              		.loc 1 901 29 discriminator 2
 2344 008a FB68     		ldr	r3, [r7, #12]
 2345 008c BA68     		ldr	r2, [r7, #8]
 2346 008e DA61     		str	r2, [r3, #28]
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.length   = length;
 2347              		.loc 1 902 29 discriminator 2
 2348 0090 FB68     		ldr	r3, [r7, #12]
 2349 0092 3A68     		ldr	r2, [r7]
 2350 0094 1A62     		str	r2, [r3, #32]
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.pos      = 0U;
 2351              		.loc 1 903 29 discriminator 2
 2352 0096 FB68     		ldr	r3, [r7, #12]
 2353 0098 0022     		movs	r2, #0
 2354 009a 5A62     		str	r2, [r3, #36]
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_ready_handle = _usrt_tx_rx_interrupt;
 2355              		.loc 1 904 42 discriminator 2
 2356 009c FB68     		ldr	r3, [r7, #12]
 2357 009e 244A     		ldr	r2, .L118
 2358 00a0 9A60     		str	r2, [r3, #8]
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_complete_handle = _usrt_transmit_complete_interrupt;
 2359              		.loc 1 905 45 discriminator 2
 2360 00a2 FB68     		ldr	r3, [r7, #12]
 2361 00a4 234A     		ldr	r2, .L118+4
 2362 00a6 DA60     		str	r2, [r3, #12]
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize receive parameters */
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.buffer   = (uint8_t *)p_rx_buffer;
 2363              		.loc 1 908 29 discriminator 2
 2364 00a8 FB68     		ldr	r3, [r7, #12]
 2365 00aa 7A68     		ldr	r2, [r7, #4]
 2366 00ac 9A62     		str	r2, [r3, #40]
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.length   = length;
 2367              		.loc 1 909 29 discriminator 2
 2368 00ae FB68     		ldr	r3, [r7, #12]
 2369 00b0 3A68     		ldr	r2, [r7]
 2370 00b2 DA62     		str	r2, [r3, #44]
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos      = 0U;
 2371              		.loc 1 910 29 discriminator 2
 2372 00b4 FB68     		ldr	r3, [r7, #12]
 2373 00b6 0022     		movs	r2, #0
 2374 00b8 1A63     		str	r2, [r3, #48]
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask     = _usrt_data_bit_mask_get(usrt);
 2375              		.loc 1 911 31 discriminator 2
 2376 00ba F868     		ldr	r0, [r7, #12]
 2377 00bc FFF7FEFF 		bl	_usrt_data_bit_mask_get
 2378 00c0 0346     		mov	r3, r0
 2379 00c2 1A46     		mov	r2, r3
 2380              		.loc 1 911 29 discriminator 2
 2381 00c4 FB68     		ldr	r3, [r7, #12]
 2382 00c6 9A86     		strh	r2, [r3, #52]	@ movhi
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_callback       = (void *)p_user_func;
 2383              		.loc 1 912 29 discriminator 2
 2384 00c8 FB68     		ldr	r3, [r7, #12]
 2385 00ca BA69     		ldr	r2, [r7, #24]
 2386 00cc DA63     		str	r2, [r3, #60]
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.receive_complete_handle = _usrt_tx_rx_interrupt;
 2387              		.loc 1 913 44 discriminator 2
 2388 00ce FB68     		ldr	r3, [r7, #12]
 2389 00d0 174A     		ldr	r2, .L118
 2390 00d2 5A60     		str	r2, [r3, #4]
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USRT TC interrupt flag */
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_TC);
 2391              		.loc 1 916 5 discriminator 2
 2392 00d4 FB68     		ldr	r3, [r7, #12]
 2393 00d6 1B68     		ldr	r3, [r3]
 2394 00d8 1749     		ldr	r1, .L118+8
 2395 00da 1846     		mov	r0, r3
 2396 00dc FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable PERR, ERR, RBNE, TBE interrupt */
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_PERR);
 2397              		.loc 1 919 5 discriminator 2
 2398 00e0 FB68     		ldr	r3, [r7, #12]
 2399 00e2 1B68     		ldr	r3, [r3]
 2400 00e4 0821     		movs	r1, #8
 2401 00e6 1846     		mov	r0, r3
 2402 00e8 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_ERR);
 2403              		.loc 1 920 5 discriminator 2
 2404 00ec FB68     		ldr	r3, [r7, #12]
 2405 00ee 1B68     		ldr	r3, [r3]
 2406 00f0 4FF40071 		mov	r1, #512
 2407 00f4 1846     		mov	r0, r3
 2408 00f6 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_RBNE);
 2409              		.loc 1 921 5 discriminator 2
 2410 00fa FB68     		ldr	r3, [r7, #12]
 2411 00fc 1B68     		ldr	r3, [r3]
 2412 00fe 0521     		movs	r1, #5
 2413 0100 1846     		mov	r0, r3
 2414 0102 FFF7FEFF 		bl	hals_usrt_interrupt_enable
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_TBE);
 2415              		.loc 1 922 5 discriminator 2
 2416 0106 FB68     		ldr	r3, [r7, #12]
 2417 0108 1B68     		ldr	r3, [r3]
 2418 010a 0721     		movs	r1, #7
 2419 010c 1846     		mov	r0, r3
 2420 010e FFF7FEFF 		bl	hals_usrt_interrupt_enable
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock uart */
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 2421              		.loc 1 925 5 discriminator 2
 2422 0112 FB68     		ldr	r3, [r7, #12]
 2423 0114 0022     		movs	r2, #0
 2424 0116 83F84420 		strb	r2, [r3, #68]
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_uart_enable(usrt->periph);
 2425              		.loc 1 927 5 discriminator 2
 2426 011a FB68     		ldr	r3, [r7, #12]
 2427 011c 1B68     		ldr	r3, [r3]
 2428 011e 1846     		mov	r0, r3
 2429 0120 FFF7FEFF 		bl	hals_uart_enable
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 2430              		.loc 1 929 12 discriminator 2
 2431 0124 0023     		movs	r3, #0
 2432              	.L115:
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 2433              		.loc 1 930 1
 2434 0126 1846     		mov	r0, r3
 2435 0128 1037     		adds	r7, r7, #16
 2436              		.cfi_def_cfa_offset 8
 2437 012a BD46     		mov	sp, r7
 2438              		.cfi_def_cfa_register 13
 2439              		@ sp needed
 2440 012c 80BD     		pop	{r7, pc}
 2441              	.L119:
 2442 012e 00BF     		.align	2
 2443              	.L118:
 2444 0130 00000000 		.word	_usrt_tx_rx_interrupt
 2445 0134 00000000 		.word	_usrt_transmit_complete_interrupt
 2446 0138 06000607 		.word	117833734
 2447              		.cfi_endproc
 2448              	.LFE130:
 2450              		.section	.text.hal_usrt_transmit_dma,"ax",%progbits
 2451              		.align	1
 2452              		.global	hal_usrt_transmit_dma
 2453              		.syntax unified
 2454              		.thumb
 2455              		.thumb_func
 2456              		.fpu softvfp
 2458              	hal_usrt_transmit_dma:
 2459              	.LFB131:
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit amounts of data by dma method
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is non-blocking
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_buffer: pointer to data buffer
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be transmitted
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_func: pointer to callback function
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transmit_dma(hal_usrt_dev_struct *usrt, uint8_t *p_buffer, uint16_t length, hal_us
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 2460              		.loc 1 945 1
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 32
 2463              		@ frame_needed = 1, uses_anonymous_args = 0
 2464 0000 90B5     		push	{r4, r7, lr}
 2465              		.cfi_def_cfa_offset 12
 2466              		.cfi_offset 4, -12
 2467              		.cfi_offset 7, -8
 2468              		.cfi_offset 14, -4
 2469 0002 8BB0     		sub	sp, sp, #44
 2470              		.cfi_def_cfa_offset 56
 2471 0004 02AF     		add	r7, sp, #8
 2472              		.cfi_def_cfa 7, 48
 2473 0006 F860     		str	r0, [r7, #12]
 2474 0008 B960     		str	r1, [r7, #8]
 2475 000a 3B60     		str	r3, [r7]
 2476 000c 1346     		mov	r3, r2	@ movhi
 2477 000e FB80     		strh	r3, [r7, #6]	@ movhi
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_irq_struct dma_irq;
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_buffer) || (0U == length)) {
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_buffer] or [length] value is invalid");
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameter */
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == usrt->p_dma_tx) {
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt->p_dma_tx] value is invalid");
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the tx_state wheher is busy or not */
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->tx_state) {
 2478              		.loc 1 963 31
 2479 0010 FB68     		ldr	r3, [r7, #12]
 2480 0012 93F83A30 		ldrb	r3, [r3, #58]
 2481 0016 DBB2     		uxtb	r3, r3
 2482              		.loc 1 963 7
 2483 0018 012B     		cmp	r3, #1
 2484 001a 02D1     		bne	.L121
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt tx has already been used, please wait until run_state change to free ");
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 2485              		.loc 1 965 16
 2486 001c 6FF00203 		mvn	r3, #2
 2487 0020 77E0     		b	.L129
 2488              	.L121:
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 2489              		.loc 1 969 5
 2490 0022 FB68     		ldr	r3, [r7, #12]
 2491 0024 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2492 0028 012B     		cmp	r3, #1
 2493 002a 02D1     		bne	.L123
 2494              		.loc 1 969 5 is_stmt 0 discriminator 1
 2495 002c 6FF00103 		mvn	r3, #1
 2496 0030 6FE0     		b	.L129
 2497              	.L123:
 2498              		.loc 1 969 5 discriminator 2
 2499 0032 FB68     		ldr	r3, [r7, #12]
 2500 0034 0122     		movs	r2, #1
 2501 0036 83F84420 		strb	r2, [r3, #68]
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_BUSY;
 2502              		.loc 1 971 20 is_stmt 1 discriminator 2
 2503 003a FB68     		ldr	r3, [r7, #12]
 2504 003c 0122     		movs	r2, #1
 2505 003e 83F83A20 		strb	r2, [r3, #58]
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 2506              		.loc 1 972 23 discriminator 2
 2507 0042 FB68     		ldr	r3, [r7, #12]
 2508 0044 0022     		movs	r2, #0
 2509 0046 1A87     		strh	r2, [r3, #56]	@ movhi
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize transmit parameters */
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.buffer   = (uint8_t *)p_buffer;
 2510              		.loc 1 975 29 discriminator 2
 2511 0048 FB68     		ldr	r3, [r7, #12]
 2512 004a BA68     		ldr	r2, [r7, #8]
 2513 004c DA61     		str	r2, [r3, #28]
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.length   = length;
 2514              		.loc 1 976 29 discriminator 2
 2515 004e FA88     		ldrh	r2, [r7, #6]
 2516 0050 FB68     		ldr	r3, [r7, #12]
 2517 0052 1A62     		str	r2, [r3, #32]
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.pos      = 0U;
 2518              		.loc 1 977 29 discriminator 2
 2519 0054 FB68     		ldr	r3, [r7, #12]
 2520 0056 0022     		movs	r2, #0
 2521 0058 5A62     		str	r2, [r3, #36]
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_func) {
 2522              		.loc 1 979 7 discriminator 2
 2523 005a 3B68     		ldr	r3, [r7]
 2524 005c 002B     		cmp	r3, #0
 2525 005e 08D0     		beq	.L124
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->tx_callback = (void *)p_func->complete_func;
 2526              		.loc 1 980 43
 2527 0060 3B68     		ldr	r3, [r7]
 2528 0062 1A68     		ldr	r2, [r3]
 2529              		.loc 1 980 27
 2530 0064 FB68     		ldr	r3, [r7, #12]
 2531 0066 1A64     		str	r2, [r3, #64]
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 2532              		.loc 1 981 64
 2533 0068 3B68     		ldr	r3, [r7]
 2534 006a 5A68     		ldr	r2, [r3, #4]
 2535              		.loc 1 981 37
 2536 006c FB68     		ldr	r3, [r7, #12]
 2537 006e 1A61     		str	r2, [r3, #16]
 2538 0070 05E0     		b	.L125
 2539              	.L124:
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->tx_callback = NULL;
 2540              		.loc 1 983 27
 2541 0072 FB68     		ldr	r3, [r7, #12]
 2542 0074 0022     		movs	r2, #0
 2543 0076 1A64     		str	r2, [r3, #64]
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = NULL;
 2544              		.loc 1 984 37
 2545 0078 FB68     		ldr	r3, [r7, #12]
 2546 007a 0022     		movs	r2, #0
 2547 007c 1A61     		str	r2, [r3, #16]
 2548              	.L125:
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_complete_handle = _usrt_transmit_complete_interrupt;
 2549              		.loc 1 986 45
 2550 007e FB68     		ldr	r3, [r7, #12]
 2551 0080 264A     		ldr	r2, .L130
 2552 0082 DA60     		str	r2, [r3, #12]
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure DMA interrupt callback function */
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.full_finish_handle = _usrt_transmit_dma;
 2553              		.loc 1 989 32
 2554 0084 264B     		ldr	r3, .L130+4
 2555 0086 FB61     		str	r3, [r7, #28]
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.error_handle = _usrt_dma_error;
 2556              		.loc 1 990 26
 2557 0088 264B     		ldr	r3, .L130+8
 2558 008a 7B61     		str	r3, [r7, #20]
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != usrt->p_dma_tx->dma_irq.half_finish_handle) {
 2559              		.loc 1 991 20
 2560 008c FB68     		ldr	r3, [r7, #12]
 2561 008e 9B69     		ldr	r3, [r3, #24]
 2562              		.loc 1 991 39
 2563 0090 9B68     		ldr	r3, [r3, #8]
 2564              		.loc 1 991 7
 2565 0092 002B     		cmp	r3, #0
 2566 0094 04D0     		beq	.L126
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = usrt->p_dma_tx->dma_irq.half_finish_handle;
 2567              		.loc 1 992 42
 2568 0096 FB68     		ldr	r3, [r7, #12]
 2569 0098 9B69     		ldr	r3, [r3, #24]
 2570              		.loc 1 992 61
 2571 009a 9B68     		ldr	r3, [r3, #8]
 2572              		.loc 1 992 36
 2573 009c BB61     		str	r3, [r7, #24]
 2574 009e 01E0     		b	.L127
 2575              	.L126:
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = NULL;
 2576              		.loc 1 994 36
 2577 00a0 0023     		movs	r3, #0
 2578 00a2 BB61     		str	r3, [r7, #24]
 2579              	.L127:
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* start DMA interrupt mode transfer */
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(usrt->p_dma_tx,
 2580              		.loc 1 998 24
 2581 00a4 FB68     		ldr	r3, [r7, #12]
 2582 00a6 9869     		ldr	r0, [r3, #24]
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->txbuffer.buffer,
 2583              		.loc 1 999 37
 2584 00a8 FB68     		ldr	r3, [r7, #12]
 2585 00aa DB69     		ldr	r3, [r3, #28]
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->txbuffer.buffer,
 2586              		.loc 1 998 24
 2587 00ac 1C46     		mov	r4, r3
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_TDATA(usrt->periph), usrt->txbuffer.length, &dma_irq)) {
 2588              		.loc 1 1000 24
 2589 00ae FB68     		ldr	r3, [r7, #12]
 2590 00b0 1B68     		ldr	r3, [r3]
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->txbuffer.buffer,
 2591              		.loc 1 998 24
 2592 00b2 03F12802 		add	r2, r3, #40
 2593              		.loc 1 1000 65
 2594 00b6 FB68     		ldr	r3, [r7, #12]
 2595 00b8 1B6A     		ldr	r3, [r3, #32]
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->txbuffer.buffer,
 2596              		.loc 1 998 24
 2597 00ba 99B2     		uxth	r1, r3
 2598 00bc 07F11403 		add	r3, r7, #20
 2599 00c0 0093     		str	r3, [sp]
 2600 00c2 0B46     		mov	r3, r1
 2601 00c4 2146     		mov	r1, r4
 2602 00c6 FFF7FEFF 		bl	hal_dma_start_interrupt
 2603 00ca 0346     		mov	r3, r0
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->txbuffer.buffer,
 2604              		.loc 1 998 7
 2605 00cc 002B     		cmp	r3, #0
 2606 00ce 0AD0     		beq	.L128
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->tx_state = USRT_STATE_FREE;
 2607              		.loc 1 1001 24
 2608 00d0 FB68     		ldr	r3, [r7, #12]
 2609 00d2 0022     		movs	r2, #0
 2610 00d4 83F83A20 		strb	r2, [r3, #58]
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->error_state = HAL_USRT_ERROR_DMATX;
 2611              		.loc 1 1002 27
 2612 00d8 FB68     		ldr	r3, [r7, #12]
 2613 00da 1022     		movs	r2, #16
 2614 00dc 1A87     		strh	r2, [r3, #56]	@ movhi
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* unlock uart */
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_UNLOCK(usrt);
 2615              		.loc 1 1004 9
 2616 00de FB68     		ldr	r3, [r7, #12]
 2617 00e0 0022     		movs	r2, #0
 2618 00e2 83F84420 		strb	r2, [r3, #68]
 2619              	.L128:
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USRT TC interrupt flag */
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_TC);
 2620              		.loc 1 1008 5
 2621 00e6 FB68     		ldr	r3, [r7, #12]
 2622 00e8 1B68     		ldr	r3, [r3]
 2623 00ea 0F49     		ldr	r1, .L130+12
 2624 00ec 1846     		mov	r0, r3
 2625 00ee FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* DMA enable for transmission */
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_transmit_config(usrt->periph, USART_TRANSMIT_DMA_ENABLE);
 2626              		.loc 1 1011 5
 2627 00f2 FB68     		ldr	r3, [r7, #12]
 2628 00f4 1B68     		ldr	r3, [r3]
 2629 00f6 8021     		movs	r1, #128
 2630 00f8 1846     		mov	r0, r3
 2631 00fa FFF7FEFF 		bl	hals_usrt_dma_transmit_config
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock uart */
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 2632              		.loc 1 1014 5
 2633 00fe FB68     		ldr	r3, [r7, #12]
 2634 0100 0022     		movs	r2, #0
 2635 0102 83F84420 		strb	r2, [r3, #68]
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_uart_enable(usrt->periph);
 2636              		.loc 1 1016 5
 2637 0106 FB68     		ldr	r3, [r7, #12]
 2638 0108 1B68     		ldr	r3, [r3]
 2639 010a 1846     		mov	r0, r3
 2640 010c FFF7FEFF 		bl	hals_uart_enable
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 2641              		.loc 1 1018 12
 2642 0110 0023     		movs	r3, #0
 2643              	.L129:
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 2644              		.loc 1 1019 1 discriminator 1
 2645 0112 1846     		mov	r0, r3
 2646 0114 2437     		adds	r7, r7, #36
 2647              		.cfi_def_cfa_offset 12
 2648 0116 BD46     		mov	sp, r7
 2649              		.cfi_def_cfa_register 13
 2650              		@ sp needed
 2651 0118 90BD     		pop	{r4, r7, pc}
 2652              	.L131:
 2653 011a 00BF     		.align	2
 2654              	.L130:
 2655 011c 00000000 		.word	_usrt_transmit_complete_interrupt
 2656 0120 00000000 		.word	_usrt_transmit_dma
 2657 0124 00000000 		.word	_usrt_dma_error
 2658 0128 06000607 		.word	117833734
 2659              		.cfi_endproc
 2660              	.LFE131:
 2662              		.section	.text.hal_usrt_receive_dma,"ax",%progbits
 2663              		.align	1
 2664              		.global	hal_usrt_receive_dma
 2665              		.syntax unified
 2666              		.thumb
 2667              		.thumb_func
 2668              		.fpu softvfp
 2670              	hal_usrt_receive_dma:
 2671              	.LFB132:
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit amounts of data by dma method
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is non-blocking
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_buffer: pointer to data buffer
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be received
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_func: pointer to callback function
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_receive_dma(hal_usrt_dev_struct *usrt, uint8_t *p_buffer, uint16_t length, hal_usr
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 2672              		.loc 1 1034 1
 2673              		.cfi_startproc
 2674              		@ args = 0, pretend = 0, frame = 32
 2675              		@ frame_needed = 1, uses_anonymous_args = 0
 2676 0000 90B5     		push	{r4, r7, lr}
 2677              		.cfi_def_cfa_offset 12
 2678              		.cfi_offset 4, -12
 2679              		.cfi_offset 7, -8
 2680              		.cfi_offset 14, -4
 2681 0002 8BB0     		sub	sp, sp, #44
 2682              		.cfi_def_cfa_offset 56
 2683 0004 02AF     		add	r7, sp, #8
 2684              		.cfi_def_cfa 7, 48
 2685 0006 F860     		str	r0, [r7, #12]
 2686 0008 B960     		str	r1, [r7, #8]
 2687 000a 3B60     		str	r3, [r7]
 2688 000c 1346     		mov	r3, r2	@ movhi
 2689 000e FB80     		strh	r3, [r7, #6]	@ movhi
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_irq_struct dma_irq;
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_buffer) || (0U == length)) {
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_buffer] or [length] value is invalid");
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameter */
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == usrt->p_dma_rx) {
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt->p_dma_rx] value is invalid");
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is busy or not */
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->rx_state) {
 2690              		.loc 1 1052 31
 2691 0010 FB68     		ldr	r3, [r7, #12]
 2692 0012 93F83B30 		ldrb	r3, [r3, #59]
 2693 0016 DBB2     		uxtb	r3, r3
 2694              		.loc 1 1052 7
 2695 0018 012B     		cmp	r3, #1
 2696 001a 02D1     		bne	.L133
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt rx has already been used, please wait until run_state change to free ");
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 2697              		.loc 1 1054 16
 2698 001c 6FF00203 		mvn	r3, #2
 2699 0020 B2E0     		b	.L142
 2700              	.L133:
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 2701              		.loc 1 1058 5
 2702 0022 FB68     		ldr	r3, [r7, #12]
 2703 0024 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2704 0028 012B     		cmp	r3, #1
 2705 002a 02D1     		bne	.L135
 2706              		.loc 1 1058 5 is_stmt 0 discriminator 1
 2707 002c 6FF00103 		mvn	r3, #1
 2708 0030 AAE0     		b	.L142
 2709              	.L135:
 2710              		.loc 1 1058 5 discriminator 2
 2711 0032 FB68     		ldr	r3, [r7, #12]
 2712 0034 0122     		movs	r2, #1
 2713 0036 83F84420 		strb	r2, [r3, #68]
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_BUSY;
 2714              		.loc 1 1060 20 is_stmt 1 discriminator 2
 2715 003a FB68     		ldr	r3, [r7, #12]
 2716 003c 0122     		movs	r2, #1
 2717 003e 83F83B20 		strb	r2, [r3, #59]
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state = HAL_USRT_ERROR_NONE;
 2718              		.loc 1 1061 23 discriminator 2
 2719 0042 FB68     		ldr	r3, [r7, #12]
 2720 0044 0022     		movs	r2, #0
 2721 0046 1A87     		strh	r2, [r3, #56]	@ movhi
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize receive parameters */
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.buffer   = (uint8_t *)p_buffer;
 2722              		.loc 1 1064 29 discriminator 2
 2723 0048 FB68     		ldr	r3, [r7, #12]
 2724 004a BA68     		ldr	r2, [r7, #8]
 2725 004c 9A62     		str	r2, [r3, #40]
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.length   = length;
 2726              		.loc 1 1065 29 discriminator 2
 2727 004e FA88     		ldrh	r2, [r7, #6]
 2728 0050 FB68     		ldr	r3, [r7, #12]
 2729 0052 DA62     		str	r2, [r3, #44]
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos      = 0U;
 2730              		.loc 1 1066 29 discriminator 2
 2731 0054 FB68     		ldr	r3, [r7, #12]
 2732 0056 0022     		movs	r2, #0
 2733 0058 1A63     		str	r2, [r3, #48]
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask     = _usrt_data_bit_mask_get(usrt);
 2734              		.loc 1 1067 31 discriminator 2
 2735 005a F868     		ldr	r0, [r7, #12]
 2736 005c FFF7FEFF 		bl	_usrt_data_bit_mask_get
 2737 0060 0346     		mov	r3, r0
 2738 0062 1A46     		mov	r2, r3
 2739              		.loc 1 1067 29 discriminator 2
 2740 0064 FB68     		ldr	r3, [r7, #12]
 2741 0066 9A86     		strh	r2, [r3, #52]	@ movhi
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_func) {
 2742              		.loc 1 1069 7 discriminator 2
 2743 0068 3B68     		ldr	r3, [r7]
 2744 006a 002B     		cmp	r3, #0
 2745 006c 08D0     		beq	.L136
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_callback = (void *)p_func->complete_func;
 2746              		.loc 1 1070 43
 2747 006e 3B68     		ldr	r3, [r7]
 2748 0070 1A68     		ldr	r2, [r3]
 2749              		.loc 1 1070 27
 2750 0072 FB68     		ldr	r3, [r7, #12]
 2751 0074 DA63     		str	r2, [r3, #60]
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 2752              		.loc 1 1071 64
 2753 0076 3B68     		ldr	r3, [r7]
 2754 0078 5A68     		ldr	r2, [r3, #4]
 2755              		.loc 1 1071 37
 2756 007a FB68     		ldr	r3, [r7, #12]
 2757 007c 1A61     		str	r2, [r3, #16]
 2758 007e 05E0     		b	.L137
 2759              	.L136:
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_callback = NULL;
 2760              		.loc 1 1073 27
 2761 0080 FB68     		ldr	r3, [r7, #12]
 2762 0082 0022     		movs	r2, #0
 2763 0084 DA63     		str	r2, [r3, #60]
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = NULL;
 2764              		.loc 1 1074 37
 2765 0086 FB68     		ldr	r3, [r7, #12]
 2766 0088 0022     		movs	r2, #0
 2767 008a 1A61     		str	r2, [r3, #16]
 2768              	.L137:
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure DMA interrupt interrupt callback function */
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.full_finish_handle = _usrt_receive_dma;
 2769              		.loc 1 1078 32
 2770 008c 404B     		ldr	r3, .L143
 2771 008e FB61     		str	r3, [r7, #28]
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.error_handle = _usrt_dma_error;
 2772              		.loc 1 1079 26
 2773 0090 404B     		ldr	r3, .L143+4
 2774 0092 7B61     		str	r3, [r7, #20]
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != usrt->p_dma_rx->dma_irq.half_finish_handle) {
 2775              		.loc 1 1080 20
 2776 0094 FB68     		ldr	r3, [r7, #12]
 2777 0096 5B69     		ldr	r3, [r3, #20]
 2778              		.loc 1 1080 39
 2779 0098 9B68     		ldr	r3, [r3, #8]
 2780              		.loc 1 1080 7
 2781 009a 002B     		cmp	r3, #0
 2782 009c 03D0     		beq	.L138
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = usrt->p_dma_rx->dma_irq.half_finish_handle;
 2783              		.loc 1 1081 42
 2784 009e FB68     		ldr	r3, [r7, #12]
 2785 00a0 5B69     		ldr	r3, [r3, #20]
 2786              		.loc 1 1081 61
 2787 00a2 9B68     		ldr	r3, [r3, #8]
 2788              		.loc 1 1081 36
 2789 00a4 BB61     		str	r3, [r7, #24]
 2790              	.L138:
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* start DMA interrupt mode transfer */
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(usrt->p_dma_rx,
 2791              		.loc 1 1085 24
 2792 00a6 FB68     		ldr	r3, [r7, #12]
 2793 00a8 5869     		ldr	r0, [r3, #20]
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 2794              		.loc 1 1086 24
 2795 00aa FB68     		ldr	r3, [r7, #12]
 2796 00ac 1B68     		ldr	r3, [r3]
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 2797              		.loc 1 1085 24
 2798 00ae 03F12401 		add	r1, r3, #36
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->rxbuffer.buffer, length, &dma_irq)) {
 2799              		.loc 1 1087 37
 2800 00b2 FB68     		ldr	r3, [r7, #12]
 2801 00b4 9B6A     		ldr	r3, [r3, #40]
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 2802              		.loc 1 1085 24
 2803 00b6 1C46     		mov	r4, r3
 2804 00b8 FA88     		ldrh	r2, [r7, #6]
 2805 00ba 07F11403 		add	r3, r7, #20
 2806 00be 0093     		str	r3, [sp]
 2807 00c0 1346     		mov	r3, r2
 2808 00c2 2246     		mov	r2, r4
 2809 00c4 FFF7FEFF 		bl	hal_dma_start_interrupt
 2810 00c8 0346     		mov	r3, r0
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 2811              		.loc 1 1085 7
 2812 00ca 002B     		cmp	r3, #0
 2813 00cc 12D0     		beq	.L139
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_state = USRT_STATE_FREE;
 2814              		.loc 1 1088 24
 2815 00ce FB68     		ldr	r3, [r7, #12]
 2816 00d0 0022     		movs	r2, #0
 2817 00d2 83F83B20 		strb	r2, [r3, #59]
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->error_state = HAL_USRT_ERROR_DMARX;
 2818              		.loc 1 1089 27
 2819 00d6 FB68     		ldr	r3, [r7, #12]
 2820 00d8 2022     		movs	r2, #32
 2821 00da 1A87     		strh	r2, [r3, #56]	@ movhi
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* lock uart */
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_LOCK(usrt);
 2822              		.loc 1 1091 9
 2823 00dc FB68     		ldr	r3, [r7, #12]
 2824 00de 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2825 00e2 012B     		cmp	r3, #1
 2826 00e4 02D1     		bne	.L140
 2827              		.loc 1 1091 9 is_stmt 0 discriminator 1
 2828 00e6 6FF00103 		mvn	r3, #1
 2829 00ea 4DE0     		b	.L142
 2830              	.L140:
 2831              		.loc 1 1091 9 discriminator 2
 2832 00ec FB68     		ldr	r3, [r7, #12]
 2833 00ee 0122     		movs	r2, #1
 2834 00f0 83F84420 		strb	r2, [r3, #68]
 2835              	.L139:
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable the usart parity error and error interrupt: (frame error, noise error, overrun error)
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_PERR);
 2836              		.loc 1 1095 5 is_stmt 1
 2837 00f4 FB68     		ldr	r3, [r7, #12]
 2838 00f6 1B68     		ldr	r3, [r3]
 2839 00f8 0821     		movs	r1, #8
 2840 00fa 1846     		mov	r0, r3
 2841 00fc FFF7FEFF 		bl	hals_usrt_interrupt_enable
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_ERR);
 2842              		.loc 1 1096 5
 2843 0100 FB68     		ldr	r3, [r7, #12]
 2844 0102 1B68     		ldr	r3, [r3]
 2845 0104 4FF40071 		mov	r1, #512
 2846 0108 1846     		mov	r0, r3
 2847 010a FFF7FEFF 		bl	hals_usrt_interrupt_enable
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* usrt transmit data by DMA to generate clock */
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.full_finish_handle = NULL;
 2848              		.loc 1 1099 32
 2849 010e 0023     		movs	r3, #0
 2850 0110 FB61     		str	r3, [r7, #28]
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.half_finish_handle = NULL;
 2851              		.loc 1 1100 32
 2852 0112 0023     		movs	r3, #0
 2853 0114 BB61     		str	r3, [r7, #24]
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.error_handle = NULL;
 2854              		.loc 1 1101 26
 2855 0116 0023     		movs	r3, #0
 2856 0118 7B61     		str	r3, [r7, #20]
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* start transmit DMA interrupt mode transfer */
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(usrt->p_dma_tx, (uint32_t)usrt->txbuffer.buffer, (ui
 2857              		.loc 1 1104 24
 2858 011a FB68     		ldr	r3, [r7, #12]
 2859 011c 9869     		ldr	r0, [r3, #24]
 2860              		.loc 1 1104 88
 2861 011e FB68     		ldr	r3, [r7, #12]
 2862 0120 DB69     		ldr	r3, [r3, #28]
 2863              		.loc 1 1104 24
 2864 0122 1C46     		mov	r4, r3
 2865              		.loc 1 1104 108
 2866 0124 FB68     		ldr	r3, [r7, #12]
 2867 0126 1B68     		ldr	r3, [r3]
 2868              		.loc 1 1104 24
 2869 0128 03F12802 		add	r2, r3, #40
 2870              		.loc 1 1104 149
 2871 012c FB68     		ldr	r3, [r7, #12]
 2872 012e 1B6A     		ldr	r3, [r3, #32]
 2873              		.loc 1 1104 24
 2874 0130 99B2     		uxth	r1, r3
 2875 0132 07F11403 		add	r3, r7, #20
 2876 0136 0093     		str	r3, [sp]
 2877 0138 0B46     		mov	r3, r1
 2878 013a 2146     		mov	r1, r4
 2879 013c FFF7FEFF 		bl	hal_dma_start_interrupt
 2880 0140 0346     		mov	r3, r0
 2881              		.loc 1 1104 7
 2882 0142 002B     		cmp	r3, #0
 2883 0144 0AD0     		beq	.L141
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_state = USRT_STATE_FREE;
 2884              		.loc 1 1105 24
 2885 0146 FB68     		ldr	r3, [r7, #12]
 2886 0148 0022     		movs	r2, #0
 2887 014a 83F83B20 		strb	r2, [r3, #59]
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->error_state = HAL_USRT_ERROR_DMATX;
 2888              		.loc 1 1106 27
 2889 014e FB68     		ldr	r3, [r7, #12]
 2890 0150 1022     		movs	r2, #16
 2891 0152 1A87     		strh	r2, [r3, #56]	@ movhi
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* unlock uart */
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_UNLOCK(usrt);
 2892              		.loc 1 1108 9
 2893 0154 FB68     		ldr	r3, [r7, #12]
 2894 0156 0022     		movs	r2, #0
 2895 0158 83F84420 		strb	r2, [r3, #68]
 2896              	.L141:
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* DMA enable for reception and transmission */
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_receive_config(usrt->periph, USART_RECEIVE_DMA_ENABLE);
 2897              		.loc 1 1112 5
 2898 015c FB68     		ldr	r3, [r7, #12]
 2899 015e 1B68     		ldr	r3, [r3]
 2900 0160 4021     		movs	r1, #64
 2901 0162 1846     		mov	r0, r3
 2902 0164 FFF7FEFF 		bl	hals_usrt_dma_receive_config
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_transmit_config(usrt->periph, USART_TRANSMIT_DMA_ENABLE);
 2903              		.loc 1 1113 5
 2904 0168 FB68     		ldr	r3, [r7, #12]
 2905 016a 1B68     		ldr	r3, [r3]
 2906 016c 8021     		movs	r1, #128
 2907 016e 1846     		mov	r0, r3
 2908 0170 FFF7FEFF 		bl	hals_usrt_dma_transmit_config
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock uart */
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 2909              		.loc 1 1116 5
 2910 0174 FB68     		ldr	r3, [r7, #12]
 2911 0176 0022     		movs	r2, #0
 2912 0178 83F84420 		strb	r2, [r3, #68]
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_uart_enable(usrt->periph);
 2913              		.loc 1 1118 5
 2914 017c FB68     		ldr	r3, [r7, #12]
 2915 017e 1B68     		ldr	r3, [r3]
 2916 0180 1846     		mov	r0, r3
 2917 0182 FFF7FEFF 		bl	hals_uart_enable
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 2918              		.loc 1 1120 12
 2919 0186 0023     		movs	r3, #0
 2920              	.L142:
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 2921              		.loc 1 1121 1 discriminator 1
 2922 0188 1846     		mov	r0, r3
 2923 018a 2437     		adds	r7, r7, #36
 2924              		.cfi_def_cfa_offset 12
 2925 018c BD46     		mov	sp, r7
 2926              		.cfi_def_cfa_register 13
 2927              		@ sp needed
 2928 018e 90BD     		pop	{r4, r7, pc}
 2929              	.L144:
 2930              		.align	2
 2931              	.L143:
 2932 0190 00000000 		.word	_usrt_receive_dma
 2933 0194 00000000 		.word	_usrt_dma_error
 2934              		.cfi_endproc
 2935              	.LFE132:
 2937              		.section	.text.hal_usrt_transmit_receive_dma,"ax",%progbits
 2938              		.align	1
 2939              		.global	hal_usrt_transmit_receive_dma
 2940              		.syntax unified
 2941              		.thumb
 2942              		.thumb_func
 2943              		.fpu softvfp
 2945              	hal_usrt_transmit_receive_dma:
 2946              	.LFB133:
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      transmit & receive amounts of data by dma method
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is non-blocking
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_tx_buffer: pointer to Tx data buffer
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_rx_buffer: pointer to Rx data buffer
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  length: number of data to be received
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  p_func: pointer to callback function
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transmit_receive_dma(hal_usrt_dev_struct *usrt, uint8_t *p_tx_buffer, uint8_t *p_r
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 2947              		.loc 1 1137 1
 2948              		.cfi_startproc
 2949              		@ args = 4, pretend = 0, frame = 32
 2950              		@ frame_needed = 1, uses_anonymous_args = 0
 2951 0000 90B5     		push	{r4, r7, lr}
 2952              		.cfi_def_cfa_offset 12
 2953              		.cfi_offset 4, -12
 2954              		.cfi_offset 7, -8
 2955              		.cfi_offset 14, -4
 2956 0002 8BB0     		sub	sp, sp, #44
 2957              		.cfi_def_cfa_offset 56
 2958 0004 02AF     		add	r7, sp, #8
 2959              		.cfi_def_cfa 7, 48
 2960 0006 F860     		str	r0, [r7, #12]
 2961 0008 B960     		str	r1, [r7, #8]
 2962 000a 7A60     		str	r2, [r7, #4]
 2963 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_irq_struct dma_irq;
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameters */
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if((NULL == usrt) || (NULL == p_tx_buffer) || (NULL == p_rx_buffer) ||
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (0U == length)) {
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] or [p_tx_buffer] or [p_rx_buffer] or [length] value is invalid
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameter */
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == usrt->p_dma_tx) {
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt->p_dma_tx] value is invalid");
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the tx_state wheher is busy Tx Rx or not */
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY_TX_RX == usrt->tx_state) {
 2964              		.loc 1 1156 37
 2965 000e FB68     		ldr	r3, [r7, #12]
 2966 0010 93F83A30 		ldrb	r3, [r3, #58]
 2967 0014 DBB2     		uxtb	r3, r3
 2968              		.loc 1 1156 7
 2969 0016 022B     		cmp	r3, #2
 2970 0018 02D1     		bne	.L146
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt tx or rx has already been used, please wait until run_state change to free
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_BUSY;
 2971              		.loc 1 1158 16
 2972 001a 6FF00203 		mvn	r3, #2
 2973 001e E9E0     		b	.L161
 2974              	.L146:
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 2975              		.loc 1 1162 5
 2976 0020 FB68     		ldr	r3, [r7, #12]
 2977 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2978 0026 012B     		cmp	r3, #1
 2979 0028 02D1     		bne	.L148
 2980              		.loc 1 1162 5 is_stmt 0 discriminator 1
 2981 002a 6FF00103 		mvn	r3, #1
 2982 002e E1E0     		b	.L161
 2983              	.L148:
 2984              		.loc 1 1162 5 discriminator 2
 2985 0030 FB68     		ldr	r3, [r7, #12]
 2986 0032 0122     		movs	r2, #1
 2987 0034 83F84420 		strb	r2, [r3, #68]
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state      = USRT_STATE_BUSY_TX_RX;
 2988              		.loc 1 1164 25 is_stmt 1 discriminator 2
 2989 0038 FB68     		ldr	r3, [r7, #12]
 2990 003a 0222     		movs	r2, #2
 2991 003c 83F83B20 		strb	r2, [r3, #59]
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state      = USRT_STATE_BUSY_TX_RX;
 2992              		.loc 1 1165 25 discriminator 2
 2993 0040 FB68     		ldr	r3, [r7, #12]
 2994 0042 0222     		movs	r2, #2
 2995 0044 83F83A20 		strb	r2, [r3, #58]
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->error_state   = HAL_USRT_ERROR_NONE;
 2996              		.loc 1 1166 25 discriminator 2
 2997 0048 FB68     		ldr	r3, [r7, #12]
 2998 004a 0022     		movs	r2, #0
 2999 004c 1A87     		strh	r2, [r3, #56]	@ movhi
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize receive parameters */
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.buffer   = (uint8_t *)p_rx_buffer;
 3000              		.loc 1 1169 29 discriminator 2
 3001 004e FB68     		ldr	r3, [r7, #12]
 3002 0050 7A68     		ldr	r2, [r7, #4]
 3003 0052 9A62     		str	r2, [r3, #40]
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.length   = length;
 3004              		.loc 1 1170 29 discriminator 2
 3005 0054 7A88     		ldrh	r2, [r7, #2]
 3006 0056 FB68     		ldr	r3, [r7, #12]
 3007 0058 DA62     		str	r2, [r3, #44]
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos      = 0U;
 3008              		.loc 1 1171 29 discriminator 2
 3009 005a FB68     		ldr	r3, [r7, #12]
 3010 005c 0022     		movs	r2, #0
 3011 005e 1A63     		str	r2, [r3, #48]
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->data_bit_mask     = _usrt_data_bit_mask_get(usrt);
 3012              		.loc 1 1172 31 discriminator 2
 3013 0060 F868     		ldr	r0, [r7, #12]
 3014 0062 FFF7FEFF 		bl	_usrt_data_bit_mask_get
 3015 0066 0346     		mov	r3, r0
 3016 0068 1A46     		mov	r2, r3
 3017              		.loc 1 1172 29 discriminator 2
 3018 006a FB68     		ldr	r3, [r7, #12]
 3019 006c 9A86     		strh	r2, [r3, #52]	@ movhi
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_func) {
 3020              		.loc 1 1174 7 discriminator 2
 3021 006e 3B6B     		ldr	r3, [r7, #48]
 3022 0070 002B     		cmp	r3, #0
 3023 0072 08D0     		beq	.L149
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_callback = (void *)p_func->complete_func;
 3024              		.loc 1 1175 43
 3025 0074 3B6B     		ldr	r3, [r7, #48]
 3026 0076 1A68     		ldr	r2, [r3]
 3027              		.loc 1 1175 27
 3028 0078 FB68     		ldr	r3, [r7, #12]
 3029 007a DA63     		str	r2, [r3, #60]
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 3030              		.loc 1 1176 64
 3031 007c 3B6B     		ldr	r3, [r7, #48]
 3032 007e 5A68     		ldr	r2, [r3, #4]
 3033              		.loc 1 1176 37
 3034 0080 FB68     		ldr	r3, [r7, #12]
 3035 0082 1A61     		str	r2, [r3, #16]
 3036 0084 05E0     		b	.L150
 3037              	.L149:
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_callback = NULL;
 3038              		.loc 1 1178 27
 3039 0086 FB68     		ldr	r3, [r7, #12]
 3040 0088 0022     		movs	r2, #0
 3041 008a DA63     		str	r2, [r3, #60]
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->usrt_irq.error_handle = NULL;
 3042              		.loc 1 1179 37
 3043 008c FB68     		ldr	r3, [r7, #12]
 3044 008e 0022     		movs	r2, #0
 3045 0090 1A61     		str	r2, [r3, #16]
 3046              	.L150:
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure DMA interrupt interrupt callback function */
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.full_finish_handle = _usrt_receive_dma;
 3047              		.loc 1 1183 32
 3048 0092 5A4B     		ldr	r3, .L162
 3049 0094 FB61     		str	r3, [r7, #28]
1184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.error_handle = _usrt_dma_error;
 3050              		.loc 1 1184 26
 3051 0096 5A4B     		ldr	r3, .L162+4
 3052 0098 7B61     		str	r3, [r7, #20]
1185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != usrt->p_dma_rx->dma_irq.half_finish_handle) {
 3053              		.loc 1 1185 20
 3054 009a FB68     		ldr	r3, [r7, #12]
 3055 009c 5B69     		ldr	r3, [r3, #20]
 3056              		.loc 1 1185 39
 3057 009e 9B68     		ldr	r3, [r3, #8]
 3058              		.loc 1 1185 7
 3059 00a0 002B     		cmp	r3, #0
 3060 00a2 04D0     		beq	.L151
1186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = usrt->p_dma_rx->dma_irq.half_finish_handle;
 3061              		.loc 1 1186 42
 3062 00a4 FB68     		ldr	r3, [r7, #12]
 3063 00a6 5B69     		ldr	r3, [r3, #20]
 3064              		.loc 1 1186 61
 3065 00a8 9B68     		ldr	r3, [r3, #8]
 3066              		.loc 1 1186 36
 3067 00aa BB61     		str	r3, [r7, #24]
 3068 00ac 01E0     		b	.L152
 3069              	.L151:
1187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = NULL;
 3070              		.loc 1 1188 36
 3071 00ae 0023     		movs	r3, #0
 3072 00b0 BB61     		str	r3, [r7, #24]
 3073              	.L152:
1189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* start DMA interrupt mode transfer */
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(usrt->p_dma_rx,
 3074              		.loc 1 1192 24
 3075 00b2 FB68     		ldr	r3, [r7, #12]
 3076 00b4 5869     		ldr	r0, [r3, #20]
1193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 3077              		.loc 1 1193 24
 3078 00b6 FB68     		ldr	r3, [r7, #12]
 3079 00b8 1B68     		ldr	r3, [r3]
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 3080              		.loc 1 1192 24
 3081 00ba 03F12401 		add	r1, r3, #36
1194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)usrt->rxbuffer.buffer, length, &dma_irq)) {
 3082              		.loc 1 1194 37
 3083 00be FB68     		ldr	r3, [r7, #12]
 3084 00c0 9B6A     		ldr	r3, [r3, #40]
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 3085              		.loc 1 1192 24
 3086 00c2 1C46     		mov	r4, r3
 3087 00c4 7A88     		ldrh	r2, [r7, #2]
 3088 00c6 07F11403 		add	r3, r7, #20
 3089 00ca 0093     		str	r3, [sp]
 3090 00cc 1346     		mov	r3, r2
 3091 00ce 2246     		mov	r2, r4
 3092 00d0 FFF7FEFF 		bl	hal_dma_start_interrupt
 3093 00d4 0346     		mov	r3, r0
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             (uint32_t)&USART_RDATA(usrt->periph),
 3094              		.loc 1 1192 7
 3095 00d6 002B     		cmp	r3, #0
 3096 00d8 12D0     		beq	.L153
1195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_state = USRT_STATE_FREE;
 3097              		.loc 1 1195 24
 3098 00da FB68     		ldr	r3, [r7, #12]
 3099 00dc 0022     		movs	r2, #0
 3100 00de 83F83B20 		strb	r2, [r3, #59]
1196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->error_state = HAL_USRT_ERROR_DMARX;
 3101              		.loc 1 1196 27
 3102 00e2 FB68     		ldr	r3, [r7, #12]
 3103 00e4 2022     		movs	r2, #32
 3104 00e6 1A87     		strh	r2, [r3, #56]	@ movhi
1197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* lock uart */
1198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_LOCK(usrt);
 3105              		.loc 1 1198 9
 3106 00e8 FB68     		ldr	r3, [r7, #12]
 3107 00ea 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 3108 00ee 012B     		cmp	r3, #1
 3109 00f0 02D1     		bne	.L154
 3110              		.loc 1 1198 9 is_stmt 0 discriminator 1
 3111 00f2 6FF00103 		mvn	r3, #1
 3112 00f6 7DE0     		b	.L161
 3113              	.L154:
 3114              		.loc 1 1198 9 discriminator 2
 3115 00f8 FB68     		ldr	r3, [r7, #12]
 3116 00fa 0122     		movs	r2, #1
 3117 00fc 83F84420 		strb	r2, [r3, #68]
 3118              	.L153:
1199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable the usart parity error and error interrupt: (frame error, noise error, overrun error)
1202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_PERR);
 3119              		.loc 1 1202 5 is_stmt 1
 3120 0100 FB68     		ldr	r3, [r7, #12]
 3121 0102 1B68     		ldr	r3, [r3]
 3122 0104 0821     		movs	r1, #8
 3123 0106 1846     		mov	r0, r3
 3124 0108 FFF7FEFF 		bl	hals_usrt_interrupt_enable
1203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_enable(usrt->periph, USART_INT_ERR);
 3125              		.loc 1 1203 5
 3126 010c FB68     		ldr	r3, [r7, #12]
 3127 010e 1B68     		ldr	r3, [r3]
 3128 0110 4FF40071 		mov	r1, #512
 3129 0114 1846     		mov	r0, r3
 3130 0116 FFF7FEFF 		bl	hals_usrt_interrupt_enable
1204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* initialize transmit parameters */
1206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.buffer   = (uint8_t *)p_tx_buffer;
 3131              		.loc 1 1206 29
 3132 011a FB68     		ldr	r3, [r7, #12]
 3133 011c BA68     		ldr	r2, [r7, #8]
 3134 011e DA61     		str	r2, [r3, #28]
1207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.length   = length;
 3135              		.loc 1 1207 29
 3136 0120 7A88     		ldrh	r2, [r7, #2]
 3137 0122 FB68     		ldr	r3, [r7, #12]
 3138 0124 1A62     		str	r2, [r3, #32]
1208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.pos      = 0U;
 3139              		.loc 1 1208 29
 3140 0126 FB68     		ldr	r3, [r7, #12]
 3141 0128 0022     		movs	r2, #0
 3142 012a 5A62     		str	r2, [r3, #36]
1209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_func) {
 3143              		.loc 1 1210 7
 3144 012c 3B6B     		ldr	r3, [r7, #48]
 3145 012e 002B     		cmp	r3, #0
 3146 0130 04D0     		beq	.L155
1211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->tx_callback = (void *)p_func->complete_func;
 3147              		.loc 1 1211 43
 3148 0132 3B6B     		ldr	r3, [r7, #48]
 3149 0134 1A68     		ldr	r2, [r3]
 3150              		.loc 1 1211 27
 3151 0136 FB68     		ldr	r3, [r7, #12]
 3152 0138 1A64     		str	r2, [r3, #64]
 3153 013a 02E0     		b	.L156
 3154              	.L155:
1212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->tx_callback = NULL;
 3155              		.loc 1 1213 27
 3156 013c FB68     		ldr	r3, [r7, #12]
 3157 013e 0022     		movs	r2, #0
 3158 0140 1A64     		str	r2, [r3, #64]
 3159              	.L156:
1214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->usrt_irq.transmit_complete_handle = _usrt_transmit_complete_interrupt;
 3160              		.loc 1 1215 45
 3161 0142 FB68     		ldr	r3, [r7, #12]
 3162 0144 2F4A     		ldr	r2, .L162+8
 3163 0146 DA60     		str	r2, [r3, #12]
1216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure DMA interrupt callback function */
1218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.full_finish_handle = _usrt_transmit_dma;
 3164              		.loc 1 1218 32
 3165 0148 2F4B     		ldr	r3, .L162+12
 3166 014a FB61     		str	r3, [r7, #28]
1219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     dma_irq.error_handle = _usrt_dma_error;
 3167              		.loc 1 1219 26
 3168 014c 2C4B     		ldr	r3, .L162+4
 3169 014e 7B61     		str	r3, [r7, #20]
1220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != usrt->p_dma_tx->dma_irq.half_finish_handle) {
 3170              		.loc 1 1220 20
 3171 0150 FB68     		ldr	r3, [r7, #12]
 3172 0152 9B69     		ldr	r3, [r3, #24]
 3173              		.loc 1 1220 39
 3174 0154 9B68     		ldr	r3, [r3, #8]
 3175              		.loc 1 1220 7
 3176 0156 002B     		cmp	r3, #0
 3177 0158 04D0     		beq	.L157
1221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = usrt->p_dma_tx->dma_irq.half_finish_handle;
 3178              		.loc 1 1221 42
 3179 015a FB68     		ldr	r3, [r7, #12]
 3180 015c 9B69     		ldr	r3, [r3, #24]
 3181              		.loc 1 1221 61
 3182 015e 9B68     		ldr	r3, [r3, #8]
 3183              		.loc 1 1221 36
 3184 0160 BB61     		str	r3, [r7, #24]
 3185 0162 01E0     		b	.L158
 3186              	.L157:
1222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         dma_irq.half_finish_handle = NULL;
 3187              		.loc 1 1223 36
 3188 0164 0023     		movs	r3, #0
 3189 0166 BB61     		str	r3, [r7, #24]
 3190              	.L158:
1224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* start transmit DMA interrupt mode transfer */
1227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(usrt->p_dma_tx, (uint32_t)usrt->txbuffer.buffer, (ui
 3191              		.loc 1 1227 24
 3192 0168 FB68     		ldr	r3, [r7, #12]
 3193 016a 9869     		ldr	r0, [r3, #24]
 3194              		.loc 1 1227 88
 3195 016c FB68     		ldr	r3, [r7, #12]
 3196 016e DB69     		ldr	r3, [r3, #28]
 3197              		.loc 1 1227 24
 3198 0170 1C46     		mov	r4, r3
 3199              		.loc 1 1227 108
 3200 0172 FB68     		ldr	r3, [r7, #12]
 3201 0174 1B68     		ldr	r3, [r3]
 3202              		.loc 1 1227 24
 3203 0176 03F12802 		add	r2, r3, #40
 3204              		.loc 1 1227 149
 3205 017a FB68     		ldr	r3, [r7, #12]
 3206 017c 1B6A     		ldr	r3, [r3, #32]
 3207              		.loc 1 1227 24
 3208 017e 99B2     		uxth	r1, r3
 3209 0180 07F11403 		add	r3, r7, #20
 3210 0184 0093     		str	r3, [sp]
 3211 0186 0B46     		mov	r3, r1
 3212 0188 2146     		mov	r1, r4
 3213 018a FFF7FEFF 		bl	hal_dma_start_interrupt
 3214 018e 0346     		mov	r3, r0
 3215              		.loc 1 1227 7
 3216 0190 002B     		cmp	r3, #0
 3217 0192 0AD0     		beq	.L159
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->rx_state = USRT_STATE_FREE;
 3218              		.loc 1 1228 24
 3219 0194 FB68     		ldr	r3, [r7, #12]
 3220 0196 0022     		movs	r2, #0
 3221 0198 83F83B20 		strb	r2, [r3, #59]
1229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         usrt->error_state = HAL_USRT_ERROR_DMATX;
 3222              		.loc 1 1229 27
 3223 019c FB68     		ldr	r3, [r7, #12]
 3224 019e 1022     		movs	r2, #16
 3225 01a0 1A87     		strh	r2, [r3, #56]	@ movhi
1230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* unlock uart */
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_UNLOCK(usrt);
 3226              		.loc 1 1231 9
 3227 01a2 FB68     		ldr	r3, [r7, #12]
 3228 01a4 0022     		movs	r2, #0
 3229 01a6 83F84420 		strb	r2, [r3, #68]
 3230              	.L159:
1232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USRT TC flag */
1235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_flag_clear(usrt->periph, USART_FLAG_TC);
 3231              		.loc 1 1235 5
 3232 01aa FB68     		ldr	r3, [r7, #12]
 3233 01ac 1B68     		ldr	r3, [r3]
 3234 01ae 40F20671 		movw	r1, #1798
 3235 01b2 1846     		mov	r0, r3
 3236 01b4 FFF7FEFF 		bl	hals_usrt_flag_clear
1236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* DMA enable for reception and transmission */
1238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_receive_config(usrt->periph, USART_RECEIVE_DMA_ENABLE);
 3237              		.loc 1 1238 5
 3238 01b8 FB68     		ldr	r3, [r7, #12]
 3239 01ba 1B68     		ldr	r3, [r3]
 3240 01bc 4021     		movs	r1, #64
 3241 01be 1846     		mov	r0, r3
 3242 01c0 FFF7FEFF 		bl	hals_usrt_dma_receive_config
1239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_transmit_config(usrt->periph, USART_TRANSMIT_DMA_ENABLE);
 3243              		.loc 1 1239 5
 3244 01c4 FB68     		ldr	r3, [r7, #12]
 3245 01c6 1B68     		ldr	r3, [r3]
 3246 01c8 8021     		movs	r1, #128
 3247 01ca 1846     		mov	r0, r3
 3248 01cc FFF7FEFF 		bl	hals_usrt_dma_transmit_config
1240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock uart */
1242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 3249              		.loc 1 1242 5
 3250 01d0 FB68     		ldr	r3, [r7, #12]
 3251 01d2 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 3252 01d6 012B     		cmp	r3, #1
 3253 01d8 02D1     		bne	.L160
 3254              		.loc 1 1242 5 is_stmt 0 discriminator 1
 3255 01da 6FF00103 		mvn	r3, #1
 3256 01de 09E0     		b	.L161
 3257              	.L160:
 3258              		.loc 1 1242 5 discriminator 2
 3259 01e0 FB68     		ldr	r3, [r7, #12]
 3260 01e2 0122     		movs	r2, #1
 3261 01e4 83F84420 		strb	r2, [r3, #68]
1243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_uart_enable(usrt->periph);
 3262              		.loc 1 1244 5 is_stmt 1 discriminator 2
 3263 01e8 FB68     		ldr	r3, [r7, #12]
 3264 01ea 1B68     		ldr	r3, [r3]
 3265 01ec 1846     		mov	r0, r3
 3266 01ee FFF7FEFF 		bl	hals_uart_enable
1245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 3267              		.loc 1 1246 12 discriminator 2
 3268 01f2 0023     		movs	r3, #0
 3269              	.L161:
1247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3270              		.loc 1 1247 1 discriminator 1
 3271 01f4 1846     		mov	r0, r3
 3272 01f6 2437     		adds	r7, r7, #36
 3273              		.cfi_def_cfa_offset 12
 3274 01f8 BD46     		mov	sp, r7
 3275              		.cfi_def_cfa_register 13
 3276              		@ sp needed
 3277 01fa 90BD     		pop	{r4, r7, pc}
 3278              	.L163:
 3279              		.align	2
 3280              	.L162:
 3281 01fc 00000000 		.word	_usrt_receive_dma
 3282 0200 00000000 		.word	_usrt_dma_error
 3283 0204 00000000 		.word	_usrt_transmit_complete_interrupt
 3284 0208 00000000 		.word	_usrt_transmit_dma
 3285              		.cfi_endproc
 3286              	.LFE133:
 3288              		.section	.text.hal_usrt_dma_pause,"ax",%progbits
 3289              		.align	1
 3290              		.global	hal_usrt_dma_pause
 3291              		.syntax unified
 3292              		.thumb
 3293              		.thumb_func
 3294              		.fpu softvfp
 3296              	hal_usrt_dma_pause:
 3297              	.LFB134:
1248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      pause usrt DMA transfer during transmission process
1251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
1252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
1254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_dma_pause(hal_usrt_dev_struct *usrt)
1258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3298              		.loc 1 1258 1
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 8
 3301              		@ frame_needed = 1, uses_anonymous_args = 0
 3302 0000 80B5     		push	{r7, lr}
 3303              		.cfi_def_cfa_offset 8
 3304              		.cfi_offset 7, -8
 3305              		.cfi_offset 14, -4
 3306 0002 82B0     		sub	sp, sp, #8
 3307              		.cfi_def_cfa_offset 16
 3308 0004 00AF     		add	r7, sp, #0
 3309              		.cfi_def_cfa_register 7
 3310 0006 7860     		str	r0, [r7, #4]
1259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
1260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameter */
1261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == usrt) {
1262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] value is invalid");
1263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
1268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 3311              		.loc 1 1268 5
 3312 0008 7B68     		ldr	r3, [r7, #4]
 3313 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 3314 000e 012B     		cmp	r3, #1
 3315 0010 02D1     		bne	.L165
 3316              		.loc 1 1268 5 is_stmt 0 discriminator 1
 3317 0012 6FF00103 		mvn	r3, #1
 3318 0016 2DE0     		b	.L166
 3319              	.L165:
 3320              		.loc 1 1268 5 discriminator 2
 3321 0018 7B68     		ldr	r3, [r7, #4]
 3322 001a 0122     		movs	r2, #1
 3323 001c 83F84420 		strb	r2, [r3, #68]
1269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the tx_state wheher is busy or not */
1271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->tx_state) {
 3324              		.loc 1 1271 31 is_stmt 1 discriminator 2
 3325 0020 7B68     		ldr	r3, [r7, #4]
 3326 0022 93F83A30 		ldrb	r3, [r3, #58]
 3327 0026 DBB2     		uxtb	r3, r3
 3328              		.loc 1 1271 7 discriminator 2
 3329 0028 012B     		cmp	r3, #1
 3330 002a 05D1     		bne	.L167
1272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable DMA transimt */
1273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_transmit_config(usrt->periph, USART_TRANSMIT_DMA_DISABLE);
 3331              		.loc 1 1273 9
 3332 002c 7B68     		ldr	r3, [r7, #4]
 3333 002e 1B68     		ldr	r3, [r3]
 3334 0030 0021     		movs	r1, #0
 3335 0032 1846     		mov	r0, r3
 3336 0034 FFF7FEFF 		bl	hals_usrt_dma_transmit_config
 3337              	.L167:
1274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is busy or not */
1277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->rx_state) {
 3338              		.loc 1 1277 31
 3339 0038 7B68     		ldr	r3, [r7, #4]
 3340 003a 93F83B30 		ldrb	r3, [r3, #59]
 3341 003e DBB2     		uxtb	r3, r3
 3342              		.loc 1 1277 7
 3343 0040 012B     		cmp	r3, #1
 3344 0042 12D1     		bne	.L168
1278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable the PERR and ERR interrupt */
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_PERR);
 3345              		.loc 1 1279 9
 3346 0044 7B68     		ldr	r3, [r7, #4]
 3347 0046 1B68     		ldr	r3, [r3]
 3348 0048 0821     		movs	r1, #8
 3349 004a 1846     		mov	r0, r3
 3350 004c FFF7FEFF 		bl	hals_usrt_interrupt_disable
1280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(usrt->periph, USART_INT_ERR);
 3351              		.loc 1 1280 9
 3352 0050 7B68     		ldr	r3, [r7, #4]
 3353 0052 1B68     		ldr	r3, [r3]
 3354 0054 4FF40071 		mov	r1, #512
 3355 0058 1846     		mov	r0, r3
 3356 005a FFF7FEFF 		bl	hals_usrt_interrupt_disable
1281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable DMA receive */
1283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_receive_config(usrt->periph, USART_RECEIVE_DMA_DISABLE);
 3357              		.loc 1 1283 9
 3358 005e 7B68     		ldr	r3, [r7, #4]
 3359 0060 1B68     		ldr	r3, [r3]
 3360 0062 0021     		movs	r1, #0
 3361 0064 1846     		mov	r0, r3
 3362 0066 FFF7FEFF 		bl	hals_usrt_dma_receive_config
 3363              	.L168:
1284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
1287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 3364              		.loc 1 1287 5
 3365 006a 7B68     		ldr	r3, [r7, #4]
 3366 006c 0022     		movs	r2, #0
 3367 006e 83F84420 		strb	r2, [r3, #68]
1288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 3368              		.loc 1 1289 12
 3369 0072 0023     		movs	r3, #0
 3370              	.L166:
1290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3371              		.loc 1 1290 1
 3372 0074 1846     		mov	r0, r3
 3373 0076 0837     		adds	r7, r7, #8
 3374              		.cfi_def_cfa_offset 8
 3375 0078 BD46     		mov	sp, r7
 3376              		.cfi_def_cfa_register 13
 3377              		@ sp needed
 3378 007a 80BD     		pop	{r7, pc}
 3379              		.cfi_endproc
 3380              	.LFE134:
 3382              		.section	.text.hal_usrt_dma_resume,"ax",%progbits
 3383              		.align	1
 3384              		.global	hal_usrt_dma_resume
 3385              		.syntax unified
 3386              		.thumb
 3387              		.thumb_func
 3388              		.fpu softvfp
 3390              	hal_usrt_dma_resume:
 3391              	.LFB135:
1291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      resume usrt DMA transfer during transmission process
1294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
1295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
1297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_dma_resume(hal_usrt_dev_struct *usrt)
1301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3392              		.loc 1 1301 1
 3393              		.cfi_startproc
 3394              		@ args = 0, pretend = 0, frame = 8
 3395              		@ frame_needed = 1, uses_anonymous_args = 0
 3396 0000 80B5     		push	{r7, lr}
 3397              		.cfi_def_cfa_offset 8
 3398              		.cfi_offset 7, -8
 3399              		.cfi_offset 14, -4
 3400 0002 82B0     		sub	sp, sp, #8
 3401              		.cfi_def_cfa_offset 16
 3402 0004 00AF     		add	r7, sp, #0
 3403              		.cfi_def_cfa_register 7
 3404 0006 7860     		str	r0, [r7, #4]
1302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
1303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameter */
1304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == usrt) {
1305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] value is invalid");
1306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
1311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 3405              		.loc 1 1311 5
 3406 0008 7B68     		ldr	r3, [r7, #4]
 3407 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 3408 000e 012B     		cmp	r3, #1
 3409 0010 02D1     		bne	.L170
 3410              		.loc 1 1311 5 is_stmt 0 discriminator 1
 3411 0012 6FF00103 		mvn	r3, #1
 3412 0016 2DE0     		b	.L171
 3413              	.L170:
 3414              		.loc 1 1311 5 discriminator 2
 3415 0018 7B68     		ldr	r3, [r7, #4]
 3416 001a 0122     		movs	r2, #1
 3417 001c 83F84420 		strb	r2, [r3, #68]
1312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the tx_state wheher is busy or not */
1314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->tx_state) {
 3418              		.loc 1 1314 31 is_stmt 1 discriminator 2
 3419 0020 7B68     		ldr	r3, [r7, #4]
 3420 0022 93F83A30 		ldrb	r3, [r3, #58]
 3421 0026 DBB2     		uxtb	r3, r3
 3422              		.loc 1 1314 7 discriminator 2
 3423 0028 012B     		cmp	r3, #1
 3424 002a 05D1     		bne	.L172
1315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* enable DMA transimt */
1316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_transmit_config(usrt->periph, USART_TRANSMIT_DMA_ENABLE);
 3425              		.loc 1 1316 9
 3426 002c 7B68     		ldr	r3, [r7, #4]
 3427 002e 1B68     		ldr	r3, [r3]
 3428 0030 8021     		movs	r1, #128
 3429 0032 1846     		mov	r0, r3
 3430 0034 FFF7FEFF 		bl	hals_usrt_dma_transmit_config
 3431              	.L172:
1317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the rx_state wheher is busy or not */
1320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == usrt->rx_state) {
 3432              		.loc 1 1320 31
 3433 0038 7B68     		ldr	r3, [r7, #4]
 3434 003a 93F83B30 		ldrb	r3, [r3, #59]
 3435 003e DBB2     		uxtb	r3, r3
 3436              		.loc 1 1320 7
 3437 0040 012B     		cmp	r3, #1
 3438 0042 12D1     		bne	.L173
1321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* enable the PERR and ERR interrupt */
1322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_PERR);
 3439              		.loc 1 1322 9
 3440 0044 7B68     		ldr	r3, [r7, #4]
 3441 0046 1B68     		ldr	r3, [r3]
 3442 0048 0821     		movs	r1, #8
 3443 004a 1846     		mov	r0, r3
 3444 004c FFF7FEFF 		bl	hals_usrt_interrupt_enable
1323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(usrt->periph, USART_INT_ERR);
 3445              		.loc 1 1323 9
 3446 0050 7B68     		ldr	r3, [r7, #4]
 3447 0052 1B68     		ldr	r3, [r3]
 3448 0054 4FF40071 		mov	r1, #512
 3449 0058 1846     		mov	r0, r3
 3450 005a FFF7FEFF 		bl	hals_usrt_interrupt_enable
1324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* enable DMA receive */
1326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_receive_config(usrt->periph, USART_RECEIVE_DMA_ENABLE);
 3451              		.loc 1 1326 9
 3452 005e 7B68     		ldr	r3, [r7, #4]
 3453 0060 1B68     		ldr	r3, [r3]
 3454 0062 4021     		movs	r1, #64
 3455 0064 1846     		mov	r0, r3
 3456 0066 FFF7FEFF 		bl	hals_usrt_dma_receive_config
 3457              	.L173:
1327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
1330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 3458              		.loc 1 1330 5
 3459 006a 7B68     		ldr	r3, [r7, #4]
 3460 006c 0022     		movs	r2, #0
 3461 006e 83F84420 		strb	r2, [r3, #68]
1331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 3462              		.loc 1 1332 12
 3463 0072 0023     		movs	r3, #0
 3464              	.L171:
1333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3465              		.loc 1 1333 1
 3466 0074 1846     		mov	r0, r3
 3467 0076 0837     		adds	r7, r7, #8
 3468              		.cfi_def_cfa_offset 8
 3469 0078 BD46     		mov	sp, r7
 3470              		.cfi_def_cfa_register 13
 3471              		@ sp needed
 3472 007a 80BD     		pop	{r7, pc}
 3473              		.cfi_endproc
 3474              	.LFE135:
 3476              		.section	.text.hal_usrt_transfer_stop,"ax",%progbits
 3477              		.align	1
 3478              		.global	hal_usrt_transfer_stop
 3479              		.syntax unified
 3480              		.thumb
 3481              		.thumb_func
 3482              		.fpu softvfp
 3484              	hal_usrt_transfer_stop:
 3485              	.LFB136:
1334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      stop usrt transmit and receive transfer
1337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 the function is blocking
1338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
1339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
1341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** int32_t hal_usrt_transfer_stop(hal_usrt_dev_struct *usrt)
1345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3486              		.loc 1 1345 1
 3487              		.cfi_startproc
 3488              		@ args = 0, pretend = 0, frame = 8
 3489              		@ frame_needed = 1, uses_anonymous_args = 0
 3490 0000 80B5     		push	{r7, lr}
 3491              		.cfi_def_cfa_offset 8
 3492              		.cfi_offset 7, -8
 3493              		.cfi_offset 14, -4
 3494 0002 82B0     		sub	sp, sp, #8
 3495              		.cfi_def_cfa_offset 16
 3496 0004 00AF     		add	r7, sp, #0
 3497              		.cfi_def_cfa_register 7
 3498 0006 7860     		str	r0, [r7, #4]
1346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #if (1 == HAL_PARAMETER_CHECK)
1347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* check the parameter */
1348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL == usrt) {
1349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("parameter [usrt] value is invalid");
1350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return HAL_ERR_ADDRESS;
1351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* lock usrt */
1355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_LOCK(usrt);
 3499              		.loc 1 1355 5
 3500 0008 7B68     		ldr	r3, [r7, #4]
 3501 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 3502 000e 012B     		cmp	r3, #1
 3503 0010 02D1     		bne	.L175
 3504              		.loc 1 1355 5 is_stmt 0 discriminator 1
 3505 0012 6FF00103 		mvn	r3, #1
 3506 0016 63E0     		b	.L176
 3507              	.L175:
 3508              		.loc 1 1355 5 discriminator 2
 3509 0018 7B68     		ldr	r3, [r7, #4]
 3510 001a 0122     		movs	r2, #1
 3511 001c 83F84420 		strb	r2, [r3, #68]
1356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable the TBE and TC interrupt */
1358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_disable(usrt->periph, USART_INT_TBE);
 3512              		.loc 1 1358 5 is_stmt 1 discriminator 2
 3513 0020 7B68     		ldr	r3, [r7, #4]
 3514 0022 1B68     		ldr	r3, [r3]
 3515 0024 0721     		movs	r1, #7
 3516 0026 1846     		mov	r0, r3
 3517 0028 FFF7FEFF 		bl	hals_usrt_interrupt_disable
1359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_disable(usrt->periph, USART_INT_TC);
 3518              		.loc 1 1359 5 discriminator 2
 3519 002c 7B68     		ldr	r3, [r7, #4]
 3520 002e 1B68     		ldr	r3, [r3]
 3521 0030 0621     		movs	r1, #6
 3522 0032 1846     		mov	r0, r3
 3523 0034 FFF7FEFF 		bl	hals_usrt_interrupt_disable
1360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable the RBNE, PERR and ERR interrupt */
1362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_disable(usrt->periph, USART_INT_RBNE);
 3524              		.loc 1 1362 5 discriminator 2
 3525 0038 7B68     		ldr	r3, [r7, #4]
 3526 003a 1B68     		ldr	r3, [r3]
 3527 003c 0521     		movs	r1, #5
 3528 003e 1846     		mov	r0, r3
 3529 0040 FFF7FEFF 		bl	hals_usrt_interrupt_disable
1363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_disable(usrt->periph, USART_INT_PERR);
 3530              		.loc 1 1363 5 discriminator 2
 3531 0044 7B68     		ldr	r3, [r7, #4]
 3532 0046 1B68     		ldr	r3, [r3]
 3533 0048 0821     		movs	r1, #8
 3534 004a 1846     		mov	r0, r3
 3535 004c FFF7FEFF 		bl	hals_usrt_interrupt_disable
1364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_disable(usrt->periph, USART_INT_ERR);
 3536              		.loc 1 1364 5 discriminator 2
 3537 0050 7B68     		ldr	r3, [r7, #4]
 3538 0052 1B68     		ldr	r3, [r3]
 3539 0054 4FF40071 		mov	r1, #512
 3540 0058 1846     		mov	r0, r3
 3541 005a FFF7FEFF 		bl	hals_usrt_interrupt_disable
1365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable DMA transimt and stop DMA */
1367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_transmit_config(usrt->periph, USART_TRANSMIT_DMA_DISABLE);
 3542              		.loc 1 1367 5 discriminator 2
 3543 005e 7B68     		ldr	r3, [r7, #4]
 3544 0060 1B68     		ldr	r3, [r3]
 3545 0062 0021     		movs	r1, #0
 3546 0064 1846     		mov	r0, r3
 3547 0066 FFF7FEFF 		bl	hals_usrt_dma_transmit_config
1368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_stop(usrt->p_dma_tx);
 3548              		.loc 1 1368 5 discriminator 2
 3549 006a 7B68     		ldr	r3, [r7, #4]
 3550 006c 9B69     		ldr	r3, [r3, #24]
 3551 006e 1846     		mov	r0, r3
 3552 0070 FFF7FEFF 		bl	hal_dma_stop
1369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable DMA receive and stop DMA */
1371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_dma_receive_config(usrt->periph, USART_RECEIVE_DMA_DISABLE);
 3553              		.loc 1 1371 5 discriminator 2
 3554 0074 7B68     		ldr	r3, [r7, #4]
 3555 0076 1B68     		ldr	r3, [r3]
 3556 0078 0021     		movs	r1, #0
 3557 007a 1846     		mov	r0, r3
 3558 007c FFF7FEFF 		bl	hals_usrt_dma_receive_config
1372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_stop(usrt->p_dma_rx);
 3559              		.loc 1 1372 5 discriminator 2
 3560 0080 7B68     		ldr	r3, [r7, #4]
 3561 0082 5B69     		ldr	r3, [r3, #20]
 3562 0084 1846     		mov	r0, r3
 3563 0086 FFF7FEFF 		bl	hal_dma_stop
1373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* reset the position and state */
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->txbuffer.pos = 0;
 3564              		.loc 1 1375 24 discriminator 2
 3565 008a 7B68     		ldr	r3, [r7, #4]
 3566 008c 0022     		movs	r2, #0
 3567 008e 5A62     		str	r2, [r3, #36]
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->tx_state = USRT_STATE_FREE;
 3568              		.loc 1 1376 20 discriminator 2
 3569 0090 7B68     		ldr	r3, [r7, #4]
 3570 0092 0022     		movs	r2, #0
 3571 0094 83F83A20 		strb	r2, [r3, #58]
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rxbuffer.pos = 0;
 3572              		.loc 1 1377 24 discriminator 2
 3573 0098 7B68     		ldr	r3, [r7, #4]
 3574 009a 0022     		movs	r2, #0
 3575 009c 1A63     		str	r2, [r3, #48]
1378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     usrt->rx_state = USRT_STATE_FREE;
 3576              		.loc 1 1378 20 discriminator 2
 3577 009e 7B68     		ldr	r3, [r7, #4]
 3578 00a0 0022     		movs	r2, #0
 3579 00a2 83F83B20 		strb	r2, [r3, #59]
1379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear interrupt error flags */
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_PERR);
 3580              		.loc 1 1381 5 discriminator 2
 3581 00a6 7B68     		ldr	r3, [r7, #4]
 3582 00a8 1B68     		ldr	r3, [r3]
 3583 00aa 0F49     		ldr	r1, .L177
 3584 00ac 1846     		mov	r0, r3
 3585 00ae FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
1382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_ERR_FERR);
 3586              		.loc 1 1382 5 discriminator 2
 3587 00b2 7B68     		ldr	r3, [r7, #4]
 3588 00b4 1B68     		ldr	r3, [r3]
 3589 00b6 0D49     		ldr	r1, .L177+4
 3590 00b8 1846     		mov	r0, r3
 3591 00ba FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
1383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_ERR_NERR);
 3592              		.loc 1 1383 5 discriminator 2
 3593 00be 7B68     		ldr	r3, [r7, #4]
 3594 00c0 1B68     		ldr	r3, [r3]
 3595 00c2 0B49     		ldr	r1, .L177+8
 3596 00c4 1846     		mov	r0, r3
 3597 00c6 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
1384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_flag_clear(usrt->periph, USART_INT_FLAG_ERR_ORERR);
 3598              		.loc 1 1384 5 discriminator 2
 3599 00ca 7B68     		ldr	r3, [r7, #4]
 3600 00cc 1B68     		ldr	r3, [r3]
 3601 00ce 0949     		ldr	r1, .L177+12
 3602 00d0 1846     		mov	r0, r3
 3603 00d2 FFF7FEFF 		bl	hals_usrt_interrupt_flag_clear
1385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* unlock usrt */
1387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     HAL_UNLOCK(usrt);
 3604              		.loc 1 1387 5 discriminator 2
 3605 00d6 7B68     		ldr	r3, [r7, #4]
 3606 00d8 0022     		movs	r2, #0
 3607 00da 83F84420 		strb	r2, [r3, #68]
1388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return HAL_ERR_NONE;
 3608              		.loc 1 1389 12 discriminator 2
 3609 00de 0023     		movs	r3, #0
 3610              	.L176:
1390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3611              		.loc 1 1390 1
 3612 00e0 1846     		mov	r0, r3
 3613 00e2 0837     		adds	r7, r7, #8
 3614              		.cfi_def_cfa_offset 8
 3615 00e4 BD46     		mov	sp, r7
 3616              		.cfi_def_cfa_register 13
 3617              		@ sp needed
 3618 00e6 80BD     		pop	{r7, pc}
 3619              	.L178:
 3620              		.align	2
 3621              	.L177:
 3622 00e8 08000007 		.word	117440520
 3623 00ec 00020107 		.word	117506560
 3624 00f0 00020207 		.word	117572096
 3625 00f4 00020307 		.word	117637632
 3626              		.cfi_endproc
 3627              	.LFE136:
 3629              		.section	.text.hals_usrt_deinit,"ax",%progbits
 3630              		.align	1
 3631              		.global	hals_usrt_deinit
 3632              		.syntax unified
 3633              		.thumb
 3634              		.thumb_func
 3635              		.fpu softvfp
 3637              	hals_usrt_deinit:
 3638              	.LFB137:
1391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      reset USRT
1394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_deinit(uint32_t usrt_periph)
1399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3639              		.loc 1 1399 1
 3640              		.cfi_startproc
 3641              		@ args = 0, pretend = 0, frame = 8
 3642              		@ frame_needed = 1, uses_anonymous_args = 0
 3643 0000 80B5     		push	{r7, lr}
 3644              		.cfi_def_cfa_offset 8
 3645              		.cfi_offset 7, -8
 3646              		.cfi_offset 14, -4
 3647 0002 82B0     		sub	sp, sp, #8
 3648              		.cfi_def_cfa_offset 16
 3649 0004 00AF     		add	r7, sp, #0
 3650              		.cfi_def_cfa_register 7
 3651 0006 7860     		str	r0, [r7, #4]
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     switch(usrt_periph) {
 3652              		.loc 1 1400 5
 3653 0008 7B68     		ldr	r3, [r7, #4]
 3654 000a 0F4A     		ldr	r2, .L184
 3655 000c 9342     		cmp	r3, r2
 3656 000e 0CD0     		beq	.L180
 3657 0010 7B68     		ldr	r3, [r7, #4]
 3658 0012 0E4A     		ldr	r2, .L184+4
 3659 0014 9342     		cmp	r3, r2
 3660 0016 11D1     		bne	.L183
1401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART0:
1402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* reset USART0 */
1403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hal_rcu_periph_reset_enable(RCU_USART0RST);
 3661              		.loc 1 1403 9
 3662 0018 40F20E30 		movw	r0, #782
 3663 001c FFF7FEFF 		bl	hal_rcu_periph_reset_enable
1404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hal_rcu_periph_reset_disable(RCU_USART0RST);
 3664              		.loc 1 1404 9
 3665 0020 40F20E30 		movw	r0, #782
 3666 0024 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
1405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 3667              		.loc 1 1405 9
 3668 0028 09E0     		b	.L182
 3669              	.L180:
1406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART1:
1407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* reset USART1 */
1408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hal_rcu_periph_reset_enable(RCU_USART1RST);
 3670              		.loc 1 1408 9
 3671 002a 40F21140 		movw	r0, #1041
 3672 002e FFF7FEFF 		bl	hal_rcu_periph_reset_enable
1409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hal_rcu_periph_reset_disable(RCU_USART1RST);
 3673              		.loc 1 1409 9
 3674 0032 40F21140 		movw	r0, #1041
 3675 0036 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
1410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 3676              		.loc 1 1410 9
 3677 003a 00E0     		b	.L182
 3678              	.L183:
1411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     default:
1412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 3679              		.loc 1 1412 9
 3680 003c 00BF     		nop
 3681              	.L182:
1413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3682              		.loc 1 1414 1
 3683 003e 00BF     		nop
 3684 0040 0837     		adds	r7, r7, #8
 3685              		.cfi_def_cfa_offset 8
 3686 0042 BD46     		mov	sp, r7
 3687              		.cfi_def_cfa_register 13
 3688              		@ sp needed
 3689 0044 80BD     		pop	{r7, pc}
 3690              	.L185:
 3691 0046 00BF     		.align	2
 3692              	.L184:
 3693 0048 00440040 		.word	1073759232
 3694 004c 00380140 		.word	1073821696
 3695              		.cfi_endproc
 3696              	.LFE137:
 3698              		.section	.text.hals_usrt_baudrate_set,"ax",%progbits
 3699              		.align	1
 3700              		.global	hals_usrt_baudrate_set
 3701              		.syntax unified
 3702              		.thumb
 3703              		.thumb_func
 3704              		.fpu softvfp
 3706              	hals_usrt_baudrate_set:
 3707              	.LFB138:
1415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT baud rate value
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  baudval: baud rate value
1420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_baudrate_set(uint32_t usrt_periph, uint32_t baudval)
1424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3708              		.loc 1 1424 1
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 24
 3711              		@ frame_needed = 1, uses_anonymous_args = 0
 3712 0000 80B5     		push	{r7, lr}
 3713              		.cfi_def_cfa_offset 8
 3714              		.cfi_offset 7, -8
 3715              		.cfi_offset 14, -4
 3716 0002 86B0     		sub	sp, sp, #24
 3717              		.cfi_def_cfa_offset 32
 3718 0004 00AF     		add	r7, sp, #0
 3719              		.cfi_def_cfa_register 7
 3720 0006 7860     		str	r0, [r7, #4]
 3721 0008 3960     		str	r1, [r7]
1425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t uclk = 0U, intdiv = 0U, fradiv = 0U, udiv = 0U;
 3722              		.loc 1 1425 14
 3723 000a 0023     		movs	r3, #0
 3724 000c 7B61     		str	r3, [r7, #20]
 3725              		.loc 1 1425 25
 3726 000e 0023     		movs	r3, #0
 3727 0010 3B61     		str	r3, [r7, #16]
 3728              		.loc 1 1425 38
 3729 0012 0023     		movs	r3, #0
 3730 0014 FB60     		str	r3, [r7, #12]
 3731              		.loc 1 1425 51
 3732 0016 0023     		movs	r3, #0
 3733 0018 BB60     		str	r3, [r7, #8]
1426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     switch(usrt_periph) {
 3734              		.loc 1 1426 5
 3735 001a 7B68     		ldr	r3, [r7, #4]
 3736 001c 294A     		ldr	r2, .L194
 3737 001e 9342     		cmp	r3, r2
 3738 0020 08D0     		beq	.L187
 3739 0022 7B68     		ldr	r3, [r7, #4]
 3740 0024 284A     		ldr	r2, .L194+4
 3741 0026 9342     		cmp	r3, r2
 3742 0028 09D1     		bne	.L192
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* get clock frequency */
1428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART0:
1429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* get USART0 clock */
1430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         uclk = hals_rcu_clock_freq_get(CK_USART);
 3743              		.loc 1 1430 16
 3744 002a 0620     		movs	r0, #6
 3745 002c FFF7FEFF 		bl	hals_rcu_clock_freq_get
 3746 0030 7861     		str	r0, [r7, #20]
1431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 3747              		.loc 1 1431 9
 3748 0032 05E0     		b	.L189
 3749              	.L187:
1432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART1:
1433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* get USART1 clock */
1434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         uclk = hals_rcu_clock_freq_get(CK_APB1);
 3750              		.loc 1 1434 16
 3751 0034 0220     		movs	r0, #2
 3752 0036 FFF7FEFF 		bl	hals_rcu_clock_freq_get
 3753 003a 7861     		str	r0, [r7, #20]
1435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 3754              		.loc 1 1435 9
 3755 003c 00E0     		b	.L189
 3756              	.L192:
1436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     default:
1437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 3757              		.loc 1 1437 9
 3758 003e 00BF     		nop
 3759              	.L189:
1438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USART_CTL0(usrt_periph) & USART_CTL0_OVSMOD) {
 3760              		.loc 1 1439 8
 3761 0040 7B68     		ldr	r3, [r7, #4]
 3762 0042 1B68     		ldr	r3, [r3]
 3763              		.loc 1 1439 32
 3764 0044 03F40043 		and	r3, r3, #32768
 3765              		.loc 1 1439 7
 3766 0048 002B     		cmp	r3, #0
 3767 004a 1CD0     		beq	.L190
1440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* oversampling by 8, configure the value of USART_BAUD */
1441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         udiv = ((2U * uclk) + (baudval / 2U)) / baudval;
 3768              		.loc 1 1441 21
 3769 004c 7B69     		ldr	r3, [r7, #20]
 3770 004e 5A00     		lsls	r2, r3, #1
 3771              		.loc 1 1441 40
 3772 0050 3B68     		ldr	r3, [r7]
 3773 0052 5B08     		lsrs	r3, r3, #1
 3774              		.loc 1 1441 29
 3775 0054 1A44     		add	r2, r2, r3
 3776              		.loc 1 1441 14
 3777 0056 3B68     		ldr	r3, [r7]
 3778 0058 B2FBF3F3 		udiv	r3, r2, r3
 3779 005c BB60     		str	r3, [r7, #8]
1442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         intdiv = udiv & 0x0000fff0U;
 3780              		.loc 1 1442 16
 3781 005e BA68     		ldr	r2, [r7, #8]
 3782 0060 4FF6F073 		movw	r3, #65520
 3783 0064 1340     		ands	r3, r3, r2
 3784 0066 3B61     		str	r3, [r7, #16]
1443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         fradiv = (udiv >> 1U) & 0x00000007U;
 3785              		.loc 1 1443 24
 3786 0068 BB68     		ldr	r3, [r7, #8]
 3787 006a 5B08     		lsrs	r3, r3, #1
 3788              		.loc 1 1443 16
 3789 006c 03F00703 		and	r3, r3, #7
 3790 0070 FB60     		str	r3, [r7, #12]
1444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_BAUD(usrt_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 3791              		.loc 1 1444 86
 3792 0072 3A69     		ldr	r2, [r7, #16]
 3793 0074 FB68     		ldr	r3, [r7, #12]
 3794 0076 42EA0301 		orr	r1, r2, r3
 3795              		.loc 1 1444 9
 3796 007a 7B68     		ldr	r3, [r7, #4]
 3797 007c 0C33     		adds	r3, r3, #12
 3798 007e 1A46     		mov	r2, r3
 3799              		.loc 1 1444 76
 3800 0080 8BB2     		uxth	r3, r1
 3801              		.loc 1 1444 33
 3802 0082 1360     		str	r3, [r2]
1445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* oversampling by 16, configure the value of USART_BAUD */
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         udiv = (uclk + (baudval / 2U)) / baudval;
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         intdiv = udiv & 0x0000fff0U;
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         fradiv = udiv & 0x0000000fU;
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_BAUD(usrt_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
1451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3803              		.loc 1 1452 1
 3804 0084 19E0     		b	.L193
 3805              	.L190:
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         intdiv = udiv & 0x0000fff0U;
 3806              		.loc 1 1447 33
 3807 0086 3B68     		ldr	r3, [r7]
 3808 0088 5A08     		lsrs	r2, r3, #1
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         intdiv = udiv & 0x0000fff0U;
 3809              		.loc 1 1447 22
 3810 008a 7B69     		ldr	r3, [r7, #20]
 3811 008c 1A44     		add	r2, r2, r3
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         intdiv = udiv & 0x0000fff0U;
 3812              		.loc 1 1447 14
 3813 008e 3B68     		ldr	r3, [r7]
 3814 0090 B2FBF3F3 		udiv	r3, r2, r3
 3815 0094 BB60     		str	r3, [r7, #8]
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         fradiv = udiv & 0x0000000fU;
 3816              		.loc 1 1448 16
 3817 0096 BA68     		ldr	r2, [r7, #8]
 3818 0098 4FF6F073 		movw	r3, #65520
 3819 009c 1340     		ands	r3, r3, r2
 3820 009e 3B61     		str	r3, [r7, #16]
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_BAUD(usrt_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 3821              		.loc 1 1449 16
 3822 00a0 BB68     		ldr	r3, [r7, #8]
 3823 00a2 03F00F03 		and	r3, r3, #15
 3824 00a6 FB60     		str	r3, [r7, #12]
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 3825              		.loc 1 1450 86
 3826 00a8 3A69     		ldr	r2, [r7, #16]
 3827 00aa FB68     		ldr	r3, [r7, #12]
 3828 00ac 42EA0301 		orr	r1, r2, r3
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 3829              		.loc 1 1450 9
 3830 00b0 7B68     		ldr	r3, [r7, #4]
 3831 00b2 0C33     		adds	r3, r3, #12
 3832 00b4 1A46     		mov	r2, r3
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 3833              		.loc 1 1450 76
 3834 00b6 8BB2     		uxth	r3, r1
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 3835              		.loc 1 1450 33
 3836 00b8 1360     		str	r3, [r2]
 3837              	.L193:
 3838              		.loc 1 1452 1
 3839 00ba 00BF     		nop
 3840 00bc 1837     		adds	r7, r7, #24
 3841              		.cfi_def_cfa_offset 8
 3842 00be BD46     		mov	sp, r7
 3843              		.cfi_def_cfa_register 13
 3844              		@ sp needed
 3845 00c0 80BD     		pop	{r7, pc}
 3846              	.L195:
 3847 00c2 00BF     		.align	2
 3848              	.L194:
 3849 00c4 00440040 		.word	1073759232
 3850 00c8 00380140 		.word	1073821696
 3851              		.cfi_endproc
 3852              	.LFE138:
 3854              		.section	.text.hals_usrt_parity_config,"ax",%progbits
 3855              		.align	1
 3856              		.global	hals_usrt_parity_config
 3857              		.syntax unified
 3858              		.thumb
 3859              		.thumb_func
 3860              		.fpu softvfp
 3862              	hals_usrt_parity_config:
 3863              	.LFB139:
1453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT parity
1456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  paritycfg: USRT parity configure
1458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_PM_NONE: no parity
1460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_PM_ODD: odd parity
1461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_PM_EVEN: even parity
1462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_parity_config(uint32_t usrt_periph, uint32_t paritycfg)
1466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3864              		.loc 1 1466 1
 3865              		.cfi_startproc
 3866              		@ args = 0, pretend = 0, frame = 8
 3867              		@ frame_needed = 1, uses_anonymous_args = 0
 3868              		@ link register save eliminated.
 3869 0000 80B4     		push	{r7}
 3870              		.cfi_def_cfa_offset 4
 3871              		.cfi_offset 7, -4
 3872 0002 83B0     		sub	sp, sp, #12
 3873              		.cfi_def_cfa_offset 16
 3874 0004 00AF     		add	r7, sp, #0
 3875              		.cfi_def_cfa_register 7
 3876 0006 7860     		str	r0, [r7, #4]
 3877 0008 3960     		str	r1, [r7]
1467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 3878              		.loc 1 1468 29
 3879 000a 7B68     		ldr	r3, [r7, #4]
 3880 000c 1A68     		ldr	r2, [r3]
 3881 000e 7B68     		ldr	r3, [r7, #4]
 3882 0010 22F00102 		bic	r2, r2, #1
 3883 0014 1A60     		str	r2, [r3]
1469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USART_CTL0 PM,PCEN bits */
1470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_PM | USART_CTL0_PCEN);
 3884              		.loc 1 1470 29
 3885 0016 7B68     		ldr	r3, [r7, #4]
 3886 0018 1A68     		ldr	r2, [r3]
 3887 001a 7B68     		ldr	r3, [r7, #4]
 3888 001c 22F4C062 		bic	r2, r2, #1536
 3889 0020 1A60     		str	r2, [r3]
1471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure USRT parity mode */
1472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) |= paritycfg;
 3890              		.loc 1 1472 29
 3891 0022 7B68     		ldr	r3, [r7, #4]
 3892 0024 1968     		ldr	r1, [r3]
 3893 0026 7B68     		ldr	r3, [r7, #4]
 3894 0028 3A68     		ldr	r2, [r7]
 3895 002a 0A43     		orrs	r2, r2, r1
 3896 002c 1A60     		str	r2, [r3]
1473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3897              		.loc 1 1473 1
 3898 002e 00BF     		nop
 3899 0030 0C37     		adds	r7, r7, #12
 3900              		.cfi_def_cfa_offset 4
 3901 0032 BD46     		mov	sp, r7
 3902              		.cfi_def_cfa_register 13
 3903              		@ sp needed
 3904 0034 80BC     		pop	{r7}
 3905              		.cfi_restore 7
 3906              		.cfi_def_cfa_offset 0
 3907 0036 7047     		bx	lr
 3908              		.cfi_endproc
 3909              	.LFE139:
 3911              		.section	.text.hals_usrt_word_length_set,"ax",%progbits
 3912              		.align	1
 3913              		.global	hals_usrt_word_length_set
 3914              		.syntax unified
 3915              		.thumb
 3916              		.thumb_func
 3917              		.fpu softvfp
 3919              	hals_usrt_word_length_set:
 3920              	.LFB140:
1474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT word length
1477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  wlen: USRT word length configure
1479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_WL_8BIT: 8 bits
1481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_WL_9BIT: 9 bits
1482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_word_length_set(uint32_t usrt_periph, uint32_t wlen)
1486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3921              		.loc 1 1486 1
 3922              		.cfi_startproc
 3923              		@ args = 0, pretend = 0, frame = 8
 3924              		@ frame_needed = 1, uses_anonymous_args = 0
 3925              		@ link register save eliminated.
 3926 0000 80B4     		push	{r7}
 3927              		.cfi_def_cfa_offset 4
 3928              		.cfi_offset 7, -4
 3929 0002 83B0     		sub	sp, sp, #12
 3930              		.cfi_def_cfa_offset 16
 3931 0004 00AF     		add	r7, sp, #0
 3932              		.cfi_def_cfa_register 7
 3933 0006 7860     		str	r0, [r7, #4]
 3934 0008 3960     		str	r1, [r7]
1487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 3935              		.loc 1 1488 29
 3936 000a 7B68     		ldr	r3, [r7, #4]
 3937 000c 1A68     		ldr	r2, [r3]
 3938 000e 7B68     		ldr	r3, [r7, #4]
 3939 0010 22F00102 		bic	r2, r2, #1
 3940 0014 1A60     		str	r2, [r3]
1489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USART_CTL0 WL bit */
1490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~USART_CTL0_WL;
 3941              		.loc 1 1490 29
 3942 0016 7B68     		ldr	r3, [r7, #4]
 3943 0018 1A68     		ldr	r2, [r3]
 3944 001a 7B68     		ldr	r3, [r7, #4]
 3945 001c 22F48052 		bic	r2, r2, #4096
 3946 0020 1A60     		str	r2, [r3]
1491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure USRT word length */
1492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) |= wlen;
 3947              		.loc 1 1492 29
 3948 0022 7B68     		ldr	r3, [r7, #4]
 3949 0024 1968     		ldr	r1, [r3]
 3950 0026 7B68     		ldr	r3, [r7, #4]
 3951 0028 3A68     		ldr	r2, [r7]
 3952 002a 0A43     		orrs	r2, r2, r1
 3953 002c 1A60     		str	r2, [r3]
1493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 3954              		.loc 1 1493 1
 3955 002e 00BF     		nop
 3956 0030 0C37     		adds	r7, r7, #12
 3957              		.cfi_def_cfa_offset 4
 3958 0032 BD46     		mov	sp, r7
 3959              		.cfi_def_cfa_register 13
 3960              		@ sp needed
 3961 0034 80BC     		pop	{r7}
 3962              		.cfi_restore 7
 3963              		.cfi_def_cfa_offset 0
 3964 0036 7047     		bx	lr
 3965              		.cfi_endproc
 3966              	.LFE140:
 3968              		.section	.text.hals_usrt_stop_bit_set,"ax",%progbits
 3969              		.align	1
 3970              		.global	hals_usrt_stop_bit_set
 3971              		.syntax unified
 3972              		.thumb
 3973              		.thumb_func
 3974              		.fpu softvfp
 3976              	hals_usrt_stop_bit_set:
 3977              	.LFB141:
1494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT stop bit length
1497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  stblen: USRT stop bit configure
1499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_STB_1BIT: 1 bit
1501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_STB_0_5BIT: 0.5bit
1502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_STB_2BIT: 2 bits
1503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_STB_1_5BIT: 1.5bit
1504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_stop_bit_set(uint32_t usrt_periph, uint32_t stblen)
1508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 3978              		.loc 1 1508 1
 3979              		.cfi_startproc
 3980              		@ args = 0, pretend = 0, frame = 8
 3981              		@ frame_needed = 1, uses_anonymous_args = 0
 3982              		@ link register save eliminated.
 3983 0000 80B4     		push	{r7}
 3984              		.cfi_def_cfa_offset 4
 3985              		.cfi_offset 7, -4
 3986 0002 83B0     		sub	sp, sp, #12
 3987              		.cfi_def_cfa_offset 16
 3988 0004 00AF     		add	r7, sp, #0
 3989              		.cfi_def_cfa_register 7
 3990 0006 7860     		str	r0, [r7, #4]
 3991 0008 3960     		str	r1, [r7]
1509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 3992              		.loc 1 1510 29
 3993 000a 7B68     		ldr	r3, [r7, #4]
 3994 000c 1A68     		ldr	r2, [r3]
 3995 000e 7B68     		ldr	r3, [r7, #4]
 3996 0010 22F00102 		bic	r2, r2, #1
 3997 0014 1A60     		str	r2, [r3]
1511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear USART_CTL1 STB bits */
1512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) &= ~USART_CTL1_STB;
 3998              		.loc 1 1512 29
 3999 0016 7B68     		ldr	r3, [r7, #4]
 4000 0018 0433     		adds	r3, r3, #4
 4001 001a 1B68     		ldr	r3, [r3]
 4002 001c 7A68     		ldr	r2, [r7, #4]
 4003 001e 0432     		adds	r2, r2, #4
 4004 0020 23F44053 		bic	r3, r3, #12288
 4005 0024 1360     		str	r3, [r2]
1513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) |= stblen;
 4006              		.loc 1 1513 29
 4007 0026 7B68     		ldr	r3, [r7, #4]
 4008 0028 0433     		adds	r3, r3, #4
 4009 002a 1A68     		ldr	r2, [r3]
 4010 002c 7B68     		ldr	r3, [r7, #4]
 4011 002e 0433     		adds	r3, r3, #4
 4012 0030 1946     		mov	r1, r3
 4013 0032 3B68     		ldr	r3, [r7]
 4014 0034 1343     		orrs	r3, r3, r2
 4015 0036 0B60     		str	r3, [r1]
1514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4016              		.loc 1 1514 1
 4017 0038 00BF     		nop
 4018 003a 0C37     		adds	r7, r7, #12
 4019              		.cfi_def_cfa_offset 4
 4020 003c BD46     		mov	sp, r7
 4021              		.cfi_def_cfa_register 13
 4022              		@ sp needed
 4023 003e 80BC     		pop	{r7}
 4024              		.cfi_restore 7
 4025              		.cfi_def_cfa_offset 0
 4026 0040 7047     		bx	lr
 4027              		.cfi_endproc
 4028              	.LFE141:
 4030              		.section	.text.hals_usrt_enable,"ax",%progbits
 4031              		.align	1
 4032              		.global	hals_usrt_enable
 4033              		.syntax unified
 4034              		.thumb
 4035              		.thumb_func
 4036              		.fpu softvfp
 4038              	hals_usrt_enable:
 4039              	.LFB142:
1515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable USRT
1518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_enable(uint32_t usrt_periph)
1523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4040              		.loc 1 1523 1
 4041              		.cfi_startproc
 4042              		@ args = 0, pretend = 0, frame = 8
 4043              		@ frame_needed = 1, uses_anonymous_args = 0
 4044              		@ link register save eliminated.
 4045 0000 80B4     		push	{r7}
 4046              		.cfi_def_cfa_offset 4
 4047              		.cfi_offset 7, -4
 4048 0002 83B0     		sub	sp, sp, #12
 4049              		.cfi_def_cfa_offset 16
 4050 0004 00AF     		add	r7, sp, #0
 4051              		.cfi_def_cfa_register 7
 4052 0006 7860     		str	r0, [r7, #4]
1524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) |= USART_CTL0_UEN;
 4053              		.loc 1 1524 29
 4054 0008 7B68     		ldr	r3, [r7, #4]
 4055 000a 1A68     		ldr	r2, [r3]
 4056 000c 7B68     		ldr	r3, [r7, #4]
 4057 000e 42F00102 		orr	r2, r2, #1
 4058 0012 1A60     		str	r2, [r3]
1525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4059              		.loc 1 1525 1
 4060 0014 00BF     		nop
 4061 0016 0C37     		adds	r7, r7, #12
 4062              		.cfi_def_cfa_offset 4
 4063 0018 BD46     		mov	sp, r7
 4064              		.cfi_def_cfa_register 13
 4065              		@ sp needed
 4066 001a 80BC     		pop	{r7}
 4067              		.cfi_restore 7
 4068              		.cfi_def_cfa_offset 0
 4069 001c 7047     		bx	lr
 4070              		.cfi_endproc
 4071              	.LFE142:
 4073              		.section	.text.hals_usrt_disable,"ax",%progbits
 4074              		.align	1
 4075              		.global	hals_usrt_disable
 4076              		.syntax unified
 4077              		.thumb
 4078              		.thumb_func
 4079              		.fpu softvfp
 4081              	hals_usrt_disable:
 4082              	.LFB143:
1526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      disable USRT
1529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_disable(uint32_t usrt_periph)
1534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4083              		.loc 1 1534 1
 4084              		.cfi_startproc
 4085              		@ args = 0, pretend = 0, frame = 8
 4086              		@ frame_needed = 1, uses_anonymous_args = 0
 4087              		@ link register save eliminated.
 4088 0000 80B4     		push	{r7}
 4089              		.cfi_def_cfa_offset 4
 4090              		.cfi_offset 7, -4
 4091 0002 83B0     		sub	sp, sp, #12
 4092              		.cfi_def_cfa_offset 16
 4093 0004 00AF     		add	r7, sp, #0
 4094              		.cfi_def_cfa_register 7
 4095 0006 7860     		str	r0, [r7, #4]
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4096              		.loc 1 1535 29
 4097 0008 7B68     		ldr	r3, [r7, #4]
 4098 000a 1A68     		ldr	r2, [r3]
 4099 000c 7B68     		ldr	r3, [r7, #4]
 4100 000e 22F00102 		bic	r2, r2, #1
 4101 0012 1A60     		str	r2, [r3]
1536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4102              		.loc 1 1536 1
 4103 0014 00BF     		nop
 4104 0016 0C37     		adds	r7, r7, #12
 4105              		.cfi_def_cfa_offset 4
 4106 0018 BD46     		mov	sp, r7
 4107              		.cfi_def_cfa_register 13
 4108              		@ sp needed
 4109 001a 80BC     		pop	{r7}
 4110              		.cfi_restore 7
 4111              		.cfi_def_cfa_offset 0
 4112 001c 7047     		bx	lr
 4113              		.cfi_endproc
 4114              	.LFE143:
 4116              		.section	.text.hals_usrt_transmit_config,"ax",%progbits
 4117              		.align	1
 4118              		.global	hals_usrt_transmit_config
 4119              		.syntax unified
 4120              		.thumb
 4121              		.thumb_func
 4122              		.fpu softvfp
 4124              	hals_usrt_transmit_config:
 4125              	.LFB144:
1537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT transmitter
1540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  txconfig: enable or disable USRT transmitter
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_TRANSMIT_ENABLE: enable USRT transmission
1544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_TRANSMIT_DISABLE: enable USRT transmission
1545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_transmit_config(uint32_t usrt_periph, uint32_t txconfig)
1549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4126              		.loc 1 1549 1
 4127              		.cfi_startproc
 4128              		@ args = 0, pretend = 0, frame = 8
 4129              		@ frame_needed = 1, uses_anonymous_args = 0
 4130              		@ link register save eliminated.
 4131 0000 80B4     		push	{r7}
 4132              		.cfi_def_cfa_offset 4
 4133              		.cfi_offset 7, -4
 4134 0002 83B0     		sub	sp, sp, #12
 4135              		.cfi_def_cfa_offset 16
 4136 0004 00AF     		add	r7, sp, #0
 4137              		.cfi_def_cfa_register 7
 4138 0006 7860     		str	r0, [r7, #4]
 4139 0008 3960     		str	r1, [r7]
1550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~USART_CTL0_TEN;
 4140              		.loc 1 1550 29
 4141 000a 7B68     		ldr	r3, [r7, #4]
 4142 000c 1A68     		ldr	r2, [r3]
 4143 000e 7B68     		ldr	r3, [r7, #4]
 4144 0010 22F00802 		bic	r2, r2, #8
 4145 0014 1A60     		str	r2, [r3]
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure transfer mode */
1552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) |= txconfig;
 4146              		.loc 1 1552 29
 4147 0016 7B68     		ldr	r3, [r7, #4]
 4148 0018 1968     		ldr	r1, [r3]
 4149 001a 7B68     		ldr	r3, [r7, #4]
 4150 001c 3A68     		ldr	r2, [r7]
 4151 001e 0A43     		orrs	r2, r2, r1
 4152 0020 1A60     		str	r2, [r3]
1553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4153              		.loc 1 1553 1
 4154 0022 00BF     		nop
 4155 0024 0C37     		adds	r7, r7, #12
 4156              		.cfi_def_cfa_offset 4
 4157 0026 BD46     		mov	sp, r7
 4158              		.cfi_def_cfa_register 13
 4159              		@ sp needed
 4160 0028 80BC     		pop	{r7}
 4161              		.cfi_restore 7
 4162              		.cfi_def_cfa_offset 0
 4163 002a 7047     		bx	lr
 4164              		.cfi_endproc
 4165              	.LFE144:
 4167              		.section	.text.hals_usrt_receive_config,"ax",%progbits
 4168              		.align	1
 4169              		.global	hals_usrt_receive_config
 4170              		.syntax unified
 4171              		.thumb
 4172              		.thumb_func
 4173              		.fpu softvfp
 4175              	hals_usrt_receive_config:
 4176              	.LFB145:
1554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT receiver
1557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  rxconfig: enable or disable USRT receiver
1559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_RECEIVE_ENABLE: enable USRT reception
1561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_RECEIVE_DISABLE: disable USRT reception
1562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_receive_config(uint32_t usrt_periph, uint32_t rxconfig)
1566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4177              		.loc 1 1566 1
 4178              		.cfi_startproc
 4179              		@ args = 0, pretend = 0, frame = 8
 4180              		@ frame_needed = 1, uses_anonymous_args = 0
 4181              		@ link register save eliminated.
 4182 0000 80B4     		push	{r7}
 4183              		.cfi_def_cfa_offset 4
 4184              		.cfi_offset 7, -4
 4185 0002 83B0     		sub	sp, sp, #12
 4186              		.cfi_def_cfa_offset 16
 4187 0004 00AF     		add	r7, sp, #0
 4188              		.cfi_def_cfa_register 7
 4189 0006 7860     		str	r0, [r7, #4]
 4190 0008 3960     		str	r1, [r7]
1567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~USART_CTL0_REN;
 4191              		.loc 1 1567 29
 4192 000a 7B68     		ldr	r3, [r7, #4]
 4193 000c 1A68     		ldr	r2, [r3]
 4194 000e 7B68     		ldr	r3, [r7, #4]
 4195 0010 22F00402 		bic	r2, r2, #4
 4196 0014 1A60     		str	r2, [r3]
1568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure receiver mode */
1569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) |= rxconfig;
 4197              		.loc 1 1569 29
 4198 0016 7B68     		ldr	r3, [r7, #4]
 4199 0018 1968     		ldr	r1, [r3]
 4200 001a 7B68     		ldr	r3, [r7, #4]
 4201 001c 3A68     		ldr	r2, [r7]
 4202 001e 0A43     		orrs	r2, r2, r1
 4203 0020 1A60     		str	r2, [r3]
1570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4204              		.loc 1 1570 1
 4205 0022 00BF     		nop
 4206 0024 0C37     		adds	r7, r7, #12
 4207              		.cfi_def_cfa_offset 4
 4208 0026 BD46     		mov	sp, r7
 4209              		.cfi_def_cfa_register 13
 4210              		@ sp needed
 4211 0028 80BC     		pop	{r7}
 4212              		.cfi_restore 7
 4213              		.cfi_def_cfa_offset 0
 4214 002a 7047     		bx	lr
 4215              		.cfi_endproc
 4216              	.LFE145:
 4218              		.section	.text.hals_usrt_data_first_config,"ax",%progbits
 4219              		.align	1
 4220              		.global	hals_usrt_data_first_config
 4221              		.syntax unified
 4222              		.thumb
 4223              		.thumb_func
 4224              		.fpu softvfp
 4226              	hals_usrt_data_first_config:
 4227              	.LFB146:
1571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      data is transmitted/received with the LSB/MSB first
1574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  msbf: LSB/MSB
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_MSBF_LSB: LSB first
1578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_MSBF_MSB: MSB first
1579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_data_first_config(uint32_t usrt_periph, uint32_t msbf)
1583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4228              		.loc 1 1583 1
 4229              		.cfi_startproc
 4230              		@ args = 0, pretend = 0, frame = 8
 4231              		@ frame_needed = 1, uses_anonymous_args = 0
 4232              		@ link register save eliminated.
 4233 0000 80B4     		push	{r7}
 4234              		.cfi_def_cfa_offset 4
 4235              		.cfi_offset 7, -4
 4236 0002 83B0     		sub	sp, sp, #12
 4237              		.cfi_def_cfa_offset 16
 4238 0004 00AF     		add	r7, sp, #0
 4239              		.cfi_def_cfa_register 7
 4240 0006 7860     		str	r0, [r7, #4]
 4241 0008 3960     		str	r1, [r7]
1584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4242              		.loc 1 1584 29
 4243 000a 7B68     		ldr	r3, [r7, #4]
 4244 000c 1A68     		ldr	r2, [r3]
 4245 000e 7B68     		ldr	r3, [r7, #4]
 4246 0010 22F00102 		bic	r2, r2, #1
 4247 0014 1A60     		str	r2, [r3]
1585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* configure LSB or MSB first */
1586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) &= ~(USART_CTL1_MSBF);
 4248              		.loc 1 1586 29
 4249 0016 7B68     		ldr	r3, [r7, #4]
 4250 0018 0433     		adds	r3, r3, #4
 4251 001a 1B68     		ldr	r3, [r3]
 4252 001c 7A68     		ldr	r2, [r7, #4]
 4253 001e 0432     		adds	r2, r2, #4
 4254 0020 23F40023 		bic	r3, r3, #524288
 4255 0024 1360     		str	r3, [r2]
1587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) |= msbf;
 4256              		.loc 1 1587 29
 4257 0026 7B68     		ldr	r3, [r7, #4]
 4258 0028 0433     		adds	r3, r3, #4
 4259 002a 1A68     		ldr	r2, [r3]
 4260 002c 7B68     		ldr	r3, [r7, #4]
 4261 002e 0433     		adds	r3, r3, #4
 4262 0030 1946     		mov	r1, r3
 4263 0032 3B68     		ldr	r3, [r7]
 4264 0034 1343     		orrs	r3, r3, r2
 4265 0036 0B60     		str	r3, [r1]
1588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4266              		.loc 1 1588 1
 4267 0038 00BF     		nop
 4268 003a 0C37     		adds	r7, r7, #12
 4269              		.cfi_def_cfa_offset 4
 4270 003c BD46     		mov	sp, r7
 4271              		.cfi_def_cfa_register 13
 4272              		@ sp needed
 4273 003e 80BC     		pop	{r7}
 4274              		.cfi_restore 7
 4275              		.cfi_def_cfa_offset 0
 4276 0040 7047     		bx	lr
 4277              		.cfi_endproc
 4278              	.LFE146:
 4280              		.section	.text.hals_usrt_invert_config,"ax",%progbits
 4281              		.align	1
 4282              		.global	hals_usrt_invert_config
 4283              		.syntax unified
 4284              		.thumb
 4285              		.thumb_func
 4286              		.fpu softvfp
 4288              	hals_usrt_invert_config:
 4289              	.LFB147:
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT inversion
1592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  invertpara: refer to usart_invert_enum
1594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_DINV_ENABLE: data bit level inversion
1596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_DINV_DISABLE: data bit level not inversion
1597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_TXPIN_ENABLE: TX pin level inversion
1598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_TXPIN_DISABLE: TX pin level not inversion
1599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_RXPIN_ENABLE: RX pin level inversion
1600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_RXPIN_DISABLE: RX pin level not inversion
1601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_SWAP_ENABLE: swap TX/RX pins
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_SWAP_DISABLE: not swap TX/RX pins
1603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_invert_config(uint32_t usrt_periph, usart_invert_enum invertpara)
1607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4290              		.loc 1 1607 1
 4291              		.cfi_startproc
 4292              		@ args = 0, pretend = 0, frame = 8
 4293              		@ frame_needed = 1, uses_anonymous_args = 0
 4294              		@ link register save eliminated.
 4295 0000 80B4     		push	{r7}
 4296              		.cfi_def_cfa_offset 4
 4297              		.cfi_offset 7, -4
 4298 0002 83B0     		sub	sp, sp, #12
 4299              		.cfi_def_cfa_offset 16
 4300 0004 00AF     		add	r7, sp, #0
 4301              		.cfi_def_cfa_register 7
 4302 0006 7860     		str	r0, [r7, #4]
 4303 0008 0B46     		mov	r3, r1
 4304 000a FB70     		strb	r3, [r7, #3]
1608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4305              		.loc 1 1608 29
 4306 000c 7B68     		ldr	r3, [r7, #4]
 4307 000e 1A68     		ldr	r2, [r3]
 4308 0010 7B68     		ldr	r3, [r7, #4]
 4309 0012 22F00102 		bic	r2, r2, #1
 4310 0016 1A60     		str	r2, [r3]
1609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* inverted or not the specified signal */
1610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     switch(invertpara) {
 4311              		.loc 1 1610 5
 4312 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4313 001a 072B     		cmp	r3, #7
 4314 001c 5AD8     		bhi	.L216
 4315 001e 01A2     		adr	r2, .L207
 4316 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4317              		.p2align 2
 4318              	.L207:
 4319 0024 45000000 		.word	.L214+1
 4320 0028 57000000 		.word	.L213+1
 4321 002c 69000000 		.word	.L212+1
 4322 0030 7B000000 		.word	.L211+1
 4323 0034 8D000000 		.word	.L210+1
 4324 0038 9F000000 		.word	.L209+1
 4325 003c B1000000 		.word	.L208+1
 4326 0040 C3000000 		.word	.L206+1
 4327              		.p2align 1
 4328              	.L214:
1611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_DINV_ENABLE:
1612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) |= USART_CTL1_DINV;
 4329              		.loc 1 1612 33
 4330 0044 7B68     		ldr	r3, [r7, #4]
 4331 0046 0433     		adds	r3, r3, #4
 4332 0048 1B68     		ldr	r3, [r3]
 4333 004a 7A68     		ldr	r2, [r7, #4]
 4334 004c 0432     		adds	r2, r2, #4
 4335 004e 43F48023 		orr	r3, r3, #262144
 4336 0052 1360     		str	r3, [r2]
1613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4337              		.loc 1 1613 9
 4338 0054 3FE0     		b	.L215
 4339              	.L213:
1614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_DINV_DISABLE:
1615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) &= ~(USART_CTL1_DINV);
 4340              		.loc 1 1615 33
 4341 0056 7B68     		ldr	r3, [r7, #4]
 4342 0058 0433     		adds	r3, r3, #4
 4343 005a 1B68     		ldr	r3, [r3]
 4344 005c 7A68     		ldr	r2, [r7, #4]
 4345 005e 0432     		adds	r2, r2, #4
 4346 0060 23F48023 		bic	r3, r3, #262144
 4347 0064 1360     		str	r3, [r2]
1616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4348              		.loc 1 1616 9
 4349 0066 36E0     		b	.L215
 4350              	.L212:
1617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_TXPIN_ENABLE:
1618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) |= USART_CTL1_TINV;
 4351              		.loc 1 1618 33
 4352 0068 7B68     		ldr	r3, [r7, #4]
 4353 006a 0433     		adds	r3, r3, #4
 4354 006c 1B68     		ldr	r3, [r3]
 4355 006e 7A68     		ldr	r2, [r7, #4]
 4356 0070 0432     		adds	r2, r2, #4
 4357 0072 43F40033 		orr	r3, r3, #131072
 4358 0076 1360     		str	r3, [r2]
1619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4359              		.loc 1 1619 9
 4360 0078 2DE0     		b	.L215
 4361              	.L211:
1620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_TXPIN_DISABLE:
1621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) &= ~(USART_CTL1_TINV);
 4362              		.loc 1 1621 33
 4363 007a 7B68     		ldr	r3, [r7, #4]
 4364 007c 0433     		adds	r3, r3, #4
 4365 007e 1B68     		ldr	r3, [r3]
 4366 0080 7A68     		ldr	r2, [r7, #4]
 4367 0082 0432     		adds	r2, r2, #4
 4368 0084 23F40033 		bic	r3, r3, #131072
 4369 0088 1360     		str	r3, [r2]
1622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4370              		.loc 1 1622 9
 4371 008a 24E0     		b	.L215
 4372              	.L210:
1623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_RXPIN_ENABLE:
1624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) |= USART_CTL1_RINV;
 4373              		.loc 1 1624 33
 4374 008c 7B68     		ldr	r3, [r7, #4]
 4375 008e 0433     		adds	r3, r3, #4
 4376 0090 1B68     		ldr	r3, [r3]
 4377 0092 7A68     		ldr	r2, [r7, #4]
 4378 0094 0432     		adds	r2, r2, #4
 4379 0096 43F48033 		orr	r3, r3, #65536
 4380 009a 1360     		str	r3, [r2]
1625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4381              		.loc 1 1625 9
 4382 009c 1BE0     		b	.L215
 4383              	.L209:
1626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_RXPIN_DISABLE:
1627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) &= ~(USART_CTL1_RINV);
 4384              		.loc 1 1627 33
 4385 009e 7B68     		ldr	r3, [r7, #4]
 4386 00a0 0433     		adds	r3, r3, #4
 4387 00a2 1B68     		ldr	r3, [r3]
 4388 00a4 7A68     		ldr	r2, [r7, #4]
 4389 00a6 0432     		adds	r2, r2, #4
 4390 00a8 23F48033 		bic	r3, r3, #65536
 4391 00ac 1360     		str	r3, [r2]
1628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4392              		.loc 1 1628 9
 4393 00ae 12E0     		b	.L215
 4394              	.L208:
1629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_SWAP_ENABLE:
1630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) |= USART_CTL1_STRP;
 4395              		.loc 1 1630 33
 4396 00b0 7B68     		ldr	r3, [r7, #4]
 4397 00b2 0433     		adds	r3, r3, #4
 4398 00b4 1B68     		ldr	r3, [r3]
 4399 00b6 7A68     		ldr	r2, [r7, #4]
 4400 00b8 0432     		adds	r2, r2, #4
 4401 00ba 43F40043 		orr	r3, r3, #32768
 4402 00be 1360     		str	r3, [r2]
1631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4403              		.loc 1 1631 9
 4404 00c0 09E0     		b	.L215
 4405              	.L206:
1632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     case USART_SWAP_DISABLE:
1633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_CTL1(usrt_periph) &= ~(USART_CTL1_STRP);
 4406              		.loc 1 1633 33
 4407 00c2 7B68     		ldr	r3, [r7, #4]
 4408 00c4 0433     		adds	r3, r3, #4
 4409 00c6 1B68     		ldr	r3, [r3]
 4410 00c8 7A68     		ldr	r2, [r7, #4]
 4411 00ca 0432     		adds	r2, r2, #4
 4412 00cc 23F40043 		bic	r3, r3, #32768
 4413 00d0 1360     		str	r3, [r2]
1634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4414              		.loc 1 1634 9
 4415 00d2 00E0     		b	.L215
 4416              	.L216:
1635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     default:
1636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         break;
 4417              		.loc 1 1636 9
 4418 00d4 00BF     		nop
 4419              	.L215:
1637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4420              		.loc 1 1638 1
 4421 00d6 00BF     		nop
 4422 00d8 0C37     		adds	r7, r7, #12
 4423              		.cfi_def_cfa_offset 4
 4424 00da BD46     		mov	sp, r7
 4425              		.cfi_def_cfa_register 13
 4426              		@ sp needed
 4427 00dc 80BC     		pop	{r7}
 4428              		.cfi_restore 7
 4429              		.cfi_def_cfa_offset 0
 4430 00de 7047     		bx	lr
 4431              		.cfi_endproc
 4432              	.LFE147:
 4434              		.section	.text.hals_usrt_overrun_enable,"ax",%progbits
 4435              		.align	1
 4436              		.global	hals_usrt_overrun_enable
 4437              		.syntax unified
 4438              		.thumb
 4439              		.thumb_func
 4440              		.fpu softvfp
 4442              	hals_usrt_overrun_enable:
 4443              	.LFB148:
1639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable the USRT overrun function
1642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_overrun_enable(uint32_t usrt_periph)
1647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4444              		.loc 1 1647 1
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 8
 4447              		@ frame_needed = 1, uses_anonymous_args = 0
 4448              		@ link register save eliminated.
 4449 0000 80B4     		push	{r7}
 4450              		.cfi_def_cfa_offset 4
 4451              		.cfi_offset 7, -4
 4452 0002 83B0     		sub	sp, sp, #12
 4453              		.cfi_def_cfa_offset 16
 4454 0004 00AF     		add	r7, sp, #0
 4455              		.cfi_def_cfa_register 7
 4456 0006 7860     		str	r0, [r7, #4]
1648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4457              		.loc 1 1648 29
 4458 0008 7B68     		ldr	r3, [r7, #4]
 4459 000a 1A68     		ldr	r2, [r3]
 4460 000c 7B68     		ldr	r3, [r7, #4]
 4461 000e 22F00102 		bic	r2, r2, #1
 4462 0012 1A60     		str	r2, [r3]
1649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* enable overrun function */
1650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) &= ~(USART_CTL2_OVRD);
 4463              		.loc 1 1650 29
 4464 0014 7B68     		ldr	r3, [r7, #4]
 4465 0016 0833     		adds	r3, r3, #8
 4466 0018 1B68     		ldr	r3, [r3]
 4467 001a 7A68     		ldr	r2, [r7, #4]
 4468 001c 0832     		adds	r2, r2, #8
 4469 001e 23F48053 		bic	r3, r3, #4096
 4470 0022 1360     		str	r3, [r2]
1651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4471              		.loc 1 1651 1
 4472 0024 00BF     		nop
 4473 0026 0C37     		adds	r7, r7, #12
 4474              		.cfi_def_cfa_offset 4
 4475 0028 BD46     		mov	sp, r7
 4476              		.cfi_def_cfa_register 13
 4477              		@ sp needed
 4478 002a 80BC     		pop	{r7}
 4479              		.cfi_restore 7
 4480              		.cfi_def_cfa_offset 0
 4481 002c 7047     		bx	lr
 4482              		.cfi_endproc
 4483              	.LFE148:
 4485              		.section	.text.hals_usrt_overrun_disable,"ax",%progbits
 4486              		.align	1
 4487              		.global	hals_usrt_overrun_disable
 4488              		.syntax unified
 4489              		.thumb
 4490              		.thumb_func
 4491              		.fpu softvfp
 4493              	hals_usrt_overrun_disable:
 4494              	.LFB149:
1652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      disable the USRT overrun function
1655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_overrun_disable(uint32_t usrt_periph)
1660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4495              		.loc 1 1660 1
 4496              		.cfi_startproc
 4497              		@ args = 0, pretend = 0, frame = 8
 4498              		@ frame_needed = 1, uses_anonymous_args = 0
 4499              		@ link register save eliminated.
 4500 0000 80B4     		push	{r7}
 4501              		.cfi_def_cfa_offset 4
 4502              		.cfi_offset 7, -4
 4503 0002 83B0     		sub	sp, sp, #12
 4504              		.cfi_def_cfa_offset 16
 4505 0004 00AF     		add	r7, sp, #0
 4506              		.cfi_def_cfa_register 7
 4507 0006 7860     		str	r0, [r7, #4]
1661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4508              		.loc 1 1661 29
 4509 0008 7B68     		ldr	r3, [r7, #4]
 4510 000a 1A68     		ldr	r2, [r3]
 4511 000c 7B68     		ldr	r3, [r7, #4]
 4512 000e 22F00102 		bic	r2, r2, #1
 4513 0012 1A60     		str	r2, [r3]
1662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable overrun function */
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) |= USART_CTL2_OVRD;
 4514              		.loc 1 1663 29
 4515 0014 7B68     		ldr	r3, [r7, #4]
 4516 0016 0833     		adds	r3, r3, #8
 4517 0018 1B68     		ldr	r3, [r3]
 4518 001a 7A68     		ldr	r2, [r7, #4]
 4519 001c 0832     		adds	r2, r2, #8
 4520 001e 43F48053 		orr	r3, r3, #4096
 4521 0022 1360     		str	r3, [r2]
1664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4522              		.loc 1 1664 1
 4523 0024 00BF     		nop
 4524 0026 0C37     		adds	r7, r7, #12
 4525              		.cfi_def_cfa_offset 4
 4526 0028 BD46     		mov	sp, r7
 4527              		.cfi_def_cfa_register 13
 4528              		@ sp needed
 4529 002a 80BC     		pop	{r7}
 4530              		.cfi_restore 7
 4531              		.cfi_def_cfa_offset 0
 4532 002c 7047     		bx	lr
 4533              		.cfi_endproc
 4534              	.LFE149:
 4536              		.section	.text.hals_usrt_oversample_config,"ax",%progbits
 4537              		.align	1
 4538              		.global	hals_usrt_oversample_config
 4539              		.syntax unified
 4540              		.thumb
 4541              		.thumb_func
 4542              		.fpu softvfp
 4544              	hals_usrt_oversample_config:
 4545              	.LFB150:
1665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure the USRT oversample mode
1668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  oversamp: oversample value
1670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_OVSMOD_8: oversampling by 8
1672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_OVSMOD_16: oversampling by 16
1673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_oversample_config(uint32_t usrt_periph, uint32_t oversamp)
1677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4546              		.loc 1 1677 1
 4547              		.cfi_startproc
 4548              		@ args = 0, pretend = 0, frame = 8
 4549              		@ frame_needed = 1, uses_anonymous_args = 0
 4550              		@ link register save eliminated.
 4551 0000 80B4     		push	{r7}
 4552              		.cfi_def_cfa_offset 4
 4553              		.cfi_offset 7, -4
 4554 0002 83B0     		sub	sp, sp, #12
 4555              		.cfi_def_cfa_offset 16
 4556 0004 00AF     		add	r7, sp, #0
 4557              		.cfi_def_cfa_register 7
 4558 0006 7860     		str	r0, [r7, #4]
 4559 0008 3960     		str	r1, [r7]
1678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4560              		.loc 1 1679 29
 4561 000a 7B68     		ldr	r3, [r7, #4]
 4562 000c 1A68     		ldr	r2, [r3]
 4563 000e 7B68     		ldr	r3, [r7, #4]
 4564 0010 22F00102 		bic	r2, r2, #1
 4565 0014 1A60     		str	r2, [r3]
1680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* clear OVSMOD bit */
1681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_OVSMOD);
 4566              		.loc 1 1681 29
 4567 0016 7B68     		ldr	r3, [r7, #4]
 4568 0018 1A68     		ldr	r2, [r3]
 4569 001a 7B68     		ldr	r3, [r7, #4]
 4570 001c 22F40042 		bic	r2, r2, #32768
 4571 0020 1A60     		str	r2, [r3]
1682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) |= oversamp;
 4572              		.loc 1 1682 29
 4573 0022 7B68     		ldr	r3, [r7, #4]
 4574 0024 1968     		ldr	r1, [r3]
 4575 0026 7B68     		ldr	r3, [r7, #4]
 4576 0028 3A68     		ldr	r2, [r7]
 4577 002a 0A43     		orrs	r2, r2, r1
 4578 002c 1A60     		str	r2, [r3]
1683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4579              		.loc 1 1683 1
 4580 002e 00BF     		nop
 4581 0030 0C37     		adds	r7, r7, #12
 4582              		.cfi_def_cfa_offset 4
 4583 0032 BD46     		mov	sp, r7
 4584              		.cfi_def_cfa_register 13
 4585              		@ sp needed
 4586 0034 80BC     		pop	{r7}
 4587              		.cfi_restore 7
 4588              		.cfi_def_cfa_offset 0
 4589 0036 7047     		bx	lr
 4590              		.cfi_endproc
 4591              	.LFE150:
 4593              		.section	.text.hals_usrt_sample_bit_config,"ax",%progbits
 4594              		.align	1
 4595              		.global	hals_usrt_sample_bit_config
 4596              		.syntax unified
 4597              		.thumb
 4598              		.thumb_func
 4599              		.fpu softvfp
 4601              	hals_usrt_sample_bit_config:
 4602              	.LFB151:
1684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure the sample bit method
1687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  osb: sample bit
1689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_OSB_1BIT: 1 bit
1691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_OSB_3BIT: 3 bits
1692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_sample_bit_config(uint32_t usrt_periph, uint32_t osb)
1696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4603              		.loc 1 1696 1
 4604              		.cfi_startproc
 4605              		@ args = 0, pretend = 0, frame = 8
 4606              		@ frame_needed = 1, uses_anonymous_args = 0
 4607              		@ link register save eliminated.
 4608 0000 80B4     		push	{r7}
 4609              		.cfi_def_cfa_offset 4
 4610              		.cfi_offset 7, -4
 4611 0002 83B0     		sub	sp, sp, #12
 4612              		.cfi_def_cfa_offset 16
 4613 0004 00AF     		add	r7, sp, #0
 4614              		.cfi_def_cfa_register 7
 4615 0006 7860     		str	r0, [r7, #4]
 4616 0008 3960     		str	r1, [r7]
1697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4617              		.loc 1 1698 29
 4618 000a 7B68     		ldr	r3, [r7, #4]
 4619 000c 1A68     		ldr	r2, [r3]
 4620 000e 7B68     		ldr	r3, [r7, #4]
 4621 0010 22F00102 		bic	r2, r2, #1
 4622 0014 1A60     		str	r2, [r3]
1699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) &= ~(USART_CTL2_OSB);
 4623              		.loc 1 1700 29
 4624 0016 7B68     		ldr	r3, [r7, #4]
 4625 0018 0833     		adds	r3, r3, #8
 4626 001a 1B68     		ldr	r3, [r3]
 4627 001c 7A68     		ldr	r2, [r7, #4]
 4628 001e 0832     		adds	r2, r2, #8
 4629 0020 23F40063 		bic	r3, r3, #2048
 4630 0024 1360     		str	r3, [r2]
1701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) |= osb;
 4631              		.loc 1 1701 29
 4632 0026 7B68     		ldr	r3, [r7, #4]
 4633 0028 0833     		adds	r3, r3, #8
 4634 002a 1A68     		ldr	r2, [r3]
 4635 002c 7B68     		ldr	r3, [r7, #4]
 4636 002e 0833     		adds	r3, r3, #8
 4637 0030 1946     		mov	r1, r3
 4638 0032 3B68     		ldr	r3, [r7]
 4639 0034 1343     		orrs	r3, r3, r2
 4640 0036 0B60     		str	r3, [r1]
1702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4641              		.loc 1 1702 1
 4642 0038 00BF     		nop
 4643 003a 0C37     		adds	r7, r7, #12
 4644              		.cfi_def_cfa_offset 4
 4645 003c BD46     		mov	sp, r7
 4646              		.cfi_def_cfa_register 13
 4647              		@ sp needed
 4648 003e 80BC     		pop	{r7}
 4649              		.cfi_restore 7
 4650              		.cfi_def_cfa_offset 0
 4651 0040 7047     		bx	lr
 4652              		.cfi_endproc
 4653              	.LFE151:
 4655              		.section	.text.hals_usrt_data_transmit,"ax",%progbits
 4656              		.align	1
 4657              		.global	hals_usrt_data_transmit
 4658              		.syntax unified
 4659              		.thumb
 4660              		.thumb_func
 4661              		.fpu softvfp
 4663              	hals_usrt_data_transmit:
 4664              	.LFB152:
1703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      USRT transmit data function
1707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  data: data of transmission
1709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_data_transmit(uint32_t usrt_periph, uint16_t data)
1713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4665              		.loc 1 1713 1
 4666              		.cfi_startproc
 4667              		@ args = 0, pretend = 0, frame = 8
 4668              		@ frame_needed = 1, uses_anonymous_args = 0
 4669              		@ link register save eliminated.
 4670 0000 80B4     		push	{r7}
 4671              		.cfi_def_cfa_offset 4
 4672              		.cfi_offset 7, -4
 4673 0002 83B0     		sub	sp, sp, #12
 4674              		.cfi_def_cfa_offset 16
 4675 0004 00AF     		add	r7, sp, #0
 4676              		.cfi_def_cfa_register 7
 4677 0006 7860     		str	r0, [r7, #4]
 4678 0008 0B46     		mov	r3, r1
 4679 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_TDATA(usrt_periph) = (USART_TDATA_TDATA & (uint32_t)data);
 4680              		.loc 1 1714 51
 4681 000c 7B88     		ldrh	r3, [r7, #2]
 4682              		.loc 1 1714 5
 4683 000e 7A68     		ldr	r2, [r7, #4]
 4684 0010 2832     		adds	r2, r2, #40
 4685              		.loc 1 1714 51
 4686 0012 C3F30803 		ubfx	r3, r3, #0, #9
 4687              		.loc 1 1714 30
 4688 0016 1360     		str	r3, [r2]
1715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4689              		.loc 1 1715 1
 4690 0018 00BF     		nop
 4691 001a 0C37     		adds	r7, r7, #12
 4692              		.cfi_def_cfa_offset 4
 4693 001c BD46     		mov	sp, r7
 4694              		.cfi_def_cfa_register 13
 4695              		@ sp needed
 4696 001e 80BC     		pop	{r7}
 4697              		.cfi_restore 7
 4698              		.cfi_def_cfa_offset 0
 4699 0020 7047     		bx	lr
 4700              		.cfi_endproc
 4701              	.LFE152:
 4703              		.section	.text.hals_usrt_data_receive,"ax",%progbits
 4704              		.align	1
 4705              		.global	hals_usrt_data_receive
 4706              		.syntax unified
 4707              		.thumb
 4708              		.thumb_func
 4709              		.fpu softvfp
 4711              	hals_usrt_data_receive:
 4712              	.LFB153:
1716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      USRT receive data function
1719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     data of received
1722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** uint16_t hals_usrt_data_receive(uint32_t usrt_periph)
1724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4713              		.loc 1 1724 1
 4714              		.cfi_startproc
 4715              		@ args = 0, pretend = 0, frame = 8
 4716              		@ frame_needed = 1, uses_anonymous_args = 0
 4717              		@ link register save eliminated.
 4718 0000 80B4     		push	{r7}
 4719              		.cfi_def_cfa_offset 4
 4720              		.cfi_offset 7, -4
 4721 0002 83B0     		sub	sp, sp, #12
 4722              		.cfi_def_cfa_offset 16
 4723 0004 00AF     		add	r7, sp, #0
 4724              		.cfi_def_cfa_register 7
 4725 0006 7860     		str	r0, [r7, #4]
1725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return (uint16_t)(GET_BITS(USART_RDATA(usrt_periph), 0U, 8U));
 4726              		.loc 1 1725 23
 4727 0008 7B68     		ldr	r3, [r7, #4]
 4728 000a 2433     		adds	r3, r3, #36
 4729 000c 1B68     		ldr	r3, [r3]
 4730              		.loc 1 1725 12
 4731 000e 9BB2     		uxth	r3, r3
 4732 0010 C3F30803 		ubfx	r3, r3, #0, #9
 4733 0014 9BB2     		uxth	r3, r3
1726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4734              		.loc 1 1726 1
 4735 0016 1846     		mov	r0, r3
 4736 0018 0C37     		adds	r7, r7, #12
 4737              		.cfi_def_cfa_offset 4
 4738 001a BD46     		mov	sp, r7
 4739              		.cfi_def_cfa_register 13
 4740              		@ sp needed
 4741 001c 80BC     		pop	{r7}
 4742              		.cfi_restore 7
 4743              		.cfi_def_cfa_offset 0
 4744 001e 7047     		bx	lr
 4745              		.cfi_endproc
 4746              	.LFE153:
 4748              		.section	.text.hals_usrt_command_enable,"ax",%progbits
 4749              		.align	1
 4750              		.global	hals_usrt_command_enable
 4751              		.syntax unified
 4752              		.thumb
 4753              		.thumb_func
 4754              		.fpu softvfp
 4756              	hals_usrt_command_enable:
 4757              	.LFB154:
1727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable USRT command
1730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1,2)
1731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  cmdtype: command type
1732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CMD_SBKCMD: send break command
1734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CMD_MMCMD: mute mode command
1735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CMD_RXFCMD: receive data flush command
1736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CMD_TXFCMD: transmit data flush request
1737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_command_enable(uint32_t usrt_periph, uint32_t cmdtype)
1741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4758              		.loc 1 1741 1
 4759              		.cfi_startproc
 4760              		@ args = 0, pretend = 0, frame = 8
 4761              		@ frame_needed = 1, uses_anonymous_args = 0
 4762              		@ link register save eliminated.
 4763 0000 80B4     		push	{r7}
 4764              		.cfi_def_cfa_offset 4
 4765              		.cfi_offset 7, -4
 4766 0002 83B0     		sub	sp, sp, #12
 4767              		.cfi_def_cfa_offset 16
 4768 0004 00AF     		add	r7, sp, #0
 4769              		.cfi_def_cfa_register 7
 4770 0006 7860     		str	r0, [r7, #4]
 4771 0008 3960     		str	r1, [r7]
1742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CMD(usrt_periph) |= (cmdtype);
 4772              		.loc 1 1742 28
 4773 000a 7B68     		ldr	r3, [r7, #4]
 4774 000c 1833     		adds	r3, r3, #24
 4775 000e 1A68     		ldr	r2, [r3]
 4776 0010 7B68     		ldr	r3, [r7, #4]
 4777 0012 1833     		adds	r3, r3, #24
 4778 0014 1946     		mov	r1, r3
 4779 0016 3B68     		ldr	r3, [r7]
 4780 0018 1343     		orrs	r3, r3, r2
 4781 001a 0B60     		str	r3, [r1]
1743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4782              		.loc 1 1743 1
 4783 001c 00BF     		nop
 4784 001e 0C37     		adds	r7, r7, #12
 4785              		.cfi_def_cfa_offset 4
 4786 0020 BD46     		mov	sp, r7
 4787              		.cfi_def_cfa_register 13
 4788              		@ sp needed
 4789 0022 80BC     		pop	{r7}
 4790              		.cfi_restore 7
 4791              		.cfi_def_cfa_offset 0
 4792 0024 7047     		bx	lr
 4793              		.cfi_endproc
 4794              	.LFE154:
 4796              		.section	.text.hals_usrt_clock_enable,"ax",%progbits
 4797              		.align	1
 4798              		.global	hals_usrt_clock_enable
 4799              		.syntax unified
 4800              		.thumb
 4801              		.thumb_func
 4802              		.fpu softvfp
 4804              	hals_usrt_clock_enable:
 4805              	.LFB155:
1744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable USRT clock
1747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0)
1748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_clock_enable(uint32_t usrt_periph)
1752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4806              		.loc 1 1752 1
 4807              		.cfi_startproc
 4808              		@ args = 0, pretend = 0, frame = 8
 4809              		@ frame_needed = 1, uses_anonymous_args = 0
 4810              		@ link register save eliminated.
 4811 0000 80B4     		push	{r7}
 4812              		.cfi_def_cfa_offset 4
 4813              		.cfi_offset 7, -4
 4814 0002 83B0     		sub	sp, sp, #12
 4815              		.cfi_def_cfa_offset 16
 4816 0004 00AF     		add	r7, sp, #0
 4817              		.cfi_def_cfa_register 7
 4818 0006 7860     		str	r0, [r7, #4]
1753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4819              		.loc 1 1754 29
 4820 0008 7B68     		ldr	r3, [r7, #4]
 4821 000a 1A68     		ldr	r2, [r3]
 4822 000c 7B68     		ldr	r3, [r7, #4]
 4823 000e 22F00102 		bic	r2, r2, #1
 4824 0012 1A60     		str	r2, [r3]
1755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) |= USART_CTL1_CKEN;
 4825              		.loc 1 1756 29
 4826 0014 7B68     		ldr	r3, [r7, #4]
 4827 0016 0433     		adds	r3, r3, #4
 4828 0018 1B68     		ldr	r3, [r3]
 4829 001a 7A68     		ldr	r2, [r7, #4]
 4830 001c 0432     		adds	r2, r2, #4
 4831 001e 43F40063 		orr	r3, r3, #2048
 4832 0022 1360     		str	r3, [r2]
1757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4833              		.loc 1 1757 1
 4834 0024 00BF     		nop
 4835 0026 0C37     		adds	r7, r7, #12
 4836              		.cfi_def_cfa_offset 4
 4837 0028 BD46     		mov	sp, r7
 4838              		.cfi_def_cfa_register 13
 4839              		@ sp needed
 4840 002a 80BC     		pop	{r7}
 4841              		.cfi_restore 7
 4842              		.cfi_def_cfa_offset 0
 4843 002c 7047     		bx	lr
 4844              		.cfi_endproc
 4845              	.LFE155:
 4847              		.section	.text.hals_usrt_clock_disable,"ax",%progbits
 4848              		.align	1
 4849              		.global	hals_usrt_clock_disable
 4850              		.syntax unified
 4851              		.thumb
 4852              		.thumb_func
 4853              		.fpu softvfp
 4855              	hals_usrt_clock_disable:
 4856              	.LFB156:
1758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      disable USRT clock
1761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0)
1762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_clock_disable(uint32_t usrt_periph)
1766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4857              		.loc 1 1766 1
 4858              		.cfi_startproc
 4859              		@ args = 0, pretend = 0, frame = 8
 4860              		@ frame_needed = 1, uses_anonymous_args = 0
 4861              		@ link register save eliminated.
 4862 0000 80B4     		push	{r7}
 4863              		.cfi_def_cfa_offset 4
 4864              		.cfi_offset 7, -4
 4865 0002 83B0     		sub	sp, sp, #12
 4866              		.cfi_def_cfa_offset 16
 4867 0004 00AF     		add	r7, sp, #0
 4868              		.cfi_def_cfa_register 7
 4869 0006 7860     		str	r0, [r7, #4]
1767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4870              		.loc 1 1768 29
 4871 0008 7B68     		ldr	r3, [r7, #4]
 4872 000a 1A68     		ldr	r2, [r3]
 4873 000c 7B68     		ldr	r3, [r7, #4]
 4874 000e 22F00102 		bic	r2, r2, #1
 4875 0012 1A60     		str	r2, [r3]
1769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) &= ~(USART_CTL1_CKEN);
 4876              		.loc 1 1770 29
 4877 0014 7B68     		ldr	r3, [r7, #4]
 4878 0016 0433     		adds	r3, r3, #4
 4879 0018 1B68     		ldr	r3, [r3]
 4880 001a 7A68     		ldr	r2, [r7, #4]
 4881 001c 0432     		adds	r2, r2, #4
 4882 001e 23F40063 		bic	r3, r3, #2048
 4883 0022 1360     		str	r3, [r2]
1771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4884              		.loc 1 1771 1
 4885 0024 00BF     		nop
 4886 0026 0C37     		adds	r7, r7, #12
 4887              		.cfi_def_cfa_offset 4
 4888 0028 BD46     		mov	sp, r7
 4889              		.cfi_def_cfa_register 13
 4890              		@ sp needed
 4891 002a 80BC     		pop	{r7}
 4892              		.cfi_restore 7
 4893              		.cfi_def_cfa_offset 0
 4894 002c 7047     		bx	lr
 4895              		.cfi_endproc
 4896              	.LFE156:
 4898              		.section	.text.hals_usrt_synchronous_clock_config,"ax",%progbits
 4899              		.align	1
 4900              		.global	hals_usrt_synchronous_clock_config
 4901              		.syntax unified
 4902              		.thumb
 4903              		.thumb_func
 4904              		.fpu softvfp
 4906              	hals_usrt_synchronous_clock_config:
 4907              	.LFB157:
1772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USART synchronous mode parameters
1775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usart_periph: USARTx(x=0,1)
1776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  clen: last bit clock pulse
1777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CLEN_NONE: clock pulse of the last data bit (MSB) is not output to the CK p
1779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CLEN_EN: clock pulse of the last data bit (MSB) is output to the CK pin
1780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  cph: clock phase
1781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CPH_1CK: first clock transition is the first data capture edge
1783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CPH_2CK: second clock transition is the first data capture edge
1784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  cpl: clock polarity
1785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CPL_LOW: steady low value on CK pin
1787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_CPL_HIGH: steady high value on CK pin
1788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_synchronous_clock_config(uint32_t usrt_periph, uint32_t clen, uint32_t cph, uint32_t
1792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4908              		.loc 1 1792 1
 4909              		.cfi_startproc
 4910              		@ args = 0, pretend = 0, frame = 16
 4911              		@ frame_needed = 1, uses_anonymous_args = 0
 4912              		@ link register save eliminated.
 4913 0000 80B4     		push	{r7}
 4914              		.cfi_def_cfa_offset 4
 4915              		.cfi_offset 7, -4
 4916 0002 85B0     		sub	sp, sp, #20
 4917              		.cfi_def_cfa_offset 24
 4918 0004 00AF     		add	r7, sp, #0
 4919              		.cfi_def_cfa_register 7
 4920 0006 F860     		str	r0, [r7, #12]
 4921 0008 B960     		str	r1, [r7, #8]
 4922 000a 7A60     		str	r2, [r7, #4]
 4923 000c 3B60     		str	r3, [r7]
1793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USART */
1794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 4924              		.loc 1 1794 29
 4925 000e FB68     		ldr	r3, [r7, #12]
 4926 0010 1A68     		ldr	r2, [r3]
 4927 0012 FB68     		ldr	r3, [r7, #12]
 4928 0014 22F00102 		bic	r2, r2, #1
 4929 0018 1A60     		str	r2, [r3]
1795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* reset USART_CTL1 CLEN,CPH,CPL bits */
1796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) &= ~(USART_CTL1_CLEN | USART_CTL1_CPH | USART_CTL1_CPL);
 4930              		.loc 1 1796 29
 4931 001a FB68     		ldr	r3, [r7, #12]
 4932 001c 0433     		adds	r3, r3, #4
 4933 001e 1B68     		ldr	r3, [r3]
 4934 0020 FA68     		ldr	r2, [r7, #12]
 4935 0022 0432     		adds	r2, r2, #4
 4936 0024 23F4E063 		bic	r3, r3, #1792
 4937 0028 1360     		str	r3, [r2]
1797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) |= (USART_CTL1_CLEN & clen);
 4938              		.loc 1 1798 29
 4939 002a FB68     		ldr	r3, [r7, #12]
 4940 002c 0433     		adds	r3, r3, #4
 4941 002e 1A68     		ldr	r2, [r3]
 4942              		.loc 1 1798 49
 4943 0030 BB68     		ldr	r3, [r7, #8]
 4944 0032 03F48073 		and	r3, r3, #256
 4945              		.loc 1 1798 29
 4946 0036 F968     		ldr	r1, [r7, #12]
 4947 0038 0431     		adds	r1, r1, #4
 4948 003a 1343     		orrs	r3, r3, r2
 4949 003c 0B60     		str	r3, [r1]
1799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) |= (USART_CTL1_CPH & cph);
 4950              		.loc 1 1799 29
 4951 003e FB68     		ldr	r3, [r7, #12]
 4952 0040 0433     		adds	r3, r3, #4
 4953 0042 1A68     		ldr	r2, [r3]
 4954              		.loc 1 1799 48
 4955 0044 7B68     		ldr	r3, [r7, #4]
 4956 0046 03F40073 		and	r3, r3, #512
 4957              		.loc 1 1799 29
 4958 004a F968     		ldr	r1, [r7, #12]
 4959 004c 0431     		adds	r1, r1, #4
 4960 004e 1343     		orrs	r3, r3, r2
 4961 0050 0B60     		str	r3, [r1]
1800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL1(usrt_periph) |= (USART_CTL1_CPL & cpl);
 4962              		.loc 1 1800 29
 4963 0052 FB68     		ldr	r3, [r7, #12]
 4964 0054 0433     		adds	r3, r3, #4
 4965 0056 1A68     		ldr	r2, [r3]
 4966              		.loc 1 1800 48
 4967 0058 3B68     		ldr	r3, [r7]
 4968 005a 03F48063 		and	r3, r3, #1024
 4969              		.loc 1 1800 29
 4970 005e F968     		ldr	r1, [r7, #12]
 4971 0060 0431     		adds	r1, r1, #4
 4972 0062 1343     		orrs	r3, r3, r2
 4973 0064 0B60     		str	r3, [r1]
1801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 4974              		.loc 1 1801 1
 4975 0066 00BF     		nop
 4976 0068 1437     		adds	r7, r7, #20
 4977              		.cfi_def_cfa_offset 4
 4978 006a BD46     		mov	sp, r7
 4979              		.cfi_def_cfa_register 13
 4980              		@ sp needed
 4981 006c 80BC     		pop	{r7}
 4982              		.cfi_restore 7
 4983              		.cfi_def_cfa_offset 0
 4984 006e 7047     		bx	lr
 4985              		.cfi_endproc
 4986              	.LFE157:
 4988              		.section	.text.hals_usrt_dma_receive_config,"ax",%progbits
 4989              		.align	1
 4990              		.global	hals_usrt_dma_receive_config
 4991              		.syntax unified
 4992              		.thumb
 4993              		.thumb_func
 4994              		.fpu softvfp
 4996              	hals_usrt_dma_receive_config:
 4997              	.LFB158:
1802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT DMA reception
1805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  dmacmd: USRT DMA mode
1807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_RECEIVE_DMA_ENABLE: enable USRT DMA for reception
1809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_RECEIVE_DMA_DISABLE: disable USRT DMA for reception
1810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_dma_receive_config(uint32_t usrt_periph, uint8_t dmacmd)
1814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 4998              		.loc 1 1814 1
 4999              		.cfi_startproc
 5000              		@ args = 0, pretend = 0, frame = 8
 5001              		@ frame_needed = 1, uses_anonymous_args = 0
 5002              		@ link register save eliminated.
 5003 0000 80B4     		push	{r7}
 5004              		.cfi_def_cfa_offset 4
 5005              		.cfi_offset 7, -4
 5006 0002 83B0     		sub	sp, sp, #12
 5007              		.cfi_def_cfa_offset 16
 5008 0004 00AF     		add	r7, sp, #0
 5009              		.cfi_def_cfa_register 7
 5010 0006 7860     		str	r0, [r7, #4]
 5011 0008 0B46     		mov	r3, r1
 5012 000a FB70     		strb	r3, [r7, #3]
1815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) &= ~USART_CTL2_DENR;
 5013              		.loc 1 1815 29
 5014 000c 7B68     		ldr	r3, [r7, #4]
 5015 000e 0833     		adds	r3, r3, #8
 5016 0010 1B68     		ldr	r3, [r3]
 5017 0012 7A68     		ldr	r2, [r7, #4]
 5018 0014 0832     		adds	r2, r2, #8
 5019 0016 23F04003 		bic	r3, r3, #64
 5020 001a 1360     		str	r3, [r2]
1816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) |= (USART_CTL2_DENR & dmacmd);
 5021              		.loc 1 1816 29
 5022 001c 7B68     		ldr	r3, [r7, #4]
 5023 001e 0833     		adds	r3, r3, #8
 5024 0020 1A68     		ldr	r2, [r3]
 5025              		.loc 1 1816 49
 5026 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5027 0024 03F04003 		and	r3, r3, #64
 5028              		.loc 1 1816 29
 5029 0028 7968     		ldr	r1, [r7, #4]
 5030 002a 0831     		adds	r1, r1, #8
 5031 002c 1343     		orrs	r3, r3, r2
 5032 002e 0B60     		str	r3, [r1]
1817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5033              		.loc 1 1817 1
 5034 0030 00BF     		nop
 5035 0032 0C37     		adds	r7, r7, #12
 5036              		.cfi_def_cfa_offset 4
 5037 0034 BD46     		mov	sp, r7
 5038              		.cfi_def_cfa_register 13
 5039              		@ sp needed
 5040 0036 80BC     		pop	{r7}
 5041              		.cfi_restore 7
 5042              		.cfi_def_cfa_offset 0
 5043 0038 7047     		bx	lr
 5044              		.cfi_endproc
 5045              	.LFE158:
 5047              		.section	.text.hals_usrt_dma_transmit_config,"ax",%progbits
 5048              		.align	1
 5049              		.global	hals_usrt_dma_transmit_config
 5050              		.syntax unified
 5051              		.thumb
 5052              		.thumb_func
 5053              		.fpu softvfp
 5055              	hals_usrt_dma_transmit_config:
 5056              	.LFB159:
1818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      configure USRT DMA transmission
1821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  dmacmd: USRT DMA mode
1823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_TRANSMIT_DMA_ENABLE: enable USRT DMA for transmission
1825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_TRANSMIT_DMA_DISABLE: disable USRT DMA for transmission
1826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_dma_transmit_config(uint32_t usrt_periph, uint8_t dmacmd)
1830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5057              		.loc 1 1830 1
 5058              		.cfi_startproc
 5059              		@ args = 0, pretend = 0, frame = 8
 5060              		@ frame_needed = 1, uses_anonymous_args = 0
 5061              		@ link register save eliminated.
 5062 0000 80B4     		push	{r7}
 5063              		.cfi_def_cfa_offset 4
 5064              		.cfi_offset 7, -4
 5065 0002 83B0     		sub	sp, sp, #12
 5066              		.cfi_def_cfa_offset 16
 5067 0004 00AF     		add	r7, sp, #0
 5068              		.cfi_def_cfa_register 7
 5069 0006 7860     		str	r0, [r7, #4]
 5070 0008 0B46     		mov	r3, r1
 5071 000a FB70     		strb	r3, [r7, #3]
1831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) &= ~USART_CTL2_DENT;
 5072              		.loc 1 1831 29
 5073 000c 7B68     		ldr	r3, [r7, #4]
 5074 000e 0833     		adds	r3, r3, #8
 5075 0010 1B68     		ldr	r3, [r3]
 5076 0012 7A68     		ldr	r2, [r7, #4]
 5077 0014 0832     		adds	r2, r2, #8
 5078 0016 23F08003 		bic	r3, r3, #128
 5079 001a 1360     		str	r3, [r2]
1832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) |= (USART_CTL2_DENT & dmacmd);
 5080              		.loc 1 1832 29
 5081 001c 7B68     		ldr	r3, [r7, #4]
 5082 001e 0833     		adds	r3, r3, #8
 5083 0020 1A68     		ldr	r2, [r3]
 5084              		.loc 1 1832 49
 5085 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5086 0024 03F08003 		and	r3, r3, #128
 5087              		.loc 1 1832 29
 5088 0028 7968     		ldr	r1, [r7, #4]
 5089 002a 0831     		adds	r1, r1, #8
 5090 002c 1343     		orrs	r3, r3, r2
 5091 002e 0B60     		str	r3, [r1]
1833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5092              		.loc 1 1833 1
 5093 0030 00BF     		nop
 5094 0032 0C37     		adds	r7, r7, #12
 5095              		.cfi_def_cfa_offset 4
 5096 0034 BD46     		mov	sp, r7
 5097              		.cfi_def_cfa_register 13
 5098              		@ sp needed
 5099 0036 80BC     		pop	{r7}
 5100              		.cfi_restore 7
 5101              		.cfi_def_cfa_offset 0
 5102 0038 7047     		bx	lr
 5103              		.cfi_endproc
 5104              	.LFE159:
 5106              		.section	.text.hals_usrt_reception_error_dma_enable,"ax",%progbits
 5107              		.align	1
 5108              		.global	hals_usrt_reception_error_dma_enable
 5109              		.syntax unified
 5110              		.thumb
 5111              		.thumb_func
 5112              		.fpu softvfp
 5114              	hals_usrt_reception_error_dma_enable:
 5115              	.LFB160:
1834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable DMA on reception error
1837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_reception_error_dma_enable(uint32_t usrt_periph)
1842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5116              		.loc 1 1842 1
 5117              		.cfi_startproc
 5118              		@ args = 0, pretend = 0, frame = 8
 5119              		@ frame_needed = 1, uses_anonymous_args = 0
 5120              		@ link register save eliminated.
 5121 0000 80B4     		push	{r7}
 5122              		.cfi_def_cfa_offset 4
 5123              		.cfi_offset 7, -4
 5124 0002 83B0     		sub	sp, sp, #12
 5125              		.cfi_def_cfa_offset 16
 5126 0004 00AF     		add	r7, sp, #0
 5127              		.cfi_def_cfa_register 7
 5128 0006 7860     		str	r0, [r7, #4]
1843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 5129              		.loc 1 1844 29
 5130 0008 7B68     		ldr	r3, [r7, #4]
 5131 000a 1A68     		ldr	r2, [r3]
 5132 000c 7B68     		ldr	r3, [r7, #4]
 5133 000e 22F00102 		bic	r2, r2, #1
 5134 0012 1A60     		str	r2, [r3]
1845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) &= ~(USART_CTL2_DDRE);
 5135              		.loc 1 1845 29
 5136 0014 7B68     		ldr	r3, [r7, #4]
 5137 0016 0833     		adds	r3, r3, #8
 5138 0018 1B68     		ldr	r3, [r3]
 5139 001a 7A68     		ldr	r2, [r7, #4]
 5140 001c 0832     		adds	r2, r2, #8
 5141 001e 23F40053 		bic	r3, r3, #8192
 5142 0022 1360     		str	r3, [r2]
1846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5143              		.loc 1 1846 1
 5144 0024 00BF     		nop
 5145 0026 0C37     		adds	r7, r7, #12
 5146              		.cfi_def_cfa_offset 4
 5147 0028 BD46     		mov	sp, r7
 5148              		.cfi_def_cfa_register 13
 5149              		@ sp needed
 5150 002a 80BC     		pop	{r7}
 5151              		.cfi_restore 7
 5152              		.cfi_def_cfa_offset 0
 5153 002c 7047     		bx	lr
 5154              		.cfi_endproc
 5155              	.LFE160:
 5157              		.section	.text.hals_usrt_reception_error_dma_disable,"ax",%progbits
 5158              		.align	1
 5159              		.global	hals_usrt_reception_error_dma_disable
 5160              		.syntax unified
 5161              		.thumb
 5162              		.thumb_func
 5163              		.fpu softvfp
 5165              	hals_usrt_reception_error_dma_disable:
 5166              	.LFB161:
1847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      disable DMA on reception error
1850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_reception_error_dma_disable(uint32_t usrt_periph)
1855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5167              		.loc 1 1855 1
 5168              		.cfi_startproc
 5169              		@ args = 0, pretend = 0, frame = 8
 5170              		@ frame_needed = 1, uses_anonymous_args = 0
 5171              		@ link register save eliminated.
 5172 0000 80B4     		push	{r7}
 5173              		.cfi_def_cfa_offset 4
 5174              		.cfi_offset 7, -4
 5175 0002 83B0     		sub	sp, sp, #12
 5176              		.cfi_def_cfa_offset 16
 5177 0004 00AF     		add	r7, sp, #0
 5178              		.cfi_def_cfa_register 7
 5179 0006 7860     		str	r0, [r7, #4]
1856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable USRT */
1857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL0(usrt_periph) &= ~(USART_CTL0_UEN);
 5180              		.loc 1 1857 29
 5181 0008 7B68     		ldr	r3, [r7, #4]
 5182 000a 1A68     		ldr	r2, [r3]
 5183 000c 7B68     		ldr	r3, [r7, #4]
 5184 000e 22F00102 		bic	r2, r2, #1
 5185 0012 1A60     		str	r2, [r3]
1858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_CTL2(usrt_periph) |= USART_CTL2_DDRE;
 5186              		.loc 1 1858 29
 5187 0014 7B68     		ldr	r3, [r7, #4]
 5188 0016 0833     		adds	r3, r3, #8
 5189 0018 1B68     		ldr	r3, [r3]
 5190 001a 7A68     		ldr	r2, [r7, #4]
 5191 001c 0832     		adds	r2, r2, #8
 5192 001e 43F40053 		orr	r3, r3, #8192
 5193 0022 1360     		str	r3, [r2]
1859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5194              		.loc 1 1859 1
 5195 0024 00BF     		nop
 5196 0026 0C37     		adds	r7, r7, #12
 5197              		.cfi_def_cfa_offset 4
 5198 0028 BD46     		mov	sp, r7
 5199              		.cfi_def_cfa_register 13
 5200              		@ sp needed
 5201 002a 80BC     		pop	{r7}
 5202              		.cfi_restore 7
 5203              		.cfi_def_cfa_offset 0
 5204 002c 7047     		bx	lr
 5205              		.cfi_endproc
 5206              	.LFE161:
 5208              		.section	.text.hals_usrt_receive_fifo_enable,"ax",%progbits
 5209              		.align	1
 5210              		.global	hals_usrt_receive_fifo_enable
 5211              		.syntax unified
 5212              		.thumb
 5213              		.thumb_func
 5214              		.fpu softvfp
 5216              	hals_usrt_receive_fifo_enable:
 5217              	.LFB162:
1860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable receive FIFO
1863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_receive_fifo_enable(uint32_t usrt_periph)
1868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5218              		.loc 1 1868 1
 5219              		.cfi_startproc
 5220              		@ args = 0, pretend = 0, frame = 8
 5221              		@ frame_needed = 1, uses_anonymous_args = 0
 5222              		@ link register save eliminated.
 5223 0000 80B4     		push	{r7}
 5224              		.cfi_def_cfa_offset 4
 5225              		.cfi_offset 7, -4
 5226 0002 83B0     		sub	sp, sp, #12
 5227              		.cfi_def_cfa_offset 16
 5228 0004 00AF     		add	r7, sp, #0
 5229              		.cfi_def_cfa_register 7
 5230 0006 7860     		str	r0, [r7, #4]
1869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_RFCS(usrt_periph) |= USART_RFCS_RFEN;
 5231              		.loc 1 1869 29
 5232 0008 7B68     		ldr	r3, [r7, #4]
 5233 000a D033     		adds	r3, r3, #208
 5234 000c 1B68     		ldr	r3, [r3]
 5235 000e 7A68     		ldr	r2, [r7, #4]
 5236 0010 D032     		adds	r2, r2, #208
 5237 0012 43F48073 		orr	r3, r3, #256
 5238 0016 1360     		str	r3, [r2]
1870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5239              		.loc 1 1870 1
 5240 0018 00BF     		nop
 5241 001a 0C37     		adds	r7, r7, #12
 5242              		.cfi_def_cfa_offset 4
 5243 001c BD46     		mov	sp, r7
 5244              		.cfi_def_cfa_register 13
 5245              		@ sp needed
 5246 001e 80BC     		pop	{r7}
 5247              		.cfi_restore 7
 5248              		.cfi_def_cfa_offset 0
 5249 0020 7047     		bx	lr
 5250              		.cfi_endproc
 5251              	.LFE162:
 5253              		.section	.text.hals_usrt_receive_fifo_disable,"ax",%progbits
 5254              		.align	1
 5255              		.global	hals_usrt_receive_fifo_disable
 5256              		.syntax unified
 5257              		.thumb
 5258              		.thumb_func
 5259              		.fpu softvfp
 5261              	hals_usrt_receive_fifo_disable:
 5262              	.LFB163:
1871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      disable receive FIFO
1874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_receive_fifo_disable(uint32_t usrt_periph)
1879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5263              		.loc 1 1879 1
 5264              		.cfi_startproc
 5265              		@ args = 0, pretend = 0, frame = 8
 5266              		@ frame_needed = 1, uses_anonymous_args = 0
 5267              		@ link register save eliminated.
 5268 0000 80B4     		push	{r7}
 5269              		.cfi_def_cfa_offset 4
 5270              		.cfi_offset 7, -4
 5271 0002 83B0     		sub	sp, sp, #12
 5272              		.cfi_def_cfa_offset 16
 5273 0004 00AF     		add	r7, sp, #0
 5274              		.cfi_def_cfa_register 7
 5275 0006 7860     		str	r0, [r7, #4]
1880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_RFCS(usrt_periph) &= ~(USART_RFCS_RFEN);
 5276              		.loc 1 1880 29
 5277 0008 7B68     		ldr	r3, [r7, #4]
 5278 000a D033     		adds	r3, r3, #208
 5279 000c 1B68     		ldr	r3, [r3]
 5280 000e 7A68     		ldr	r2, [r7, #4]
 5281 0010 D032     		adds	r2, r2, #208
 5282 0012 23F48073 		bic	r3, r3, #256
 5283 0016 1360     		str	r3, [r2]
1881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5284              		.loc 1 1881 1
 5285 0018 00BF     		nop
 5286 001a 0C37     		adds	r7, r7, #12
 5287              		.cfi_def_cfa_offset 4
 5288 001c BD46     		mov	sp, r7
 5289              		.cfi_def_cfa_register 13
 5290              		@ sp needed
 5291 001e 80BC     		pop	{r7}
 5292              		.cfi_restore 7
 5293              		.cfi_def_cfa_offset 0
 5294 0020 7047     		bx	lr
 5295              		.cfi_endproc
 5296              	.LFE163:
 5298              		.section	.text.hals_usrt_receive_fifo_counter_number,"ax",%progbits
 5299              		.align	1
 5300              		.global	hals_usrt_receive_fifo_counter_number
 5301              		.syntax unified
 5302              		.thumb
 5303              		.thumb_func
 5304              		.fpu softvfp
 5306              	hals_usrt_receive_fifo_counter_number:
 5307              	.LFB164:
1882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      read receive FIFO counter number
1885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     receive FIFO counter number
1888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** uint8_t hals_usrt_receive_fifo_counter_number(uint32_t usrt_periph)
1890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5308              		.loc 1 1890 1
 5309              		.cfi_startproc
 5310              		@ args = 0, pretend = 0, frame = 8
 5311              		@ frame_needed = 1, uses_anonymous_args = 0
 5312              		@ link register save eliminated.
 5313 0000 80B4     		push	{r7}
 5314              		.cfi_def_cfa_offset 4
 5315              		.cfi_offset 7, -4
 5316 0002 83B0     		sub	sp, sp, #12
 5317              		.cfi_def_cfa_offset 16
 5318 0004 00AF     		add	r7, sp, #0
 5319              		.cfi_def_cfa_register 7
 5320 0006 7860     		str	r0, [r7, #4]
1891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return (uint8_t)(GET_BITS(USART_RFCS(usrt_periph), 12U, 14U));
 5321              		.loc 1 1891 22
 5322 0008 7B68     		ldr	r3, [r7, #4]
 5323 000a D033     		adds	r3, r3, #208
 5324 000c 1B68     		ldr	r3, [r3]
 5325 000e 1B0B     		lsrs	r3, r3, #12
 5326              		.loc 1 1891 12
 5327 0010 DBB2     		uxtb	r3, r3
 5328 0012 03F00703 		and	r3, r3, #7
 5329 0016 DBB2     		uxtb	r3, r3
1892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5330              		.loc 1 1892 1
 5331 0018 1846     		mov	r0, r3
 5332 001a 0C37     		adds	r7, r7, #12
 5333              		.cfi_def_cfa_offset 4
 5334 001c BD46     		mov	sp, r7
 5335              		.cfi_def_cfa_register 13
 5336              		@ sp needed
 5337 001e 80BC     		pop	{r7}
 5338              		.cfi_restore 7
 5339              		.cfi_def_cfa_offset 0
 5340 0020 7047     		bx	lr
 5341              		.cfi_endproc
 5342              	.LFE164:
 5344              		.section	.text.hals_usrt_flag_get,"ax",%progbits
 5345              		.align	1
 5346              		.global	hals_usrt_flag_get
 5347              		.syntax unified
 5348              		.thumb
 5349              		.thumb_func
 5350              		.fpu softvfp
 5352              	hals_usrt_flag_get:
 5353              	.LFB165:
1893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      get USRT status
1896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  flag: flag type
1898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_PERR: parity error flag
1900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_FERR: frame error flag
1901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_NERR: noise error flag
1902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_ORERR: overrun error flag
1903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_IDLE: idle line detected flag
1904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_RBNE: read data buffer not empty
1905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_TC: transmission complete flag
1906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_TBE: transmit data register empty
1907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_LBD: LIN break detected flag
1908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_CTSF: CTS change flag
1909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_CTS: CTS level
1910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_RT: receiver timeout flag
1911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_EB: end of block flag
1912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_BSY: busy flag
1913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_AM: address match flag
1914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_SB: send break flag
1915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_RWU: receiver wakeup from mute mode.
1916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_WU: wakeup from deep-sleep mode flag
1917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_TEA: transmit enable acknowledge flag
1918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_REA: receive enable acknowledge flag
1919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_EPERR: early parity error flag
1920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_RFE: receive FIFO empty flag
1921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_RFF: receive FIFO full flag
1922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     FlagStatus: SET or RESET
1924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** FlagStatus hals_usrt_flag_get(uint32_t usrt_periph, usart_flag_enum flag)
1926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5354              		.loc 1 1926 1
 5355              		.cfi_startproc
 5356              		@ args = 0, pretend = 0, frame = 8
 5357              		@ frame_needed = 1, uses_anonymous_args = 0
 5358              		@ link register save eliminated.
 5359 0000 80B4     		push	{r7}
 5360              		.cfi_def_cfa_offset 4
 5361              		.cfi_offset 7, -4
 5362 0002 83B0     		sub	sp, sp, #12
 5363              		.cfi_def_cfa_offset 16
 5364 0004 00AF     		add	r7, sp, #0
 5365              		.cfi_def_cfa_register 7
 5366 0006 7860     		str	r0, [r7, #4]
 5367 0008 0B46     		mov	r3, r1
 5368 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != (USART_REG_VAL(usrt_periph, flag) & BIT(USART_BIT_POS(flag)))) {
 5369              		.loc 1 1927 18
 5370 000c 7B88     		ldrh	r3, [r7, #2]
 5371 000e 9B09     		lsrs	r3, r3, #6
 5372 0010 9BB2     		uxth	r3, r3
 5373 0012 1A46     		mov	r2, r3
 5374 0014 7B68     		ldr	r3, [r7, #4]
 5375 0016 1344     		add	r3, r3, r2
 5376 0018 1A68     		ldr	r2, [r3]
 5377              		.loc 1 1927 53
 5378 001a 7B88     		ldrh	r3, [r7, #2]
 5379 001c 03F01F03 		and	r3, r3, #31
 5380              		.loc 1 1927 14
 5381 0020 22FA03F3 		lsr	r3, r2, r3
 5382 0024 03F00103 		and	r3, r3, #1
 5383              		.loc 1 1927 7
 5384 0028 002B     		cmp	r3, #0
 5385 002a 01D0     		beq	.L237
1928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return SET;
 5386              		.loc 1 1928 16
 5387 002c 0123     		movs	r3, #1
 5388 002e 00E0     		b	.L238
 5389              	.L237:
1929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
1930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return RESET;
 5390              		.loc 1 1930 16
 5391 0030 0023     		movs	r3, #0
 5392              	.L238:
1931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
1932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5393              		.loc 1 1932 1
 5394 0032 1846     		mov	r0, r3
 5395 0034 0C37     		adds	r7, r7, #12
 5396              		.cfi_def_cfa_offset 4
 5397 0036 BD46     		mov	sp, r7
 5398              		.cfi_def_cfa_register 13
 5399              		@ sp needed
 5400 0038 80BC     		pop	{r7}
 5401              		.cfi_restore 7
 5402              		.cfi_def_cfa_offset 0
 5403 003a 7047     		bx	lr
 5404              		.cfi_endproc
 5405              	.LFE165:
 5407              		.section	.text.hals_usrt_flag_clear,"ax",%progbits
 5408              		.align	1
 5409              		.global	hals_usrt_flag_clear
 5410              		.syntax unified
 5411              		.thumb
 5412              		.thumb_func
 5413              		.fpu softvfp
 5415              	hals_usrt_flag_clear:
 5416              	.LFB166:
1933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      clear USRT status
1936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  flag: flag type
1938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_PERR: parity error flag
1940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_FERR: frame error flag
1941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_NERR: noise error flag
1942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_ORERR: overrun error flag
1943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_IDLE: idle line detected flag
1944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_TC: transmission complete flag
1945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_LBD: LIN break detected flag
1946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_CTSF: CTS change flag
1947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_RT: receiver timeout flag
1948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_EB: end of block flag
1949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_AM: address match flag
1950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_WU: wakeup from deep-sleep mode flag
1951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_FLAG_EPERR: early parity error flag
1952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_flag_clear(uint32_t usrt_periph, usart_flag_enum flag)
1956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5417              		.loc 1 1956 1
 5418              		.cfi_startproc
 5419              		@ args = 0, pretend = 0, frame = 8
 5420              		@ frame_needed = 1, uses_anonymous_args = 0
 5421              		@ link register save eliminated.
 5422 0000 80B4     		push	{r7}
 5423              		.cfi_def_cfa_offset 4
 5424              		.cfi_offset 7, -4
 5425 0002 83B0     		sub	sp, sp, #12
 5426              		.cfi_def_cfa_offset 16
 5427 0004 00AF     		add	r7, sp, #0
 5428              		.cfi_def_cfa_register 7
 5429 0006 7860     		str	r0, [r7, #4]
 5430 0008 0B46     		mov	r3, r1
 5431 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_INTC(usrt_periph) |= BIT(USART_BIT_POS(flag));
 5432              		.loc 1 1957 29
 5433 000c 7B68     		ldr	r3, [r7, #4]
 5434 000e 2033     		adds	r3, r3, #32
 5435 0010 1A68     		ldr	r2, [r3]
 5436              		.loc 1 1957 32
 5437 0012 7B88     		ldrh	r3, [r7, #2]
 5438 0014 03F01F03 		and	r3, r3, #31
 5439 0018 0121     		movs	r1, #1
 5440 001a 01FA03F3 		lsl	r3, r1, r3
 5441              		.loc 1 1957 29
 5442 001e 7968     		ldr	r1, [r7, #4]
 5443 0020 2031     		adds	r1, r1, #32
 5444 0022 1343     		orrs	r3, r3, r2
 5445 0024 0B60     		str	r3, [r1]
1958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5446              		.loc 1 1958 1
 5447 0026 00BF     		nop
 5448 0028 0C37     		adds	r7, r7, #12
 5449              		.cfi_def_cfa_offset 4
 5450 002a BD46     		mov	sp, r7
 5451              		.cfi_def_cfa_register 13
 5452              		@ sp needed
 5453 002c 80BC     		pop	{r7}
 5454              		.cfi_restore 7
 5455              		.cfi_def_cfa_offset 0
 5456 002e 7047     		bx	lr
 5457              		.cfi_endproc
 5458              	.LFE166:
 5460              		.section	.text.hals_usrt_interrupt_enable,"ax",%progbits
 5461              		.align	1
 5462              		.global	hals_usrt_interrupt_enable
 5463              		.syntax unified
 5464              		.thumb
 5465              		.thumb_func
 5466              		.fpu softvfp
 5468              	hals_usrt_interrupt_enable:
 5469              	.LFB167:
1959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      enable USRT interrupt
1962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  interrupt: interrupt
1964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_IDLE: idle line detected interrupt
1966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_RBNE: read data buffer not empty interrupt and overrun error interrupt
1967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_TC: transmission complete interrupt
1968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_TBE: transmitter buffer empty interrupt
1969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_PERR: parity error interrupt
1970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_AM: address match interrupt
1971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_RT: receiver timeout interrupt
1972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_EB: end of block interrupt
1973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_LBD: LIN break detection interrupt
1974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_ERR: error interrupt
1975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_CTS: CTS interrupt
1976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_WU: wakeup from deep-sleep mode interrupt
1977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_RFF: receive FIFO full interrupt
1978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
1979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
1980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
1981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_interrupt_enable(uint32_t usrt_periph,
1982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                 usart_interrupt_enum interrupt)
1983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5470              		.loc 1 1983 1
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 8
 5473              		@ frame_needed = 1, uses_anonymous_args = 0
 5474              		@ link register save eliminated.
 5475 0000 80B4     		push	{r7}
 5476              		.cfi_def_cfa_offset 4
 5477              		.cfi_offset 7, -4
 5478 0002 83B0     		sub	sp, sp, #12
 5479              		.cfi_def_cfa_offset 16
 5480 0004 00AF     		add	r7, sp, #0
 5481              		.cfi_def_cfa_register 7
 5482 0006 7860     		str	r0, [r7, #4]
 5483 0008 0B46     		mov	r3, r1
 5484 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_REG_VAL(usrt_periph, interrupt) |= BIT(USART_BIT_POS(interrupt));
 5485              		.loc 1 1984 43
 5486 000c 7B88     		ldrh	r3, [r7, #2]
 5487 000e 9B09     		lsrs	r3, r3, #6
 5488 0010 9BB2     		uxth	r3, r3
 5489 0012 1A46     		mov	r2, r3
 5490 0014 7B68     		ldr	r3, [r7, #4]
 5491 0016 1344     		add	r3, r3, r2
 5492 0018 1A68     		ldr	r2, [r3]
 5493              		.loc 1 1984 46
 5494 001a 7B88     		ldrh	r3, [r7, #2]
 5495 001c 03F01F03 		and	r3, r3, #31
 5496 0020 0121     		movs	r1, #1
 5497 0022 01FA03F3 		lsl	r3, r1, r3
 5498              		.loc 1 1984 43
 5499 0026 7988     		ldrh	r1, [r7, #2]
 5500 0028 8909     		lsrs	r1, r1, #6
 5501 002a 89B2     		uxth	r1, r1
 5502 002c 0846     		mov	r0, r1
 5503 002e 7968     		ldr	r1, [r7, #4]
 5504 0030 0144     		add	r1, r1, r0
 5505 0032 1343     		orrs	r3, r3, r2
 5506 0034 0B60     		str	r3, [r1]
1985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5507              		.loc 1 1985 1
 5508 0036 00BF     		nop
 5509 0038 0C37     		adds	r7, r7, #12
 5510              		.cfi_def_cfa_offset 4
 5511 003a BD46     		mov	sp, r7
 5512              		.cfi_def_cfa_register 13
 5513              		@ sp needed
 5514 003c 80BC     		pop	{r7}
 5515              		.cfi_restore 7
 5516              		.cfi_def_cfa_offset 0
 5517 003e 7047     		bx	lr
 5518              		.cfi_endproc
 5519              	.LFE167:
 5521              		.section	.text.hals_usrt_interrupt_disable,"ax",%progbits
 5522              		.align	1
 5523              		.global	hals_usrt_interrupt_disable
 5524              		.syntax unified
 5525              		.thumb
 5526              		.thumb_func
 5527              		.fpu softvfp
 5529              	hals_usrt_interrupt_disable:
 5530              	.LFB168:
1986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
1987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
1988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      disable USRT interrupt
1989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
1990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  interrupt: interrupt
1991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
1992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_IDLE: idle interrupt
1993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_RBNE: read data buffer not empty interrupt and overrun error interrupt
1994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_TC: transmission complete interrupt
1995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_TBE: transmitter buffer empty interrupt
1996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_PERR: parity error interrupt
1997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_AM: address match interrupt
1998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_RT: receiver timeout interrupt
1999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_EB: end of block interrupt
2000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_LBD: LIN break detection interrupt
2001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_ERR: error interrupt
2002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_CTS: CTS interrupt
2003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_WU: wakeup from deep-sleep mode interrupt
2004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_RFF: receive FIFO full interrupt
2005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_interrupt_disable(uint32_t usrt_periph,
2009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                  usart_interrupt_enum interrupt)
2010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5531              		.loc 1 2010 1
 5532              		.cfi_startproc
 5533              		@ args = 0, pretend = 0, frame = 8
 5534              		@ frame_needed = 1, uses_anonymous_args = 0
 5535              		@ link register save eliminated.
 5536 0000 80B4     		push	{r7}
 5537              		.cfi_def_cfa_offset 4
 5538              		.cfi_offset 7, -4
 5539 0002 83B0     		sub	sp, sp, #12
 5540              		.cfi_def_cfa_offset 16
 5541 0004 00AF     		add	r7, sp, #0
 5542              		.cfi_def_cfa_register 7
 5543 0006 7860     		str	r0, [r7, #4]
 5544 0008 0B46     		mov	r3, r1
 5545 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     USART_REG_VAL(usrt_periph, interrupt) &= ~BIT(USART_BIT_POS(interrupt));
 5546              		.loc 1 2011 43
 5547 000c 7B88     		ldrh	r3, [r7, #2]
 5548 000e 9B09     		lsrs	r3, r3, #6
 5549 0010 9BB2     		uxth	r3, r3
 5550 0012 1A46     		mov	r2, r3
 5551 0014 7B68     		ldr	r3, [r7, #4]
 5552 0016 1344     		add	r3, r3, r2
 5553 0018 1A68     		ldr	r2, [r3]
 5554              		.loc 1 2011 47
 5555 001a 7B88     		ldrh	r3, [r7, #2]
 5556 001c 03F01F03 		and	r3, r3, #31
 5557 0020 0121     		movs	r1, #1
 5558 0022 01FA03F3 		lsl	r3, r1, r3
 5559              		.loc 1 2011 46
 5560 0026 DB43     		mvns	r3, r3
 5561              		.loc 1 2011 43
 5562 0028 7988     		ldrh	r1, [r7, #2]
 5563 002a 8909     		lsrs	r1, r1, #6
 5564 002c 89B2     		uxth	r1, r1
 5565 002e 0846     		mov	r0, r1
 5566 0030 7968     		ldr	r1, [r7, #4]
 5567 0032 0144     		add	r1, r1, r0
 5568 0034 1340     		ands	r3, r3, r2
 5569 0036 0B60     		str	r3, [r1]
2012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5570              		.loc 1 2012 1
 5571 0038 00BF     		nop
 5572 003a 0C37     		adds	r7, r7, #12
 5573              		.cfi_def_cfa_offset 4
 5574 003c BD46     		mov	sp, r7
 5575              		.cfi_def_cfa_register 13
 5576              		@ sp needed
 5577 003e 80BC     		pop	{r7}
 5578              		.cfi_restore 7
 5579              		.cfi_def_cfa_offset 0
 5580 0040 7047     		bx	lr
 5581              		.cfi_endproc
 5582              	.LFE168:
 5584              		.section	.text.hals_usrt_interrupt_flag_get,"ax",%progbits
 5585              		.align	1
 5586              		.global	hals_usrt_interrupt_flag_get
 5587              		.syntax unified
 5588              		.thumb
 5589              		.thumb_func
 5590              		.fpu softvfp
 5592              	hals_usrt_interrupt_flag_get:
 5593              	.LFB169:
2013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      get USRT interrupt flag status
2016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
2017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  int_flag: interrupt and flag type, refer to usart_interrupt_flag_enum
2018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
2019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_EB: end of block interrupt flag
2020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RT: receiver timeout interrupt flag
2021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_AM: address match interrupt flag
2022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_PERR: parity error interrupt flag
2023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_TBE: transmitter buffer empty interrupt flag
2024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_TC: transmission complete interrupt flag
2025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RBNE: read data buffer not empty interrupt flag
2026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RBNE_ORERR: overrun error interrupt flag
2027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_IDLE: idle line detected interrupt flag
2028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_LBD: LIN break detected interrupt flag
2029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_WU: wakeup from deep-sleep mode interrupt flag
2030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_CTS: CTS interrupt flag
2031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_ERR_NERR: noise error interrupt flag
2032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_ERR_ORERR: overrun error interrupt flag
2033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_ERR_FERR: frame error interrupt flag
2034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RFF: receive FIFO full interrupt flag
2035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     FlagStatus: SET or RESET
2037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** FlagStatus hals_usrt_interrupt_flag_get(uint32_t usrt_periph,
2039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                         usart_interrupt_flag_enum int_flag)
2040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5594              		.loc 1 2040 1
 5595              		.cfi_startproc
 5596              		@ args = 0, pretend = 0, frame = 16
 5597              		@ frame_needed = 1, uses_anonymous_args = 0
 5598              		@ link register save eliminated.
 5599 0000 80B4     		push	{r7}
 5600              		.cfi_def_cfa_offset 4
 5601              		.cfi_offset 7, -4
 5602 0002 85B0     		sub	sp, sp, #20
 5603              		.cfi_def_cfa_offset 24
 5604 0004 00AF     		add	r7, sp, #0
 5605              		.cfi_def_cfa_register 7
 5606 0006 7860     		str	r0, [r7, #4]
 5607 0008 3960     		str	r1, [r7]
2041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t intenable = 0U, flagstatus = 0U;
 5608              		.loc 1 2041 14
 5609 000a 0023     		movs	r3, #0
 5610 000c FB60     		str	r3, [r7, #12]
 5611              		.loc 1 2041 30
 5612 000e 0023     		movs	r3, #0
 5613 0010 BB60     		str	r3, [r7, #8]
2042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* get the interrupt enable bit status */
2043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     intenable = (USART_REG_VAL(usrt_periph,
 5614              		.loc 1 2043 18
 5615 0012 3B68     		ldr	r3, [r7]
 5616 0014 9B09     		lsrs	r3, r3, #6
 5617 0016 C3F30902 		ubfx	r2, r3, #0, #10
 5618 001a 7B68     		ldr	r3, [r7, #4]
 5619 001c 1344     		add	r3, r3, r2
 5620 001e 1A68     		ldr	r2, [r3]
2044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                int_flag) & BIT(USART_BIT_POS(int_flag)));
 5621              		.loc 1 2044 44
 5622 0020 3B68     		ldr	r3, [r7]
 5623 0022 03F01F03 		and	r3, r3, #31
 5624 0026 0121     		movs	r1, #1
 5625 0028 01FA03F3 		lsl	r3, r1, r3
2043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                int_flag) & BIT(USART_BIT_POS(int_flag)));
 5626              		.loc 1 2043 15
 5627 002c 1340     		ands	r3, r3, r2
 5628 002e FB60     		str	r3, [r7, #12]
2045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* get the corresponding flag bit status */
2046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     flagstatus = (USART_REG_VAL2(usrt_periph,
 5629              		.loc 1 2046 19
 5630 0030 3B68     		ldr	r3, [r7]
 5631 0032 9A0D     		lsrs	r2, r3, #22
 5632 0034 7B68     		ldr	r3, [r7, #4]
 5633 0036 1344     		add	r3, r3, r2
 5634 0038 1A68     		ldr	r2, [r3]
2047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                  int_flag) & BIT(USART_BIT_POS2(int_flag)));
 5635              		.loc 1 2047 46
 5636 003a 3B68     		ldr	r3, [r7]
 5637 003c 1B0C     		lsrs	r3, r3, #16
 5638 003e 03F01F03 		and	r3, r3, #31
 5639 0042 0121     		movs	r1, #1
 5640 0044 01FA03F3 		lsl	r3, r1, r3
2046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                  int_flag) & BIT(USART_BIT_POS2(int_flag)));
 5641              		.loc 1 2046 16
 5642 0048 1340     		ands	r3, r3, r2
 5643 004a BB60     		str	r3, [r7, #8]
2048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(flagstatus && intenable) {
 5644              		.loc 1 2049 7
 5645 004c BB68     		ldr	r3, [r7, #8]
 5646 004e 002B     		cmp	r3, #0
 5647 0050 04D0     		beq	.L243
 5648              		.loc 1 2049 19 discriminator 1
 5649 0052 FB68     		ldr	r3, [r7, #12]
 5650 0054 002B     		cmp	r3, #0
 5651 0056 01D0     		beq	.L243
2050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return SET;
 5652              		.loc 1 2050 16
 5653 0058 0123     		movs	r3, #1
 5654 005a 00E0     		b	.L244
 5655              	.L243:
2051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return RESET;
 5656              		.loc 1 2052 16
 5657 005c 0023     		movs	r3, #0
 5658              	.L244:
2053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5659              		.loc 1 2054 1
 5660 005e 1846     		mov	r0, r3
 5661 0060 1437     		adds	r7, r7, #20
 5662              		.cfi_def_cfa_offset 4
 5663 0062 BD46     		mov	sp, r7
 5664              		.cfi_def_cfa_register 13
 5665              		@ sp needed
 5666 0064 80BC     		pop	{r7}
 5667              		.cfi_restore 7
 5668              		.cfi_def_cfa_offset 0
 5669 0066 7047     		bx	lr
 5670              		.cfi_endproc
 5671              	.LFE169:
 5673              		.section	.text.hals_usrt_interrupt_flag_clear,"ax",%progbits
 5674              		.align	1
 5675              		.global	hals_usrt_interrupt_flag_clear
 5676              		.syntax unified
 5677              		.thumb
 5678              		.thumb_func
 5679              		.fpu softvfp
 5681              	hals_usrt_interrupt_flag_clear:
 5682              	.LFB170:
2055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      clear USRT interrupt flag
2058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt_periph: USARTx(x=0,1)
2059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  flag: USRT interrupt flag
2060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 only one parameter can be selected which is shown as below:
2061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_EB: end of block interrupt flag
2062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RT: receiver timeout interrupt flag
2063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_AM: address match interrupt flag
2064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_PERR: parity error interrupt flag
2065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_TC: transmission complete interrupt flag
2066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RBNE_ORERR: overrun error interrupt flag
2067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_IDLE: idle line detected interrupt flag
2068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_LBD: LIN break detected interrupt flag
2069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_WU: wakeup from deep-sleep mode interrupt flag
2070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_CTS: CTS change interrupt flag
2071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_ERR_FERR: frame error interrupt flag
2072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_ERR_NERR: noise detected interrupt flag
2073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_ERR_ORERR: overrun error interrupt flag
2074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****       \arg        USART_INT_FLAG_RFF: receive FIFO full interrupt flag
2075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** void hals_usrt_interrupt_flag_clear(uint32_t usrt_periph,
2079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                     usart_interrupt_flag_enum int_flag)
2080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5683              		.loc 1 2080 1
 5684              		.cfi_startproc
 5685              		@ args = 0, pretend = 0, frame = 8
 5686              		@ frame_needed = 1, uses_anonymous_args = 0
 5687              		@ link register save eliminated.
 5688 0000 80B4     		push	{r7}
 5689              		.cfi_def_cfa_offset 4
 5690              		.cfi_offset 7, -4
 5691 0002 83B0     		sub	sp, sp, #12
 5692              		.cfi_def_cfa_offset 16
 5693 0004 00AF     		add	r7, sp, #0
 5694              		.cfi_def_cfa_register 7
 5695 0006 7860     		str	r0, [r7, #4]
 5696 0008 3960     		str	r1, [r7]
2081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USART_INT_FLAG_RFF == int_flag) {
 5697              		.loc 1 2081 7
 5698 000a 3B68     		ldr	r3, [r7]
 5699 000c 0F4A     		ldr	r2, .L249
 5700 000e 9342     		cmp	r3, r2
 5701 0010 08D1     		bne	.L246
2082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_RFCS(usrt_periph) &= (uint32_t)(~USART_RFCS_RFFINT);
 5702              		.loc 1 2082 33
 5703 0012 7B68     		ldr	r3, [r7, #4]
 5704 0014 D033     		adds	r3, r3, #208
 5705 0016 1B68     		ldr	r3, [r3]
 5706 0018 7A68     		ldr	r2, [r7, #4]
 5707 001a D032     		adds	r2, r2, #208
 5708 001c 23F40043 		bic	r3, r3, #32768
 5709 0020 1360     		str	r3, [r2]
2083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         USART_INTC(usrt_periph) |= BIT(USART_BIT_POS2(int_flag));
2085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5710              		.loc 1 2086 1
 5711 0022 0DE0     		b	.L248
 5712              	.L246:
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 5713              		.loc 1 2084 33
 5714 0024 7B68     		ldr	r3, [r7, #4]
 5715 0026 2033     		adds	r3, r3, #32
 5716 0028 1A68     		ldr	r2, [r3]
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 5717              		.loc 1 2084 36
 5718 002a 3B68     		ldr	r3, [r7]
 5719 002c 1B0C     		lsrs	r3, r3, #16
 5720 002e 03F01F03 		and	r3, r3, #31
 5721 0032 0121     		movs	r1, #1
 5722 0034 01FA03F3 		lsl	r3, r1, r3
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 5723              		.loc 1 2084 33
 5724 0038 7968     		ldr	r1, [r7, #4]
 5725 003a 2031     		adds	r1, r1, #32
 5726 003c 1343     		orrs	r3, r3, r2
 5727 003e 0B60     		str	r3, [r1]
 5728              	.L248:
 5729              		.loc 1 2086 1
 5730 0040 00BF     		nop
 5731 0042 0C37     		adds	r7, r7, #12
 5732              		.cfi_def_cfa_offset 4
 5733 0044 BD46     		mov	sp, r7
 5734              		.cfi_def_cfa_register 13
 5735              		@ sp needed
 5736 0046 80BC     		pop	{r7}
 5737              		.cfi_restore 7
 5738              		.cfi_def_cfa_offset 0
 5739 0048 7047     		bx	lr
 5740              	.L250:
 5741 004a 00BF     		.align	2
 5742              	.L249:
 5743 004c 09340F34 		.word	873411593
 5744              		.cfi_endproc
 5745              	.LFE170:
 5747              		.section	.text._usrt_data_bit_mask_get,"ax",%progbits
 5748              		.align	1
 5749              		.syntax unified
 5750              		.thumb
 5751              		.thumb_func
 5752              		.fpu softvfp
 5754              	_usrt_data_bit_mask_get:
 5755              	.LFB171:
2087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      get the mask of data bit
2090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
2091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
2092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
2093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     the mask of data bit(0x7F, 0xFF, 0x1FF)
2095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static uint16_t _usrt_data_bit_mask_get(hal_usrt_dev_struct *usrt)
2097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5756              		.loc 1 2097 1
 5757              		.cfi_startproc
 5758              		@ args = 0, pretend = 0, frame = 16
 5759              		@ frame_needed = 1, uses_anonymous_args = 0
 5760              		@ link register save eliminated.
 5761 0000 80B4     		push	{r7}
 5762              		.cfi_def_cfa_offset 4
 5763              		.cfi_offset 7, -4
 5764 0002 85B0     		sub	sp, sp, #20
 5765              		.cfi_def_cfa_offset 24
 5766 0004 00AF     		add	r7, sp, #0
 5767              		.cfi_def_cfa_register 7
 5768 0006 7860     		str	r0, [r7, #4]
2098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint16_t reval;
2099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET != (USART_CTL0(usrt->periph) & USART_CTL0_WL)) {
 5769              		.loc 1 2100 18
 5770 0008 7B68     		ldr	r3, [r7, #4]
 5771 000a 1B68     		ldr	r3, [r3]
 5772 000c 1B68     		ldr	r3, [r3]
 5773              		.loc 1 2100 43
 5774 000e 03F48053 		and	r3, r3, #4096
 5775              		.loc 1 2100 7
 5776 0012 002B     		cmp	r3, #0
 5777 0014 0DD0     		beq	.L252
2101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the PCEN is enabled */
2102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != (USART_CTL0(usrt->periph) & USART_CTL0_PCEN)) {
 5778              		.loc 1 2102 22
 5779 0016 7B68     		ldr	r3, [r7, #4]
 5780 0018 1B68     		ldr	r3, [r3]
 5781 001a 1B68     		ldr	r3, [r3]
 5782              		.loc 1 2102 47
 5783 001c 03F48063 		and	r3, r3, #1024
 5784              		.loc 1 2102 11
 5785 0020 002B     		cmp	r3, #0
 5786 0022 02D0     		beq	.L253
2103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             reval = 0xFFU;
 5787              		.loc 1 2103 19
 5788 0024 FF23     		movs	r3, #255
 5789 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 5790 0028 0FE0     		b	.L254
 5791              	.L253:
2104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
2105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             reval = 0x1FFU;
 5792              		.loc 1 2105 19
 5793 002a 40F2FF13 		movw	r3, #511
 5794 002e FB81     		strh	r3, [r7, #14]	@ movhi
 5795 0030 0BE0     		b	.L254
 5796              	.L252:
2106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the PCEN is enabled */
2109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != (USART_CTL0(usrt->periph) & USART_CTL0_PCEN)) {
 5797              		.loc 1 2109 22
 5798 0032 7B68     		ldr	r3, [r7, #4]
 5799 0034 1B68     		ldr	r3, [r3]
 5800 0036 1B68     		ldr	r3, [r3]
 5801              		.loc 1 2109 47
 5802 0038 03F48063 		and	r3, r3, #1024
 5803              		.loc 1 2109 11
 5804 003c 002B     		cmp	r3, #0
 5805 003e 02D0     		beq	.L255
2110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             reval = 0x7FU;
 5806              		.loc 1 2110 19
 5807 0040 7F23     		movs	r3, #127
 5808 0042 FB81     		strh	r3, [r7, #14]	@ movhi
 5809 0044 01E0     		b	.L254
 5810              	.L255:
2111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
2112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             reval = 0xFFU;
 5811              		.loc 1 2112 19
 5812 0046 FF23     		movs	r3, #255
 5813 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 5814              	.L254:
2113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     return reval;
 5815              		.loc 1 2116 12
 5816 004a FB89     		ldrh	r3, [r7, #14]
2117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5817              		.loc 1 2117 1
 5818 004c 1846     		mov	r0, r3
 5819 004e 1437     		adds	r7, r7, #20
 5820              		.cfi_def_cfa_offset 4
 5821 0050 BD46     		mov	sp, r7
 5822              		.cfi_def_cfa_register 13
 5823              		@ sp needed
 5824 0052 80BC     		pop	{r7}
 5825              		.cfi_restore 7
 5826              		.cfi_def_cfa_offset 0
 5827 0054 7047     		bx	lr
 5828              		.cfi_endproc
 5829              	.LFE171:
 5831              		.section	.text._usrt_error_flag_get,"ax",%progbits
 5832              		.align	1
 5833              		.syntax unified
 5834              		.thumb
 5835              		.thumb_func
 5836              		.fpu softvfp
 5838              	_usrt_error_flag_get:
 5839              	.LFB172:
2118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      get usrt error flag
2121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: usrt device information structure
2122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
2123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     the structure parameters altering is automatically configured by core
2124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     SET or RESET
2126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static FlagStatus _usrt_error_flag_get(hal_usrt_dev_struct *usrt)
2128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5840              		.loc 1 2128 1
 5841              		.cfi_startproc
 5842              		@ args = 0, pretend = 0, frame = 8
 5843              		@ frame_needed = 1, uses_anonymous_args = 0
 5844              		@ link register save eliminated.
 5845 0000 80B4     		push	{r7}
 5846              		.cfi_def_cfa_offset 4
 5847              		.cfi_offset 7, -4
 5848 0002 83B0     		sub	sp, sp, #12
 5849              		.cfi_def_cfa_offset 16
 5850 0004 00AF     		add	r7, sp, #0
 5851              		.cfi_def_cfa_register 7
 5852 0006 7860     		str	r0, [r7, #4]
2129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(0U == (USART_STAT(usrt->periph) & (uint32_t)(USART_STAT_PERR |
 5853              		.loc 1 2129 15
 5854 0008 7B68     		ldr	r3, [r7, #4]
 5855 000a 1B68     		ldr	r3, [r3]
 5856 000c 1C33     		adds	r3, r3, #28
 5857 000e 1B68     		ldr	r3, [r3]
 5858              		.loc 1 2129 40
 5859 0010 03F00F03 		and	r3, r3, #15
 5860              		.loc 1 2129 7
 5861 0014 002B     		cmp	r3, #0
 5862 0016 01D1     		bne	.L258
2130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****               USART_STAT_FERR | \
2131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****               USART_STAT_ORERR | USART_STAT_NERR))) {
2132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return RESET;
 5863              		.loc 1 2132 16
 5864 0018 0023     		movs	r3, #0
 5865 001a 00E0     		b	.L259
 5866              	.L258:
2133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         return SET;
 5867              		.loc 1 2134 16
 5868 001c 0123     		movs	r3, #1
 5869              	.L259:
2135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5870              		.loc 1 2136 1
 5871 001e 1846     		mov	r0, r3
 5872 0020 0C37     		adds	r7, r7, #12
 5873              		.cfi_def_cfa_offset 4
 5874 0022 BD46     		mov	sp, r7
 5875              		.cfi_def_cfa_register 13
 5876              		@ sp needed
 5877 0024 80BC     		pop	{r7}
 5878              		.cfi_restore 7
 5879              		.cfi_def_cfa_offset 0
 5880 0026 7047     		bx	lr
 5881              		.cfi_endproc
 5882              	.LFE172:
 5884              		.section	.text._usrt_transmit_complete_interrupt,"ax",%progbits
 5885              		.align	1
 5886              		.syntax unified
 5887              		.thumb
 5888              		.thumb_func
 5889              		.fpu softvfp
 5891              	_usrt_transmit_complete_interrupt:
 5892              	.LFB173:
2137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the transmit complete interrupt
2140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: pointer to a UART device information structure
2141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_transmit_complete_interrupt(void *usrt)
2145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5893              		.loc 1 2145 1
 5894              		.cfi_startproc
 5895              		@ args = 0, pretend = 0, frame = 16
 5896              		@ frame_needed = 1, uses_anonymous_args = 0
 5897 0000 80B5     		push	{r7, lr}
 5898              		.cfi_def_cfa_offset 8
 5899              		.cfi_offset 7, -8
 5900              		.cfi_offset 14, -4
 5901 0002 84B0     		sub	sp, sp, #16
 5902              		.cfi_def_cfa_offset 24
 5903 0004 00AF     		add	r7, sp, #0
 5904              		.cfi_def_cfa_register 7
 5905 0006 7860     		str	r0, [r7, #4]
2146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt = usrt;
 5906              		.loc 1 2146 26
 5907 0008 7B68     		ldr	r3, [r7, #4]
 5908 000a BB60     		str	r3, [r7, #8]
2147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_user_cb p_func = (hal_usrt_user_cb)p_usrt->tx_callback;
 5909              		.loc 1 2147 55
 5910 000c BB68     		ldr	r3, [r7, #8]
 5911 000e 1B6C     		ldr	r3, [r3, #64]
 5912              		.loc 1 2147 22
 5913 0010 FB60     		str	r3, [r7, #12]
2148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY_TX_RX == p_usrt->tx_state) {
 5914              		.loc 1 2148 39
 5915 0012 BB68     		ldr	r3, [r7, #8]
 5916 0014 93F83A30 		ldrb	r3, [r3, #58]
 5917 0018 DBB2     		uxtb	r3, r3
 5918              		.loc 1 2148 7
 5919 001a 022B     		cmp	r3, #2
 5920 001c 01D1     		bne	.L261
2149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* in Tx Rx state, the callback function is called when receive complete event occurs */
2150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_func = NULL;
 5921              		.loc 1 2150 16
 5922 001e 0023     		movs	r3, #0
 5923 0020 FB60     		str	r3, [r7, #12]
 5924              	.L261:
2151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* disable the transmit complete interrupt */
2154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_TC);
 5925              		.loc 1 2154 5
 5926 0022 BB68     		ldr	r3, [r7, #8]
 5927 0024 1B68     		ldr	r3, [r3]
 5928 0026 0621     		movs	r1, #6
 5929 0028 1846     		mov	r0, r3
 5930 002a FFF7FEFF 		bl	hals_usrt_interrupt_disable
2155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* reset transmit_complete_handle and tx_state */
2156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_usrt->usrt_irq.transmit_complete_handle = NULL;
 5931              		.loc 1 2156 47
 5932 002e BB68     		ldr	r3, [r7, #8]
 5933 0030 0022     		movs	r2, #0
 5934 0032 DA60     		str	r2, [r3, #12]
2157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_usrt->tx_state = USRT_STATE_FREE;
 5935              		.loc 1 2157 22
 5936 0034 BB68     		ldr	r3, [r7, #8]
 5937 0036 0022     		movs	r2, #0
 5938 0038 83F83A20 		strb	r2, [r3, #58]
2158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_func) {
 5939              		.loc 1 2159 7
 5940 003c FB68     		ldr	r3, [r7, #12]
 5941 003e 002B     		cmp	r3, #0
 5942 0040 02D0     		beq	.L263
2160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* if there is a user transmit complete callback */
2161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_func(p_usrt);
 5943              		.loc 1 2161 9
 5944 0042 FB68     		ldr	r3, [r7, #12]
 5945 0044 B868     		ldr	r0, [r7, #8]
 5946 0046 9847     		blx	r3
 5947              	.LVL4:
 5948              	.L263:
2162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 5949              		.loc 1 2163 1
 5950 0048 00BF     		nop
 5951 004a 1037     		adds	r7, r7, #16
 5952              		.cfi_def_cfa_offset 8
 5953 004c BD46     		mov	sp, r7
 5954              		.cfi_def_cfa_register 13
 5955              		@ sp needed
 5956 004e 80BD     		pop	{r7, pc}
 5957              		.cfi_endproc
 5958              	.LFE173:
 5960              		.section	.text._usrt_transmit_interrupt,"ax",%progbits
 5961              		.align	1
 5962              		.syntax unified
 5963              		.thumb
 5964              		.thumb_func
 5965              		.fpu softvfp
 5967              	_usrt_transmit_interrupt:
 5968              	.LFB174:
2164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the transmit interrupt
2167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: pointer to a UART device information structure
2168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_transmit_interrupt(void *usrt)
2172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 5969              		.loc 1 2172 1
 5970              		.cfi_startproc
 5971              		@ args = 0, pretend = 0, frame = 16
 5972              		@ frame_needed = 1, uses_anonymous_args = 0
 5973 0000 80B5     		push	{r7, lr}
 5974              		.cfi_def_cfa_offset 8
 5975              		.cfi_offset 7, -8
 5976              		.cfi_offset 14, -4
 5977 0002 84B0     		sub	sp, sp, #16
 5978              		.cfi_def_cfa_offset 24
 5979 0004 00AF     		add	r7, sp, #0
 5980              		.cfi_def_cfa_register 7
 5981 0006 7860     		str	r0, [r7, #4]
2173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint32_t temp_val;
2174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt = usrt;
 5982              		.loc 1 2174 26
 5983 0008 7B68     		ldr	r3, [r7, #4]
 5984 000a FB60     		str	r3, [r7, #12]
2175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     temp_val = p_usrt->txbuffer.pos;
 5985              		.loc 1 2176 14
 5986 000c FB68     		ldr	r3, [r7, #12]
 5987 000e 5B6A     		ldr	r3, [r3, #36]
 5988 0010 BB60     		str	r3, [r7, #8]
2177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(temp_val < p_usrt->txbuffer.length) {
 5989              		.loc 1 2177 35
 5990 0012 FB68     		ldr	r3, [r7, #12]
 5991 0014 1B6A     		ldr	r3, [r3, #32]
 5992              		.loc 1 2177 7
 5993 0016 BA68     		ldr	r2, [r7, #8]
 5994 0018 9A42     		cmp	r2, r3
 5995 001a 35D2     		bcs	.L265
2178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if((RESET != (USART_CTL0(p_usrt->periph) & USART_CTL0_WL)) && \
 5996              		.loc 1 2178 23
 5997 001c FB68     		ldr	r3, [r7, #12]
 5998 001e 1B68     		ldr	r3, [r3]
 5999 0020 1B68     		ldr	r3, [r3]
 6000              		.loc 1 2178 50
 6001 0022 03F48053 		and	r3, r3, #4096
 6002              		.loc 1 2178 11
 6003 0026 002B     		cmp	r3, #0
 6004 0028 18D0     		beq	.L266
2179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 (RESET == (USART_CTL0(p_usrt->periph) & USART_CTL0_PCEN))) {
 6005              		.loc 1 2179 28 discriminator 1
 6006 002a FB68     		ldr	r3, [r7, #12]
 6007 002c 1B68     		ldr	r3, [r3]
 6008 002e 1B68     		ldr	r3, [r3]
 6009              		.loc 1 2179 55 discriminator 1
 6010 0030 03F48063 		and	r3, r3, #1024
2178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if((RESET != (USART_CTL0(p_usrt->periph) & USART_CTL0_WL)) && \
 6011              		.loc 1 2178 68 discriminator 1
 6012 0034 002B     		cmp	r3, #0
 6013 0036 11D1     		bne	.L266
2180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             /* 9-bit data, none parity */
2181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_data_transmit(p_usrt->periph,
 6014              		.loc 1 2181 13
 6015 0038 FB68     		ldr	r3, [r7, #12]
 6016 003a 1A68     		ldr	r2, [r3]
2182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                     (*(uint16_t *)p_usrt->txbuffer.buffer & (uint16_t)0x1FFU));
 6017              		.loc 1 2182 67
 6018 003c FB68     		ldr	r3, [r7, #12]
 6019 003e DB69     		ldr	r3, [r3, #28]
 6020              		.loc 1 2182 38
 6021 0040 1B88     		ldrh	r3, [r3]
2181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                     (*(uint16_t *)p_usrt->txbuffer.buffer & (uint16_t)0x1FFU));
 6022              		.loc 1 2181 13
 6023 0042 C3F30803 		ubfx	r3, r3, #0, #9
 6024 0046 9BB2     		uxth	r3, r3
 6025 0048 1946     		mov	r1, r3
 6026 004a 1046     		mov	r0, r2
 6027 004c FFF7FEFF 		bl	hals_usrt_data_transmit
2183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             p_usrt->txbuffer.buffer += 2U;
 6028              		.loc 1 2183 37
 6029 0050 FB68     		ldr	r3, [r7, #12]
 6030 0052 DB69     		ldr	r3, [r3, #28]
 6031 0054 9A1C     		adds	r2, r3, #2
 6032 0056 FB68     		ldr	r3, [r7, #12]
 6033 0058 DA61     		str	r2, [r3, #28]
 6034 005a 0FE0     		b	.L267
 6035              	.L266:
2184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         } else {
2185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             /* 9-bit data, with parity or 8-bit data */
2186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_data_transmit(p_usrt->periph,
 6036              		.loc 1 2186 13
 6037 005c FB68     		ldr	r3, [r7, #12]
 6038 005e 1A68     		ldr	r2, [r3]
2187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                     (*p_usrt->txbuffer.buffer & (uint8_t)0xFFU));
 6039              		.loc 1 2187 55
 6040 0060 FB68     		ldr	r3, [r7, #12]
 6041 0062 DB69     		ldr	r3, [r3, #28]
 6042              		.loc 1 2187 38
 6043 0064 1B78     		ldrb	r3, [r3]
 6044 0066 DBB2     		uxtb	r3, r3
2186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                     (*p_usrt->txbuffer.buffer & (uint8_t)0xFFU));
 6045              		.loc 1 2186 13
 6046 0068 9BB2     		uxth	r3, r3
 6047 006a 1946     		mov	r1, r3
 6048 006c 1046     		mov	r0, r2
 6049 006e FFF7FEFF 		bl	hals_usrt_data_transmit
2188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             p_usrt->txbuffer.buffer++;
 6050              		.loc 1 2188 29
 6051 0072 FB68     		ldr	r3, [r7, #12]
 6052 0074 DB69     		ldr	r3, [r3, #28]
 6053              		.loc 1 2188 36
 6054 0076 5A1C     		adds	r2, r3, #1
 6055 0078 FB68     		ldr	r3, [r7, #12]
 6056 007a DA61     		str	r2, [r3, #28]
 6057              	.L267:
2189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->txbuffer.pos++;
 6058              		.loc 1 2190 25
 6059 007c FB68     		ldr	r3, [r7, #12]
 6060 007e 5B6A     		ldr	r3, [r3, #36]
 6061              		.loc 1 2190 29
 6062 0080 5A1C     		adds	r2, r3, #1
 6063 0082 FB68     		ldr	r3, [r7, #12]
 6064 0084 5A62     		str	r2, [r3, #36]
2191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable the TBE interrupt, enable the TC interrupt and reset the transmit_ready_handle *
2193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_TBE);
2194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(p_usrt->periph, USART_INT_TC);
2195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->usrt_irq.transmit_ready_handle = NULL;
2196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 6065              		.loc 1 2197 1
 6066 0086 0EE0     		b	.L269
 6067              	.L265:
2193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(p_usrt->periph, USART_INT_TC);
 6068              		.loc 1 2193 9
 6069 0088 FB68     		ldr	r3, [r7, #12]
 6070 008a 1B68     		ldr	r3, [r3]
 6071 008c 0721     		movs	r1, #7
 6072 008e 1846     		mov	r0, r3
 6073 0090 FFF7FEFF 		bl	hals_usrt_interrupt_disable
2194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->usrt_irq.transmit_ready_handle = NULL;
 6074              		.loc 1 2194 9
 6075 0094 FB68     		ldr	r3, [r7, #12]
 6076 0096 1B68     		ldr	r3, [r3]
 6077 0098 0621     		movs	r1, #6
 6078 009a 1846     		mov	r0, r3
 6079 009c FFF7FEFF 		bl	hals_usrt_interrupt_enable
2195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
 6080              		.loc 1 2195 48
 6081 00a0 FB68     		ldr	r3, [r7, #12]
 6082 00a2 0022     		movs	r2, #0
 6083 00a4 9A60     		str	r2, [r3, #8]
 6084              	.L269:
 6085              		.loc 1 2197 1
 6086 00a6 00BF     		nop
 6087 00a8 1037     		adds	r7, r7, #16
 6088              		.cfi_def_cfa_offset 8
 6089 00aa BD46     		mov	sp, r7
 6090              		.cfi_def_cfa_register 13
 6091              		@ sp needed
 6092 00ac 80BD     		pop	{r7, pc}
 6093              		.cfi_endproc
 6094              	.LFE174:
 6096              		.section	.text._usrt_receive_interrupt,"ax",%progbits
 6097              		.align	1
 6098              		.syntax unified
 6099              		.thumb
 6100              		.thumb_func
 6101              		.fpu softvfp
 6103              	_usrt_receive_interrupt:
 6104              	.LFB175:
2198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the receive interrupt
2201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: pointer to a UART device information structure
2202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_receive_interrupt(void *usrt)
2206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 6105              		.loc 1 2206 1
 6106              		.cfi_startproc
 6107              		@ args = 0, pretend = 0, frame = 16
 6108              		@ frame_needed = 1, uses_anonymous_args = 0
 6109 0000 80B5     		push	{r7, lr}
 6110              		.cfi_def_cfa_offset 8
 6111              		.cfi_offset 7, -8
 6112              		.cfi_offset 14, -4
 6113 0002 84B0     		sub	sp, sp, #16
 6114              		.cfi_def_cfa_offset 24
 6115 0004 00AF     		add	r7, sp, #0
 6116              		.cfi_def_cfa_register 7
 6117 0006 7860     		str	r0, [r7, #4]
2207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt = usrt;
 6118              		.loc 1 2207 26
 6119 0008 7B68     		ldr	r3, [r7, #4]
 6120 000a FB60     		str	r3, [r7, #12]
2208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_user_cb p_func = (hal_usrt_user_cb)p_usrt->rx_callback;
 6121              		.loc 1 2208 55
 6122 000c FB68     		ldr	r3, [r7, #12]
 6123 000e DB6B     		ldr	r3, [r3, #60]
 6124              		.loc 1 2208 22
 6125 0010 BB60     		str	r3, [r7, #8]
2209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(0x1FFU == p_usrt->data_bit_mask) {
 6126              		.loc 1 2210 24
 6127 0012 FB68     		ldr	r3, [r7, #12]
 6128 0014 9B8E     		ldrh	r3, [r3, #52]
 6129              		.loc 1 2210 7
 6130 0016 40F2FF12 		movw	r2, #511
 6131 001a 9342     		cmp	r3, r2
 6132 001c 13D1     		bne	.L271
2211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* store the received data */
2212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         *(uint16_t *)p_usrt->rxbuffer.buffer = (hals_usrt_data_receive(p_usrt->periph) &
 6133              		.loc 1 2212 49
 6134 001e FB68     		ldr	r3, [r7, #12]
 6135 0020 1B68     		ldr	r3, [r3]
 6136 0022 1846     		mov	r0, r3
 6137 0024 FFF7FEFF 		bl	hals_usrt_data_receive
 6138 0028 0346     		mov	r3, r0
 6139 002a 1946     		mov	r1, r3
2213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                                 p_usrt->data_bit_mask);
 6140              		.loc 1 2213 55
 6141 002c FB68     		ldr	r3, [r7, #12]
 6142 002e 9A8E     		ldrh	r2, [r3, #52]
2212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                                 p_usrt->data_bit_mask);
 6143              		.loc 1 2212 38
 6144 0030 FB68     		ldr	r3, [r7, #12]
 6145 0032 9B6A     		ldr	r3, [r3, #40]
2212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                                 p_usrt->data_bit_mask);
 6146              		.loc 1 2212 46
 6147 0034 0A40     		ands	r2, r2, r1
 6148 0036 92B2     		uxth	r2, r2
 6149 0038 1A80     		strh	r2, [r3]	@ movhi
2214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rxbuffer.buffer += 2U;
 6150              		.loc 1 2214 33
 6151 003a FB68     		ldr	r3, [r7, #12]
 6152 003c 9B6A     		ldr	r3, [r3, #40]
 6153 003e 9A1C     		adds	r2, r3, #2
 6154 0040 FB68     		ldr	r3, [r7, #12]
 6155 0042 9A62     		str	r2, [r3, #40]
 6156 0044 13E0     		b	.L272
 6157              	.L271:
2215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* store the received data */
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         *p_usrt->rxbuffer.buffer = (uint8_t)(hals_usrt_data_receive(p_usrt->periph) &
 6158              		.loc 1 2217 46
 6159 0046 FB68     		ldr	r3, [r7, #12]
 6160 0048 1B68     		ldr	r3, [r3]
 6161 004a 1846     		mov	r0, r3
 6162 004c FFF7FEFF 		bl	hals_usrt_data_receive
 6163 0050 0346     		mov	r3, r0
 6164              		.loc 1 2217 36
 6165 0052 D9B2     		uxtb	r1, r3
2218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                              p_usrt->data_bit_mask);
 6166              		.loc 1 2218 52
 6167 0054 FB68     		ldr	r3, [r7, #12]
 6168 0056 9B8E     		ldrh	r3, [r3, #52]
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                              p_usrt->data_bit_mask);
 6169              		.loc 1 2217 36
 6170 0058 DAB2     		uxtb	r2, r3
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                              p_usrt->data_bit_mask);
 6171              		.loc 1 2217 26
 6172 005a FB68     		ldr	r3, [r7, #12]
 6173 005c 9B6A     		ldr	r3, [r3, #40]
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                              p_usrt->data_bit_mask);
 6174              		.loc 1 2217 36
 6175 005e 0A40     		ands	r2, r2, r1
 6176 0060 D2B2     		uxtb	r2, r2
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                              p_usrt->data_bit_mask);
 6177              		.loc 1 2217 34
 6178 0062 1A70     		strb	r2, [r3]
2219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rxbuffer.buffer++;
 6179              		.loc 1 2219 25
 6180 0064 FB68     		ldr	r3, [r7, #12]
 6181 0066 9B6A     		ldr	r3, [r3, #40]
 6182              		.loc 1 2219 32
 6183 0068 5A1C     		adds	r2, r3, #1
 6184 006a FB68     		ldr	r3, [r7, #12]
 6185 006c 9A62     		str	r2, [r3, #40]
 6186              	.L272:
2220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_usrt->rxbuffer.pos++;
 6187              		.loc 1 2221 21
 6188 006e FB68     		ldr	r3, [r7, #12]
 6189 0070 1B6B     		ldr	r3, [r3, #48]
 6190              		.loc 1 2221 25
 6191 0072 5A1C     		adds	r2, r3, #1
 6192 0074 FB68     		ldr	r3, [r7, #12]
 6193 0076 1A63     		str	r2, [r3, #48]
2222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(p_usrt->rxbuffer.pos == p_usrt->rxbuffer.length) {
 6194              		.loc 1 2223 24
 6195 0078 FB68     		ldr	r3, [r7, #12]
 6196 007a 1A6B     		ldr	r2, [r3, #48]
 6197              		.loc 1 2223 48
 6198 007c FB68     		ldr	r3, [r7, #12]
 6199 007e DB6A     		ldr	r3, [r3, #44]
 6200              		.loc 1 2223 7
 6201 0080 9A42     		cmp	r2, r3
 6202 0082 1FD1     		bne	.L274
2224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable PERR, ERR, RBNE interrupt */
2225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_PERR);
 6203              		.loc 1 2225 9
 6204 0084 FB68     		ldr	r3, [r7, #12]
 6205 0086 1B68     		ldr	r3, [r3]
 6206 0088 0821     		movs	r1, #8
 6207 008a 1846     		mov	r0, r3
 6208 008c FFF7FEFF 		bl	hals_usrt_interrupt_disable
2226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_ERR);
 6209              		.loc 1 2226 9
 6210 0090 FB68     		ldr	r3, [r7, #12]
 6211 0092 1B68     		ldr	r3, [r3]
 6212 0094 4FF40071 		mov	r1, #512
 6213 0098 1846     		mov	r0, r3
 6214 009a FFF7FEFF 		bl	hals_usrt_interrupt_disable
2227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_RBNE);
 6215              		.loc 1 2227 9
 6216 009e FB68     		ldr	r3, [r7, #12]
 6217 00a0 1B68     		ldr	r3, [r3]
 6218 00a2 0521     		movs	r1, #5
 6219 00a4 1846     		mov	r0, r3
 6220 00a6 FFF7FEFF 		bl	hals_usrt_interrupt_disable
2228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* reset receive_complete_handle and rx_state */
2230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->usrt_irq.receive_complete_handle = NULL;
 6221              		.loc 1 2230 50
 6222 00aa FB68     		ldr	r3, [r7, #12]
 6223 00ac 0022     		movs	r2, #0
 6224 00ae 5A60     		str	r2, [r3, #4]
2231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rx_state = USRT_STATE_FREE;
 6225              		.loc 1 2231 26
 6226 00b0 FB68     		ldr	r3, [r7, #12]
 6227 00b2 0022     		movs	r2, #0
 6228 00b4 83F83B20 		strb	r2, [r3, #59]
2232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(NULL != p_func) {
 6229              		.loc 1 2233 11
 6230 00b8 BB68     		ldr	r3, [r7, #8]
 6231 00ba 002B     		cmp	r3, #0
 6232 00bc 02D0     		beq	.L274
2234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             /* if there is a user receive complete callback */
2235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             p_func(p_usrt);
 6233              		.loc 1 2235 13
 6234 00be BB68     		ldr	r3, [r7, #8]
 6235 00c0 F868     		ldr	r0, [r7, #12]
 6236 00c2 9847     		blx	r3
 6237              	.LVL5:
 6238              	.L274:
2236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 6239              		.loc 1 2238 1
 6240 00c4 00BF     		nop
 6241 00c6 1037     		adds	r7, r7, #16
 6242              		.cfi_def_cfa_offset 8
 6243 00c8 BD46     		mov	sp, r7
 6244              		.cfi_def_cfa_register 13
 6245              		@ sp needed
 6246 00ca 80BD     		pop	{r7, pc}
 6247              		.cfi_endproc
 6248              	.LFE175:
 6250              		.section	.text._usrt_tx_rx_interrupt,"ax",%progbits
 6251              		.align	1
 6252              		.syntax unified
 6253              		.thumb
 6254              		.thumb_func
 6255              		.fpu softvfp
 6257              	_usrt_tx_rx_interrupt:
 6258              	.LFB176:
2239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the transmit and receive interrupt
2242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  usrt: pointer to a UART device information structure
2243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_tx_rx_interrupt(void *usrt)
2247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 6259              		.loc 1 2247 1
 6260              		.cfi_startproc
 6261              		@ args = 0, pretend = 0, frame = 24
 6262              		@ frame_needed = 1, uses_anonymous_args = 0
 6263 0000 80B5     		push	{r7, lr}
 6264              		.cfi_def_cfa_offset 8
 6265              		.cfi_offset 7, -8
 6266              		.cfi_offset 14, -4
 6267 0002 86B0     		sub	sp, sp, #24
 6268              		.cfi_def_cfa_offset 32
 6269 0004 00AF     		add	r7, sp, #0
 6270              		.cfi_def_cfa_register 7
 6271 0006 7860     		str	r0, [r7, #4]
2248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     uint16_t recv_data;
2249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt = usrt;
 6272              		.loc 1 2249 26
 6273 0008 7B68     		ldr	r3, [r7, #4]
 6274 000a 7B61     		str	r3, [r7, #20]
2250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY_TX_RX == p_usrt->tx_state) {
 6275              		.loc 1 2251 39
 6276 000c 7B69     		ldr	r3, [r7, #20]
 6277 000e 93F83A30 		ldrb	r3, [r3, #58]
 6278 0012 DBB2     		uxtb	r3, r3
 6279              		.loc 1 2251 7
 6280 0014 022B     		cmp	r3, #2
 6281 0016 54D1     		bne	.L276
2252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the TBE is set or not */
2253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_flag_get(p_usrt->periph, USART_FLAG_TBE)) {
 6282              		.loc 1 2253 21
 6283 0018 7B69     		ldr	r3, [r7, #20]
 6284 001a 1B68     		ldr	r3, [r3]
 6285 001c 40F20771 		movw	r1, #1799
 6286 0020 1846     		mov	r0, r3
 6287 0022 FFF7FEFF 		bl	hals_usrt_flag_get
 6288 0026 0346     		mov	r3, r0
 6289              		.loc 1 2253 11
 6290 0028 002B     		cmp	r3, #0
 6291 002a 4AD0     		beq	.L276
2254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(p_usrt->txbuffer.pos < p_usrt->txbuffer.length) {
 6292              		.loc 1 2254 32
 6293 002c 7B69     		ldr	r3, [r7, #20]
 6294 002e 5A6A     		ldr	r2, [r3, #36]
 6295              		.loc 1 2254 55
 6296 0030 7B69     		ldr	r3, [r7, #20]
 6297 0032 1B6A     		ldr	r3, [r3, #32]
 6298              		.loc 1 2254 15
 6299 0034 9A42     		cmp	r2, r3
 6300 0036 35D2     		bcs	.L277
2255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if((RESET != (USART_CTL0(p_usrt->periph) & USART_CTL0_WL)) && \
 6301              		.loc 1 2255 31
 6302 0038 7B69     		ldr	r3, [r7, #20]
 6303 003a 1B68     		ldr	r3, [r3]
 6304 003c 1B68     		ldr	r3, [r3]
 6305              		.loc 1 2255 58
 6306 003e 03F48053 		and	r3, r3, #4096
 6307              		.loc 1 2255 19
 6308 0042 002B     		cmp	r3, #0
 6309 0044 18D0     		beq	.L278
2256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                         (RESET == (USART_CTL0(p_usrt->periph) & USART_CTL0_PCEN))) {
 6310              		.loc 1 2256 36 discriminator 1
 6311 0046 7B69     		ldr	r3, [r7, #20]
 6312 0048 1B68     		ldr	r3, [r3]
 6313 004a 1B68     		ldr	r3, [r3]
 6314              		.loc 1 2256 63 discriminator 1
 6315 004c 03F48063 		and	r3, r3, #1024
2255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 if((RESET != (USART_CTL0(p_usrt->periph) & USART_CTL0_WL)) && \
 6316              		.loc 1 2255 76 discriminator 1
 6317 0050 002B     		cmp	r3, #0
 6318 0052 11D1     		bne	.L278
2257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* 9-bit data, none parity */
2258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     hals_usrt_data_transmit(p_usrt->periph,
 6319              		.loc 1 2258 21
 6320 0054 7B69     		ldr	r3, [r7, #20]
 6321 0056 1A68     		ldr	r2, [r3]
2259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                             (*(uint16_t *)p_usrt->txbuffer.buffer & (uint16_t)0x1FF
 6322              		.loc 1 2259 75
 6323 0058 7B69     		ldr	r3, [r7, #20]
 6324 005a DB69     		ldr	r3, [r3, #28]
 6325              		.loc 1 2259 46
 6326 005c 1B88     		ldrh	r3, [r3]
2258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                             (*(uint16_t *)p_usrt->txbuffer.buffer & (uint16_t)0x1FF
 6327              		.loc 1 2258 21
 6328 005e C3F30803 		ubfx	r3, r3, #0, #9
 6329 0062 9BB2     		uxth	r3, r3
 6330 0064 1946     		mov	r1, r3
 6331 0066 1046     		mov	r0, r2
 6332 0068 FFF7FEFF 		bl	hals_usrt_data_transmit
2260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     p_usrt->txbuffer.buffer += 2U;
 6333              		.loc 1 2260 45
 6334 006c 7B69     		ldr	r3, [r7, #20]
 6335 006e DB69     		ldr	r3, [r3, #28]
 6336 0070 9A1C     		adds	r2, r3, #2
 6337 0072 7B69     		ldr	r3, [r7, #20]
 6338 0074 DA61     		str	r2, [r3, #28]
 6339 0076 0FE0     		b	.L279
 6340              	.L278:
2261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 } else {
2262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     /* 9-bit data, with parity or 8-bit data */
2263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     hals_usrt_data_transmit(p_usrt->periph,
 6341              		.loc 1 2263 21
 6342 0078 7B69     		ldr	r3, [r7, #20]
 6343 007a 1A68     		ldr	r2, [r3]
2264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                             (*p_usrt->txbuffer.buffer & (uint8_t)0xFFU));
 6344              		.loc 1 2264 63
 6345 007c 7B69     		ldr	r3, [r7, #20]
 6346 007e DB69     		ldr	r3, [r3, #28]
 6347              		.loc 1 2264 46
 6348 0080 1B78     		ldrb	r3, [r3]
 6349 0082 DBB2     		uxtb	r3, r3
2263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                                             (*p_usrt->txbuffer.buffer & (uint8_t)0xFFU));
 6350              		.loc 1 2263 21
 6351 0084 9BB2     		uxth	r3, r3
 6352 0086 1946     		mov	r1, r3
 6353 0088 1046     		mov	r0, r2
 6354 008a FFF7FEFF 		bl	hals_usrt_data_transmit
2265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                     p_usrt->txbuffer.buffer++;
 6355              		.loc 1 2265 37
 6356 008e 7B69     		ldr	r3, [r7, #20]
 6357 0090 DB69     		ldr	r3, [r3, #28]
 6358              		.loc 1 2265 44
 6359 0092 5A1C     		adds	r2, r3, #1
 6360 0094 7B69     		ldr	r3, [r7, #20]
 6361 0096 DA61     		str	r2, [r3, #28]
 6362              	.L279:
2266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 }
2267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 p_usrt->txbuffer.pos++;
 6363              		.loc 1 2267 33
 6364 0098 7B69     		ldr	r3, [r7, #20]
 6365 009a 5B6A     		ldr	r3, [r3, #36]
 6366              		.loc 1 2267 37
 6367 009c 5A1C     		adds	r2, r3, #1
 6368 009e 7B69     		ldr	r3, [r7, #20]
 6369 00a0 5A62     		str	r2, [r3, #36]
 6370 00a2 0EE0     		b	.L276
 6371              	.L277:
2268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             } else {
2269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 /* disable the TBE interrupt */
2270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_TBE);
 6372              		.loc 1 2270 17
 6373 00a4 7B69     		ldr	r3, [r7, #20]
 6374 00a6 1B68     		ldr	r3, [r3]
 6375 00a8 0721     		movs	r1, #7
 6376 00aa 1846     		mov	r0, r3
 6377 00ac FFF7FEFF 		bl	hals_usrt_interrupt_disable
2271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 hals_usrt_interrupt_enable(p_usrt->periph, USART_INT_TC);
 6378              		.loc 1 2271 17
 6379 00b0 7B69     		ldr	r3, [r7, #20]
 6380 00b2 1B68     		ldr	r3, [r3]
 6381 00b4 0621     		movs	r1, #6
 6382 00b6 1846     		mov	r0, r3
 6383 00b8 FFF7FEFF 		bl	hals_usrt_interrupt_enable
2272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 p_usrt->usrt_irq.transmit_ready_handle = NULL;
 6384              		.loc 1 2272 56
 6385 00bc 7B69     		ldr	r3, [r7, #20]
 6386 00be 0022     		movs	r2, #0
 6387 00c0 9A60     		str	r2, [r3, #8]
 6388              	.L276:
2273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
2274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY_TX_RX == p_usrt->rx_state) {
 6389              		.loc 1 2276 39
 6390 00c2 7B69     		ldr	r3, [r7, #20]
 6391 00c4 93F83B30 		ldrb	r3, [r3, #59]
 6392 00c8 DBB2     		uxtb	r3, r3
 6393              		.loc 1 2276 7
 6394 00ca 022B     		cmp	r3, #2
 6395 00cc 5CD1     		bne	.L284
2277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* check whether the RBNE is set or not */
2278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(RESET != hals_usrt_flag_get(p_usrt->periph, USART_FLAG_RBNE)) {
 6396              		.loc 1 2278 21
 6397 00ce 7B69     		ldr	r3, [r7, #20]
 6398 00d0 1B68     		ldr	r3, [r3]
 6399 00d2 40F20571 		movw	r1, #1797
 6400 00d6 1846     		mov	r0, r3
 6401 00d8 FFF7FEFF 		bl	hals_usrt_flag_get
 6402 00dc 0346     		mov	r3, r0
 6403              		.loc 1 2278 11
 6404 00de 002B     		cmp	r3, #0
 6405 00e0 29D0     		beq	.L281
2279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             recv_data = (hals_usrt_data_receive(p_usrt->periph) & p_usrt->data_bit_mask);
 6406              		.loc 1 2279 26
 6407 00e2 7B69     		ldr	r3, [r7, #20]
 6408 00e4 1B68     		ldr	r3, [r3]
 6409 00e6 1846     		mov	r0, r3
 6410 00e8 FFF7FEFF 		bl	hals_usrt_data_receive
 6411 00ec 0346     		mov	r3, r0
 6412 00ee 1A46     		mov	r2, r3
 6413              		.loc 1 2279 73
 6414 00f0 7B69     		ldr	r3, [r7, #20]
 6415 00f2 9B8E     		ldrh	r3, [r3, #52]
 6416              		.loc 1 2279 23
 6417 00f4 1340     		ands	r3, r3, r2
 6418 00f6 7B82     		strh	r3, [r7, #18]	@ movhi
2280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(0x1FFU == p_usrt->data_bit_mask) {
 6419              		.loc 1 2280 32
 6420 00f8 7B69     		ldr	r3, [r7, #20]
 6421 00fa 9B8E     		ldrh	r3, [r3, #52]
 6422              		.loc 1 2280 15
 6423 00fc 40F2FF12 		movw	r2, #511
 6424 0100 9342     		cmp	r3, r2
 6425 0102 09D1     		bne	.L282
2281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 /* 9-bit data, none parity */
2282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 *(uint16_t *)p_usrt->rxbuffer.buffer = recv_data;
 6426              		.loc 1 2282 46
 6427 0104 7B69     		ldr	r3, [r7, #20]
 6428 0106 9B6A     		ldr	r3, [r3, #40]
 6429              		.loc 1 2282 54
 6430 0108 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6431 010a 1A80     		strh	r2, [r3]	@ movhi
2283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 p_usrt->rxbuffer.buffer += 2U;
 6432              		.loc 1 2283 41
 6433 010c 7B69     		ldr	r3, [r7, #20]
 6434 010e 9B6A     		ldr	r3, [r3, #40]
 6435 0110 9A1C     		adds	r2, r3, #2
 6436 0112 7B69     		ldr	r3, [r7, #20]
 6437 0114 9A62     		str	r2, [r3, #40]
 6438 0116 09E0     		b	.L283
 6439              	.L282:
2284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             } else {
2285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 /* 9-bit data, with parity or 8-bit data */
2286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 *p_usrt->rxbuffer.buffer = (uint8_t)recv_data;
 6440              		.loc 1 2286 34
 6441 0118 7B69     		ldr	r3, [r7, #20]
 6442 011a 9B6A     		ldr	r3, [r3, #40]
 6443              		.loc 1 2286 44
 6444 011c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6445 011e D2B2     		uxtb	r2, r2
 6446              		.loc 1 2286 42
 6447 0120 1A70     		strb	r2, [r3]
2287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 p_usrt->rxbuffer.buffer++;
 6448              		.loc 1 2287 33
 6449 0122 7B69     		ldr	r3, [r7, #20]
 6450 0124 9B6A     		ldr	r3, [r3, #40]
 6451              		.loc 1 2287 40
 6452 0126 5A1C     		adds	r2, r3, #1
 6453 0128 7B69     		ldr	r3, [r7, #20]
 6454 012a 9A62     		str	r2, [r3, #40]
 6455              	.L283:
2288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
2289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             p_usrt->rxbuffer.pos++;
 6456              		.loc 1 2289 29
 6457 012c 7B69     		ldr	r3, [r7, #20]
 6458 012e 1B6B     		ldr	r3, [r3, #48]
 6459              		.loc 1 2289 33
 6460 0130 5A1C     		adds	r2, r3, #1
 6461 0132 7B69     		ldr	r3, [r7, #20]
 6462 0134 1A63     		str	r2, [r3, #48]
 6463              	.L281:
2290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         if(p_usrt->rxbuffer.pos == p_usrt->rxbuffer.length) {
 6464              		.loc 1 2292 28
 6465 0136 7B69     		ldr	r3, [r7, #20]
 6466 0138 1A6B     		ldr	r2, [r3, #48]
 6467              		.loc 1 2292 52
 6468 013a 7B69     		ldr	r3, [r7, #20]
 6469 013c DB6A     		ldr	r3, [r3, #44]
 6470              		.loc 1 2292 11
 6471 013e 9A42     		cmp	r2, r3
 6472 0140 22D1     		bne	.L284
 6473              	.LBB2:
2293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hal_usrt_user_cb p_func = (hal_usrt_user_cb)p_usrt->rx_callback;
 6474              		.loc 1 2293 63
 6475 0142 7B69     		ldr	r3, [r7, #20]
 6476 0144 DB6B     		ldr	r3, [r3, #60]
 6477              		.loc 1 2293 30
 6478 0146 FB60     		str	r3, [r7, #12]
2294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             /* disable PERR, ERR, RBNE interrupt */
2295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_PERR);
 6479              		.loc 1 2295 13
 6480 0148 7B69     		ldr	r3, [r7, #20]
 6481 014a 1B68     		ldr	r3, [r3]
 6482 014c 0821     		movs	r1, #8
 6483 014e 1846     		mov	r0, r3
 6484 0150 FFF7FEFF 		bl	hals_usrt_interrupt_disable
2296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_ERR);
 6485              		.loc 1 2296 13
 6486 0154 7B69     		ldr	r3, [r7, #20]
 6487 0156 1B68     		ldr	r3, [r3]
 6488 0158 4FF40071 		mov	r1, #512
 6489 015c 1846     		mov	r0, r3
 6490 015e FFF7FEFF 		bl	hals_usrt_interrupt_disable
2297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_RBNE);
 6491              		.loc 1 2297 13
 6492 0162 7B69     		ldr	r3, [r7, #20]
 6493 0164 1B68     		ldr	r3, [r3]
 6494 0166 0521     		movs	r1, #5
 6495 0168 1846     		mov	r0, r3
 6496 016a FFF7FEFF 		bl	hals_usrt_interrupt_disable
2298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             /* reset receive_complete_handle and rx_state */
2299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             p_usrt->usrt_irq.receive_complete_handle = NULL;
 6497              		.loc 1 2299 54
 6498 016e 7B69     		ldr	r3, [r7, #20]
 6499 0170 0022     		movs	r2, #0
 6500 0172 5A60     		str	r2, [r3, #4]
2300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             p_usrt->rx_state = USRT_STATE_FREE;
 6501              		.loc 1 2300 30
 6502 0174 7B69     		ldr	r3, [r7, #20]
 6503 0176 0022     		movs	r2, #0
 6504 0178 83F83B20 		strb	r2, [r3, #59]
2301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             if(NULL != p_func) {
 6505              		.loc 1 2302 15
 6506 017c FB68     		ldr	r3, [r7, #12]
 6507 017e 002B     		cmp	r3, #0
 6508 0180 02D0     		beq	.L284
2303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 /* if there is a user Tx Rx complete callback */
2304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****                 p_func(p_usrt);
 6509              		.loc 1 2304 17
 6510 0182 FB68     		ldr	r3, [r7, #12]
 6511 0184 7869     		ldr	r0, [r7, #20]
 6512 0186 9847     		blx	r3
 6513              	.LVL6:
 6514              	.L284:
 6515              	.LBE2:
2305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****             }
2306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         }
2307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 6516              		.loc 1 2308 1
 6517 0188 00BF     		nop
 6518 018a 1837     		adds	r7, r7, #24
 6519              		.cfi_def_cfa_offset 8
 6520 018c BD46     		mov	sp, r7
 6521              		.cfi_def_cfa_register 13
 6522              		@ sp needed
 6523 018e 80BD     		pop	{r7, pc}
 6524              		.cfi_endproc
 6525              	.LFE176:
 6527              		.section	.text._usrt_transmit_dma,"ax",%progbits
 6528              		.align	1
 6529              		.syntax unified
 6530              		.thumb
 6531              		.thumb_func
 6532              		.fpu softvfp
 6534              	_usrt_transmit_dma:
 6535              	.LFB177:
2309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the usrt DMA transmit process
2312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  dma: pointer to a DMA device information structure
2313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_transmit_dma(void *dma)
2317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 6536              		.loc 1 2317 1
 6537              		.cfi_startproc
 6538              		@ args = 0, pretend = 0, frame = 16
 6539              		@ frame_needed = 1, uses_anonymous_args = 0
 6540 0000 80B5     		push	{r7, lr}
 6541              		.cfi_def_cfa_offset 8
 6542              		.cfi_offset 7, -8
 6543              		.cfi_offset 14, -4
 6544 0002 84B0     		sub	sp, sp, #16
 6545              		.cfi_def_cfa_offset 24
 6546 0004 00AF     		add	r7, sp, #0
 6547              		.cfi_def_cfa_register 7
 6548 0006 7860     		str	r0, [r7, #4]
2318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_dev_struct *p_dma;
2319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt;
2320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_dma = (hal_dma_dev_struct *)dma;
 6549              		.loc 1 2321 11
 6550 0008 7B68     		ldr	r3, [r7, #4]
 6551 000a FB60     		str	r3, [r7, #12]
2322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_usrt = (hal_usrt_dev_struct *)p_dma->p_periph;
 6552              		.loc 1 2322 12
 6553 000c FB68     		ldr	r3, [r7, #12]
 6554 000e 5B69     		ldr	r3, [r3, #20]
 6555 0010 BB60     		str	r3, [r7, #8]
2323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* DMA normal mode */
2325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET == (DMA_CHCTL(p_dma->channel) & DMA_CHXCTL_CMEN)) {
 6556              		.loc 1 2325 18
 6557 0012 FB68     		ldr	r3, [r7, #12]
 6558 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6559 0016 1A46     		mov	r2, r3
 6560 0018 1346     		mov	r3, r2
 6561 001a 9B00     		lsls	r3, r3, #2
 6562 001c 1344     		add	r3, r3, r2
 6563 001e 9B00     		lsls	r3, r3, #2
 6564 0020 1A46     		mov	r2, r3
 6565 0022 0D4B     		ldr	r3, .L288
 6566 0024 1344     		add	r3, r3, r2
 6567 0026 1B68     		ldr	r3, [r3]
 6568              		.loc 1 2325 44
 6569 0028 03F02003 		and	r3, r3, #32
 6570              		.loc 1 2325 7
 6571 002c 002B     		cmp	r3, #0
 6572 002e 0FD1     		bne	.L287
2326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->txbuffer.pos = p_usrt->txbuffer.length;
 6573              		.loc 1 2326 48
 6574 0030 BB68     		ldr	r3, [r7, #8]
 6575 0032 1A6A     		ldr	r2, [r3, #32]
 6576              		.loc 1 2326 30
 6577 0034 BB68     		ldr	r3, [r7, #8]
 6578 0036 5A62     		str	r2, [r3, #36]
2327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_transmit_config(p_usrt->periph, USART_TRANSMIT_DMA_DISABLE);
 6579              		.loc 1 2327 9
 6580 0038 BB68     		ldr	r3, [r7, #8]
 6581 003a 1B68     		ldr	r3, [r3]
 6582 003c 0021     		movs	r1, #0
 6583 003e 1846     		mov	r0, r3
 6584 0040 FFF7FEFF 		bl	hals_usrt_dma_transmit_config
2328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* enable TC interrupt */
2329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_enable(p_usrt->periph, USART_INT_TC);
 6585              		.loc 1 2329 9
 6586 0044 BB68     		ldr	r3, [r7, #8]
 6587 0046 1B68     		ldr	r3, [r3]
 6588 0048 0621     		movs	r1, #6
 6589 004a 1846     		mov	r0, r3
 6590 004c FFF7FEFF 		bl	hals_usrt_interrupt_enable
 6591              	.L287:
2330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 6592              		.loc 1 2331 1
 6593 0050 00BF     		nop
 6594 0052 1037     		adds	r7, r7, #16
 6595              		.cfi_def_cfa_offset 8
 6596 0054 BD46     		mov	sp, r7
 6597              		.cfi_def_cfa_register 13
 6598              		@ sp needed
 6599 0056 80BD     		pop	{r7, pc}
 6600              	.L289:
 6601              		.align	2
 6602              	.L288:
 6603 0058 08000240 		.word	1073872904
 6604              		.cfi_endproc
 6605              	.LFE177:
 6607              		.section	.text._usrt_receive_dma,"ax",%progbits
 6608              		.align	1
 6609              		.syntax unified
 6610              		.thumb
 6611              		.thumb_func
 6612              		.fpu softvfp
 6614              	_usrt_receive_dma:
 6615              	.LFB178:
2332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the usrt DMA receive process
2335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  dma: pointer to a DMA device information structure
2336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_receive_dma(void *dma)
2340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 6616              		.loc 1 2340 1
 6617              		.cfi_startproc
 6618              		@ args = 0, pretend = 0, frame = 24
 6619              		@ frame_needed = 1, uses_anonymous_args = 0
 6620 0000 80B5     		push	{r7, lr}
 6621              		.cfi_def_cfa_offset 8
 6622              		.cfi_offset 7, -8
 6623              		.cfi_offset 14, -4
 6624 0002 86B0     		sub	sp, sp, #24
 6625              		.cfi_def_cfa_offset 32
 6626 0004 00AF     		add	r7, sp, #0
 6627              		.cfi_def_cfa_register 7
 6628 0006 7860     		str	r0, [r7, #4]
2341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_dev_struct *p_dma;
2342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt;
2343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_user_cb p_func;
2344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_dma = (hal_dma_dev_struct *)dma;
 6629              		.loc 1 2345 11
 6630 0008 7B68     		ldr	r3, [r7, #4]
 6631 000a 7B61     		str	r3, [r7, #20]
2346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_usrt = (hal_usrt_dev_struct *)p_dma->p_periph;
 6632              		.loc 1 2346 12
 6633 000c 7B69     		ldr	r3, [r7, #20]
 6634 000e 5B69     		ldr	r3, [r3, #20]
 6635 0010 3B61     		str	r3, [r7, #16]
2347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_func = (hal_usrt_user_cb)p_usrt->rx_callback;
 6636              		.loc 1 2347 38
 6637 0012 3B69     		ldr	r3, [r7, #16]
 6638 0014 DB6B     		ldr	r3, [r3, #60]
 6639              		.loc 1 2347 12
 6640 0016 FB60     		str	r3, [r7, #12]
2348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     /* DMA normal mode */
2350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(RESET == (DMA_CHCTL(p_dma->channel) & DMA_CHXCTL_CMEN)) {
 6641              		.loc 1 2350 18
 6642 0018 7B69     		ldr	r3, [r7, #20]
 6643 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6644 001c 1A46     		mov	r2, r3
 6645 001e 1346     		mov	r3, r2
 6646 0020 9B00     		lsls	r3, r3, #2
 6647 0022 1344     		add	r3, r3, r2
 6648 0024 9B00     		lsls	r3, r3, #2
 6649 0026 1A46     		mov	r2, r3
 6650 0028 154B     		ldr	r3, .L294
 6651 002a 1344     		add	r3, r3, r2
 6652 002c 1B68     		ldr	r3, [r3]
 6653              		.loc 1 2350 44
 6654 002e 03F02003 		and	r3, r3, #32
 6655              		.loc 1 2350 7
 6656 0032 002B     		cmp	r3, #0
 6657 0034 1AD1     		bne	.L291
2351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rxbuffer.pos = p_usrt->rxbuffer.length;
 6658              		.loc 1 2351 48
 6659 0036 3B69     		ldr	r3, [r7, #16]
 6660 0038 DA6A     		ldr	r2, [r3, #44]
 6661              		.loc 1 2351 30
 6662 003a 3B69     		ldr	r3, [r7, #16]
 6663 003c 1A63     		str	r2, [r3, #48]
2352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable DMA receive, PERR and ERR interrupt */
2353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_receive_config(p_usrt->periph, USART_RECEIVE_DMA_DISABLE);
 6664              		.loc 1 2353 9
 6665 003e 3B69     		ldr	r3, [r7, #16]
 6666 0040 1B68     		ldr	r3, [r3]
 6667 0042 0021     		movs	r1, #0
 6668 0044 1846     		mov	r0, r3
 6669 0046 FFF7FEFF 		bl	hals_usrt_dma_receive_config
2354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_PERR);
 6670              		.loc 1 2354 9
 6671 004a 3B69     		ldr	r3, [r7, #16]
 6672 004c 1B68     		ldr	r3, [r3]
 6673 004e 0821     		movs	r1, #8
 6674 0050 1846     		mov	r0, r3
 6675 0052 FFF7FEFF 		bl	hals_usrt_interrupt_disable
2355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_ERR);
 6676              		.loc 1 2355 9
 6677 0056 3B69     		ldr	r3, [r7, #16]
 6678 0058 1B68     		ldr	r3, [r3]
 6679 005a 4FF40071 		mov	r1, #512
 6680 005e 1846     		mov	r0, r3
 6681 0060 FFF7FEFF 		bl	hals_usrt_interrupt_disable
2356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* reset rx_state */
2357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rx_state = USRT_STATE_FREE;
 6682              		.loc 1 2357 26
 6683 0064 3B69     		ldr	r3, [r7, #16]
 6684 0066 0022     		movs	r2, #0
 6685 0068 83F83B20 		strb	r2, [r3, #59]
 6686              	.L291:
2358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(NULL != p_func) {
 6687              		.loc 1 2360 7
 6688 006c FB68     		ldr	r3, [r7, #12]
 6689 006e 002B     		cmp	r3, #0
 6690 0070 02D0     		beq	.L293
2361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* if there is a user receive complete callback */
2362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_func(p_usrt);
 6691              		.loc 1 2362 9
 6692 0072 FB68     		ldr	r3, [r7, #12]
 6693 0074 3869     		ldr	r0, [r7, #16]
 6694 0076 9847     		blx	r3
 6695              	.LVL7:
 6696              	.L293:
2363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 6697              		.loc 1 2364 1
 6698 0078 00BF     		nop
 6699 007a 1837     		adds	r7, r7, #24
 6700              		.cfi_def_cfa_offset 8
 6701 007c BD46     		mov	sp, r7
 6702              		.cfi_def_cfa_register 13
 6703              		@ sp needed
 6704 007e 80BD     		pop	{r7, pc}
 6705              	.L295:
 6706              		.align	2
 6707              	.L294:
 6708 0080 08000240 		.word	1073872904
 6709              		.cfi_endproc
 6710              	.LFE178:
 6712              		.section	.text._usrt_dma_error,"ax",%progbits
 6713              		.align	1
 6714              		.syntax unified
 6715              		.thumb
 6716              		.thumb_func
 6717              		.fpu softvfp
 6719              	_usrt_dma_error:
 6720              	.LFB179:
2365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** /*!
2367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \brief      handle the UART DMA error process
2368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[in]  dma: pointer to a DMA device information structure
2369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \param[out] none
2370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     \retval     none
2371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** */
2372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** static void _usrt_dma_error(void *dma)
2373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** {
 6721              		.loc 1 2373 1
 6722              		.cfi_startproc
 6723              		@ args = 0, pretend = 0, frame = 16
 6724              		@ frame_needed = 1, uses_anonymous_args = 0
 6725 0000 80B5     		push	{r7, lr}
 6726              		.cfi_def_cfa_offset 8
 6727              		.cfi_offset 7, -8
 6728              		.cfi_offset 14, -4
 6729 0002 84B0     		sub	sp, sp, #16
 6730              		.cfi_def_cfa_offset 24
 6731 0004 00AF     		add	r7, sp, #0
 6732              		.cfi_def_cfa_register 7
 6733 0006 7860     		str	r0, [r7, #4]
2374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_dma_dev_struct *p_dma;
2375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     hal_usrt_dev_struct *p_usrt;
2376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_dma = (hal_dma_dev_struct *)dma;
 6734              		.loc 1 2377 11
 6735 0008 7B68     		ldr	r3, [r7, #4]
 6736 000a FB60     		str	r3, [r7, #12]
2378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     p_usrt = (hal_usrt_dev_struct *)p_dma->p_periph;
 6737              		.loc 1 2378 12
 6738 000c FB68     		ldr	r3, [r7, #12]
 6739 000e 5B69     		ldr	r3, [r3, #20]
 6740 0010 BB60     		str	r3, [r7, #8]
2379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(USRT_STATE_BUSY == p_usrt->tx_state) {
 6741              		.loc 1 2380 33
 6742 0012 BB68     		ldr	r3, [r7, #8]
 6743 0014 93F83A30 		ldrb	r3, [r3, #58]
 6744 0018 DBB2     		uxtb	r3, r3
 6745              		.loc 1 2380 7
 6746 001a 012B     		cmp	r3, #1
 6747 001c 19D1     		bne	.L297
2381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* transmit state is busy */
2382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->error_state |= HAL_USRT_ERROR_DMATX;
 6748              		.loc 1 2382 29
 6749 001e BB68     		ldr	r3, [r7, #8]
 6750 0020 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 6751 0022 9BB2     		uxth	r3, r3
 6752 0024 43F01003 		orr	r3, r3, #16
 6753 0028 9AB2     		uxth	r2, r3
 6754 002a BB68     		ldr	r3, [r7, #8]
 6755 002c 1A87     		strh	r2, [r3, #56]	@ movhi
2383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->last_error = HAL_USRT_ERROR_DMATX;
 6756              		.loc 1 2383 28
 6757 002e BB68     		ldr	r3, [r7, #8]
 6758 0030 1022     		movs	r2, #16
 6759 0032 DA86     		strh	r2, [r3, #54]	@ movhi
2384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->txbuffer.pos = p_usrt->txbuffer.length;
 6760              		.loc 1 2384 48
 6761 0034 BB68     		ldr	r3, [r7, #8]
 6762 0036 1A6A     		ldr	r2, [r3, #32]
 6763              		.loc 1 2384 30
 6764 0038 BB68     		ldr	r3, [r7, #8]
 6765 003a 5A62     		str	r2, [r3, #36]
2385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable DMA transmit and reset tx_state */
2387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_transmit_config(p_usrt->periph, USART_TRANSMIT_DMA_DISABLE);
 6766              		.loc 1 2387 9
 6767 003c BB68     		ldr	r3, [r7, #8]
 6768 003e 1B68     		ldr	r3, [r3]
 6769 0040 0021     		movs	r1, #0
 6770 0042 1846     		mov	r0, r3
 6771 0044 FFF7FEFF 		bl	hals_usrt_dma_transmit_config
2388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->tx_state = USRT_STATE_FREE;
 6772              		.loc 1 2388 26
 6773 0048 BB68     		ldr	r3, [r7, #8]
 6774 004a 0022     		movs	r2, #0
 6775 004c 83F83A20 		strb	r2, [r3, #58]
 6776 0050 2BE0     		b	.L298
 6777              	.L297:
2389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else if(USRT_STATE_BUSY == p_usrt->rx_state) {
 6778              		.loc 1 2389 40
 6779 0052 BB68     		ldr	r3, [r7, #8]
 6780 0054 93F83B30 		ldrb	r3, [r3, #59]
 6781 0058 DBB2     		uxtb	r3, r3
 6782              		.loc 1 2389 14
 6783 005a 012B     		cmp	r3, #1
 6784 005c 25D1     		bne	.L298
2390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* receive state is busy */
2391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->error_state |= HAL_USRT_ERROR_DMARX;
 6785              		.loc 1 2391 29
 6786 005e BB68     		ldr	r3, [r7, #8]
 6787 0060 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 6788 0062 9BB2     		uxth	r3, r3
 6789 0064 43F02003 		orr	r3, r3, #32
 6790 0068 9AB2     		uxth	r2, r3
 6791 006a BB68     		ldr	r3, [r7, #8]
 6792 006c 1A87     		strh	r2, [r3, #56]	@ movhi
2392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->last_error = HAL_USRT_ERROR_DMARX;
 6793              		.loc 1 2392 28
 6794 006e BB68     		ldr	r3, [r7, #8]
 6795 0070 2022     		movs	r2, #32
 6796 0072 DA86     		strh	r2, [r3, #54]	@ movhi
2393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rxbuffer.pos = p_usrt->rxbuffer.length;
 6797              		.loc 1 2393 48
 6798 0074 BB68     		ldr	r3, [r7, #8]
 6799 0076 DA6A     		ldr	r2, [r3, #44]
 6800              		.loc 1 2393 30
 6801 0078 BB68     		ldr	r3, [r7, #8]
 6802 007a 1A63     		str	r2, [r3, #48]
2394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* disable DMA receive, PERR, ERR interrupt */
2396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_dma_receive_config(p_usrt->periph, USART_RECEIVE_DMA_DISABLE);
 6803              		.loc 1 2396 9
 6804 007c BB68     		ldr	r3, [r7, #8]
 6805 007e 1B68     		ldr	r3, [r3]
 6806 0080 0021     		movs	r1, #0
 6807 0082 1846     		mov	r0, r3
 6808 0084 FFF7FEFF 		bl	hals_usrt_dma_receive_config
2397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_PERR);
 6809              		.loc 1 2397 9
 6810 0088 BB68     		ldr	r3, [r7, #8]
 6811 008a 1B68     		ldr	r3, [r3]
 6812 008c 0821     		movs	r1, #8
 6813 008e 1846     		mov	r0, r3
 6814 0090 FFF7FEFF 		bl	hals_usrt_interrupt_disable
2398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         hals_usrt_interrupt_disable(p_usrt->periph, USART_INT_ERR);
 6815              		.loc 1 2398 9
 6816 0094 BB68     		ldr	r3, [r7, #8]
 6817 0096 1B68     		ldr	r3, [r3]
 6818 0098 4FF40071 		mov	r1, #512
 6819 009c 1846     		mov	r0, r3
 6820 009e FFF7FEFF 		bl	hals_usrt_interrupt_disable
2399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* reset rx_state */
2401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->rx_state = USRT_STATE_FREE;
 6821              		.loc 1 2401 26
 6822 00a2 BB68     		ldr	r3, [r7, #8]
 6823 00a4 0022     		movs	r2, #0
 6824 00a6 83F83B20 		strb	r2, [r3, #59]
 6825              	.L298:
2402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     } else {
2403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         HAL_DEBUGE("usrt processor fatal error: dma error exception due to run state");
2404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** 
2406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     if(p_usrt->usrt_irq.error_handle != NULL) {
 6826              		.loc 1 2406 24
 6827 00aa BB68     		ldr	r3, [r7, #8]
 6828 00ac 1B69     		ldr	r3, [r3, #16]
 6829              		.loc 1 2406 7
 6830 00ae 002B     		cmp	r3, #0
 6831 00b0 06D0     		beq	.L300
2407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         /* if there is a user error callback */
2408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->usrt_irq.error_handle(p_usrt);
 6832              		.loc 1 2408 25
 6833 00b2 BB68     		ldr	r3, [r7, #8]
 6834 00b4 1B69     		ldr	r3, [r3, #16]
 6835              		.loc 1 2408 9
 6836 00b6 B868     		ldr	r0, [r7, #8]
 6837 00b8 9847     		blx	r3
 6838              	.LVL8:
2409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****         p_usrt->error_state = HAL_USRT_ERROR_NONE;
 6839              		.loc 1 2409 29
 6840 00ba BB68     		ldr	r3, [r7, #8]
 6841 00bc 0022     		movs	r2, #0
 6842 00be 1A87     		strh	r2, [r3, #56]	@ movhi
 6843              	.L300:
2410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c ****     }
2411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_usrt.c **** }
 6844              		.loc 1 2411 1
 6845 00c0 00BF     		nop
 6846 00c2 1037     		adds	r7, r7, #16
 6847              		.cfi_def_cfa_offset 8
 6848 00c4 BD46     		mov	sp, r7
 6849              		.cfi_def_cfa_register 13
 6850              		@ sp needed
 6851 00c6 80BD     		pop	{r7, pc}
 6852              		.cfi_endproc
 6853              	.LFE179:
 6855              		.text
 6856              	.Letext0:
 6857              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6858              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6859              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6860              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6861              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6862              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 6863              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 6864              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 6865              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 6866              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 6867              		.file 12 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_dma.h"
 6868              		.file 13 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 6869              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 6870              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_usart_com.h"
 6871              		.file 16 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_usrt.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_usrt.c
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:16     .text.hal_usrt_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:24     .text.hal_usrt_struct_init:00000000 hal_usrt_struct_init
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:214    .text.hal_usrt_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:221    .text.hal_usrt_deinit:00000000 hal_usrt_deinit
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3637   .text.hals_usrt_deinit:00000000 hals_usrt_deinit
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:274    .text.hal_usrt_deinit:0000003c $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:280    .text.hal_usrt_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:287    .text.hal_usrt_init:00000000 hal_usrt_init
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4081   .text.hals_usrt_disable:00000000 hals_usrt_disable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3706   .text.hals_usrt_baudrate_set:00000000 hals_usrt_baudrate_set
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5754   .text._usrt_data_bit_mask_get:00000000 _usrt_data_bit_mask_get
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4038   .text.hals_usrt_enable:00000000 hals_usrt_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:467    .text.hal_usrt_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:474    .text.hal_usrt_irq:00000000 hal_usrt_irq
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5838   .text._usrt_error_flag_get:00000000 _usrt_error_flag_get
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5592   .text.hals_usrt_interrupt_flag_get:00000000 hals_usrt_interrupt_flag_get
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5681   .text.hals_usrt_interrupt_flag_clear:00000000 hals_usrt_interrupt_flag_clear
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:777    .text.hal_usrt_irq:000001cc $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:789    .text.hal_usrt_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:796    .text.hal_usrt_irq_handle_set:00000000 hal_usrt_irq_handle_set
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5468   .text.hals_usrt_interrupt_enable:00000000 hals_usrt_interrupt_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5529   .text.hals_usrt_interrupt_disable:00000000 hals_usrt_interrupt_disable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:961    .text.hal_usrt_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:968    .text.hal_usrt_irq_handle_all_reset:00000000 hal_usrt_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1014   .text.hal_usrt_transmit_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1021   .text.hal_usrt_transmit_poll:00000000 hal_usrt_transmit_poll
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5352   .text.hals_usrt_flag_get:00000000 hals_usrt_flag_get
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4663   .text.hals_usrt_data_transmit:00000000 hals_usrt_data_transmit
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1273   .text.hal_usrt_receive_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1280   .text.hal_usrt_receive_poll:00000000 hal_usrt_receive_poll
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4711   .text.hals_usrt_data_receive:00000000 hals_usrt_data_receive
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1560   .text.hal_usrt_transmit_receive_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1567   .text.hal_usrt_transmit_receive_poll:00000000 hal_usrt_transmit_receive_poll
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1980   .text.hal_usrt_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:1987   .text.hal_usrt_transmit_interrupt:00000000 hal_usrt_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2096   .text.hal_usrt_transmit_interrupt:000000a0 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5967   .text._usrt_transmit_interrupt:00000000 _usrt_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5891   .text._usrt_transmit_complete_interrupt:00000000 _usrt_transmit_complete_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2103   .text.hal_usrt_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2110   .text.hal_usrt_receive_interrupt:00000000 hal_usrt_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2234   .text.hal_usrt_receive_interrupt:000000c0 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6103   .text._usrt_receive_interrupt:00000000 _usrt_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2239   .text.hal_usrt_transmit_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2246   .text.hal_usrt_transmit_receive_interrupt:00000000 hal_usrt_transmit_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2444   .text.hal_usrt_transmit_receive_interrupt:00000130 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6257   .text._usrt_tx_rx_interrupt:00000000 _usrt_tx_rx_interrupt
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2451   .text.hal_usrt_transmit_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2458   .text.hal_usrt_transmit_dma:00000000 hal_usrt_transmit_dma
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5055   .text.hals_usrt_dma_transmit_config:00000000 hals_usrt_dma_transmit_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2655   .text.hal_usrt_transmit_dma:0000011c $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6534   .text._usrt_transmit_dma:00000000 _usrt_transmit_dma
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6719   .text._usrt_dma_error:00000000 _usrt_dma_error
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2663   .text.hal_usrt_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2670   .text.hal_usrt_receive_dma:00000000 hal_usrt_receive_dma
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4996   .text.hals_usrt_dma_receive_config:00000000 hals_usrt_dma_receive_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2932   .text.hal_usrt_receive_dma:00000190 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6614   .text._usrt_receive_dma:00000000 _usrt_receive_dma
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2938   .text.hal_usrt_transmit_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:2945   .text.hal_usrt_transmit_receive_dma:00000000 hal_usrt_transmit_receive_dma
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5415   .text.hals_usrt_flag_clear:00000000 hals_usrt_flag_clear
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3281   .text.hal_usrt_transmit_receive_dma:000001fc $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3289   .text.hal_usrt_dma_pause:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3296   .text.hal_usrt_dma_pause:00000000 hal_usrt_dma_pause
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3383   .text.hal_usrt_dma_resume:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3390   .text.hal_usrt_dma_resume:00000000 hal_usrt_dma_resume
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3477   .text.hal_usrt_transfer_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3484   .text.hal_usrt_transfer_stop:00000000 hal_usrt_transfer_stop
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3622   .text.hal_usrt_transfer_stop:000000e8 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3630   .text.hals_usrt_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3693   .text.hals_usrt_deinit:00000048 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3699   .text.hals_usrt_baudrate_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3849   .text.hals_usrt_baudrate_set:000000c4 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3855   .text.hals_usrt_parity_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3862   .text.hals_usrt_parity_config:00000000 hals_usrt_parity_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3912   .text.hals_usrt_word_length_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3919   .text.hals_usrt_word_length_set:00000000 hals_usrt_word_length_set
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3969   .text.hals_usrt_stop_bit_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:3976   .text.hals_usrt_stop_bit_set:00000000 hals_usrt_stop_bit_set
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4031   .text.hals_usrt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4074   .text.hals_usrt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4117   .text.hals_usrt_transmit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4124   .text.hals_usrt_transmit_config:00000000 hals_usrt_transmit_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4168   .text.hals_usrt_receive_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4175   .text.hals_usrt_receive_config:00000000 hals_usrt_receive_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4219   .text.hals_usrt_data_first_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4226   .text.hals_usrt_data_first_config:00000000 hals_usrt_data_first_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4281   .text.hals_usrt_invert_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4288   .text.hals_usrt_invert_config:00000000 hals_usrt_invert_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4319   .text.hals_usrt_invert_config:00000024 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4327   .text.hals_usrt_invert_config:00000044 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4435   .text.hals_usrt_overrun_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4442   .text.hals_usrt_overrun_enable:00000000 hals_usrt_overrun_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4486   .text.hals_usrt_overrun_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4493   .text.hals_usrt_overrun_disable:00000000 hals_usrt_overrun_disable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4537   .text.hals_usrt_oversample_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4544   .text.hals_usrt_oversample_config:00000000 hals_usrt_oversample_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4594   .text.hals_usrt_sample_bit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4601   .text.hals_usrt_sample_bit_config:00000000 hals_usrt_sample_bit_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4656   .text.hals_usrt_data_transmit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4704   .text.hals_usrt_data_receive:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4749   .text.hals_usrt_command_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4756   .text.hals_usrt_command_enable:00000000 hals_usrt_command_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4797   .text.hals_usrt_clock_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4804   .text.hals_usrt_clock_enable:00000000 hals_usrt_clock_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4848   .text.hals_usrt_clock_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4855   .text.hals_usrt_clock_disable:00000000 hals_usrt_clock_disable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4899   .text.hals_usrt_synchronous_clock_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4906   .text.hals_usrt_synchronous_clock_config:00000000 hals_usrt_synchronous_clock_config
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:4989   .text.hals_usrt_dma_receive_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5048   .text.hals_usrt_dma_transmit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5107   .text.hals_usrt_reception_error_dma_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5114   .text.hals_usrt_reception_error_dma_enable:00000000 hals_usrt_reception_error_dma_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5158   .text.hals_usrt_reception_error_dma_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5165   .text.hals_usrt_reception_error_dma_disable:00000000 hals_usrt_reception_error_dma_disable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5209   .text.hals_usrt_receive_fifo_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5216   .text.hals_usrt_receive_fifo_enable:00000000 hals_usrt_receive_fifo_enable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5254   .text.hals_usrt_receive_fifo_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5261   .text.hals_usrt_receive_fifo_disable:00000000 hals_usrt_receive_fifo_disable
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5299   .text.hals_usrt_receive_fifo_counter_number:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5306   .text.hals_usrt_receive_fifo_counter_number:00000000 hals_usrt_receive_fifo_counter_number
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5345   .text.hals_usrt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5408   .text.hals_usrt_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5461   .text.hals_usrt_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5522   .text.hals_usrt_interrupt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5585   .text.hals_usrt_interrupt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5674   .text.hals_usrt_interrupt_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5743   .text.hals_usrt_interrupt_flag_clear:0000004c $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5748   .text._usrt_data_bit_mask_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5832   .text._usrt_error_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5885   .text._usrt_transmit_complete_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:5961   .text._usrt_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6097   .text._usrt_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6251   .text._usrt_tx_rx_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6528   .text._usrt_transmit_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6603   .text._usrt_transmit_dma:00000058 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6608   .text._usrt_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6708   .text._usrt_receive_dma:00000080 $d
C:\Users\peter\AppData\Local\Temp\ccUpjYic.s:6713   .text._usrt_dma_error:00000000 $t
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
hals_uart_enable
hal_dma_start_interrupt
hal_dma_stop
hal_rcu_periph_reset_enable
hal_rcu_periph_reset_disable
hals_rcu_clock_freq_get
