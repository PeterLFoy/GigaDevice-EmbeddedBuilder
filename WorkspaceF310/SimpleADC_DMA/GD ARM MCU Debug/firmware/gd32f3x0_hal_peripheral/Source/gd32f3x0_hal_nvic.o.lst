   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_nvic.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NVIC_GetPriorityGrouping,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NVIC_GetPriorityGrouping:
  24              	.LFB103:
  25              		.file 1 "../firmware/cmsis/inc/core_cm4.h"
   1:../firmware/cmsis/inc/core_cm4.h **** /**************************************************************************//**
   2:../firmware/cmsis/inc/core_cm4.h ****  * @file     core_cm4.h
   3:../firmware/cmsis/inc/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../firmware/cmsis/inc/core_cm4.h ****  * @version  V3.30
   5:../firmware/cmsis/inc/core_cm4.h ****  * @date     17. February 2014
   6:../firmware/cmsis/inc/core_cm4.h ****  *
   7:../firmware/cmsis/inc/core_cm4.h ****  * @note
   8:../firmware/cmsis/inc/core_cm4.h ****  *
   9:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
  10:../firmware/cmsis/inc/core_cm4.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:../firmware/cmsis/inc/core_cm4.h **** 
  12:../firmware/cmsis/inc/core_cm4.h ****    All rights reserved.
  13:../firmware/cmsis/inc/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:../firmware/cmsis/inc/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:../firmware/cmsis/inc/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:../firmware/cmsis/inc/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:../firmware/cmsis/inc/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:../firmware/cmsis/inc/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:../firmware/cmsis/inc/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:../firmware/cmsis/inc/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:../firmware/cmsis/inc/core_cm4.h ****      to endorse or promote products derived from this software without
  22:../firmware/cmsis/inc/core_cm4.h ****      specific prior written permission.
  23:../firmware/cmsis/inc/core_cm4.h ****    *
  24:../firmware/cmsis/inc/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:../firmware/cmsis/inc/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:../firmware/cmsis/inc/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:../firmware/cmsis/inc/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:../firmware/cmsis/inc/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:../firmware/cmsis/inc/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:../firmware/cmsis/inc/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:../firmware/cmsis/inc/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:../firmware/cmsis/inc/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../firmware/cmsis/inc/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:../firmware/cmsis/inc/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:../firmware/cmsis/inc/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:../firmware/cmsis/inc/core_cm4.h **** 
  37:../firmware/cmsis/inc/core_cm4.h **** 
  38:../firmware/cmsis/inc/core_cm4.h **** #if defined ( __ICCARM__ )
  39:../firmware/cmsis/inc/core_cm4.h **** #pragma system_include  /* treat file as system include file for MISRA check */
  40:../firmware/cmsis/inc/core_cm4.h **** #endif
  41:../firmware/cmsis/inc/core_cm4.h **** 
  42:../firmware/cmsis/inc/core_cm4.h **** #ifdef __cplusplus
  43:../firmware/cmsis/inc/core_cm4.h **** extern "C" {
  44:../firmware/cmsis/inc/core_cm4.h **** #endif
  45:../firmware/cmsis/inc/core_cm4.h **** 
  46:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  47:../firmware/cmsis/inc/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  48:../firmware/cmsis/inc/core_cm4.h **** 
  49:../firmware/cmsis/inc/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:../firmware/cmsis/inc/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:../firmware/cmsis/inc/core_cm4.h **** 
  52:../firmware/cmsis/inc/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:../firmware/cmsis/inc/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:../firmware/cmsis/inc/core_cm4.h **** 
  55:../firmware/cmsis/inc/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:../firmware/cmsis/inc/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:../firmware/cmsis/inc/core_cm4.h **** 
  58:../firmware/cmsis/inc/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:../firmware/cmsis/inc/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:../firmware/cmsis/inc/core_cm4.h ****  */
  61:../firmware/cmsis/inc/core_cm4.h **** 
  62:../firmware/cmsis/inc/core_cm4.h **** 
  63:../firmware/cmsis/inc/core_cm4.h **** /*******************************************************************************
  64:../firmware/cmsis/inc/core_cm4.h ****  *                 CMSIS definitions
  65:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
  66:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup Cortex_M4
  67:../firmware/cmsis/inc/core_cm4.h ****   @{
  68:../firmware/cmsis/inc/core_cm4.h ****  */
  69:../firmware/cmsis/inc/core_cm4.h **** 
  70:../firmware/cmsis/inc/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:../firmware/cmsis/inc/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:../firmware/cmsis/inc/core_cm4.h **** 
  76:../firmware/cmsis/inc/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:../firmware/cmsis/inc/core_cm4.h **** 
  78:../firmware/cmsis/inc/core_cm4.h **** 
  79:../firmware/cmsis/inc/core_cm4.h **** #if   defined ( __CC_ARM )
  80:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for ARM Compil
  81:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         __inline                                   /*!< inline keyword for ARM Com
  82:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static __inline
  83:../firmware/cmsis/inc/core_cm4.h **** 
  84:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __GNUC__ )
  85:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for GNU Compil
  86:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                     /*!< inline keyword for GNU Com
  87:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
  88:../firmware/cmsis/inc/core_cm4.h **** 
  89:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __ICCARM__ )
  90:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for IAR Compil
  91:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                     /*!< inline keyword for IAR Com
  92:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
  93:../firmware/cmsis/inc/core_cm4.h **** 
  94:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TMS470__ )
  95:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for TI CCS Com
  96:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
  97:../firmware/cmsis/inc/core_cm4.h **** 
  98:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TASKING__ )
  99:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            __asm                                      /*!< asm keyword for TASKING Co
 100:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                     /*!< inline keyword for TASKING
 101:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
 102:../firmware/cmsis/inc/core_cm4.h **** 
 103:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __CSMC__ )      /* Cosmic */
 104:../firmware/cmsis/inc/core_cm4.h **** #define __packed
 105:../firmware/cmsis/inc/core_cm4.h **** #define __ASM            _asm                                      /*!< asm keyword for COSMIC Comp
 106:../firmware/cmsis/inc/core_cm4.h **** #define __INLINE         inline                                    /*use -pc99 on compile line !< i
 107:../firmware/cmsis/inc/core_cm4.h **** #define __STATIC_INLINE  static inline
 108:../firmware/cmsis/inc/core_cm4.h **** 
 109:../firmware/cmsis/inc/core_cm4.h **** #endif
 110:../firmware/cmsis/inc/core_cm4.h **** 
 111:../firmware/cmsis/inc/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
 112:../firmware/cmsis/inc/core_cm4.h **** */
 113:../firmware/cmsis/inc/core_cm4.h **** #if defined ( __CC_ARM )
 114:../firmware/cmsis/inc/core_cm4.h **** #if defined __TARGET_FPU_VFP
 115:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 116:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 117:../firmware/cmsis/inc/core_cm4.h **** #else
 118:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 119:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 120:../firmware/cmsis/inc/core_cm4.h **** #endif
 121:../firmware/cmsis/inc/core_cm4.h **** #else
 122:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 123:../firmware/cmsis/inc/core_cm4.h **** #endif
 124:../firmware/cmsis/inc/core_cm4.h **** 
 125:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __GNUC__ )
 126:../firmware/cmsis/inc/core_cm4.h **** #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 127:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 128:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 129:../firmware/cmsis/inc/core_cm4.h **** #else
 130:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 131:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 132:../firmware/cmsis/inc/core_cm4.h **** #endif
 133:../firmware/cmsis/inc/core_cm4.h **** #else
 134:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 135:../firmware/cmsis/inc/core_cm4.h **** #endif
 136:../firmware/cmsis/inc/core_cm4.h **** 
 137:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __ICCARM__ )
 138:../firmware/cmsis/inc/core_cm4.h **** #if defined __ARMVFP__
 139:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 140:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 141:../firmware/cmsis/inc/core_cm4.h **** #else
 142:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 143:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 144:../firmware/cmsis/inc/core_cm4.h **** #endif
 145:../firmware/cmsis/inc/core_cm4.h **** #else
 146:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 147:../firmware/cmsis/inc/core_cm4.h **** #endif
 148:../firmware/cmsis/inc/core_cm4.h **** 
 149:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TMS470__ )
 150:../firmware/cmsis/inc/core_cm4.h **** #if defined __TI_VFP_SUPPORT__
 151:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 152:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 153:../firmware/cmsis/inc/core_cm4.h **** #else
 154:../firmware/cmsis/inc/core_cm4.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 155:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 156:../firmware/cmsis/inc/core_cm4.h **** #endif
 157:../firmware/cmsis/inc/core_cm4.h **** #else
 158:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 159:../firmware/cmsis/inc/core_cm4.h **** #endif
 160:../firmware/cmsis/inc/core_cm4.h **** 
 161:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __TASKING__ )
 162:../firmware/cmsis/inc/core_cm4.h **** #if defined __FPU_VFP__
 163:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 164:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 165:../firmware/cmsis/inc/core_cm4.h **** #else
 166:../firmware/cmsis/inc/core_cm4.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 167:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 168:../firmware/cmsis/inc/core_cm4.h **** #endif
 169:../firmware/cmsis/inc/core_cm4.h **** #else
 170:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 171:../firmware/cmsis/inc/core_cm4.h **** #endif
 172:../firmware/cmsis/inc/core_cm4.h **** 
 173:../firmware/cmsis/inc/core_cm4.h **** #elif defined ( __CSMC__ )      /* Cosmic */
 174:../firmware/cmsis/inc/core_cm4.h **** #if ( __CSMC__ & 0x400)       // FPU present for parser
 175:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
 176:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       1
 177:../firmware/cmsis/inc/core_cm4.h **** #else
 178:../firmware/cmsis/inc/core_cm4.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 179:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED       0
 180:../firmware/cmsis/inc/core_cm4.h **** #endif
 181:../firmware/cmsis/inc/core_cm4.h **** #else
 182:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_USED         0
 183:../firmware/cmsis/inc/core_cm4.h **** #endif
 184:../firmware/cmsis/inc/core_cm4.h **** #endif
 185:../firmware/cmsis/inc/core_cm4.h **** 
 186:../firmware/cmsis/inc/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 187:../firmware/cmsis/inc/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 188:../firmware/cmsis/inc/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 189:../firmware/cmsis/inc/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 190:../firmware/cmsis/inc/core_cm4.h **** 
 191:../firmware/cmsis/inc/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 192:../firmware/cmsis/inc/core_cm4.h **** 
 193:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CMSIS_GENERIC
 194:../firmware/cmsis/inc/core_cm4.h **** 
 195:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 196:../firmware/cmsis/inc/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 197:../firmware/cmsis/inc/core_cm4.h **** 
 198:../firmware/cmsis/inc/core_cm4.h **** /* check device defines and use defaults */
 199:../firmware/cmsis/inc/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 200:../firmware/cmsis/inc/core_cm4.h **** #ifndef __CM4_REV
 201:../firmware/cmsis/inc/core_cm4.h **** #define __CM4_REV               0x0000
 202:../firmware/cmsis/inc/core_cm4.h **** #warning "__CM4_REV not defined in device header file; using default!"
 203:../firmware/cmsis/inc/core_cm4.h **** #endif
 204:../firmware/cmsis/inc/core_cm4.h **** 
 205:../firmware/cmsis/inc/core_cm4.h **** #ifndef __FPU_PRESENT
 206:../firmware/cmsis/inc/core_cm4.h **** #define __FPU_PRESENT             0
 207:../firmware/cmsis/inc/core_cm4.h **** #warning "__FPU_PRESENT not defined in device header file; using default!"
 208:../firmware/cmsis/inc/core_cm4.h **** #endif
 209:../firmware/cmsis/inc/core_cm4.h **** 
 210:../firmware/cmsis/inc/core_cm4.h **** #ifndef __MPU_PRESENT
 211:../firmware/cmsis/inc/core_cm4.h **** #define __MPU_PRESENT             0
 212:../firmware/cmsis/inc/core_cm4.h **** #warning "__MPU_PRESENT not defined in device header file; using default!"
 213:../firmware/cmsis/inc/core_cm4.h **** #endif
 214:../firmware/cmsis/inc/core_cm4.h **** 
 215:../firmware/cmsis/inc/core_cm4.h **** #ifndef __NVIC_PRIO_BITS
 216:../firmware/cmsis/inc/core_cm4.h **** #define __NVIC_PRIO_BITS          4
 217:../firmware/cmsis/inc/core_cm4.h **** #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 218:../firmware/cmsis/inc/core_cm4.h **** #endif
 219:../firmware/cmsis/inc/core_cm4.h **** 
 220:../firmware/cmsis/inc/core_cm4.h **** #ifndef __Vendor_SysTickConfig
 221:../firmware/cmsis/inc/core_cm4.h **** #define __Vendor_SysTickConfig    0
 222:../firmware/cmsis/inc/core_cm4.h **** #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 223:../firmware/cmsis/inc/core_cm4.h **** #endif
 224:../firmware/cmsis/inc/core_cm4.h **** #endif
 225:../firmware/cmsis/inc/core_cm4.h **** 
 226:../firmware/cmsis/inc/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 227:../firmware/cmsis/inc/core_cm4.h **** /**
 228:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 229:../firmware/cmsis/inc/core_cm4.h **** 
 230:../firmware/cmsis/inc/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 231:../firmware/cmsis/inc/core_cm4.h ****     \li to specify the access to peripheral variables.
 232:../firmware/cmsis/inc/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 233:../firmware/cmsis/inc/core_cm4.h **** */
 234:../firmware/cmsis/inc/core_cm4.h **** #ifdef __cplusplus
 235:../firmware/cmsis/inc/core_cm4.h **** #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 236:../firmware/cmsis/inc/core_cm4.h **** #else
 237:../firmware/cmsis/inc/core_cm4.h **** #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 238:../firmware/cmsis/inc/core_cm4.h **** #endif
 239:../firmware/cmsis/inc/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 240:../firmware/cmsis/inc/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 241:../firmware/cmsis/inc/core_cm4.h **** 
 242:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group Cortex_M4 */
 243:../firmware/cmsis/inc/core_cm4.h **** 
 244:../firmware/cmsis/inc/core_cm4.h **** 
 245:../firmware/cmsis/inc/core_cm4.h **** 
 246:../firmware/cmsis/inc/core_cm4.h **** /*******************************************************************************
 247:../firmware/cmsis/inc/core_cm4.h ****  *                 Register Abstraction
 248:../firmware/cmsis/inc/core_cm4.h ****   Core Register contain:
 249:../firmware/cmsis/inc/core_cm4.h ****   - Core Register
 250:../firmware/cmsis/inc/core_cm4.h ****   - Core NVIC Register
 251:../firmware/cmsis/inc/core_cm4.h ****   - Core SCB Register
 252:../firmware/cmsis/inc/core_cm4.h ****   - Core SysTick Register
 253:../firmware/cmsis/inc/core_cm4.h ****   - Core Debug Register
 254:../firmware/cmsis/inc/core_cm4.h ****   - Core MPU Register
 255:../firmware/cmsis/inc/core_cm4.h ****   - Core FPU Register
 256:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
 257:../firmware/cmsis/inc/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 258:../firmware/cmsis/inc/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 259:../firmware/cmsis/inc/core_cm4.h **** */
 260:../firmware/cmsis/inc/core_cm4.h **** 
 261:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
 262:../firmware/cmsis/inc/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 263:../firmware/cmsis/inc/core_cm4.h ****     \brief  Core Register type definitions.
 264:../firmware/cmsis/inc/core_cm4.h ****   @{
 265:../firmware/cmsis/inc/core_cm4.h ****  */
 266:../firmware/cmsis/inc/core_cm4.h **** 
 267:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 268:../firmware/cmsis/inc/core_cm4.h ****  */
 269:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 270:../firmware/cmsis/inc/core_cm4.h ****     struct {
 271:../firmware/cmsis/inc/core_cm4.h **** #if (__CORTEX_M != 0x04)
 272:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 27;             /*!< bit:  0..26  Reserved                           *
 273:../firmware/cmsis/inc/core_cm4.h **** #else
 274:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 16;             /*!< bit:  0..15  Reserved                           *
 275:../firmware/cmsis/inc/core_cm4.h ****         uint32_t GE: 4;                      /*!< bit: 16..19  Greater than or Equal flags        *
 276:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved1: 7;              /*!< bit: 20..26  Reserved                           *
 277:../firmware/cmsis/inc/core_cm4.h **** #endif
 278:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Q: 1;                       /*!< bit:     27  Saturation condition flag          *
 279:../firmware/cmsis/inc/core_cm4.h ****         uint32_t V: 1;                       /*!< bit:     28  Overflow condition code flag       *
 280:../firmware/cmsis/inc/core_cm4.h ****         uint32_t C: 1;                       /*!< bit:     29  Carry condition code flag          *
 281:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Z: 1;                       /*!< bit:     30  Zero condition code flag           *
 282:../firmware/cmsis/inc/core_cm4.h ****         uint32_t N: 1;                       /*!< bit:     31  Negative condition code flag       *
 283:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 284:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 285:../firmware/cmsis/inc/core_cm4.h **** } APSR_Type;
 286:../firmware/cmsis/inc/core_cm4.h **** 
 287:../firmware/cmsis/inc/core_cm4.h **** 
 288:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 289:../firmware/cmsis/inc/core_cm4.h ****  */
 290:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 291:../firmware/cmsis/inc/core_cm4.h ****     struct {
 292:../firmware/cmsis/inc/core_cm4.h ****         uint32_t ISR: 9;                     /*!< bit:  0.. 8  Exception number                   *
 293:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 23;             /*!< bit:  9..31  Reserved                           *
 294:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 295:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 296:../firmware/cmsis/inc/core_cm4.h **** } IPSR_Type;
 297:../firmware/cmsis/inc/core_cm4.h **** 
 298:../firmware/cmsis/inc/core_cm4.h **** 
 299:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 300:../firmware/cmsis/inc/core_cm4.h ****  */
 301:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 302:../firmware/cmsis/inc/core_cm4.h ****     struct {
 303:../firmware/cmsis/inc/core_cm4.h ****         uint32_t ISR: 9;                     /*!< bit:  0.. 8  Exception number                   *
 304:../firmware/cmsis/inc/core_cm4.h **** #if (__CORTEX_M != 0x04)
 305:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 15;             /*!< bit:  9..23  Reserved                           *
 306:../firmware/cmsis/inc/core_cm4.h **** #else
 307:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 7;              /*!< bit:  9..15  Reserved                           *
 308:../firmware/cmsis/inc/core_cm4.h ****         uint32_t GE: 4;                      /*!< bit: 16..19  Greater than or Equal flags        *
 309:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved1: 4;              /*!< bit: 20..23  Reserved                           *
 310:../firmware/cmsis/inc/core_cm4.h **** #endif
 311:../firmware/cmsis/inc/core_cm4.h ****         uint32_t T: 1;                       /*!< bit:     24  Thumb bit        (read 0)          *
 312:../firmware/cmsis/inc/core_cm4.h ****         uint32_t IT: 2;                      /*!< bit: 25..26  saved IT state   (read 0)          *
 313:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Q: 1;                       /*!< bit:     27  Saturation condition flag          *
 314:../firmware/cmsis/inc/core_cm4.h ****         uint32_t V: 1;                       /*!< bit:     28  Overflow condition code flag       *
 315:../firmware/cmsis/inc/core_cm4.h ****         uint32_t C: 1;                       /*!< bit:     29  Carry condition code flag          *
 316:../firmware/cmsis/inc/core_cm4.h ****         uint32_t Z: 1;                       /*!< bit:     30  Zero condition code flag           *
 317:../firmware/cmsis/inc/core_cm4.h ****         uint32_t N: 1;                       /*!< bit:     31  Negative condition code flag       *
 318:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 319:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 320:../firmware/cmsis/inc/core_cm4.h **** } xPSR_Type;
 321:../firmware/cmsis/inc/core_cm4.h **** 
 322:../firmware/cmsis/inc/core_cm4.h **** 
 323:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 324:../firmware/cmsis/inc/core_cm4.h ****  */
 325:../firmware/cmsis/inc/core_cm4.h **** typedef union {
 326:../firmware/cmsis/inc/core_cm4.h ****     struct {
 327:../firmware/cmsis/inc/core_cm4.h ****         uint32_t nPRIV: 1;                   /*!< bit:      0  Execution privilege in Thread mode *
 328:../firmware/cmsis/inc/core_cm4.h ****         uint32_t SPSEL: 1;                   /*!< bit:      1  Stack to be used                   *
 329:../firmware/cmsis/inc/core_cm4.h ****         uint32_t FPCA: 1;                    /*!< bit:      2  FP extension active flag           *
 330:../firmware/cmsis/inc/core_cm4.h ****         uint32_t _reserved0: 29;             /*!< bit:  3..31  Reserved                           *
 331:../firmware/cmsis/inc/core_cm4.h ****     } b;                                   /*!< Structure used for bit  access                  */
 332:../firmware/cmsis/inc/core_cm4.h ****     uint32_t w;                            /*!< Type      used for word access                  */
 333:../firmware/cmsis/inc/core_cm4.h **** } CONTROL_Type;
 334:../firmware/cmsis/inc/core_cm4.h **** 
 335:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_CORE */
 336:../firmware/cmsis/inc/core_cm4.h **** 
 337:../firmware/cmsis/inc/core_cm4.h **** 
 338:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
 339:../firmware/cmsis/inc/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 340:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 341:../firmware/cmsis/inc/core_cm4.h ****   @{
 342:../firmware/cmsis/inc/core_cm4.h ****  */
 343:../firmware/cmsis/inc/core_cm4.h **** 
 344:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 345:../firmware/cmsis/inc/core_cm4.h ****  */
 346:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 347:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register 
 348:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[24];
 349:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Registe
 350:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RSERVED1[24];
 351:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register
 352:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[24];
 353:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Regist
 354:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED3[24];
 355:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register 
 356:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED4[56];
 357:../firmware/cmsis/inc/core_cm4.h ****     __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8
 358:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED5[644];
 359:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Reg
 360:../firmware/cmsis/inc/core_cm4.h **** }  NVIC_Type;
 361:../firmware/cmsis/inc/core_cm4.h **** 
 362:../firmware/cmsis/inc/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 363:../firmware/cmsis/inc/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 364:../firmware/cmsis/inc/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 365:../firmware/cmsis/inc/core_cm4.h **** 
 366:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 367:../firmware/cmsis/inc/core_cm4.h **** 
 368:../firmware/cmsis/inc/core_cm4.h **** 
 369:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 370:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 371:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 372:../firmware/cmsis/inc/core_cm4.h ****   @{
 373:../firmware/cmsis/inc/core_cm4.h ****  */
 374:../firmware/cmsis/inc/core_cm4.h **** 
 375:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 376:../firmware/cmsis/inc/core_cm4.h ****  */
 377:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 378:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register           
 379:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Re
 380:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register  
 381:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Rese
 382:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register       
 383:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register
 384:../firmware/cmsis/inc/core_cm4.h ****     __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Regis
 385:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and Sta
 386:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regi
 387:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register     
 388:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register   
 389:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Regist
 390:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register     
 391:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Registe
 392:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register    
 393:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register        
 394:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register    
 395:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register 
 396:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Reg
 397:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[5];
 398:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Reg
 399:../firmware/cmsis/inc/core_cm4.h **** } SCB_Type;
 400:../firmware/cmsis/inc/core_cm4.h **** 
 401:../firmware/cmsis/inc/core_cm4.h **** /* SCB CPUID Register Definitions */
 402:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 403:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 404:../firmware/cmsis/inc/core_cm4.h **** 
 405:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 406:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 407:../firmware/cmsis/inc/core_cm4.h **** 
 408:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 409:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 410:../firmware/cmsis/inc/core_cm4.h **** 
 411:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 412:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 413:../firmware/cmsis/inc/core_cm4.h **** 
 414:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 415:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 416:../firmware/cmsis/inc/core_cm4.h **** 
 417:../firmware/cmsis/inc/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 418:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 419:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 420:../firmware/cmsis/inc/core_cm4.h **** 
 421:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 422:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 423:../firmware/cmsis/inc/core_cm4.h **** 
 424:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 425:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 426:../firmware/cmsis/inc/core_cm4.h **** 
 427:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 428:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 429:../firmware/cmsis/inc/core_cm4.h **** 
 430:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 431:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 432:../firmware/cmsis/inc/core_cm4.h **** 
 433:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 434:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 435:../firmware/cmsis/inc/core_cm4.h **** 
 436:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 437:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 438:../firmware/cmsis/inc/core_cm4.h **** 
 439:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 440:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 441:../firmware/cmsis/inc/core_cm4.h **** 
 442:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 443:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 444:../firmware/cmsis/inc/core_cm4.h **** 
 445:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 446:../firmware/cmsis/inc/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 447:../firmware/cmsis/inc/core_cm4.h **** 
 448:../firmware/cmsis/inc/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 449:../firmware/cmsis/inc/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 450:../firmware/cmsis/inc/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 451:../firmware/cmsis/inc/core_cm4.h **** 
 452:../firmware/cmsis/inc/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 453:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 454:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 455:../firmware/cmsis/inc/core_cm4.h **** 
 456:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 457:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 458:../firmware/cmsis/inc/core_cm4.h **** 
 459:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 460:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 461:../firmware/cmsis/inc/core_cm4.h **** 
 462:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 463:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 464:../firmware/cmsis/inc/core_cm4.h **** 
 465:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 466:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 467:../firmware/cmsis/inc/core_cm4.h **** 
 468:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 469:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 470:../firmware/cmsis/inc/core_cm4.h **** 
 471:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 472:../firmware/cmsis/inc/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 473:../firmware/cmsis/inc/core_cm4.h **** 
 474:../firmware/cmsis/inc/core_cm4.h **** /* SCB System Control Register Definitions */
 475:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 476:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 477:../firmware/cmsis/inc/core_cm4.h **** 
 478:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 479:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 480:../firmware/cmsis/inc/core_cm4.h **** 
 481:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 482:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 483:../firmware/cmsis/inc/core_cm4.h **** 
 484:../firmware/cmsis/inc/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 485:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 486:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 487:../firmware/cmsis/inc/core_cm4.h **** 
 488:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 489:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 490:../firmware/cmsis/inc/core_cm4.h **** 
 491:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 492:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 493:../firmware/cmsis/inc/core_cm4.h **** 
 494:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 495:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 496:../firmware/cmsis/inc/core_cm4.h **** 
 497:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 498:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 499:../firmware/cmsis/inc/core_cm4.h **** 
 500:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 501:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 502:../firmware/cmsis/inc/core_cm4.h **** 
 503:../firmware/cmsis/inc/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 504:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 505:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 506:../firmware/cmsis/inc/core_cm4.h **** 
 507:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 508:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 509:../firmware/cmsis/inc/core_cm4.h **** 
 510:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 511:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 512:../firmware/cmsis/inc/core_cm4.h **** 
 513:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 514:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 515:../firmware/cmsis/inc/core_cm4.h **** 
 516:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 517:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 518:../firmware/cmsis/inc/core_cm4.h **** 
 519:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 520:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 521:../firmware/cmsis/inc/core_cm4.h **** 
 522:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 523:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 524:../firmware/cmsis/inc/core_cm4.h **** 
 525:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 526:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 527:../firmware/cmsis/inc/core_cm4.h **** 
 528:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 529:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 530:../firmware/cmsis/inc/core_cm4.h **** 
 531:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 532:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 533:../firmware/cmsis/inc/core_cm4.h **** 
 534:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 535:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 536:../firmware/cmsis/inc/core_cm4.h **** 
 537:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 538:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 539:../firmware/cmsis/inc/core_cm4.h **** 
 540:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 541:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 542:../firmware/cmsis/inc/core_cm4.h **** 
 543:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 544:../firmware/cmsis/inc/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 545:../firmware/cmsis/inc/core_cm4.h **** 
 546:../firmware/cmsis/inc/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 547:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 548:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 549:../firmware/cmsis/inc/core_cm4.h **** 
 550:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 551:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 552:../firmware/cmsis/inc/core_cm4.h **** 
 553:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 554:../firmware/cmsis/inc/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 555:../firmware/cmsis/inc/core_cm4.h **** 
 556:../firmware/cmsis/inc/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 557:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 558:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 559:../firmware/cmsis/inc/core_cm4.h **** 
 560:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 561:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 562:../firmware/cmsis/inc/core_cm4.h **** 
 563:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 564:../firmware/cmsis/inc/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 565:../firmware/cmsis/inc/core_cm4.h **** 
 566:../firmware/cmsis/inc/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 567:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 568:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 569:../firmware/cmsis/inc/core_cm4.h **** 
 570:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 571:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 572:../firmware/cmsis/inc/core_cm4.h **** 
 573:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 574:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 575:../firmware/cmsis/inc/core_cm4.h **** 
 576:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 577:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 578:../firmware/cmsis/inc/core_cm4.h **** 
 579:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 580:../firmware/cmsis/inc/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 581:../firmware/cmsis/inc/core_cm4.h **** 
 582:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_SCB */
 583:../firmware/cmsis/inc/core_cm4.h **** 
 584:../firmware/cmsis/inc/core_cm4.h **** 
 585:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 586:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 587:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 588:../firmware/cmsis/inc/core_cm4.h ****   @{
 589:../firmware/cmsis/inc/core_cm4.h ****  */
 590:../firmware/cmsis/inc/core_cm4.h **** 
 591:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 592:../firmware/cmsis/inc/core_cm4.h ****  */
 593:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 594:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[1];
 595:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regi
 596:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register    
 597:../firmware/cmsis/inc/core_cm4.h **** } SCnSCB_Type;
 598:../firmware/cmsis/inc/core_cm4.h **** 
 599:../firmware/cmsis/inc/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 600:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 601:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 602:../firmware/cmsis/inc/core_cm4.h **** 
 603:../firmware/cmsis/inc/core_cm4.h **** /* Auxiliary Control Register Definitions */
 604:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 605:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 606:../firmware/cmsis/inc/core_cm4.h **** 
 607:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 608:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 609:../firmware/cmsis/inc/core_cm4.h **** 
 610:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 611:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 612:../firmware/cmsis/inc/core_cm4.h **** 
 613:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 614:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 615:../firmware/cmsis/inc/core_cm4.h **** 
 616:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 617:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 618:../firmware/cmsis/inc/core_cm4.h **** 
 619:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 620:../firmware/cmsis/inc/core_cm4.h **** 
 621:../firmware/cmsis/inc/core_cm4.h **** 
 622:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 623:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 624:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 625:../firmware/cmsis/inc/core_cm4.h ****   @{
 626:../firmware/cmsis/inc/core_cm4.h ****  */
 627:../firmware/cmsis/inc/core_cm4.h **** 
 628:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 629:../firmware/cmsis/inc/core_cm4.h ****  */
 630:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 631:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Reg
 632:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register 
 633:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register
 634:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register  
 635:../firmware/cmsis/inc/core_cm4.h **** } SysTick_Type;
 636:../firmware/cmsis/inc/core_cm4.h **** 
 637:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 638:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 639:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 640:../firmware/cmsis/inc/core_cm4.h **** 
 641:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 642:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 643:../firmware/cmsis/inc/core_cm4.h **** 
 644:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 645:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 646:../firmware/cmsis/inc/core_cm4.h **** 
 647:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 648:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 649:../firmware/cmsis/inc/core_cm4.h **** 
 650:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Reload Register Definitions */
 651:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 652:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 653:../firmware/cmsis/inc/core_cm4.h **** 
 654:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Current Register Definitions */
 655:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 656:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 657:../firmware/cmsis/inc/core_cm4.h **** 
 658:../firmware/cmsis/inc/core_cm4.h **** /* SysTick Calibration Register Definitions */
 659:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 660:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 661:../firmware/cmsis/inc/core_cm4.h **** 
 662:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 663:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 664:../firmware/cmsis/inc/core_cm4.h **** 
 665:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 666:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 667:../firmware/cmsis/inc/core_cm4.h **** 
 668:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 669:../firmware/cmsis/inc/core_cm4.h **** 
 670:../firmware/cmsis/inc/core_cm4.h **** 
 671:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 672:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 673:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 674:../firmware/cmsis/inc/core_cm4.h ****   @{
 675:../firmware/cmsis/inc/core_cm4.h ****  */
 676:../firmware/cmsis/inc/core_cm4.h **** 
 677:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 678:../firmware/cmsis/inc/core_cm4.h ****  */
 679:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 680:../firmware/cmsis/inc/core_cm4.h ****     __O  union {
 681:../firmware/cmsis/inc/core_cm4.h ****         __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit     
 682:../firmware/cmsis/inc/core_cm4.h ****         __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit    
 683:../firmware/cmsis/inc/core_cm4.h ****         __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit    
 684:../firmware/cmsis/inc/core_cm4.h ****     }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers   
 685:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[864];
 686:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register     
 687:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED1[15];
 688:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register  
 689:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[15];
 690:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register    
 691:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED3[29];
 692:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register
 693:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register 
 694:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control R
 695:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED4[43];
 696:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register      
 697:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register      
 698:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED5[6];
 699:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification 
 700:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification 
 701:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification 
 702:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification 
 703:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification 
 704:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification 
 705:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification 
 706:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification 
 707:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification 
 708:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification 
 709:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification 
 710:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification 
 711:../firmware/cmsis/inc/core_cm4.h **** } ITM_Type;
 712:../firmware/cmsis/inc/core_cm4.h **** 
 713:../firmware/cmsis/inc/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 714:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 715:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 716:../firmware/cmsis/inc/core_cm4.h **** 
 717:../firmware/cmsis/inc/core_cm4.h **** /* ITM Trace Control Register Definitions */
 718:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 719:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 720:../firmware/cmsis/inc/core_cm4.h **** 
 721:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 722:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 723:../firmware/cmsis/inc/core_cm4.h **** 
 724:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 725:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 726:../firmware/cmsis/inc/core_cm4.h **** 
 727:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 728:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 729:../firmware/cmsis/inc/core_cm4.h **** 
 730:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 731:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 732:../firmware/cmsis/inc/core_cm4.h **** 
 733:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 734:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 735:../firmware/cmsis/inc/core_cm4.h **** 
 736:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 737:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 738:../firmware/cmsis/inc/core_cm4.h **** 
 739:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 740:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 741:../firmware/cmsis/inc/core_cm4.h **** 
 742:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 743:../firmware/cmsis/inc/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 744:../firmware/cmsis/inc/core_cm4.h **** 
 745:../firmware/cmsis/inc/core_cm4.h **** /* ITM Integration Write Register Definitions */
 746:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 747:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 748:../firmware/cmsis/inc/core_cm4.h **** 
 749:../firmware/cmsis/inc/core_cm4.h **** /* ITM Integration Read Register Definitions */
 750:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 751:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 752:../firmware/cmsis/inc/core_cm4.h **** 
 753:../firmware/cmsis/inc/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 754:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 755:../firmware/cmsis/inc/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 756:../firmware/cmsis/inc/core_cm4.h **** 
 757:../firmware/cmsis/inc/core_cm4.h **** /* ITM Lock Status Register Definitions */
 758:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 759:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 760:../firmware/cmsis/inc/core_cm4.h **** 
 761:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 762:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 763:../firmware/cmsis/inc/core_cm4.h **** 
 764:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 765:../firmware/cmsis/inc/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 766:../firmware/cmsis/inc/core_cm4.h **** 
 767:../firmware/cmsis/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 768:../firmware/cmsis/inc/core_cm4.h **** 
 769:../firmware/cmsis/inc/core_cm4.h **** 
 770:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 771:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 772:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 773:../firmware/cmsis/inc/core_cm4.h ****   @{
 774:../firmware/cmsis/inc/core_cm4.h ****  */
 775:../firmware/cmsis/inc/core_cm4.h **** 
 776:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 777:../firmware/cmsis/inc/core_cm4.h ****  */
 778:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 779:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register              
 780:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register          
 781:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register            
 782:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Regis
 783:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register          
 784:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register            
 785:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Regis
 786:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Registe
 787:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0         
 788:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0               
 789:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0           
 790:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[1];
 791:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1         
 792:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1               
 793:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1           
 794:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED1[1];
 795:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2         
 796:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2               
 797:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2           
 798:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[1];
 799:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3         
 800:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3               
 801:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3           
 802:../firmware/cmsis/inc/core_cm4.h **** } DWT_Type;
 803:../firmware/cmsis/inc/core_cm4.h **** 
 804:../firmware/cmsis/inc/core_cm4.h **** /* DWT Control Register Definitions */
 805:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 806:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 807:../firmware/cmsis/inc/core_cm4.h **** 
 808:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 809:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 810:../firmware/cmsis/inc/core_cm4.h **** 
 811:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 812:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 813:../firmware/cmsis/inc/core_cm4.h **** 
 814:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 815:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 816:../firmware/cmsis/inc/core_cm4.h **** 
 817:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 818:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 819:../firmware/cmsis/inc/core_cm4.h **** 
 820:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 821:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 822:../firmware/cmsis/inc/core_cm4.h **** 
 823:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 824:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 825:../firmware/cmsis/inc/core_cm4.h **** 
 826:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 827:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 828:../firmware/cmsis/inc/core_cm4.h **** 
 829:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 830:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 831:../firmware/cmsis/inc/core_cm4.h **** 
 832:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 833:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 834:../firmware/cmsis/inc/core_cm4.h **** 
 835:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 836:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 837:../firmware/cmsis/inc/core_cm4.h **** 
 838:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 839:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 840:../firmware/cmsis/inc/core_cm4.h **** 
 841:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 842:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 843:../firmware/cmsis/inc/core_cm4.h **** 
 844:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 845:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 846:../firmware/cmsis/inc/core_cm4.h **** 
 847:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 848:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 849:../firmware/cmsis/inc/core_cm4.h **** 
 850:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 851:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 852:../firmware/cmsis/inc/core_cm4.h **** 
 853:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 854:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 855:../firmware/cmsis/inc/core_cm4.h **** 
 856:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 857:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 858:../firmware/cmsis/inc/core_cm4.h **** 
 859:../firmware/cmsis/inc/core_cm4.h **** /* DWT CPI Count Register Definitions */
 860:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 861:../firmware/cmsis/inc/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 862:../firmware/cmsis/inc/core_cm4.h **** 
 863:../firmware/cmsis/inc/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 864:../firmware/cmsis/inc/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 865:../firmware/cmsis/inc/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 866:../firmware/cmsis/inc/core_cm4.h **** 
 867:../firmware/cmsis/inc/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 868:../firmware/cmsis/inc/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 869:../firmware/cmsis/inc/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 870:../firmware/cmsis/inc/core_cm4.h **** 
 871:../firmware/cmsis/inc/core_cm4.h **** /* DWT LSU Count Register Definitions */
 872:../firmware/cmsis/inc/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 873:../firmware/cmsis/inc/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 874:../firmware/cmsis/inc/core_cm4.h **** 
 875:../firmware/cmsis/inc/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 876:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 877:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 878:../firmware/cmsis/inc/core_cm4.h **** 
 879:../firmware/cmsis/inc/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 880:../firmware/cmsis/inc/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 881:../firmware/cmsis/inc/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 882:../firmware/cmsis/inc/core_cm4.h **** 
 883:../firmware/cmsis/inc/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 884:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 885:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 886:../firmware/cmsis/inc/core_cm4.h **** 
 887:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 888:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 889:../firmware/cmsis/inc/core_cm4.h **** 
 890:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 891:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 892:../firmware/cmsis/inc/core_cm4.h **** 
 893:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 894:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 895:../firmware/cmsis/inc/core_cm4.h **** 
 896:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 897:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 898:../firmware/cmsis/inc/core_cm4.h **** 
 899:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 900:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 901:../firmware/cmsis/inc/core_cm4.h **** 
 902:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 903:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 904:../firmware/cmsis/inc/core_cm4.h **** 
 905:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 906:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 907:../firmware/cmsis/inc/core_cm4.h **** 
 908:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 909:../firmware/cmsis/inc/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 910:../firmware/cmsis/inc/core_cm4.h **** 
 911:../firmware/cmsis/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 912:../firmware/cmsis/inc/core_cm4.h **** 
 913:../firmware/cmsis/inc/core_cm4.h **** 
 914:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
 915:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 916:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 917:../firmware/cmsis/inc/core_cm4.h ****   @{
 918:../firmware/cmsis/inc/core_cm4.h ****  */
 919:../firmware/cmsis/inc/core_cm4.h **** 
 920:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 921:../firmware/cmsis/inc/core_cm4.h ****  */
 922:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
 923:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size R
 924:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Reg
 925:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[2];
 926:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler R
 927:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED1[55];
 928:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register
 929:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED2[131];
 930:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Reg
 931:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Re
 932:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Coun
 933:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED3[759];
 934:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 935:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 936:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 937:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED4[1];
 938:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 939:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 940:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 941:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED5[39];
 942:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 943:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 944:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED7[8];
 945:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 946:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 947:../firmware/cmsis/inc/core_cm4.h **** } TPI_Type;
 948:../firmware/cmsis/inc/core_cm4.h **** 
 949:../firmware/cmsis/inc/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 950:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 951:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 952:../firmware/cmsis/inc/core_cm4.h **** 
 953:../firmware/cmsis/inc/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 954:../firmware/cmsis/inc/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 955:../firmware/cmsis/inc/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 956:../firmware/cmsis/inc/core_cm4.h **** 
 957:../firmware/cmsis/inc/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 958:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 959:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 960:../firmware/cmsis/inc/core_cm4.h **** 
 961:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 962:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 963:../firmware/cmsis/inc/core_cm4.h **** 
 964:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 965:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 966:../firmware/cmsis/inc/core_cm4.h **** 
 967:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 968:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 969:../firmware/cmsis/inc/core_cm4.h **** 
 970:../firmware/cmsis/inc/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 971:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 972:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 973:../firmware/cmsis/inc/core_cm4.h **** 
 974:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 975:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 976:../firmware/cmsis/inc/core_cm4.h **** 
 977:../firmware/cmsis/inc/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 978:../firmware/cmsis/inc/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 979:../firmware/cmsis/inc/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 980:../firmware/cmsis/inc/core_cm4.h **** 
 981:../firmware/cmsis/inc/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 982:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 983:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 984:../firmware/cmsis/inc/core_cm4.h **** 
 985:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 986:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 987:../firmware/cmsis/inc/core_cm4.h **** 
 988:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 989:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 990:../firmware/cmsis/inc/core_cm4.h **** 
 991:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 992:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 993:../firmware/cmsis/inc/core_cm4.h **** 
 994:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 995:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 996:../firmware/cmsis/inc/core_cm4.h **** 
 997:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 998:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 999:../firmware/cmsis/inc/core_cm4.h **** 
1000:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1001:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1002:../firmware/cmsis/inc/core_cm4.h **** 
1003:../firmware/cmsis/inc/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1004:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1005:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1006:../firmware/cmsis/inc/core_cm4.h **** 
1007:../firmware/cmsis/inc/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1008:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1009:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1010:../firmware/cmsis/inc/core_cm4.h **** 
1011:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1012:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1013:../firmware/cmsis/inc/core_cm4.h **** 
1014:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1015:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1016:../firmware/cmsis/inc/core_cm4.h **** 
1017:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1018:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1019:../firmware/cmsis/inc/core_cm4.h **** 
1020:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1021:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1022:../firmware/cmsis/inc/core_cm4.h **** 
1023:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1024:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1025:../firmware/cmsis/inc/core_cm4.h **** 
1026:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1027:../firmware/cmsis/inc/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1028:../firmware/cmsis/inc/core_cm4.h **** 
1029:../firmware/cmsis/inc/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1030:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1031:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1032:../firmware/cmsis/inc/core_cm4.h **** 
1033:../firmware/cmsis/inc/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1034:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1035:../firmware/cmsis/inc/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1036:../firmware/cmsis/inc/core_cm4.h **** 
1037:../firmware/cmsis/inc/core_cm4.h **** /* TPI DEVID Register Definitions */
1038:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1039:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1040:../firmware/cmsis/inc/core_cm4.h **** 
1041:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1042:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1043:../firmware/cmsis/inc/core_cm4.h **** 
1044:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1045:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1046:../firmware/cmsis/inc/core_cm4.h **** 
1047:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1048:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1049:../firmware/cmsis/inc/core_cm4.h **** 
1050:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1051:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1052:../firmware/cmsis/inc/core_cm4.h **** 
1053:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1054:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1055:../firmware/cmsis/inc/core_cm4.h **** 
1056:../firmware/cmsis/inc/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1057:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1058:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1059:../firmware/cmsis/inc/core_cm4.h **** 
1060:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1061:../firmware/cmsis/inc/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1062:../firmware/cmsis/inc/core_cm4.h **** 
1063:../firmware/cmsis/inc/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1064:../firmware/cmsis/inc/core_cm4.h **** 
1065:../firmware/cmsis/inc/core_cm4.h **** 
1066:../firmware/cmsis/inc/core_cm4.h **** #if (__MPU_PRESENT == 1)
1067:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1068:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1069:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1070:../firmware/cmsis/inc/core_cm4.h ****   @{
1071:../firmware/cmsis/inc/core_cm4.h ****  */
1072:../firmware/cmsis/inc/core_cm4.h **** 
1073:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1074:../firmware/cmsis/inc/core_cm4.h ****  */
1075:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
1076:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register             
1077:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register          
1078:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register    
1079:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Regist
1080:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size 
1081:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Addres
1082:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute a
1083:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Addres
1084:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute a
1085:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Addres
1086:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute a
1087:../firmware/cmsis/inc/core_cm4.h **** } MPU_Type;
1088:../firmware/cmsis/inc/core_cm4.h **** 
1089:../firmware/cmsis/inc/core_cm4.h **** /* MPU Type Register */
1090:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1091:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1092:../firmware/cmsis/inc/core_cm4.h **** 
1093:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1094:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1095:../firmware/cmsis/inc/core_cm4.h **** 
1096:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1097:../firmware/cmsis/inc/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1098:../firmware/cmsis/inc/core_cm4.h **** 
1099:../firmware/cmsis/inc/core_cm4.h **** /* MPU Control Register */
1100:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1101:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1102:../firmware/cmsis/inc/core_cm4.h **** 
1103:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1104:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1105:../firmware/cmsis/inc/core_cm4.h **** 
1106:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1107:../firmware/cmsis/inc/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1108:../firmware/cmsis/inc/core_cm4.h **** 
1109:../firmware/cmsis/inc/core_cm4.h **** /* MPU Region Number Register */
1110:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1111:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1112:../firmware/cmsis/inc/core_cm4.h **** 
1113:../firmware/cmsis/inc/core_cm4.h **** /* MPU Region Base Address Register */
1114:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1115:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1116:../firmware/cmsis/inc/core_cm4.h **** 
1117:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1118:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1119:../firmware/cmsis/inc/core_cm4.h **** 
1120:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1121:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1122:../firmware/cmsis/inc/core_cm4.h **** 
1123:../firmware/cmsis/inc/core_cm4.h **** /* MPU Region Attribute and Size Register */
1124:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1125:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1126:../firmware/cmsis/inc/core_cm4.h **** 
1127:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1128:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1129:../firmware/cmsis/inc/core_cm4.h **** 
1130:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1131:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1132:../firmware/cmsis/inc/core_cm4.h **** 
1133:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1134:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1135:../firmware/cmsis/inc/core_cm4.h **** 
1136:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1137:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1138:../firmware/cmsis/inc/core_cm4.h **** 
1139:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1140:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1141:../firmware/cmsis/inc/core_cm4.h **** 
1142:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1143:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1144:../firmware/cmsis/inc/core_cm4.h **** 
1145:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1146:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1147:../firmware/cmsis/inc/core_cm4.h **** 
1148:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1149:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1150:../firmware/cmsis/inc/core_cm4.h **** 
1151:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1152:../firmware/cmsis/inc/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1153:../firmware/cmsis/inc/core_cm4.h **** 
1154:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_MPU */
1155:../firmware/cmsis/inc/core_cm4.h **** #endif
1156:../firmware/cmsis/inc/core_cm4.h **** 
1157:../firmware/cmsis/inc/core_cm4.h **** 
1158:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
1159:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1160:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1161:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1162:../firmware/cmsis/inc/core_cm4.h ****   @{
1163:../firmware/cmsis/inc/core_cm4.h ****  */
1164:../firmware/cmsis/inc/core_cm4.h **** 
1165:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1166:../firmware/cmsis/inc/core_cm4.h ****  */
1167:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
1168:../firmware/cmsis/inc/core_cm4.h ****     uint32_t RESERVED0[1];
1169:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control
1170:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address
1171:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status 
1172:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 
1173:../firmware/cmsis/inc/core_cm4.h ****     __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 
1174:../firmware/cmsis/inc/core_cm4.h **** } FPU_Type;
1175:../firmware/cmsis/inc/core_cm4.h **** 
1176:../firmware/cmsis/inc/core_cm4.h **** /* Floating-Point Context Control Register */
1177:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1178:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1179:../firmware/cmsis/inc/core_cm4.h **** 
1180:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1181:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1182:../firmware/cmsis/inc/core_cm4.h **** 
1183:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1184:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1185:../firmware/cmsis/inc/core_cm4.h **** 
1186:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1187:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1188:../firmware/cmsis/inc/core_cm4.h **** 
1189:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1190:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1191:../firmware/cmsis/inc/core_cm4.h **** 
1192:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1193:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1194:../firmware/cmsis/inc/core_cm4.h **** 
1195:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1196:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1197:../firmware/cmsis/inc/core_cm4.h **** 
1198:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1199:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1200:../firmware/cmsis/inc/core_cm4.h **** 
1201:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1202:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1203:../firmware/cmsis/inc/core_cm4.h **** 
1204:../firmware/cmsis/inc/core_cm4.h **** /* Floating-Point Context Address Register */
1205:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1206:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1207:../firmware/cmsis/inc/core_cm4.h **** 
1208:../firmware/cmsis/inc/core_cm4.h **** /* Floating-Point Default Status Control Register */
1209:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1210:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1211:../firmware/cmsis/inc/core_cm4.h **** 
1212:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1213:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1214:../firmware/cmsis/inc/core_cm4.h **** 
1215:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1216:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1217:../firmware/cmsis/inc/core_cm4.h **** 
1218:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1219:../firmware/cmsis/inc/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1220:../firmware/cmsis/inc/core_cm4.h **** 
1221:../firmware/cmsis/inc/core_cm4.h **** /* Media and FP Feature Register 0 */
1222:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1223:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1224:../firmware/cmsis/inc/core_cm4.h **** 
1225:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1226:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1227:../firmware/cmsis/inc/core_cm4.h **** 
1228:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1229:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1230:../firmware/cmsis/inc/core_cm4.h **** 
1231:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1232:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1233:../firmware/cmsis/inc/core_cm4.h **** 
1234:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1235:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1236:../firmware/cmsis/inc/core_cm4.h **** 
1237:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1238:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1239:../firmware/cmsis/inc/core_cm4.h **** 
1240:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1241:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1242:../firmware/cmsis/inc/core_cm4.h **** 
1243:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1244:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1245:../firmware/cmsis/inc/core_cm4.h **** 
1246:../firmware/cmsis/inc/core_cm4.h **** /* Media and FP Feature Register 1 */
1247:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1248:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1249:../firmware/cmsis/inc/core_cm4.h **** 
1250:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1251:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1252:../firmware/cmsis/inc/core_cm4.h **** 
1253:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1254:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1255:../firmware/cmsis/inc/core_cm4.h **** 
1256:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1257:../firmware/cmsis/inc/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1258:../firmware/cmsis/inc/core_cm4.h **** 
1259:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_FPU */
1260:../firmware/cmsis/inc/core_cm4.h **** #endif
1261:../firmware/cmsis/inc/core_cm4.h **** 
1262:../firmware/cmsis/inc/core_cm4.h **** 
1263:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_core_register
1264:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1265:../firmware/cmsis/inc/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1266:../firmware/cmsis/inc/core_cm4.h ****   @{
1267:../firmware/cmsis/inc/core_cm4.h ****  */
1268:../firmware/cmsis/inc/core_cm4.h **** 
1269:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1270:../firmware/cmsis/inc/core_cm4.h ****  */
1271:../firmware/cmsis/inc/core_cm4.h **** typedef struct {
1272:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Stat
1273:../firmware/cmsis/inc/core_cm4.h ****     __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector R
1274:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Regis
1275:../firmware/cmsis/inc/core_cm4.h ****     __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Co
1276:../firmware/cmsis/inc/core_cm4.h **** } CoreDebug_Type;
1277:../firmware/cmsis/inc/core_cm4.h **** 
1278:../firmware/cmsis/inc/core_cm4.h **** /* Debug Halting Control and Status Register */
1279:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1280:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1281:../firmware/cmsis/inc/core_cm4.h **** 
1282:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1283:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1284:../firmware/cmsis/inc/core_cm4.h **** 
1285:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1286:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1287:../firmware/cmsis/inc/core_cm4.h **** 
1288:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1289:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1290:../firmware/cmsis/inc/core_cm4.h **** 
1291:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1292:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1293:../firmware/cmsis/inc/core_cm4.h **** 
1294:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1295:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1296:../firmware/cmsis/inc/core_cm4.h **** 
1297:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1298:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1299:../firmware/cmsis/inc/core_cm4.h **** 
1300:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1301:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1302:../firmware/cmsis/inc/core_cm4.h **** 
1303:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1304:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1305:../firmware/cmsis/inc/core_cm4.h **** 
1306:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1307:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1308:../firmware/cmsis/inc/core_cm4.h **** 
1309:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1310:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1311:../firmware/cmsis/inc/core_cm4.h **** 
1312:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1313:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1314:../firmware/cmsis/inc/core_cm4.h **** 
1315:../firmware/cmsis/inc/core_cm4.h **** /* Debug Core Register Selector Register */
1316:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1317:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1318:../firmware/cmsis/inc/core_cm4.h **** 
1319:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1320:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1321:../firmware/cmsis/inc/core_cm4.h **** 
1322:../firmware/cmsis/inc/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1323:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1324:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1325:../firmware/cmsis/inc/core_cm4.h **** 
1326:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1327:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1328:../firmware/cmsis/inc/core_cm4.h **** 
1329:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1330:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1331:../firmware/cmsis/inc/core_cm4.h **** 
1332:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1333:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1334:../firmware/cmsis/inc/core_cm4.h **** 
1335:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1336:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1337:../firmware/cmsis/inc/core_cm4.h **** 
1338:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1339:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1340:../firmware/cmsis/inc/core_cm4.h **** 
1341:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1342:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1343:../firmware/cmsis/inc/core_cm4.h **** 
1344:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1345:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1346:../firmware/cmsis/inc/core_cm4.h **** 
1347:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1348:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1349:../firmware/cmsis/inc/core_cm4.h **** 
1350:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1351:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1352:../firmware/cmsis/inc/core_cm4.h **** 
1353:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1354:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1355:../firmware/cmsis/inc/core_cm4.h **** 
1356:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1357:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1358:../firmware/cmsis/inc/core_cm4.h **** 
1359:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1360:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1361:../firmware/cmsis/inc/core_cm4.h **** 
1362:../firmware/cmsis/inc/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1363:../firmware/cmsis/inc/core_cm4.h **** 
1364:../firmware/cmsis/inc/core_cm4.h **** 
1365:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup    CMSIS_core_register
1366:../firmware/cmsis/inc/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1367:../firmware/cmsis/inc/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1368:../firmware/cmsis/inc/core_cm4.h ****   @{
1369:../firmware/cmsis/inc/core_cm4.h ****  */
1370:../firmware/cmsis/inc/core_cm4.h **** 
1371:../firmware/cmsis/inc/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1372:../firmware/cmsis/inc/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1373:../firmware/cmsis/inc/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1374:../firmware/cmsis/inc/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1375:../firmware/cmsis/inc/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1376:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1377:../firmware/cmsis/inc/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1378:../firmware/cmsis/inc/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1379:../firmware/cmsis/inc/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1380:../firmware/cmsis/inc/core_cm4.h **** 
1381:../firmware/cmsis/inc/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1382:../firmware/cmsis/inc/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1383:../firmware/cmsis/inc/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1384:../firmware/cmsis/inc/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1385:../firmware/cmsis/inc/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1386:../firmware/cmsis/inc/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1387:../firmware/cmsis/inc/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1388:../firmware/cmsis/inc/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1389:../firmware/cmsis/inc/core_cm4.h **** 
1390:../firmware/cmsis/inc/core_cm4.h **** #if (__MPU_PRESENT == 1)
1391:../firmware/cmsis/inc/core_cm4.h **** #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit    
1392:../firmware/cmsis/inc/core_cm4.h **** #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit    
1393:../firmware/cmsis/inc/core_cm4.h **** #endif
1394:../firmware/cmsis/inc/core_cm4.h **** 
1395:../firmware/cmsis/inc/core_cm4.h **** #if (__FPU_PRESENT == 1)
1396:../firmware/cmsis/inc/core_cm4.h **** #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit       
1397:../firmware/cmsis/inc/core_cm4.h **** #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit       
1398:../firmware/cmsis/inc/core_cm4.h **** #endif
1399:../firmware/cmsis/inc/core_cm4.h **** 
1400:../firmware/cmsis/inc/core_cm4.h **** /*@} */
1401:../firmware/cmsis/inc/core_cm4.h **** 
1402:../firmware/cmsis/inc/core_cm4.h **** 
1403:../firmware/cmsis/inc/core_cm4.h **** 
1404:../firmware/cmsis/inc/core_cm4.h **** /*******************************************************************************
1405:../firmware/cmsis/inc/core_cm4.h ****  *                Hardware Abstraction Layer
1406:../firmware/cmsis/inc/core_cm4.h ****   Core Function Interface contains:
1407:../firmware/cmsis/inc/core_cm4.h ****   - Core NVIC Functions
1408:../firmware/cmsis/inc/core_cm4.h ****   - Core SysTick Functions
1409:../firmware/cmsis/inc/core_cm4.h ****   - Core Debug Functions
1410:../firmware/cmsis/inc/core_cm4.h ****   - Core Register Access Functions
1411:../firmware/cmsis/inc/core_cm4.h ****  ******************************************************************************/
1412:../firmware/cmsis/inc/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1413:../firmware/cmsis/inc/core_cm4.h **** */
1414:../firmware/cmsis/inc/core_cm4.h **** 
1415:../firmware/cmsis/inc/core_cm4.h **** 
1416:../firmware/cmsis/inc/core_cm4.h **** 
1417:../firmware/cmsis/inc/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1418:../firmware/cmsis/inc/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1419:../firmware/cmsis/inc/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1420:../firmware/cmsis/inc/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1421:../firmware/cmsis/inc/core_cm4.h ****     @{
1422:../firmware/cmsis/inc/core_cm4.h ****  */
1423:../firmware/cmsis/inc/core_cm4.h **** 
1424:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Set Priority Grouping
1425:../firmware/cmsis/inc/core_cm4.h **** 
1426:../firmware/cmsis/inc/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1427:../firmware/cmsis/inc/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1428:../firmware/cmsis/inc/core_cm4.h ****   Only values from 0..7 are used.
1429:../firmware/cmsis/inc/core_cm4.h ****   In case of a conflict between priority grouping and available
1430:../firmware/cmsis/inc/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1431:../firmware/cmsis/inc/core_cm4.h **** 
1432:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1433:../firmware/cmsis/inc/core_cm4.h ****  */
1434:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1435:../firmware/cmsis/inc/core_cm4.h **** {
1436:../firmware/cmsis/inc/core_cm4.h ****     uint32_t reg_value;
1437:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7
1438:../firmware/cmsis/inc/core_cm4.h **** 
1439:../firmware/cmsis/inc/core_cm4.h ****     reg_value  =  SCB->AIRCR;                                                   /* read old registe
1440:../firmware/cmsis/inc/core_cm4.h ****     reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to ch
1441:../firmware/cmsis/inc/core_cm4.h ****     reg_value  = (reg_value                                 |
1442:../firmware/cmsis/inc/core_cm4.h ****                   ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1443:../firmware/cmsis/inc/core_cm4.h ****                   (PriorityGroupTmp << 8));                                     /* Insert write key
1444:../firmware/cmsis/inc/core_cm4.h ****     SCB->AIRCR =  reg_value;
1445:../firmware/cmsis/inc/core_cm4.h **** }
1446:../firmware/cmsis/inc/core_cm4.h **** 
1447:../firmware/cmsis/inc/core_cm4.h **** 
1448:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Priority Grouping
1449:../firmware/cmsis/inc/core_cm4.h **** 
1450:../firmware/cmsis/inc/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1451:../firmware/cmsis/inc/core_cm4.h **** 
1452:../firmware/cmsis/inc/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1453:../firmware/cmsis/inc/core_cm4.h ****  */
1454:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1455:../firmware/cmsis/inc/core_cm4.h **** {
  26              		.loc 1 1455 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 7, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
1456:../firmware/cmsis/inc/core_cm4.h ****     return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority gr
  36              		.loc 1 1456 17
  37 0004 044B     		ldr	r3, .L3
  38 0006 DB68     		ldr	r3, [r3, #12]
  39              		.loc 1 1456 51
  40 0008 1B0A     		lsrs	r3, r3, #8
  41 000a 03F00703 		and	r3, r3, #7
1457:../firmware/cmsis/inc/core_cm4.h **** }
  42              		.loc 1 1457 1
  43 000e 1846     		mov	r0, r3
  44 0010 BD46     		mov	sp, r7
  45              		.cfi_def_cfa_register 13
  46              		@ sp needed
  47 0012 80BC     		pop	{r7}
  48              		.cfi_restore 7
  49              		.cfi_def_cfa_offset 0
  50 0014 7047     		bx	lr
  51              	.L4:
  52 0016 00BF     		.align	2
  53              	.L3:
  54 0018 00ED00E0 		.word	-536810240
  55              		.cfi_endproc
  56              	.LFE103:
  58              		.section	.text.NVIC_SetPriority,"ax",%progbits
  59              		.align	1
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	NVIC_SetPriority:
  66              	.LFB110:
1458:../firmware/cmsis/inc/core_cm4.h **** 
1459:../firmware/cmsis/inc/core_cm4.h **** 
1460:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Enable External Interrupt
1461:../firmware/cmsis/inc/core_cm4.h **** 
1462:../firmware/cmsis/inc/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1463:../firmware/cmsis/inc/core_cm4.h **** 
1464:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1465:../firmware/cmsis/inc/core_cm4.h ****  */
1466:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1467:../firmware/cmsis/inc/core_cm4.h **** {
1468:../firmware/cmsis/inc/core_cm4.h ****     /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt *
1469:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint
1470:../firmware/cmsis/inc/core_cm4.h **** }
1471:../firmware/cmsis/inc/core_cm4.h **** 
1472:../firmware/cmsis/inc/core_cm4.h **** 
1473:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Disable External Interrupt
1474:../firmware/cmsis/inc/core_cm4.h **** 
1475:../firmware/cmsis/inc/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1476:../firmware/cmsis/inc/core_cm4.h **** 
1477:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1478:../firmware/cmsis/inc/core_cm4.h ****  */
1479:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1480:../firmware/cmsis/inc/core_cm4.h **** {
1481:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1482:../firmware/cmsis/inc/core_cm4.h **** }
1483:../firmware/cmsis/inc/core_cm4.h **** 
1484:../firmware/cmsis/inc/core_cm4.h **** 
1485:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Pending Interrupt
1486:../firmware/cmsis/inc/core_cm4.h **** 
1487:../firmware/cmsis/inc/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1488:../firmware/cmsis/inc/core_cm4.h ****     for the specified interrupt.
1489:../firmware/cmsis/inc/core_cm4.h **** 
1490:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1491:../firmware/cmsis/inc/core_cm4.h **** 
1492:../firmware/cmsis/inc/core_cm4.h ****     \return             0  Interrupt status is not pending.
1493:../firmware/cmsis/inc/core_cm4.h ****     \return             1  Interrupt status is pending.
1494:../firmware/cmsis/inc/core_cm4.h ****  */
1495:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1496:../firmware/cmsis/inc/core_cm4.h **** {
1497:../firmware/cmsis/inc/core_cm4.h ****     return((uint32_t)((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F))) ? 1 : 
1498:../firmware/cmsis/inc/core_cm4.h **** }
1499:../firmware/cmsis/inc/core_cm4.h **** 
1500:../firmware/cmsis/inc/core_cm4.h **** 
1501:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Set Pending Interrupt
1502:../firmware/cmsis/inc/core_cm4.h **** 
1503:../firmware/cmsis/inc/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1504:../firmware/cmsis/inc/core_cm4.h **** 
1505:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1506:../firmware/cmsis/inc/core_cm4.h ****  */
1507:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1508:../firmware/cmsis/inc/core_cm4.h **** {
1509:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pendin
1510:../firmware/cmsis/inc/core_cm4.h **** }
1511:../firmware/cmsis/inc/core_cm4.h **** 
1512:../firmware/cmsis/inc/core_cm4.h **** 
1513:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Clear Pending Interrupt
1514:../firmware/cmsis/inc/core_cm4.h **** 
1515:../firmware/cmsis/inc/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1516:../firmware/cmsis/inc/core_cm4.h **** 
1517:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1518:../firmware/cmsis/inc/core_cm4.h ****  */
1519:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1520:../firmware/cmsis/inc/core_cm4.h **** {
1521:../firmware/cmsis/inc/core_cm4.h ****     NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interr
1522:../firmware/cmsis/inc/core_cm4.h **** }
1523:../firmware/cmsis/inc/core_cm4.h **** 
1524:../firmware/cmsis/inc/core_cm4.h **** 
1525:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Active Interrupt
1526:../firmware/cmsis/inc/core_cm4.h **** 
1527:../firmware/cmsis/inc/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1528:../firmware/cmsis/inc/core_cm4.h **** 
1529:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1530:../firmware/cmsis/inc/core_cm4.h **** 
1531:../firmware/cmsis/inc/core_cm4.h ****     \return             0  Interrupt status is not active.
1532:../firmware/cmsis/inc/core_cm4.h ****     \return             1  Interrupt status is active.
1533:../firmware/cmsis/inc/core_cm4.h ****  */
1534:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1535:../firmware/cmsis/inc/core_cm4.h **** {
1536:../firmware/cmsis/inc/core_cm4.h ****     return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F))) ? 1 : 
1537:../firmware/cmsis/inc/core_cm4.h **** }
1538:../firmware/cmsis/inc/core_cm4.h **** 
1539:../firmware/cmsis/inc/core_cm4.h **** 
1540:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Set Interrupt Priority
1541:../firmware/cmsis/inc/core_cm4.h **** 
1542:../firmware/cmsis/inc/core_cm4.h ****     The function sets the priority of an interrupt.
1543:../firmware/cmsis/inc/core_cm4.h **** 
1544:../firmware/cmsis/inc/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1545:../firmware/cmsis/inc/core_cm4.h **** 
1546:../firmware/cmsis/inc/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1547:../firmware/cmsis/inc/core_cm4.h ****     \param [in]  priority  Priority to set.
1548:../firmware/cmsis/inc/core_cm4.h ****  */
1549:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1550:../firmware/cmsis/inc/core_cm4.h **** {
  67              		.loc 1 1550 1
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 8
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 80B4     		push	{r7}
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 7, -4
  75 0002 83B0     		sub	sp, sp, #12
  76              		.cfi_def_cfa_offset 16
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
  79 0006 0346     		mov	r3, r0
  80 0008 3960     		str	r1, [r7]
  81 000a FB71     		strb	r3, [r7, #7]
1551:../firmware/cmsis/inc/core_cm4.h ****     if(IRQn < 0) {
  82              		.loc 1 1551 7
  83 000c 97F90730 		ldrsb	r3, [r7, #7]
  84 0010 002B     		cmp	r3, #0
  85 0012 0BDA     		bge	.L6
1552:../firmware/cmsis/inc/core_cm4.h ****         SCB->SHP[((uint32_t)(IRQn) & 0xF) - 4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);
  86              		.loc 1 1552 61
  87 0014 3B68     		ldr	r3, [r7]
  88 0016 DAB2     		uxtb	r2, r3
  89              		.loc 1 1552 12
  90 0018 0C49     		ldr	r1, .L9
  91              		.loc 1 1552 36
  92 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  93 001c 03F00F03 		and	r3, r3, #15
  94              		.loc 1 1552 43
  95 0020 043B     		subs	r3, r3, #4
  96              		.loc 1 1552 61
  97 0022 1201     		lsls	r2, r2, #4
  98 0024 D2B2     		uxtb	r2, r2
  99              		.loc 1 1552 48
 100 0026 0B44     		add	r3, r3, r1
 101 0028 1A76     		strb	r2, [r3, #24]
1553:../firmware/cmsis/inc/core_cm4.h ****     } /* set Priority for Cortex-M  System Interrupts */
1554:../firmware/cmsis/inc/core_cm4.h ****     else {
1555:../firmware/cmsis/inc/core_cm4.h ****         NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);
1556:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
1557:../firmware/cmsis/inc/core_cm4.h **** }
 102              		.loc 1 1557 1
 103 002a 09E0     		b	.L8
 104              	.L6:
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
 105              		.loc 1 1555 49
 106 002c 3B68     		ldr	r3, [r7]
 107 002e DAB2     		uxtb	r2, r3
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
 108              		.loc 1 1555 13
 109 0030 0749     		ldr	r1, .L9+4
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
 110              		.loc 1 1555 18
 111 0032 97F90730 		ldrsb	r3, [r7, #7]
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
 112              		.loc 1 1555 49
 113 0036 1201     		lsls	r2, r2, #4
 114 0038 D2B2     		uxtb	r2, r2
1555:../firmware/cmsis/inc/core_cm4.h ****     }        /* set Priority for device specific Interrupts  */
 115              		.loc 1 1555 36
 116 003a 0B44     		add	r3, r3, r1
 117 003c 83F80023 		strb	r2, [r3, #768]
 118              	.L8:
 119              		.loc 1 1557 1
 120 0040 00BF     		nop
 121 0042 0C37     		adds	r7, r7, #12
 122              		.cfi_def_cfa_offset 4
 123 0044 BD46     		mov	sp, r7
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 0046 80BC     		pop	{r7}
 127              		.cfi_restore 7
 128              		.cfi_def_cfa_offset 0
 129 0048 7047     		bx	lr
 130              	.L10:
 131 004a 00BF     		.align	2
 132              	.L9:
 133 004c 00ED00E0 		.word	-536810240
 134 0050 00E100E0 		.word	-536813312
 135              		.cfi_endproc
 136              	.LFE110:
 138              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	NVIC_EncodePriority:
 146              	.LFB112:
1558:../firmware/cmsis/inc/core_cm4.h **** 
1559:../firmware/cmsis/inc/core_cm4.h **** 
1560:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Get Interrupt Priority
1561:../firmware/cmsis/inc/core_cm4.h **** 
1562:../firmware/cmsis/inc/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1563:../firmware/cmsis/inc/core_cm4.h ****     number can be positive to specify an external (device specific)
1564:../firmware/cmsis/inc/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1565:../firmware/cmsis/inc/core_cm4.h **** 
1566:../firmware/cmsis/inc/core_cm4.h **** 
1567:../firmware/cmsis/inc/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1568:../firmware/cmsis/inc/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1569:../firmware/cmsis/inc/core_cm4.h ****                         priority bits of the microcontroller.
1570:../firmware/cmsis/inc/core_cm4.h ****  */
1571:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1572:../firmware/cmsis/inc/core_cm4.h **** {
1573:../firmware/cmsis/inc/core_cm4.h **** 
1574:../firmware/cmsis/inc/core_cm4.h ****     if(IRQn < 0) {
1575:../firmware/cmsis/inc/core_cm4.h ****         return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF) - 4] >> (8 - __NVIC_PRIO_BITS)));
1576:../firmware/cmsis/inc/core_cm4.h ****     } /* get priority for Cortex-M  system interrupts */
1577:../firmware/cmsis/inc/core_cm4.h ****     else {
1578:../firmware/cmsis/inc/core_cm4.h ****         return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));
1579:../firmware/cmsis/inc/core_cm4.h ****     } /* get priority for device specific interrupts  */
1580:../firmware/cmsis/inc/core_cm4.h **** }
1581:../firmware/cmsis/inc/core_cm4.h **** 
1582:../firmware/cmsis/inc/core_cm4.h **** 
1583:../firmware/cmsis/inc/core_cm4.h **** /** \brief  Encode Priority
1584:../firmware/cmsis/inc/core_cm4.h **** 
1585:../firmware/cmsis/inc/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1586:../firmware/cmsis/inc/core_cm4.h ****     preemptive priority value, and subpriority value.
1587:../firmware/cmsis/inc/core_cm4.h ****     In case of a conflict between priority grouping and available
1588:../firmware/cmsis/inc/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the samllest possible priority group is set.
1589:../firmware/cmsis/inc/core_cm4.h **** 
1590:../firmware/cmsis/inc/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1591:../firmware/cmsis/inc/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1592:../firmware/cmsis/inc/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1593:../firmware/cmsis/inc/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1594:../firmware/cmsis/inc/core_cm4.h ****  */
1595:../firmware/cmsis/inc/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority(uint32_t PriorityGroup, uint32_t PreemptPriority, uint
1596:../firmware/cmsis/inc/core_cm4.h **** {
 147              		.loc 1 1596 1
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 32
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 7, -4
 155 0002 89B0     		sub	sp, sp, #36
 156              		.cfi_def_cfa_offset 40
 157 0004 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 159 0006 F860     		str	r0, [r7, #12]
 160 0008 B960     		str	r1, [r7, #8]
 161 000a 7A60     		str	r2, [r7, #4]
1597:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used      
 162              		.loc 1 1597 14
 163 000c FB68     		ldr	r3, [r7, #12]
 164 000e 03F00703 		and	r3, r3, #7
 165 0012 FB61     		str	r3, [r7, #28]
1598:../firmware/cmsis/inc/core_cm4.h ****     uint32_t PreemptPriorityBits;
1599:../firmware/cmsis/inc/core_cm4.h ****     uint32_t SubPriorityBits;
1600:../firmware/cmsis/inc/core_cm4.h **** 
1601:../firmware/cmsis/inc/core_cm4.h ****     PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Prio
 166              		.loc 1 1601 31
 167 0014 FB69     		ldr	r3, [r7, #28]
 168 0016 C3F10703 		rsb	r3, r3, #7
 169              		.loc 1 1601 25
 170 001a 042B     		cmp	r3, #4
 171 001c 28BF     		it	cs
 172 001e 0423     		movcs	r3, #4
 173 0020 BB61     		str	r3, [r7, #24]
1602:../firmware/cmsis/inc/core_cm4.h ****     SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + 
 174              		.loc 1 1602 46
 175 0022 FB69     		ldr	r3, [r7, #28]
 176 0024 0433     		adds	r3, r3, #4
 177              		.loc 1 1602 75
 178 0026 062B     		cmp	r3, #6
 179 0028 02D9     		bls	.L12
 180              		.loc 1 1602 75 is_stmt 0 discriminator 1
 181 002a FB69     		ldr	r3, [r7, #28]
 182 002c 033B     		subs	r3, r3, #3
 183 002e 00E0     		b	.L13
 184              	.L12:
 185              		.loc 1 1602 75 discriminator 2
 186 0030 0023     		movs	r3, #0
 187              	.L13:
 188              		.loc 1 1602 25 is_stmt 1 discriminator 4
 189 0032 7B61     		str	r3, [r7, #20]
1603:../firmware/cmsis/inc/core_cm4.h **** 
1604:../firmware/cmsis/inc/core_cm4.h ****     return (
1605:../firmware/cmsis/inc/core_cm4.h ****                ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 190              		.loc 1 1605 40 discriminator 4
 191 0034 0122     		movs	r2, #1
 192 0036 BB69     		ldr	r3, [r7, #24]
 193 0038 02FA03F3 		lsl	r3, r2, r3
 194              		.loc 1 1605 66 discriminator 4
 195 003c 013B     		subs	r3, r3, #1
 196 003e 1A46     		mov	r2, r3
 197              		.loc 1 1605 34 discriminator 4
 198 0040 BB68     		ldr	r3, [r7, #8]
 199 0042 1A40     		ands	r2, r2, r3
 200              		.loc 1 1605 72 discriminator 4
 201 0044 7B69     		ldr	r3, [r7, #20]
 202 0046 9A40     		lsls	r2, r2, r3
1606:../firmware/cmsis/inc/core_cm4.h ****                ((SubPriority     & ((1 << (SubPriorityBits)) - 1)))
 203              		.loc 1 1606 40 discriminator 4
 204 0048 0121     		movs	r1, #1
 205 004a 7B69     		ldr	r3, [r7, #20]
 206 004c 01FA03F3 		lsl	r3, r1, r3
 207              		.loc 1 1606 62 discriminator 4
 208 0050 013B     		subs	r3, r3, #1
 209 0052 1946     		mov	r1, r3
 210              		.loc 1 1606 34 discriminator 4
 211 0054 7B68     		ldr	r3, [r7, #4]
 212 0056 0B40     		ands	r3, r3, r1
1605:../firmware/cmsis/inc/core_cm4.h ****                ((SubPriority     & ((1 << (SubPriorityBits)) - 1)))
 213              		.loc 1 1605 92 discriminator 4
 214 0058 1343     		orrs	r3, r3, r2
1607:../firmware/cmsis/inc/core_cm4.h ****            );
1608:../firmware/cmsis/inc/core_cm4.h **** }
 215              		.loc 1 1608 1 discriminator 4
 216 005a 1846     		mov	r0, r3
 217 005c 2437     		adds	r7, r7, #36
 218              		.cfi_def_cfa_offset 4
 219 005e BD46     		mov	sp, r7
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 0060 80BC     		pop	{r7}
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 0062 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE112:
 229              		.section	.text.hal_nvic_irq_priority_group_set,"ax",%progbits
 230              		.align	1
 231              		.global	hal_nvic_irq_priority_group_set
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu softvfp
 237              	hal_nvic_irq_priority_group_set:
 238              	.LFB119:
 239              		.file 2 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \file    gd32f3x0_hal_nvic.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief   NVIC driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      set the priority group
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_prigroup: the NVIC priority group
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                 only one parameter can be selected which is shown as below:
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_PRIGROUP_PRE0_SUB4:0 bits for pre-emption priority 4 bits for subpriority
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_PRIGROUP_PRE1_SUB3:1 bits for pre-emption priority 3 bits for subpriority
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_PRIGROUP_PRE2_SUB2:2 bits for pre-emption priority 2 bits for subpriority
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_PRIGROUP_PRE3_SUB1:3 bits for pre-emption priority 1 bits for subpriority
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_PRIGROUP_PRE4_SUB0:4 bits for pre-emption priority 0 bits for subpriority
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hal_nvic_irq_priority_group_set(uint32_t nvic_prigroup)
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 240              		.loc 2 50 1
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245 0000 80B4     		push	{r7}
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 7, -4
 248 0002 83B0     		sub	sp, sp, #12
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* set the priority group value */
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     SCB->AIRCR = NVIC_AIRCR_VECTKEY_MASK | nvic_prigroup;
 253              		.loc 2 52 8
 254 0008 054A     		ldr	r2, .L16
 255              		.loc 2 52 42
 256 000a 7B68     		ldr	r3, [r7, #4]
 257 000c 43F0BF63 		orr	r3, r3, #100139008
 258 0010 43F40033 		orr	r3, r3, #131072
 259              		.loc 2 52 16
 260 0014 D360     		str	r3, [r2, #12]
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 261              		.loc 2 53 1
 262 0016 00BF     		nop
 263 0018 0C37     		adds	r7, r7, #12
 264              		.cfi_def_cfa_offset 4
 265 001a BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 001c 80BC     		pop	{r7}
 269              		.cfi_restore 7
 270              		.cfi_def_cfa_offset 0
 271 001e 7047     		bx	lr
 272              	.L17:
 273              		.align	2
 274              	.L16:
 275 0020 00ED00E0 		.word	-536810240
 276              		.cfi_endproc
 277              	.LFE119:
 279              		.section	.text.hal_nvic_irq_enable,"ax",%progbits
 280              		.align	1
 281              		.global	hal_nvic_irq_enable
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu softvfp
 287              	hal_nvic_irq_enable:
 288              	.LFB120:
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      enable NVIC request
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq: the NVIC interrupt request, detailed in IRQn_Type
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq_pre_priority: the pre-emption priority needed to set
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq_sub_priority: the subpriority needed to set
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hal_nvic_irq_enable(IRQn_Type nvic_irq,
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                          uint8_t nvic_irq_pre_priority,
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                          uint8_t nvic_irq_sub_priority)
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 289              		.loc 2 66 1
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 24
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0000 80B5     		push	{r7, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 86B0     		sub	sp, sp, #24
 298              		.cfi_def_cfa_offset 32
 299 0004 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 301 0006 0346     		mov	r3, r0
 302 0008 FB71     		strb	r3, [r7, #7]
 303 000a 0B46     		mov	r3, r1
 304 000c BB71     		strb	r3, [r7, #6]
 305 000e 1346     		mov	r3, r2
 306 0010 7B71     		strb	r3, [r7, #5]
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     uint32_t temp_priority = 0x00U, temp_pre = 0x00U, temp_sub = 0x00U;
 307              		.loc 2 67 14
 308 0012 0023     		movs	r3, #0
 309 0014 FB60     		str	r3, [r7, #12]
 310              		.loc 2 67 37
 311 0016 0023     		movs	r3, #0
 312 0018 7B61     		str	r3, [r7, #20]
 313              		.loc 2 67 55
 314 001a 0023     		movs	r3, #0
 315 001c 3B61     		str	r3, [r7, #16]
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* use the priority group value to get the temp_pre and the temp_sub */
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     switch((SCB->AIRCR) & (uint32_t)0x700U) {
 316              		.loc 2 69 16
 317 001e 374B     		ldr	r3, .L26
 318 0020 DB68     		ldr	r3, [r3, #12]
 319              		.loc 2 69 25
 320 0022 03F4E063 		and	r3, r3, #1792
 321              		.loc 2 69 5
 322 0026 B3F5E06F 		cmp	r3, #1792
 323 002a 15D0     		beq	.L19
 324 002c B3F5E06F 		cmp	r3, #1792
 325 0030 2BD8     		bhi	.L20
 326 0032 B3F5C06F 		cmp	r3, #1536
 327 0036 14D0     		beq	.L21
 328 0038 B3F5C06F 		cmp	r3, #1536
 329 003c 25D8     		bhi	.L20
 330 003e B3F5A06F 		cmp	r3, #1280
 331 0042 13D0     		beq	.L22
 332 0044 B3F5A06F 		cmp	r3, #1280
 333 0048 1FD8     		bhi	.L20
 334 004a B3F5407F 		cmp	r3, #768
 335 004e 17D0     		beq	.L23
 336 0050 B3F5806F 		cmp	r3, #1024
 337 0054 0FD0     		beq	.L24
 338 0056 18E0     		b	.L20
 339              	.L19:
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     case NVIC_PRIGROUP_PRE0_SUB4:
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_pre = 0U;
 340              		.loc 2 71 18
 341 0058 0023     		movs	r3, #0
 342 005a 7B61     		str	r3, [r7, #20]
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_sub = 0x4U;
 343              		.loc 2 72 18
 344 005c 0423     		movs	r3, #4
 345 005e 3B61     		str	r3, [r7, #16]
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         break;
 346              		.loc 2 73 9
 347 0060 1CE0     		b	.L25
 348              	.L21:
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     case NVIC_PRIGROUP_PRE1_SUB3:
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_pre = 1U;
 349              		.loc 2 75 18
 350 0062 0123     		movs	r3, #1
 351 0064 7B61     		str	r3, [r7, #20]
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_sub = 0x3U;
 352              		.loc 2 76 18
 353 0066 0323     		movs	r3, #3
 354 0068 3B61     		str	r3, [r7, #16]
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         break;
 355              		.loc 2 77 9
 356 006a 17E0     		b	.L25
 357              	.L22:
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     case NVIC_PRIGROUP_PRE2_SUB2:
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_pre = 2U;
 358              		.loc 2 79 18
 359 006c 0223     		movs	r3, #2
 360 006e 7B61     		str	r3, [r7, #20]
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_sub = 0x2U;
 361              		.loc 2 80 18
 362 0070 0223     		movs	r3, #2
 363 0072 3B61     		str	r3, [r7, #16]
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         break;
 364              		.loc 2 81 9
 365 0074 12E0     		b	.L25
 366              	.L24:
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     case NVIC_PRIGROUP_PRE3_SUB1:
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_pre = 3U;
 367              		.loc 2 83 18
 368 0076 0323     		movs	r3, #3
 369 0078 7B61     		str	r3, [r7, #20]
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_sub = 0x1U;
 370              		.loc 2 84 18
 371 007a 0123     		movs	r3, #1
 372 007c 3B61     		str	r3, [r7, #16]
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         break;
 373              		.loc 2 85 9
 374 007e 0DE0     		b	.L25
 375              	.L23:
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     case NVIC_PRIGROUP_PRE4_SUB0:
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_pre = 4U;
 376              		.loc 2 87 18
 377 0080 0423     		movs	r3, #4
 378 0082 7B61     		str	r3, [r7, #20]
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_sub = 0x0U;
 379              		.loc 2 88 18
 380 0084 0023     		movs	r3, #0
 381 0086 3B61     		str	r3, [r7, #16]
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         break;
 382              		.loc 2 89 9
 383 0088 08E0     		b	.L25
 384              	.L20:
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     default:
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         hal_nvic_irq_priority_group_set(NVIC_PRIGROUP_PRE2_SUB2);
 385              		.loc 2 91 9
 386 008a 4FF4A060 		mov	r0, #1280
 387 008e FFF7FEFF 		bl	hal_nvic_irq_priority_group_set
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_pre = 2U;
 388              		.loc 2 92 18
 389 0092 0223     		movs	r3, #2
 390 0094 7B61     		str	r3, [r7, #20]
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         temp_sub = 0x2U;
 391              		.loc 2 93 18
 392 0096 0223     		movs	r3, #2
 393 0098 3B61     		str	r3, [r7, #16]
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         break;
 394              		.loc 2 94 9
 395 009a 00BF     		nop
 396              	.L25:
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     }
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* get the temp_priority to fill the NVIC->IP register */
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     temp_priority = (uint32_t)nvic_irq_pre_priority << (__NVIC_PRIO_BITS - temp_pre);
 397              		.loc 2 97 21
 398 009c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 399              		.loc 2 97 74
 400 009e 7B69     		ldr	r3, [r7, #20]
 401 00a0 C3F10403 		rsb	r3, r3, #4
 402              		.loc 2 97 19
 403 00a4 02FA03F3 		lsl	r3, r2, r3
 404 00a8 FB60     		str	r3, [r7, #12]
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     temp_priority |= nvic_irq_sub_priority & (0x0FU >> (__NVIC_PRIO_BITS - temp_sub));
 405              		.loc 2 98 44
 406 00aa 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 407              		.loc 2 98 74
 408 00ac 3B69     		ldr	r3, [r7, #16]
 409 00ae C3F10403 		rsb	r3, r3, #4
 410              		.loc 2 98 53
 411 00b2 0F21     		movs	r1, #15
 412 00b4 21FA03F3 		lsr	r3, r1, r3
 413              		.loc 2 98 44
 414 00b8 1340     		ands	r3, r3, r2
 415              		.loc 2 98 19
 416 00ba FA68     		ldr	r2, [r7, #12]
 417 00bc 1343     		orrs	r3, r3, r2
 418 00be FB60     		str	r3, [r7, #12]
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     temp_priority = temp_priority << __NVIC_PRIO_BITS;
 419              		.loc 2 99 19
 420 00c0 FB68     		ldr	r3, [r7, #12]
 421 00c2 1B01     		lsls	r3, r3, #4
 422 00c4 FB60     		str	r3, [r7, #12]
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     NVIC->IP[nvic_irq] = (uint8_t)temp_priority;
 423              		.loc 2 100 9
 424 00c6 0E4A     		ldr	r2, .L26+4
 425              		.loc 2 100 13
 426 00c8 97F90730 		ldrsb	r3, [r7, #7]
 427              		.loc 2 100 26
 428 00cc F968     		ldr	r1, [r7, #12]
 429 00ce C9B2     		uxtb	r1, r1
 430              		.loc 2 100 24
 431 00d0 1344     		add	r3, r3, r2
 432 00d2 0A46     		mov	r2, r1
 433 00d4 83F80023 		strb	r2, [r3, #768]
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* enable the selected IRQ */
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     NVIC->ISER[nvic_irq >> 0x05U] = (uint32_t)0x01U << (nvic_irq & (uint8_t)0x1FU);
 434              		.loc 2 102 66
 435 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 436 00da 03F01F03 		and	r3, r3, #31
 437              		.loc 2 102 9
 438 00de 0849     		ldr	r1, .L26+4
 439              		.loc 2 102 25
 440 00e0 97F90720 		ldrsb	r2, [r7, #7]
 441 00e4 5211     		asrs	r2, r2, #5
 442 00e6 52B2     		sxtb	r2, r2
 443 00e8 1046     		mov	r0, r2
 444              		.loc 2 102 53
 445 00ea 0122     		movs	r2, #1
 446 00ec 02FA03F3 		lsl	r3, r2, r3
 447              		.loc 2 102 35
 448 00f0 41F82030 		str	r3, [r1, r0, lsl #2]
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 449              		.loc 2 103 1
 450 00f4 00BF     		nop
 451 00f6 1837     		adds	r7, r7, #24
 452              		.cfi_def_cfa_offset 8
 453 00f8 BD46     		mov	sp, r7
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 00fa 80BD     		pop	{r7, pc}
 457              	.L27:
 458              		.align	2
 459              	.L26:
 460 00fc 00ED00E0 		.word	-536810240
 461 0100 00E100E0 		.word	-536813312
 462              		.cfi_endproc
 463              	.LFE120:
 465              		.section	.text.hal_nvic_set_priority,"ax",%progbits
 466              		.align	1
 467              		.global	hal_nvic_set_priority
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu softvfp
 473              	hal_nvic_set_priority:
 474              	.LFB121:
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      set system NVIC priority
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq: the NVIC interrupt request, only support negative number in IRQn_Type
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq_pre_priority: the pre-emption priority needed to set
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq_sub_priority: the subpriority needed to set
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hal_nvic_set_priority(IRQn_Type nvic_irq,
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                            uint8_t nvic_irq_pre_priority,
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                            uint8_t nvic_irq_sub_priority)
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 475              		.loc 2 116 1
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 16
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 84B0     		sub	sp, sp, #16
 484              		.cfi_def_cfa_offset 24
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 487 0006 0346     		mov	r3, r0
 488 0008 FB71     		strb	r3, [r7, #7]
 489 000a 0B46     		mov	r3, r1
 490 000c BB71     		strb	r3, [r7, #6]
 491 000e 1346     		mov	r3, r2
 492 0010 7B71     		strb	r3, [r7, #5]
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     uint32_t prioritygroup = 0x00U;
 493              		.loc 2 117 14
 494 0012 0023     		movs	r3, #0
 495 0014 FB60     		str	r3, [r7, #12]
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     uint32_t temp_priority = 0x00U;
 496              		.loc 2 118 14
 497 0016 0023     		movs	r3, #0
 498 0018 BB60     		str	r3, [r7, #8]
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     prioritygroup = NVIC_GetPriorityGrouping();
 499              		.loc 2 120 21
 500 001a FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 501 001e F860     		str	r0, [r7, #12]
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     temp_priority = NVIC_EncodePriority(prioritygroup, nvic_irq_pre_priority, nvic_irq_sub_priority
 502              		.loc 2 121 21
 503 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 504 0022 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 505 0024 1946     		mov	r1, r3
 506 0026 F868     		ldr	r0, [r7, #12]
 507 0028 FFF7FEFF 		bl	NVIC_EncodePriority
 508 002c B860     		str	r0, [r7, #8]
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     NVIC_SetPriority(nvic_irq, temp_priority);
 509              		.loc 2 122 5
 510 002e 97F90730 		ldrsb	r3, [r7, #7]
 511 0032 B968     		ldr	r1, [r7, #8]
 512 0034 1846     		mov	r0, r3
 513 0036 FFF7FEFF 		bl	NVIC_SetPriority
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 514              		.loc 2 123 1
 515 003a 00BF     		nop
 516 003c 1037     		adds	r7, r7, #16
 517              		.cfi_def_cfa_offset 8
 518 003e BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 0040 80BD     		pop	{r7, pc}
 522              		.cfi_endproc
 523              	.LFE121:
 525              		.section	.text.hals_nvic_periph_irq_disable,"ax",%progbits
 526              		.align	1
 527              		.global	hals_nvic_periph_irq_disable
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu softvfp
 533              	hals_nvic_periph_irq_disable:
 534              	.LFB122:
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      disable NVIC request
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_irq: the NVIC interrupt request, detailed in IRQn_Type
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hals_nvic_periph_irq_disable(IRQn_Type nvic_irq)
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 535              		.loc 2 132 1
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 8
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 83B0     		sub	sp, sp, #12
 544              		.cfi_def_cfa_offset 16
 545 0004 00AF     		add	r7, sp, #0
 546              		.cfi_def_cfa_register 7
 547 0006 0346     		mov	r3, r0
 548 0008 FB71     		strb	r3, [r7, #7]
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* disable the selected IRQ.*/
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     NVIC->ICER[nvic_irq >> 0x05U] = (uint32_t)0x01U << (nvic_irq & (uint8_t)0x1FU);
 549              		.loc 2 134 66
 550 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 551 000c 03F01F03 		and	r3, r3, #31
 552              		.loc 2 134 9
 553 0010 0849     		ldr	r1, .L30
 554              		.loc 2 134 25
 555 0012 97F90720 		ldrsb	r2, [r7, #7]
 556 0016 5211     		asrs	r2, r2, #5
 557 0018 52B2     		sxtb	r2, r2
 558 001a 1046     		mov	r0, r2
 559              		.loc 2 134 53
 560 001c 0122     		movs	r2, #1
 561 001e 9A40     		lsls	r2, r2, r3
 562              		.loc 2 134 35
 563 0020 00F12003 		add	r3, r0, #32
 564 0024 41F82320 		str	r2, [r1, r3, lsl #2]
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 565              		.loc 2 135 1
 566 0028 00BF     		nop
 567 002a 0C37     		adds	r7, r7, #12
 568              		.cfi_def_cfa_offset 4
 569 002c BD46     		mov	sp, r7
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 002e 80BC     		pop	{r7}
 573              		.cfi_restore 7
 574              		.cfi_def_cfa_offset 0
 575 0030 7047     		bx	lr
 576              	.L31:
 577 0032 00BF     		.align	2
 578              	.L30:
 579 0034 00E100E0 		.word	-536813312
 580              		.cfi_endproc
 581              	.LFE122:
 583              		.section	.text.hals_nvic_vector_table_set,"ax",%progbits
 584              		.align	1
 585              		.global	hals_nvic_vector_table_set
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu softvfp
 591              	hals_nvic_vector_table_set:
 592              	.LFB123:
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      set the NVIC vector table base address
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  nvic_vict_tab: the RAM or FLASH base address
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                 only one parameter can be selected which is shown as below:
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_VECTTAB_RAM: RAM base address
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        NVIC_VECTTAB_FLASH: FLASH base address
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  offset: vector table offset
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     error code: HAL_ERR_VAL, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** int32_t hals_nvic_vector_table_set(uint32_t nvic_vict_tab, uint32_t offset)
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 593              		.loc 2 148 1
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 8
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598 0000 80B4     		push	{r7}
 599              		.cfi_def_cfa_offset 4
 600              		.cfi_offset 7, -4
 601 0002 83B0     		sub	sp, sp, #12
 602              		.cfi_def_cfa_offset 16
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605 0006 7860     		str	r0, [r7, #4]
 606 0008 3960     		str	r1, [r7]
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** #if (1 == HAL_PARAMETER_CHECK)
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* check nvic_vict_tab value */
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     if((nvic_vict_tab == NVIC_VECTTAB_RAM) && offset >= ((uint32_t)0x00001BFF)) {
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         HAL_DEBUGE("parameter [offset] value is out of range");
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         return HAL_ERR_VAL;
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     }
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     /* check nvic_vict_tab value */
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     if((nvic_vict_tab == NVIC_VECTTAB_FLASH) && offset >= ((uint32_t)0x0000FBFF)) {
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         HAL_DEBUGE("parameter [offset] value is out of range");
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         return HAL_ERR_VAL;
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     }
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     SCB->VTOR = nvic_vict_tab | (offset & NVIC_VECTTAB_OFFSET_MASK);
 607              		.loc 2 163 41
 608 000a 3B68     		ldr	r3, [r7]
 609 000c 23F06043 		bic	r3, r3, #-536870912
 610 0010 23F07F03 		bic	r3, r3, #127
 611              		.loc 2 163 8
 612 0014 0449     		ldr	r1, .L34
 613              		.loc 2 163 31
 614 0016 7A68     		ldr	r2, [r7, #4]
 615 0018 1343     		orrs	r3, r3, r2
 616              		.loc 2 163 15
 617 001a 8B60     		str	r3, [r1, #8]
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     return HAL_ERR_NONE;
 618              		.loc 2 165 12
 619 001c 0023     		movs	r3, #0
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 620              		.loc 2 166 1
 621 001e 1846     		mov	r0, r3
 622 0020 0C37     		adds	r7, r7, #12
 623              		.cfi_def_cfa_offset 4
 624 0022 BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0024 80BC     		pop	{r7}
 628              		.cfi_restore 7
 629              		.cfi_def_cfa_offset 0
 630 0026 7047     		bx	lr
 631              	.L35:
 632              		.align	2
 633              	.L34:
 634 0028 00ED00E0 		.word	-536810240
 635              		.cfi_endproc
 636              	.LFE123:
 638              		.section	.text.hals_system_lowpower_set,"ax",%progbits
 639              		.align	1
 640              		.global	hals_system_lowpower_set
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu softvfp
 646              	hals_system_lowpower_set:
 647              	.LFB124:
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      set the state of the low power mode
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  lowpower_mode: the low power mode state
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                 only one parameter can be selected which is shown as below:
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SCB_LPM_SLEEP_EXIT_ISR: if chose this para, the system always enter low power
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                     mode by exiting from ISR
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SCB_LPM_DEEPSLEEP: if chose this para, the system will enter the DEEPSLEEP mode
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SCB_LPM_WAKE_BY_ALL_INT: if chose this para, the lowpower mode can be woke up
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                     by all the enable and disable interrupts
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hals_system_lowpower_set(uint8_t lowpower_mode)
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 648              		.loc 2 181 1
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 8
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 653 0000 80B4     		push	{r7}
 654              		.cfi_def_cfa_offset 4
 655              		.cfi_offset 7, -4
 656 0002 83B0     		sub	sp, sp, #12
 657              		.cfi_def_cfa_offset 16
 658 0004 00AF     		add	r7, sp, #0
 659              		.cfi_def_cfa_register 7
 660 0006 0346     		mov	r3, r0
 661 0008 FB71     		strb	r3, [r7, #7]
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     SCB->SCR |= (uint32_t)lowpower_mode;
 662              		.loc 2 182 14
 663 000a 054B     		ldr	r3, .L37
 664 000c 1A69     		ldr	r2, [r3, #16]
 665              		.loc 2 182 17
 666 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 667              		.loc 2 182 14
 668 0010 0349     		ldr	r1, .L37
 669 0012 1343     		orrs	r3, r3, r2
 670 0014 0B61     		str	r3, [r1, #16]
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 671              		.loc 2 183 1
 672 0016 00BF     		nop
 673 0018 0C37     		adds	r7, r7, #12
 674              		.cfi_def_cfa_offset 4
 675 001a BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 001c 80BC     		pop	{r7}
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 001e 7047     		bx	lr
 682              	.L38:
 683              		.align	2
 684              	.L37:
 685 0020 00ED00E0 		.word	-536810240
 686              		.cfi_endproc
 687              	.LFE124:
 689              		.section	.text.hals_system_lowpower_reset,"ax",%progbits
 690              		.align	1
 691              		.global	hals_system_lowpower_reset
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu softvfp
 697              	hals_system_lowpower_reset:
 698              	.LFB125:
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      reset the state of the low power mode
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  lowpower_mode: the low power mode state
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                 only one parameter can be selected which is shown as below:
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SCB_LPM_SLEEP_EXIT_ISR: if chose this para, the system will exit low power
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                     mode by exiting from ISR
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SCB_LPM_DEEPSLEEP: if chose this para, the system will enter the SLEEP mode
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SCB_LPM_WAKE_BY_ALL_INT: if chose this para, the lowpower mode only can be
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                     woke up by the enable interrupts
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hals_system_lowpower_reset(uint8_t lowpower_mode)
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 699              		.loc 2 198 1
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 8
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              		.cfi_def_cfa_offset 4
 706              		.cfi_offset 7, -4
 707 0002 83B0     		sub	sp, sp, #12
 708              		.cfi_def_cfa_offset 16
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 0346     		mov	r3, r0
 712 0008 FB71     		strb	r3, [r7, #7]
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     SCB->SCR &= (~(uint32_t)lowpower_mode);
 713              		.loc 2 199 14
 714 000a 064B     		ldr	r3, .L40
 715 000c 1A69     		ldr	r2, [r3, #16]
 716              		.loc 2 199 19
 717 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 718              		.loc 2 199 18
 719 0010 DB43     		mvns	r3, r3
 720              		.loc 2 199 14
 721 0012 0449     		ldr	r1, .L40
 722 0014 1340     		ands	r3, r3, r2
 723 0016 0B61     		str	r3, [r1, #16]
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 724              		.loc 2 200 1
 725 0018 00BF     		nop
 726 001a 0C37     		adds	r7, r7, #12
 727              		.cfi_def_cfa_offset 4
 728 001c BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 001e 80BC     		pop	{r7}
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0020 7047     		bx	lr
 735              	.L41:
 736 0022 00BF     		.align	2
 737              	.L40:
 738 0024 00ED00E0 		.word	-536810240
 739              		.cfi_endproc
 740              	.LFE125:
 742              		.section	.text.hals_systick_clksource_set,"ax",%progbits
 743              		.align	1
 744              		.global	hals_systick_clksource_set
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 748              		.fpu softvfp
 750              	hals_systick_clksource_set:
 751              	.LFB126:
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** /*!
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \brief      set the systick clock source
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[in]  systick_clksource: the systick clock source needed to choose
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****                 only one parameter can be selected which is shown as below:
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SYSTICK_CLKSOURCE_HCLK: systick clock source is from HCLK
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****       \arg        SYSTICK_CLKSOURCE_HCLK_DIV8: systick clock source is from HCLK/8
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \param[out] none
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     \retval     none
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** */
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** 
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** void hals_systick_clksource_set(uint32_t systick_clksource)
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** {
 752              		.loc 2 213 1
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 8
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 80B4     		push	{r7}
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 7, -4
 760 0002 83B0     		sub	sp, sp, #12
 761              		.cfi_def_cfa_offset 16
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 764 0006 7860     		str	r0, [r7, #4]
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     if(SYSTICK_CLKSOURCE_HCLK == systick_clksource) {
 765              		.loc 2 214 7
 766 0008 7B68     		ldr	r3, [r7, #4]
 767 000a 042B     		cmp	r3, #4
 768 000c 06D1     		bne	.L43
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         /* set the systick clock source from HCLK */
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 769              		.loc 2 216 23
 770 000e 094B     		ldr	r3, .L46
 771 0010 1B68     		ldr	r3, [r3]
 772 0012 084A     		ldr	r2, .L46
 773 0014 43F00403 		orr	r3, r3, #4
 774 0018 1360     		str	r3, [r2]
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     } else {
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         /* set the systick clock source from HCLK/8 */
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****         SysTick->CTRL &= SYSTICK_CLKSOURCE_HCLK_DIV8;
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     }
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c **** }
 775              		.loc 2 221 1
 776 001a 05E0     		b	.L45
 777              	.L43:
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_nvic.c ****     }
 778              		.loc 2 219 23
 779 001c 054B     		ldr	r3, .L46
 780 001e 1B68     		ldr	r3, [r3]
 781 0020 044A     		ldr	r2, .L46
 782 0022 23F00403 		bic	r3, r3, #4
 783 0026 1360     		str	r3, [r2]
 784              	.L45:
 785              		.loc 2 221 1
 786 0028 00BF     		nop
 787 002a 0C37     		adds	r7, r7, #12
 788              		.cfi_def_cfa_offset 4
 789 002c BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 002e 80BC     		pop	{r7}
 793              		.cfi_restore 7
 794              		.cfi_def_cfa_offset 0
 795 0030 7047     		bx	lr
 796              	.L47:
 797 0032 00BF     		.align	2
 798              	.L46:
 799 0034 10E000E0 		.word	-536813552
 800              		.cfi_endproc
 801              	.LFE126:
 803              		.text
 804              	.Letext0:
 805              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 806              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 807              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 808              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 809              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 810              		.file 8 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 811              		.file 9 "../firmware/cmsis/inc/gd32f3x0.h"
 812              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 813              		.file 11 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_nvic.c
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:16     .text.NVIC_GetPriorityGrouping:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:23     .text.NVIC_GetPriorityGrouping:00000000 NVIC_GetPriorityGrouping
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:54     .text.NVIC_GetPriorityGrouping:00000018 $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:59     .text.NVIC_SetPriority:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:65     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:133    .text.NVIC_SetPriority:0000004c $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:139    .text.NVIC_EncodePriority:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:145    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:230    .text.hal_nvic_irq_priority_group_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:237    .text.hal_nvic_irq_priority_group_set:00000000 hal_nvic_irq_priority_group_set
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:275    .text.hal_nvic_irq_priority_group_set:00000020 $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:280    .text.hal_nvic_irq_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:287    .text.hal_nvic_irq_enable:00000000 hal_nvic_irq_enable
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:460    .text.hal_nvic_irq_enable:000000fc $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:466    .text.hal_nvic_set_priority:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:473    .text.hal_nvic_set_priority:00000000 hal_nvic_set_priority
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:526    .text.hals_nvic_periph_irq_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:533    .text.hals_nvic_periph_irq_disable:00000000 hals_nvic_periph_irq_disable
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:579    .text.hals_nvic_periph_irq_disable:00000034 $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:584    .text.hals_nvic_vector_table_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:591    .text.hals_nvic_vector_table_set:00000000 hals_nvic_vector_table_set
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:634    .text.hals_nvic_vector_table_set:00000028 $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:639    .text.hals_system_lowpower_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:646    .text.hals_system_lowpower_set:00000000 hals_system_lowpower_set
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:685    .text.hals_system_lowpower_set:00000020 $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:690    .text.hals_system_lowpower_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:697    .text.hals_system_lowpower_reset:00000000 hals_system_lowpower_reset
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:738    .text.hals_system_lowpower_reset:00000024 $d
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:743    .text.hals_systick_clksource_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:750    .text.hals_systick_clksource_set:00000000 hals_systick_clksource_set
C:\Users\peter\AppData\Local\Temp\cczE6ixy.s:799    .text.hals_systick_clksource_set:00000034 $d
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

NO UNDEFINED SYMBOLS
