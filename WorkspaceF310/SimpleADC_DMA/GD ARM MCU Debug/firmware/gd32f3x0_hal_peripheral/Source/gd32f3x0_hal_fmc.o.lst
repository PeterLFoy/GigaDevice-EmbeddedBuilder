   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_fmc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	p_irq,4,4
  16              		.section	.text.hal_fmc_unlock,"ax",%progbits
  17              		.align	1
  18              		.global	hal_fmc_unlock
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	hal_fmc_unlock:
  26              	.LFB119:
  27              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \file    gd32f3x0_hal_fmc.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief   FMC driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     Redistribution and use in source and binary forms, with or without modification,
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** are permitted provided that the following conditions are met:
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     1. Redistributions of source code must retain the above copyright notice, this
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****        list of conditions and the following disclaimer.
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****        this list of conditions and the following disclaimer in the documentation
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****        and/or other materials provided with the distribution.
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****        may be used to endorse or promote products derived from this software without
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****        specific prior written permission.
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** OF SUCH DAMAGE.
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #include "gd32f3x0_hal.h"
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /* define array if it is necessary to reserve original data located in out of targeted scope */
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1U == FLASH_OPER_RESERVE_ORIGINAL_DATA)
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** static uint8_t _g_fmc_cache[FMC_PAGE_SIZE];
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == FLASH_OPER_RESERVE_ORIGINAL_DATA)
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /* reserve original data located in out of targeted scope */
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** static void _fmc_page_erase_update(uint8_t *p_buffer, uint32_t size, uint32_t page_addr, \
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                    uint32_t page_offset);
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* FLASH_OPER_RESERVE_ORIGINAL_DATA */
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** static void _fmc_program_align_word(uint32_t dst_addr, uint8_t *data, uint32_t size);
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** hal_fmc_irq_struct *p_irq;
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      unlock the main FMC operation
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 it is better to used in pairs with fmc_lock
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** int32_t hal_fmc_unlock(void)
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
  28              		.loc 1 56 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((RESET != (FMC_CTL & FMC_CTL_LK))) {
  38              		.loc 1 57 19
  39 0004 0C4B     		ldr	r3, .L5
  40 0006 1B68     		ldr	r3, [r3]
  41              		.loc 1 57 27
  42 0008 03F08003 		and	r3, r3, #128
  43              		.loc 1 57 7
  44 000c 002B     		cmp	r3, #0
  45 000e 05D0     		beq	.L2
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* write the FMC key */
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_KEY = UNLOCK_KEY0;
  46              		.loc 1 59 9
  47 0010 0A4B     		ldr	r3, .L5+4
  48              		.loc 1 59 17
  49 0012 0B4A     		ldr	r2, .L5+8
  50 0014 1A60     		str	r2, [r3]
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_KEY = UNLOCK_KEY1;
  51              		.loc 1 60 9
  52 0016 094B     		ldr	r3, .L5+4
  53              		.loc 1 60 17
  54 0018 0A4A     		ldr	r2, .L5+12
  55 001a 1A60     		str	r2, [r3]
  56              	.L2:
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check FMC is unlocked */
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((RESET != (FMC_CTL & FMC_CTL_LK))) {
  57              		.loc 1 64 19
  58 001c 064B     		ldr	r3, .L5
  59 001e 1B68     		ldr	r3, [r3]
  60              		.loc 1 64 27
  61 0020 03F08003 		and	r3, r3, #128
  62              		.loc 1 64 7
  63 0024 002B     		cmp	r3, #0
  64 0026 02D0     		beq	.L3
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_HARDWARE;
  65              		.loc 1 65 16
  66 0028 6FF00703 		mvn	r3, #7
  67 002c 00E0     		b	.L4
  68              	.L3:
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return HAL_ERR_NONE;
  69              		.loc 1 68 12
  70 002e 0023     		movs	r3, #0
  71              	.L4:
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
  72              		.loc 1 70 1
  73 0030 1846     		mov	r0, r3
  74 0032 BD46     		mov	sp, r7
  75              		.cfi_def_cfa_register 13
  76              		@ sp needed
  77 0034 80BC     		pop	{r7}
  78              		.cfi_restore 7
  79              		.cfi_def_cfa_offset 0
  80 0036 7047     		bx	lr
  81              	.L6:
  82              		.align	2
  83              	.L5:
  84 0038 10200240 		.word	1073881104
  85 003c 04200240 		.word	1073881092
  86 0040 23016745 		.word	1164378403
  87 0044 AB89EFCD 		.word	-839939669
  88              		.cfi_endproc
  89              	.LFE119:
  91              		.section	.text.hal_fmc_lock,"ax",%progbits
  92              		.align	1
  93              		.global	hal_fmc_lock
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu softvfp
  99              	hal_fmc_lock:
 100              	.LFB120:
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      lock the main FMC operation
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 it is better to used in pairs with fmc_unlock after an operation
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** int32_t hal_fmc_lock(void)
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 101              		.loc 1 80 1
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106 0000 80B4     		push	{r7}
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 7, -4
 109 0002 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* set the LK bit*/
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FMC_CTL |= FMC_CTL_LK;
 111              		.loc 1 82 13
 112 0004 054B     		ldr	r3, .L9
 113 0006 1B68     		ldr	r3, [r3]
 114 0008 044A     		ldr	r2, .L9
 115 000a 43F08003 		orr	r3, r3, #128
 116 000e 1360     		str	r3, [r2]
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return HAL_ERR_NONE;
 117              		.loc 1 84 12
 118 0010 0023     		movs	r3, #0
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 119              		.loc 1 85 1
 120 0012 1846     		mov	r0, r3
 121 0014 BD46     		mov	sp, r7
 122              		.cfi_def_cfa_register 13
 123              		@ sp needed
 124 0016 80BC     		pop	{r7}
 125              		.cfi_restore 7
 126              		.cfi_def_cfa_offset 0
 127 0018 7047     		bx	lr
 128              	.L10:
 129 001a 00BF     		.align	2
 130              	.L9:
 131 001c 10200240 		.word	1073881104
 132              		.cfi_endproc
 133              	.LFE120:
 135              		.section	.text.hal_fmc_wait_state_enable,"ax",%progbits
 136              		.align	1
 137              		.global	hal_fmc_wait_state_enable
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu softvfp
 143              	hal_fmc_wait_state_enable:
 144              	.LFB121:
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      enable fmc wait state
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_wait_state_enable(void)
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 145              		.loc 1 94 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* unlock the main flash */
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_fmc_unlock();
 155              		.loc 1 96 5
 156 0004 FFF7FEFF 		bl	hal_fmc_unlock
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* set the WSEN bit in register FMC_WSEN */
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FMC_WSEN |= FMC_WSEN_WSEN;
 157              		.loc 1 99 14
 158 0008 044B     		ldr	r3, .L12
 159 000a 1B68     		ldr	r3, [r3]
 160 000c 034A     		ldr	r2, .L12
 161 000e 43F00103 		orr	r3, r3, #1
 162 0012 1360     		str	r3, [r2]
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* lock the main flash after operation */
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_fmc_lock();
 163              		.loc 1 102 5
 164 0014 FFF7FEFF 		bl	hal_fmc_lock
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 165              		.loc 1 103 1
 166 0018 00BF     		nop
 167 001a 80BD     		pop	{r7, pc}
 168              	.L13:
 169              		.align	2
 170              	.L12:
 171 001c FC200240 		.word	1073881340
 172              		.cfi_endproc
 173              	.LFE121:
 175              		.section	.text.hal_fmc_wait_state_disable,"ax",%progbits
 176              		.align	1
 177              		.global	hal_fmc_wait_state_disable
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	hal_fmc_wait_state_disable:
 184              	.LFB122:
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      disable fmc wait state
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_wait_state_disable(void)
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 185              		.loc 1 112 1
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* unlock the main flash */
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_fmc_unlock();
 195              		.loc 1 114 5
 196 0004 FFF7FEFF 		bl	hal_fmc_unlock
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* reset the WSEN bit in register FMC_WSEN */
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FMC_WSEN &= ~FMC_WSEN_WSEN;
 197              		.loc 1 117 14
 198 0008 044B     		ldr	r3, .L15
 199 000a 1B68     		ldr	r3, [r3]
 200 000c 034A     		ldr	r2, .L15
 201 000e 23F00103 		bic	r3, r3, #1
 202 0012 1360     		str	r3, [r2]
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* lock the main flash after operation */
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_fmc_lock();
 203              		.loc 1 120 5
 204 0014 FFF7FEFF 		bl	hal_fmc_lock
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 205              		.loc 1 121 1
 206 0018 00BF     		nop
 207 001a 80BD     		pop	{r7, pc}
 208              	.L16:
 209              		.align	2
 210              	.L15:
 211 001c FC200240 		.word	1073881340
 212              		.cfi_endproc
 213              	.LFE122:
 215              		.section	.text.hal_fmc_ready_wait,"ax",%progbits
 216              		.align	1
 217              		.global	hal_fmc_ready_wait
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu softvfp
 223              	hal_fmc_ready_wait:
 224              	.LFB123:
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      check whether FMC is ready or not
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  timeout: timeout count
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_fmc_ready_wait(uint32_t timeout)
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 225              		.loc 1 130 1
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 16
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 84B0     		sub	sp, sp, #16
 234              		.cfi_def_cfa_offset 24
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 7860     		str	r0, [r7, #4]
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = FMC_BUSY;
 238              		.loc 1 131 20
 239 0008 0123     		movs	r3, #1
 240 000a FB73     		strb	r3, [r7, #15]
 241              	.L19:
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* wait for FMC ready */
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     do {
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* get FMC state */
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = _fmc_state_get();
 242              		.loc 1 136 21 discriminator 2
 243 000c FFF7FEFF 		bl	_fmc_state_get
 244 0010 0346     		mov	r3, r0
 245 0012 FB73     		strb	r3, [r7, #15]
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         timeout--;
 246              		.loc 1 137 16 discriminator 2
 247 0014 7B68     		ldr	r3, [r7, #4]
 248 0016 013B     		subs	r3, r3, #1
 249 0018 7B60     		str	r3, [r7, #4]
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } while((FMC_BUSY == fmc_state) && (0U != timeout));
 250              		.loc 1 138 5 discriminator 2
 251 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 252 001c 012B     		cmp	r3, #1
 253 001e 02D1     		bne	.L18
 254              		.loc 1 138 37 discriminator 1
 255 0020 7B68     		ldr	r3, [r7, #4]
 256 0022 002B     		cmp	r3, #0
 257 0024 F2D1     		bne	.L19
 258              	.L18:
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_BUSY == fmc_state) {
 259              		.loc 1 140 7
 260 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 261 0028 012B     		cmp	r3, #1
 262 002a 01D1     		bne	.L20
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = FMC_TOERR;
 263              		.loc 1 141 19
 264 002c 0423     		movs	r3, #4
 265 002e FB73     		strb	r3, [r7, #15]
 266              	.L20:
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 267              		.loc 1 144 12
 268 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 269              		.loc 1 146 1
 270 0032 1846     		mov	r0, r3
 271 0034 1037     		adds	r7, r7, #16
 272              		.cfi_def_cfa_offset 8
 273 0036 BD46     		mov	sp, r7
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0038 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE123:
 280              		.section	.text.hal_fmc_wscnt_set,"ax",%progbits
 281              		.align	1
 282              		.global	hal_fmc_wscnt_set
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu softvfp
 288              	hal_fmc_wscnt_set:
 289              	.LFB124:
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      set the wait state counter value
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  wscnt: wait state counter value
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        WS_WSCNT_0: 0 wait state added
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        WS_WSCNT_1: 1 wait state added
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        WS_WSCNT_2: 2 wait state added
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_wscnt_set(uint8_t wscnt)
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 290              		.loc 1 158 1
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 16
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 295 0000 80B4     		push	{r7}
 296              		.cfi_def_cfa_offset 4
 297              		.cfi_offset 7, -4
 298 0002 85B0     		sub	sp, sp, #20
 299              		.cfi_def_cfa_offset 24
 300 0004 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 302 0006 0346     		mov	r3, r0
 303 0008 FB71     		strb	r3, [r7, #7]
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t reg;
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     reg = FMC_WS;
 304              		.loc 1 161 11
 305 000a 084B     		ldr	r3, .L23
 306              		.loc 1 161 9
 307 000c 1B68     		ldr	r3, [r3]
 308 000e FB60     		str	r3, [r7, #12]
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* set the wait state counter value */
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     reg &= ~FMC_WS_WSCNT;
 309              		.loc 1 163 9
 310 0010 FB68     		ldr	r3, [r7, #12]
 311 0012 23F00703 		bic	r3, r3, #7
 312 0016 FB60     		str	r3, [r7, #12]
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FMC_WS = (reg | wscnt);
 313              		.loc 1 164 19
 314 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 315              		.loc 1 164 5
 316 001a 0449     		ldr	r1, .L23
 317              		.loc 1 164 19
 318 001c FB68     		ldr	r3, [r7, #12]
 319 001e 1343     		orrs	r3, r3, r2
 320              		.loc 1 164 12
 321 0020 0B60     		str	r3, [r1]
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 322              		.loc 1 165 1
 323 0022 00BF     		nop
 324 0024 1437     		adds	r7, r7, #20
 325              		.cfi_def_cfa_offset 4
 326 0026 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0028 80BC     		pop	{r7}
 330              		.cfi_restore 7
 331              		.cfi_def_cfa_offset 0
 332 002a 7047     		bx	lr
 333              	.L24:
 334              		.align	2
 335              	.L23:
 336 002c 00200240 		.word	1073881088
 337              		.cfi_endproc
 338              	.LFE124:
 340              		.section	.text.hal_fmc_region_read,"ax",%progbits
 341              		.align	1
 342              		.global	hal_fmc_region_read
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu softvfp
 348              	hal_fmc_region_read:
 349              	.LFB125:
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      read flash target region
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data: pointer to read result
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  size: target region size
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_region_read(uint32_t start_addr, uint8_t *data, uint32_t size)
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 350              		.loc 1 175 1
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 24
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355 0000 80B4     		push	{r7}
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 87B0     		sub	sp, sp, #28
 359              		.cfi_def_cfa_offset 32
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 F860     		str	r0, [r7, #12]
 363 0008 B960     		str	r1, [r7, #8]
 364 000a 7A60     		str	r2, [r7, #4]
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t counter;
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameters */
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((start_addr < FMC_BASE_ADDRESS) || (start_addr > FMC_END_ADDRESS)) {
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [start_addr] is a invalid address.");
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(size > (FMC_END_ADDRESS - start_addr)) {
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("target data size exceed flash atual address scope.");
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* assign flash specific data to pointer */
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0U; counter < size; counter++) {
 365              		.loc 1 189 17
 366 000c 0023     		movs	r3, #0
 367 000e 7B61     		str	r3, [r7, #20]
 368              		.loc 1 189 5
 369 0010 0CE0     		b	.L26
 370              	.L27:
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         *(data + counter) = REG8(start_addr + counter);
 371              		.loc 1 190 29 discriminator 3
 372 0012 FA68     		ldr	r2, [r7, #12]
 373 0014 7B69     		ldr	r3, [r7, #20]
 374 0016 1344     		add	r3, r3, r2
 375 0018 1946     		mov	r1, r3
 376              		.loc 1 190 16 discriminator 3
 377 001a BA68     		ldr	r2, [r7, #8]
 378 001c 7B69     		ldr	r3, [r7, #20]
 379 001e 1344     		add	r3, r3, r2
 380              		.loc 1 190 29 discriminator 3
 381 0020 0A78     		ldrb	r2, [r1]
 382 0022 D2B2     		uxtb	r2, r2
 383              		.loc 1 190 27 discriminator 3
 384 0024 1A70     		strb	r2, [r3]
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         *(data + counter) = REG8(start_addr + counter);
 385              		.loc 1 189 46 discriminator 3
 386 0026 7B69     		ldr	r3, [r7, #20]
 387 0028 0133     		adds	r3, r3, #1
 388 002a 7B61     		str	r3, [r7, #20]
 389              	.L26:
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         *(data + counter) = REG8(start_addr + counter);
 390              		.loc 1 189 5 discriminator 1
 391 002c 7A69     		ldr	r2, [r7, #20]
 392 002e 7B68     		ldr	r3, [r7, #4]
 393 0030 9A42     		cmp	r2, r3
 394 0032 EED3     		bcc	.L27
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 395              		.loc 1 192 1
 396 0034 00BF     		nop
 397 0036 00BF     		nop
 398 0038 1C37     		adds	r7, r7, #28
 399              		.cfi_def_cfa_offset 4
 400 003a BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 003c 80BC     		pop	{r7}
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 003e 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE125:
 410              		.section	.text.hal_fmc_word_program,"ax",%progbits
 411              		.align	1
 412              		.global	hal_fmc_word_program
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu softvfp
 418              	hal_fmc_word_program:
 419              	.LFB126:
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      write flash target address in word
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  addr: target address
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data: target data
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_fmc_word_program(uint32_t addr, uint32_t data)
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 420              		.loc 1 208 1
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 16
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 84B0     		sub	sp, sp, #16
 429              		.cfi_def_cfa_offset 24
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 433 0008 3960     		str	r1, [r7]
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 434              		.loc 1 209 32
 435 000a 4FF47020 		mov	r0, #983040
 436 000e FFF7FEFF 		bl	hal_fmc_ready_wait
 437 0012 0346     		mov	r3, r0
 438 0014 FB73     		strb	r3, [r7, #15]
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameter */
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((addr < FMC_BASE_ADDRESS) || (addr > FMC_END_ADDRESS)) {
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [addr] is a invalid address.");
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 439              		.loc 1 217 7
 440 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 441 0018 002B     		cmp	r3, #0
 442 001a 14D1     		bne	.L29
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* set the PG bit to start program */
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_PG;
 443              		.loc 1 219 17
 444 001c 0C4B     		ldr	r3, .L31
 445 001e 1B68     		ldr	r3, [r3]
 446 0020 0B4A     		ldr	r2, .L31
 447 0022 43F00103 		orr	r3, r3, #1
 448 0026 1360     		str	r3, [r2]
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         REG32(addr) = data;
 449              		.loc 1 221 9
 450 0028 7B68     		ldr	r3, [r7, #4]
 451              		.loc 1 221 21
 452 002a 3A68     		ldr	r2, [r7]
 453 002c 1A60     		str	r2, [r3]
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 454              		.loc 1 224 21
 455 002e 4FF47020 		mov	r0, #983040
 456 0032 FFF7FEFF 		bl	hal_fmc_ready_wait
 457 0036 0346     		mov	r3, r0
 458 0038 FB73     		strb	r3, [r7, #15]
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* reset the PG bit */
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL &= ~FMC_CTL_PG;
 459              		.loc 1 227 17
 460 003a 054B     		ldr	r3, .L31
 461 003c 1B68     		ldr	r3, [r3]
 462 003e 044A     		ldr	r2, .L31
 463 0040 23F00103 		bic	r3, r3, #1
 464 0044 1360     		str	r3, [r2]
 465              	.L29:
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 466              		.loc 1 231 12
 467 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 468              		.loc 1 232 1
 469 0048 1846     		mov	r0, r3
 470 004a 1037     		adds	r7, r7, #16
 471              		.cfi_def_cfa_offset 8
 472 004c BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 004e 80BD     		pop	{r7, pc}
 476              	.L32:
 477              		.align	2
 478              	.L31:
 479 0050 10200240 		.word	1073881104
 480              		.cfi_endproc
 481              	.LFE126:
 483              		.section	.text.hal_fmc_halfword_program,"ax",%progbits
 484              		.align	1
 485              		.global	hal_fmc_halfword_program
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	hal_fmc_halfword_program:
 492              	.LFB127:
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      write flash target address in halfword
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  addr: target address
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data: target data
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_fmc_halfword_program(uint32_t addr, uint16_t data)
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 493              		.loc 1 248 1
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 16
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497 0000 80B5     		push	{r7, lr}
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 84B0     		sub	sp, sp, #16
 502              		.cfi_def_cfa_offset 24
 503 0004 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 0006 7860     		str	r0, [r7, #4]
 506 0008 0B46     		mov	r3, r1
 507 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 508              		.loc 1 249 32
 509 000c 4FF47020 		mov	r0, #983040
 510 0010 FFF7FEFF 		bl	hal_fmc_ready_wait
 511 0014 0346     		mov	r3, r0
 512 0016 FB73     		strb	r3, [r7, #15]
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameter */
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((addr < FMC_BASE_ADDRESS) || (addr > FMC_END_ADDRESS)) {
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [addr] is a invalid address.");
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 513              		.loc 1 258 7
 514 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 515 001a 002B     		cmp	r3, #0
 516 001c 14D1     		bne	.L34
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* set the PG bit to start program */
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_PG;
 517              		.loc 1 260 17
 518 001e 0D4B     		ldr	r3, .L36
 519 0020 1B68     		ldr	r3, [r3]
 520 0022 0C4A     		ldr	r2, .L36
 521 0024 43F00103 		orr	r3, r3, #1
 522 0028 1360     		str	r3, [r2]
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         REG16(addr) = data;
 523              		.loc 1 262 9
 524 002a 7B68     		ldr	r3, [r7, #4]
 525              		.loc 1 262 21
 526 002c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 527 002e 1A80     		strh	r2, [r3]	@ movhi
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 528              		.loc 1 265 21
 529 0030 4FF47020 		mov	r0, #983040
 530 0034 FFF7FEFF 		bl	hal_fmc_ready_wait
 531 0038 0346     		mov	r3, r0
 532 003a FB73     		strb	r3, [r7, #15]
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* reset the PG bit */
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL &= ~FMC_CTL_PG;
 533              		.loc 1 268 17
 534 003c 054B     		ldr	r3, .L36
 535 003e 1B68     		ldr	r3, [r3]
 536 0040 044A     		ldr	r2, .L36
 537 0042 23F00103 		bic	r3, r3, #1
 538 0046 1360     		str	r3, [r2]
 539              	.L34:
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 540              		.loc 1 272 12
 541 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 542              		.loc 1 273 1
 543 004a 1846     		mov	r0, r3
 544 004c 1037     		adds	r7, r7, #16
 545              		.cfi_def_cfa_offset 8
 546 004e BD46     		mov	sp, r7
 547              		.cfi_def_cfa_register 13
 548              		@ sp needed
 549 0050 80BD     		pop	{r7, pc}
 550              	.L37:
 551 0052 00BF     		.align	2
 552              	.L36:
 553 0054 10200240 		.word	1073881104
 554              		.cfi_endproc
 555              	.LFE127:
 557              		.section	.text.hal_fmc_region_write,"ax",%progbits
 558              		.align	1
 559              		.global	hal_fmc_region_write
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	hal_fmc_region_write:
 566              	.LFB128:
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      write flash target region with amounts of data
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  size: target region size
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** int32_t hal_fmc_region_write(uint32_t start_addr, uint8_t *data, uint32_t size)
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 567              		.loc 1 283 1
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 40
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 8AB0     		sub	sp, sp, #40
 576              		.cfi_def_cfa_offset 48
 577 0004 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 579 0006 F860     		str	r0, [r7, #12]
 580 0008 B960     		str	r1, [r7, #8]
 581 000a 7A60     		str	r2, [r7, #4]
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t counter = 0U;
 582              		.loc 1 284 14
 583 000c 0023     		movs	r3, #0
 584 000e 7B62     		str	r3, [r7, #36]
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t page_offset = 0U;
 585              		.loc 1 285 14
 586 0010 0023     		movs	r3, #0
 587 0012 FB61     		str	r3, [r7, #28]
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t page_addr;
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t right_align;
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t right_align_complement = 0U;
 588              		.loc 1 288 13
 589 0014 0023     		movs	r3, #0
 590 0016 87F82330 		strb	r3, [r7, #35]
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == FLASH_OPER_RESERVE_ORIGINAL_DATA)
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t remaining = size;
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t write_addr_limit = ((start_addr + size) / FMC_PAGE_SIZE + 1U) * FMC_PAGE_SIZE;
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t addr_size_temp = (start_addr / FMC_PAGE_SIZE)* FMC_PAGE_SIZE ;
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t update_offset = 0U;
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t *src_addr = data;
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t write_buffer_size;
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t  non_ff_flag = 0U;
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t length, left_align;
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t single_page_flag;
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check whether all data is at the same page */
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((write_addr_limit - addr_size_temp) > FMC_PAGE_SIZE) {
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         single_page_flag = 0U;
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         single_page_flag = 1U;
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* FLASH_OPER_RESERVE_ORIGINAL_DATA */
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     page_offset = start_addr - (start_addr / FMC_PAGE_SIZE) * FMC_PAGE_SIZE;
 591              		.loc 1 308 17
 592 001a FB68     		ldr	r3, [r7, #12]
 593 001c C3F30903 		ubfx	r3, r3, #0, #10
 594 0020 FB61     		str	r3, [r7, #28]
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == FLASH_OPER_RESERVE_ORIGINAL_DATA)
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* calculate left and right align edge */
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     left_align = page_offset - page_offset % 4U;
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* FLASH_OPER_RESERVE_ORIGINAL_DATA */
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((page_offset + size) % 4U) {
 595              		.loc 1 315 21
 596 0022 FA69     		ldr	r2, [r7, #28]
 597 0024 7B68     		ldr	r3, [r7, #4]
 598 0026 1344     		add	r3, r3, r2
 599              		.loc 1 315 29
 600 0028 03F00303 		and	r3, r3, #3
 601              		.loc 1 315 7
 602 002c 002B     		cmp	r3, #0
 603 002e 0DD0     		beq	.L39
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         right_align_complement = 4U - (page_offset + size) % 4U;
 604              		.loc 1 316 52
 605 0030 FB69     		ldr	r3, [r7, #28]
 606 0032 DAB2     		uxtb	r2, r3
 607 0034 7B68     		ldr	r3, [r7, #4]
 608 0036 DBB2     		uxtb	r3, r3
 609 0038 1344     		add	r3, r3, r2
 610 003a DBB2     		uxtb	r3, r3
 611              		.loc 1 316 60
 612 003c 03F00303 		and	r3, r3, #3
 613 0040 DBB2     		uxtb	r3, r3
 614              		.loc 1 316 32
 615 0042 C3F10403 		rsb	r3, r3, #4
 616 0046 87F82330 		strb	r3, [r7, #35]
 617 004a 02E0     		b	.L40
 618              	.L39:
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         right_align_complement = 0U;
 619              		.loc 1 318 32
 620 004c 0023     		movs	r3, #0
 621 004e 87F82330 		strb	r3, [r7, #35]
 622              	.L40:
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     right_align = (page_offset + size + right_align_complement) % FMC_PAGE_SIZE;
 623              		.loc 1 320 32
 624 0052 FA69     		ldr	r2, [r7, #28]
 625 0054 7B68     		ldr	r3, [r7, #4]
 626 0056 1A44     		add	r2, r2, r3
 627              		.loc 1 320 39
 628 0058 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 629 005c 1344     		add	r3, r3, r2
 630              		.loc 1 320 17
 631 005e C3F30903 		ubfx	r3, r3, #0, #10
 632 0062 BB61     		str	r3, [r7, #24]
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0U == right_align) {
 633              		.loc 1 321 7
 634 0064 BB69     		ldr	r3, [r7, #24]
 635 0066 002B     		cmp	r3, #0
 636 0068 1CD1     		bne	.L42
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         right_align = FMC_PAGE_SIZE;
 637              		.loc 1 322 21
 638 006a 4FF48063 		mov	r3, #1024
 639 006e BB61     		str	r3, [r7, #24]
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameters */
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((start_addr < FMC_BASE_ADDRESS) || (start_addr > FMC_END_ADDRESS)) {
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [start_addr] is a invalid address.");
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(NULL == data) {
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [data] is a NULL pointer.");
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(size > (FMC_END_ADDRESS - start_addr)) {
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("target data size exceed flash atual address scope.");
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* save the original data , erase responding page */
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* save the original data in the processing of writing data */
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == FLASH_OPER_RESERVE_ORIGINAL_DATA)
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     do {
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = 0; counter < FMC_PAGE_SIZE; counter++) {
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             _g_fmc_cache[counter] = 0xFFU;
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         page_addr = (start_addr / FMC_PAGE_SIZE) * FMC_PAGE_SIZE;
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         page_offset = start_addr - page_addr;
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* get the currently transmitting data length */
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(page_offset + remaining < FMC_PAGE_SIZE) {
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             length = remaining;
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             length = FMC_PAGE_SIZE - page_offset;
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(1U == single_page_flag) {
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* process the condition that all data is at the same page */
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             update_offset = left_align;
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             write_buffer_size = right_align - left_align;
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* check whether target region content is 0xFF */
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             for(counter = left_align; counter < right_align; counter++) {
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(0xFF != REG8(page_addr + counter)) {
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     non_ff_flag = 1U;
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     break;
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* backup the orignal data and erase the page */
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(1U == non_ff_flag) {
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 for(counter = 0; counter < left_align; counter++) {
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     if(0xFF != REG8(page_addr + counter)) {
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         update_offset = counter;
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         write_buffer_size = right_align - counter;
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         break;
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 for(counter = FMC_PAGE_SIZE - 1U; counter >= right_align; counter--) {
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     if(0xFF != REG8(page_addr + counter)) {
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         write_buffer_size = counter - update_offset + 1U;
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         break;
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 memcpy((uint8_t *)(_g_fmc_cache + update_offset), (uint8_t *)(page_addr + update_of
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 _fmc_page_erase(page_addr);
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 non_ff_flag = 0U;
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* process the condition that all data cover more than one page */
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(page_addr == (write_addr_limit - FMC_PAGE_SIZE)) {
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* process the data in last page */
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 update_offset = page_offset;
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 write_buffer_size = right_align;
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* check whether target region content is 0xFF */
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 for(counter = 0; counter < right_align; counter++) {
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     if(0xFF != REG8(page_addr + counter)) {
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         non_ff_flag = 1U;
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         break;
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* backup the orignal data and erase the page */
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(1U == non_ff_flag) {
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     for(counter = FMC_PAGE_SIZE - 1U; counter >= right_align; counter--) {
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         if(0xFF != REG8(page_addr + counter)) {
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             write_buffer_size = counter + 1U;
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             break;
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         }
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* load from the flash into the cache */
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     memcpy((uint8_t *)(_g_fmc_cache), (uint8_t *)(page_addr), write_buffer_size);
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* erase the page, and write the cache */
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     _fmc_page_erase(page_addr);
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     non_ff_flag = 0U;
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             } else {
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* process the data in middle pages */
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(page_addr == start_addr) {
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     update_offset = 0U;
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     write_buffer_size = FMC_PAGE_SIZE;
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* check whether target region content is 0xFF */
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     for(counter = 0U; counter <  FMC_PAGE_SIZE; counter++) {
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         if(0xFF != REG8(page_addr + counter)) {
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             non_ff_flag = 1U;
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             break;
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         }
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* erase the page if it is necessary */
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     if(1U == non_ff_flag) {
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         _fmc_page_erase(page_addr);
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         non_ff_flag = 0U;
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 } else {
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     update_offset = left_align;
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     write_buffer_size = FMC_PAGE_SIZE - update_offset;
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* process the data in first page */
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* check whether target region content is 0xFF */
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     for(counter = left_align; counter < FMC_PAGE_SIZE; counter++) {
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         if(0xFF != REG8(page_addr + counter)) {
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             non_ff_flag = 1U;
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             break;
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         }
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* backup the orignal data and erase the page */
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     if(1U == non_ff_flag) {
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         for(counter = 0; counter < left_align; counter++) {
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             if(0xFF != REG8(page_addr + counter)) {
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                 update_offset = counter;
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                 write_buffer_size = FMC_PAGE_SIZE - update_offset;
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                 break;
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                             }
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         }
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         /* load from the flash into the cache */
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         memcpy((uint8_t *)(_g_fmc_cache + update_offset), (uint8_t *)(page_addr + u
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                write_buffer_size);
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         /* erase the page, and write the cache */
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         _fmc_page_erase(page_addr);
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         non_ff_flag = 0U;
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     }
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* update the cache from the source */
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         memcpy((uint8_t *)_g_fmc_cache + page_offset, src_addr, length);
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_program_align_word(page_addr + update_offset, (uint8_t *)(_g_fmc_cache + update_offset
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         start_addr += length;
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         src_addr += length;
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         remaining -= length;
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } while(remaining > 0);
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #else
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     while(counter < size) {
 640              		.loc 1 474 10
 641 0070 18E0     		b	.L42
 642              	.L44:
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(0xffU == (REG8(start_addr + counter))) {
 643              		.loc 1 475 22
 644 0072 FA68     		ldr	r2, [r7, #12]
 645 0074 7B6A     		ldr	r3, [r7, #36]
 646 0076 1344     		add	r3, r3, r2
 647 0078 1B78     		ldrb	r3, [r3]
 648 007a DBB2     		uxtb	r3, r3
 649              		.loc 1 475 11
 650 007c FF2B     		cmp	r3, #255
 651 007e 03D1     		bne	.L43
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             counter++;
 652              		.loc 1 476 20
 653 0080 7B6A     		ldr	r3, [r7, #36]
 654 0082 0133     		adds	r3, r3, #1
 655 0084 7B62     		str	r3, [r7, #36]
 656 0086 0DE0     		b	.L42
 657              	.L43:
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* erase the pgae unless all the original data is 0xFF */
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             page_addr = ((start_addr + counter) / FMC_PAGE_SIZE) * FMC_PAGE_SIZE;
 658              		.loc 1 479 38
 659 0088 FA68     		ldr	r2, [r7, #12]
 660 008a 7B6A     		ldr	r3, [r7, #36]
 661 008c 1344     		add	r3, r3, r2
 662              		.loc 1 479 23
 663 008e 23F47F73 		bic	r3, r3, #1020
 664 0092 23F00303 		bic	r3, r3, #3
 665 0096 7B61     		str	r3, [r7, #20]
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             _fmc_page_erase(page_addr);
 666              		.loc 1 480 13
 667 0098 7869     		ldr	r0, [r7, #20]
 668 009a FFF7FEFF 		bl	_fmc_page_erase
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             counter++;
 669              		.loc 1 481 20
 670 009e 7B6A     		ldr	r3, [r7, #36]
 671 00a0 0133     		adds	r3, r3, #1
 672 00a2 7B62     		str	r3, [r7, #36]
 673              	.L42:
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(0xffU == (REG8(start_addr + counter))) {
 674              		.loc 1 474 10
 675 00a4 7A6A     		ldr	r2, [r7, #36]
 676 00a6 7B68     		ldr	r3, [r7, #4]
 677 00a8 9A42     		cmp	r2, r3
 678 00aa E2D3     		bcc	.L44
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* save the original data which is outside the writing target range */
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     _fmc_program_align_word(start_addr, data, size);
 679              		.loc 1 485 5
 680 00ac 7A68     		ldr	r2, [r7, #4]
 681 00ae B968     		ldr	r1, [r7, #8]
 682 00b0 F868     		ldr	r0, [r7, #12]
 683 00b2 FFF7FEFF 		bl	_fmc_program_align_word
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* save the original data which is outside the writing target range */
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return HAL_ERR_NONE;
 684              		.loc 1 487 12
 685 00b6 0023     		movs	r3, #0
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 686              		.loc 1 488 1
 687 00b8 1846     		mov	r0, r3
 688 00ba 2837     		adds	r7, r7, #40
 689              		.cfi_def_cfa_offset 8
 690 00bc BD46     		mov	sp, r7
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 00be 80BD     		pop	{r7, pc}
 694              		.cfi_endproc
 695              	.LFE128:
 697              		.section	.text.hal_fmc_page_erase,"ax",%progbits
 698              		.align	1
 699              		.global	hal_fmc_page_erase
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu softvfp
 705              	hal_fmc_page_erase:
 706              	.LFB129:
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      erase the page which start address locating in
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_fmc_page_erase(uint32_t start_addr)
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 707              		.loc 1 503 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 16
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 84B0     		sub	sp, sp, #16
 716              		.cfi_def_cfa_offset 24
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum state;
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t page_offset = 0U;
 720              		.loc 1 505 14
 721 0008 0023     		movs	r3, #0
 722 000a FB60     		str	r3, [r7, #12]
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameter */
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((start_addr < FMC_BASE_ADDRESS) || (start_addr > FMC_END_ADDRESS)) {
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [start_addr] is a invalid address.");
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     page_offset = start_addr % FMC_PAGE_SIZE;
 723              		.loc 1 514 17
 724 000c 7B68     		ldr	r3, [r7, #4]
 725 000e C3F30903 		ubfx	r3, r3, #0, #10
 726 0012 FB60     		str	r3, [r7, #12]
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     state = _fmc_page_erase(start_addr - page_offset);
 727              		.loc 1 515 13
 728 0014 7A68     		ldr	r2, [r7, #4]
 729 0016 FB68     		ldr	r3, [r7, #12]
 730 0018 D31A     		subs	r3, r2, r3
 731 001a 1846     		mov	r0, r3
 732 001c FFF7FEFF 		bl	_fmc_page_erase
 733 0020 0346     		mov	r3, r0
 734 0022 FB72     		strb	r3, [r7, #11]
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return(state);
 735              		.loc 1 516 11
 736 0024 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 737              		.loc 1 517 1
 738 0026 1846     		mov	r0, r3
 739 0028 1037     		adds	r7, r7, #16
 740              		.cfi_def_cfa_offset 8
 741 002a BD46     		mov	sp, r7
 742              		.cfi_def_cfa_register 13
 743              		@ sp needed
 744 002c 80BD     		pop	{r7, pc}
 745              		.cfi_endproc
 746              	.LFE129:
 748              		.section	.text.hal_fmc_mass_erase,"ax",%progbits
 749              		.align	1
 750              		.global	hal_fmc_mass_erase
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu softvfp
 756              	hal_fmc_mass_erase:
 757              	.LFB130:
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      erase the whole flash
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_fmc_mass_erase(void)
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 758              		.loc 1 532 1
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 80B5     		push	{r7, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 770              		.loc 1 533 32
 771 0006 4FF47020 		mov	r0, #983040
 772 000a FFF7FEFF 		bl	hal_fmc_ready_wait
 773 000e 0346     		mov	r3, r0
 774 0010 FB71     		strb	r3, [r7, #7]
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 775              		.loc 1 535 7
 776 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 777 0014 002B     		cmp	r3, #0
 778 0016 17D1     		bne	.L49
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* start chip erase */
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_MER;
 779              		.loc 1 537 17
 780 0018 0E4B     		ldr	r3, .L51
 781 001a 1B68     		ldr	r3, [r3]
 782 001c 0D4A     		ldr	r2, .L51
 783 001e 43F00403 		orr	r3, r3, #4
 784 0022 1360     		str	r3, [r2]
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_START;
 785              		.loc 1 538 17
 786 0024 0B4B     		ldr	r3, .L51
 787 0026 1B68     		ldr	r3, [r3]
 788 0028 0A4A     		ldr	r2, .L51
 789 002a 43F04003 		orr	r3, r3, #64
 790 002e 1360     		str	r3, [r2]
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 791              		.loc 1 541 21
 792 0030 4FF47020 		mov	r0, #983040
 793 0034 FFF7FEFF 		bl	hal_fmc_ready_wait
 794 0038 0346     		mov	r3, r0
 795 003a FB71     		strb	r3, [r7, #7]
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* reset the MER bit */
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL &= ~FMC_CTL_MER;
 796              		.loc 1 544 17
 797 003c 054B     		ldr	r3, .L51
 798 003e 1B68     		ldr	r3, [r3]
 799 0040 044A     		ldr	r2, .L51
 800 0042 23F00403 		bic	r3, r3, #4
 801 0046 1360     		str	r3, [r2]
 802              	.L49:
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the fmc state  */
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 803              		.loc 1 548 12
 804 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 805              		.loc 1 549 1
 806 004a 1846     		mov	r0, r3
 807 004c 0837     		adds	r7, r7, #8
 808              		.cfi_def_cfa_offset 8
 809 004e BD46     		mov	sp, r7
 810              		.cfi_def_cfa_register 13
 811              		@ sp needed
 812 0050 80BD     		pop	{r7, pc}
 813              	.L52:
 814 0052 00BF     		.align	2
 815              	.L51:
 816 0054 10200240 		.word	1073881104
 817              		.cfi_endproc
 818              	.LFE130:
 820              		.section	.text.hal_fmc_region_erase,"ax",%progbits
 821              		.align	1
 822              		.global	hal_fmc_region_erase
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu softvfp
 828              	hal_fmc_region_erase:
 829              	.LFB131:
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      erase flash target region
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  size: target region size
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** int32_t hal_fmc_region_erase(uint32_t start_addr, uint32_t size)
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 830              		.loc 1 559 1
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 24
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834 0000 80B5     		push	{r7, lr}
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 86B0     		sub	sp, sp, #24
 839              		.cfi_def_cfa_offset 32
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
 843 0008 3960     		str	r1, [r7]
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t page_offset, page_number, counter = 0U;
 844              		.loc 1 560 40
 845 000a 0023     		movs	r3, #0
 846 000c 3B61     		str	r3, [r7, #16]
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t page_addr;
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameters */
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((start_addr < FMC_BASE_ADDRESS) || (start_addr > FMC_END_ADDRESS)) {
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [start_addr] is a invalid address.");
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(size > (FMC_END_ADDRESS - start_addr)) {
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("target data size exceed flash atual address scope.");
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     page_offset = start_addr % FMC_PAGE_SIZE;
 847              		.loc 1 575 17
 848 000e 7B68     		ldr	r3, [r7, #4]
 849 0010 C3F30903 		ubfx	r3, r3, #0, #10
 850 0014 FB60     		str	r3, [r7, #12]
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((size + page_offset) % FMC_PAGE_SIZE) {
 851              		.loc 1 576 14
 852 0016 3A68     		ldr	r2, [r7]
 853 0018 FB68     		ldr	r3, [r7, #12]
 854 001a 1344     		add	r3, r3, r2
 855              		.loc 1 576 29
 856 001c C3F30903 		ubfx	r3, r3, #0, #10
 857              		.loc 1 576 7
 858 0020 002B     		cmp	r3, #0
 859 0022 06D0     		beq	.L54
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         page_number = (size + page_offset) / FMC_PAGE_SIZE + 1U;
 860              		.loc 1 577 29
 861 0024 3A68     		ldr	r2, [r7]
 862 0026 FB68     		ldr	r3, [r7, #12]
 863 0028 1344     		add	r3, r3, r2
 864              		.loc 1 577 44
 865 002a 9B0A     		lsrs	r3, r3, #10
 866              		.loc 1 577 21
 867 002c 0133     		adds	r3, r3, #1
 868 002e 7B61     		str	r3, [r7, #20]
 869 0030 04E0     		b	.L55
 870              	.L54:
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         page_number = (size + page_offset) / FMC_PAGE_SIZE;
 871              		.loc 1 579 29
 872 0032 3A68     		ldr	r2, [r7]
 873 0034 FB68     		ldr	r3, [r7, #12]
 874 0036 1344     		add	r3, r3, r2
 875              		.loc 1 579 21
 876 0038 9B0A     		lsrs	r3, r3, #10
 877 003a 7B61     		str	r3, [r7, #20]
 878              	.L55:
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     page_addr = start_addr - page_offset;
 879              		.loc 1 581 15
 880 003c 7A68     		ldr	r2, [r7, #4]
 881 003e FB68     		ldr	r3, [r7, #12]
 882 0040 D31A     		subs	r3, r2, r3
 883 0042 BB60     		str	r3, [r7, #8]
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == FLASH_OPER_RESERVE_ORIGINAL_DATA)
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* page nubmer which buffer refer is equal to one */
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(1U == page_number) {
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase_update(_g_fmc_cache, size, page_addr, page_offset);
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else if(2U == page_number) {
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* page nubmer which buffer refer is equal to two */
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase_update(_g_fmc_cache, FMC_PAGE_SIZE - page_offset, \
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                page_addr, page_offset);
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase_update(_g_fmc_cache, page_offset + size - FMC_PAGE_SIZE, \
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                page_addr + FMC_PAGE_SIZE, 0);
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* page nubmer which buffer refer is more than two */
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase_update(_g_fmc_cache, FMC_PAGE_SIZE - page_offset, \
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                page_addr, page_offset);
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* erase middle pages */
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = 1; counter < (page_number - 1U); counter++) {
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             _fmc_page_erase(page_addr + (FMC_PAGE_SIZE * counter));
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         counter = (page_offset + size) % FMC_PAGE_SIZE;
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(0U == counter) {
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             counter = FMC_PAGE_SIZE;
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase_update(_g_fmc_cache, counter, \
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                page_addr + (FMC_PAGE_SIZE * (page_number - 1U)), 0);
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #else
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* erase all the pages which buffer refer */
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0U; counter < page_number; counter++) {
 884              		.loc 1 612 17
 885 0044 0023     		movs	r3, #0
 886 0046 3B61     		str	r3, [r7, #16]
 887              		.loc 1 612 5
 888 0048 09E0     		b	.L56
 889              	.L57:
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase(page_addr + (counter * FMC_PAGE_SIZE));
 890              		.loc 1 613 46 discriminator 3
 891 004a 3B69     		ldr	r3, [r7, #16]
 892 004c 9A02     		lsls	r2, r3, #10
 893              		.loc 1 613 9 discriminator 3
 894 004e BB68     		ldr	r3, [r7, #8]
 895 0050 1344     		add	r3, r3, r2
 896 0052 1846     		mov	r0, r3
 897 0054 FFF7FEFF 		bl	_fmc_page_erase
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase(page_addr + (counter * FMC_PAGE_SIZE));
 898              		.loc 1 612 53 discriminator 3
 899 0058 3B69     		ldr	r3, [r7, #16]
 900 005a 0133     		adds	r3, r3, #1
 901 005c 3B61     		str	r3, [r7, #16]
 902              	.L56:
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase(page_addr + (counter * FMC_PAGE_SIZE));
 903              		.loc 1 612 5 discriminator 1
 904 005e 3A69     		ldr	r2, [r7, #16]
 905 0060 7B69     		ldr	r3, [r7, #20]
 906 0062 9A42     		cmp	r2, r3
 907 0064 F1D3     		bcc	.L57
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* save the original data which is outside the erasing target range */
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return HAL_ERR_NONE;
 908              		.loc 1 616 12
 909 0066 0023     		movs	r3, #0
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 910              		.loc 1 617 1
 911 0068 1846     		mov	r0, r3
 912 006a 1837     		adds	r7, r7, #24
 913              		.cfi_def_cfa_offset 8
 914 006c BD46     		mov	sp, r7
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 006e 80BD     		pop	{r7, pc}
 918              		.cfi_endproc
 919              	.LFE131:
 921              		.section	.text.hal_fmc_irq,"ax",%progbits
 922              		.align	1
 923              		.global	hal_fmc_irq
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu softvfp
 929              	hal_fmc_irq:
 930              	.LFB132:
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      fmc interrupt handler content function, which is merely used in fmc_handler
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  p_irq: pointer to fmc interrupt handler callback function
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_irq(void)
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 931              		.loc 1 626 1
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(SET == _fmc_interrupt_flag_get(FMC_FLAG_PGERR | FMC_FLAG_WPERR)) {
 941              		.loc 1 627 15
 942 0004 1420     		movs	r0, #20
 943 0006 FFF7FEFF 		bl	_fmc_interrupt_flag_get
 944 000a 0346     		mov	r3, r0
 945              		.loc 1 627 7
 946 000c 012B     		cmp	r3, #1
 947 000e 0ED1     		bne	.L60
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_interrupt_flag_get(FMC_FLAG_PGERR | FMC_FLAG_WPERR);
 948              		.loc 1 628 9
 949 0010 1420     		movs	r0, #20
 950 0012 FFF7FEFF 		bl	_fmc_interrupt_flag_get
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(p_irq->error_handle != NULL) {
 951              		.loc 1 629 17
 952 0016 114B     		ldr	r3, .L63
 953 0018 1B68     		ldr	r3, [r3]
 954 001a 1B68     		ldr	r3, [r3]
 955              		.loc 1 629 11
 956 001c 002B     		cmp	r3, #0
 957 001e 06D0     		beq	.L60
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             p_irq->error_handle(p_irq);
 958              		.loc 1 630 18
 959 0020 0E4B     		ldr	r3, .L63
 960 0022 1B68     		ldr	r3, [r3]
 961 0024 1B68     		ldr	r3, [r3]
 962              		.loc 1 630 13
 963 0026 0D4A     		ldr	r2, .L63
 964 0028 1268     		ldr	r2, [r2]
 965 002a 1046     		mov	r0, r2
 966 002c 9847     		blx	r3
 967              	.LVL0:
 968              	.L60:
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(SET == _fmc_interrupt_flag_get(FMC_FLAG_END)) {
 969              		.loc 1 634 15
 970 002e 2020     		movs	r0, #32
 971 0030 FFF7FEFF 		bl	_fmc_interrupt_flag_get
 972 0034 0346     		mov	r3, r0
 973              		.loc 1 634 7
 974 0036 012B     		cmp	r3, #1
 975 0038 0ED1     		bne	.L62
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_interrupt_flag_get(FMC_FLAG_END);
 976              		.loc 1 635 9
 977 003a 2020     		movs	r0, #32
 978 003c FFF7FEFF 		bl	_fmc_interrupt_flag_get
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(p_irq->finish_handle != NULL) {
 979              		.loc 1 636 17
 980 0040 064B     		ldr	r3, .L63
 981 0042 1B68     		ldr	r3, [r3]
 982 0044 5B68     		ldr	r3, [r3, #4]
 983              		.loc 1 636 11
 984 0046 002B     		cmp	r3, #0
 985 0048 06D0     		beq	.L62
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             p_irq->finish_handle(p_irq);
 986              		.loc 1 637 18
 987 004a 044B     		ldr	r3, .L63
 988 004c 1B68     		ldr	r3, [r3]
 989 004e 5B68     		ldr	r3, [r3, #4]
 990              		.loc 1 637 13
 991 0050 024A     		ldr	r2, .L63
 992 0052 1268     		ldr	r2, [r2]
 993 0054 1046     		mov	r0, r2
 994 0056 9847     		blx	r3
 995              	.LVL1:
 996              	.L62:
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 997              		.loc 1 640 1
 998 0058 00BF     		nop
 999 005a 80BD     		pop	{r7, pc}
 1000              	.L64:
 1001              		.align	2
 1002              	.L63:
 1003 005c 00000000 		.word	p_irq
 1004              		.cfi_endproc
 1005              	.LFE132:
 1007              		.section	.text.hal_fmc_irq_handle_set,"ax",%progbits
 1008              		.align	1
 1009              		.global	hal_fmc_irq_handle_set
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu softvfp
 1015              	hal_fmc_irq_handle_set:
 1016              	.LFB133:
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      set user-defined interrupt callback function, which will be registered and called
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 when corresponding interrupt be triggered
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  p_irq: pointer to fmc interrupt handler callback function
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_irq_handle_set(hal_fmc_irq_struct *p_irq)
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1017              		.loc 1 650 1
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 8
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(NULL != p_irq->error_handle) {
 1030              		.loc 1 651 21
 1031 0008 7B68     		ldr	r3, [r7, #4]
 1032 000a 1B68     		ldr	r3, [r3]
 1033              		.loc 1 651 7
 1034 000c 002B     		cmp	r3, #0
 1035 000e 0AD0     		beq	.L66
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         p_irq->error_handle(p_irq);
 1036              		.loc 1 652 14
 1037 0010 7B68     		ldr	r3, [r7, #4]
 1038 0012 1B68     		ldr	r3, [r3]
 1039              		.loc 1 652 9
 1040 0014 7868     		ldr	r0, [r7, #4]
 1041 0016 9847     		blx	r3
 1042              	.LVL2:
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_INTEN_ERR;
 1043              		.loc 1 653 17
 1044 0018 124B     		ldr	r3, .L71
 1045 001a 1B68     		ldr	r3, [r3]
 1046 001c 114A     		ldr	r2, .L71
 1047 001e 43F48063 		orr	r3, r3, #1024
 1048 0022 1360     		str	r3, [r2]
 1049 0024 05E0     		b	.L67
 1050              	.L66:
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL &= ~FMC_INTEN_ERR;
 1051              		.loc 1 655 17
 1052 0026 0F4B     		ldr	r3, .L71
 1053 0028 1B68     		ldr	r3, [r3]
 1054 002a 0E4A     		ldr	r2, .L71
 1055 002c 23F48063 		bic	r3, r3, #1024
 1056 0030 1360     		str	r3, [r2]
 1057              	.L67:
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(NULL != p_irq->finish_handle) {
 1058              		.loc 1 658 21
 1059 0032 7B68     		ldr	r3, [r7, #4]
 1060 0034 5B68     		ldr	r3, [r3, #4]
 1061              		.loc 1 658 7
 1062 0036 002B     		cmp	r3, #0
 1063 0038 0AD0     		beq	.L68
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         p_irq->finish_handle(p_irq);
 1064              		.loc 1 659 14
 1065 003a 7B68     		ldr	r3, [r7, #4]
 1066 003c 5B68     		ldr	r3, [r3, #4]
 1067              		.loc 1 659 9
 1068 003e 7868     		ldr	r0, [r7, #4]
 1069 0040 9847     		blx	r3
 1070              	.LVL3:
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_INTEN_END;
 1071              		.loc 1 660 17
 1072 0042 084B     		ldr	r3, .L71
 1073 0044 1B68     		ldr	r3, [r3]
 1074 0046 074A     		ldr	r2, .L71
 1075 0048 43F48053 		orr	r3, r3, #4096
 1076 004c 1360     		str	r3, [r2]
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL &= ~FMC_INTEN_END;
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1077              		.loc 1 664 1
 1078 004e 05E0     		b	.L70
 1079              	.L68:
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 1080              		.loc 1 662 17
 1081 0050 044B     		ldr	r3, .L71
 1082 0052 1B68     		ldr	r3, [r3]
 1083 0054 034A     		ldr	r2, .L71
 1084 0056 23F48053 		bic	r3, r3, #4096
 1085 005a 1360     		str	r3, [r2]
 1086              	.L70:
 1087              		.loc 1 664 1
 1088 005c 00BF     		nop
 1089 005e 0837     		adds	r7, r7, #8
 1090              		.cfi_def_cfa_offset 8
 1091 0060 BD46     		mov	sp, r7
 1092              		.cfi_def_cfa_register 13
 1093              		@ sp needed
 1094 0062 80BD     		pop	{r7, pc}
 1095              	.L72:
 1096              		.align	2
 1097              	.L71:
 1098 0064 10200240 		.word	1073881104
 1099              		.cfi_endproc
 1100              	.LFE133:
 1102              		.section	.text.hal_fmc_irq_handle_all_reset,"ax",%progbits
 1103              		.align	1
 1104              		.global	hal_fmc_irq_handle_all_reset
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu softvfp
 1110              	hal_fmc_irq_handle_all_reset:
 1111              	.LFB134:
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      reset user-defined interrupt callback function, which will be registered and called
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 when corresponding interrupt be triggered
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  p_irq: pointer to fmc interrupt handler callback function
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_fmc_irq_handle_all_reset(hal_fmc_irq_struct *p_irq)
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1112              		.loc 1 674 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117 0000 80B4     		push	{r7}
 1118              		.cfi_def_cfa_offset 4
 1119              		.cfi_offset 7, -4
 1120 0002 83B0     		sub	sp, sp, #12
 1121              		.cfi_def_cfa_offset 16
 1122 0004 00AF     		add	r7, sp, #0
 1123              		.cfi_def_cfa_register 7
 1124 0006 7860     		str	r0, [r7, #4]
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_irq->error_handle = NULL;
 1125              		.loc 1 675 25
 1126 0008 7B68     		ldr	r3, [r7, #4]
 1127 000a 0022     		movs	r2, #0
 1128 000c 1A60     		str	r2, [r3]
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_irq->finish_handle = NULL;
 1129              		.loc 1 676 26
 1130 000e 7B68     		ldr	r3, [r7, #4]
 1131 0010 0022     		movs	r2, #0
 1132 0012 5A60     		str	r2, [r3, #4]
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1133              		.loc 1 677 1
 1134 0014 00BF     		nop
 1135 0016 0C37     		adds	r7, r7, #12
 1136              		.cfi_def_cfa_offset 4
 1137 0018 BD46     		mov	sp, r7
 1138              		.cfi_def_cfa_register 13
 1139              		@ sp needed
 1140 001a 80BC     		pop	{r7}
 1141              		.cfi_restore 7
 1142              		.cfi_def_cfa_offset 0
 1143 001c 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE134:
 1147              		.section	.text.hal_ob_unlock,"ax",%progbits
 1148              		.align	1
 1149              		.global	hal_ob_unlock
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1153              		.fpu softvfp
 1155              	hal_ob_unlock:
 1156              	.LFB135:
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      unlock option byte
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_ob_unlock(void)
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1157              		.loc 1 686 1
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 0000 80B4     		push	{r7}
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 7, -4
 1165 0002 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(RESET == (FMC_CTL & FMC_CTL_OBWEN)) {
 1167              		.loc 1 687 18
 1168 0004 074B     		ldr	r3, .L77
 1169 0006 1B68     		ldr	r3, [r3]
 1170              		.loc 1 687 26
 1171 0008 03F40073 		and	r3, r3, #512
 1172              		.loc 1 687 7
 1173 000c 002B     		cmp	r3, #0
 1174 000e 05D1     		bne	.L76
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* write the FMC key */
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_OBKEY = UNLOCK_KEY0;
 1175              		.loc 1 689 9
 1176 0010 054B     		ldr	r3, .L77+4
 1177              		.loc 1 689 19
 1178 0012 064A     		ldr	r2, .L77+8
 1179 0014 1A60     		str	r2, [r3]
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_OBKEY = UNLOCK_KEY1;
 1180              		.loc 1 690 9
 1181 0016 044B     		ldr	r3, .L77+4
 1182              		.loc 1 690 19
 1183 0018 054A     		ldr	r2, .L77+12
 1184 001a 1A60     		str	r2, [r3]
 1185              	.L76:
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1186              		.loc 1 692 1
 1187 001c 00BF     		nop
 1188 001e BD46     		mov	sp, r7
 1189              		.cfi_def_cfa_register 13
 1190              		@ sp needed
 1191 0020 80BC     		pop	{r7}
 1192              		.cfi_restore 7
 1193              		.cfi_def_cfa_offset 0
 1194 0022 7047     		bx	lr
 1195              	.L78:
 1196              		.align	2
 1197              	.L77:
 1198 0024 10200240 		.word	1073881104
 1199 0028 08200240 		.word	1073881096
 1200 002c 23016745 		.word	1164378403
 1201 0030 AB89EFCD 		.word	-839939669
 1202              		.cfi_endproc
 1203              	.LFE135:
 1205              		.section	.text.hal_ob_lock,"ax",%progbits
 1206              		.align	1
 1207              		.global	hal_ob_lock
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu softvfp
 1213              	hal_ob_lock:
 1214              	.LFB136:
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      lock option byte
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_ob_lock(void)
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1215              		.loc 1 701 1
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
 1220 0000 80B4     		push	{r7}
 1221              		.cfi_def_cfa_offset 4
 1222              		.cfi_offset 7, -4
 1223 0002 00AF     		add	r7, sp, #0
 1224              		.cfi_def_cfa_register 7
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* reset the OBWE bit */
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FMC_CTL &= ~FMC_CTL_OBWEN;
 1225              		.loc 1 703 13
 1226 0004 044B     		ldr	r3, .L80
 1227 0006 1B68     		ldr	r3, [r3]
 1228 0008 034A     		ldr	r2, .L80
 1229 000a 23F40073 		bic	r3, r3, #512
 1230 000e 1360     		str	r3, [r2]
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1231              		.loc 1 704 1
 1232 0010 00BF     		nop
 1233 0012 BD46     		mov	sp, r7
 1234              		.cfi_def_cfa_register 13
 1235              		@ sp needed
 1236 0014 80BC     		pop	{r7}
 1237              		.cfi_restore 7
 1238              		.cfi_def_cfa_offset 0
 1239 0016 7047     		bx	lr
 1240              	.L81:
 1241              		.align	2
 1242              	.L80:
 1243 0018 10200240 		.word	1073881104
 1244              		.cfi_endproc
 1245              	.LFE136:
 1247              		.section	.text.hal_ob_reset,"ax",%progbits
 1248              		.align	1
 1249              		.global	hal_ob_reset
 1250              		.syntax unified
 1251              		.thumb
 1252              		.thumb_func
 1253              		.fpu softvfp
 1255              	hal_ob_reset:
 1256              	.LFB137:
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      reset option byte
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void hal_ob_reset(void)
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1257              		.loc 1 713 1
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262 0000 80B4     		push	{r7}
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 7, -4
 1265 0002 00AF     		add	r7, sp, #0
 1266              		.cfi_def_cfa_register 7
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* set the OBRLD bit */
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FMC_CTL |= FMC_CTL_OBRLD;
 1267              		.loc 1 715 13
 1268 0004 044B     		ldr	r3, .L83
 1269 0006 1B68     		ldr	r3, [r3]
 1270 0008 034A     		ldr	r2, .L83
 1271 000a 43F40053 		orr	r3, r3, #8192
 1272 000e 1360     		str	r3, [r2]
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1273              		.loc 1 716 1
 1274 0010 00BF     		nop
 1275 0012 BD46     		mov	sp, r7
 1276              		.cfi_def_cfa_register 13
 1277              		@ sp needed
 1278 0014 80BC     		pop	{r7}
 1279              		.cfi_restore 7
 1280              		.cfi_def_cfa_offset 0
 1281 0016 7047     		bx	lr
 1282              	.L84:
 1283              		.align	2
 1284              	.L83:
 1285 0018 10200240 		.word	1073881104
 1286              		.cfi_endproc
 1287              	.LFE137:
 1289              		.section	.text.hal_ob_erase,"ax",%progbits
 1290              		.align	1
 1291              		.global	hal_ob_erase
 1292              		.syntax unified
 1293              		.thumb
 1294              		.thumb_func
 1295              		.fpu softvfp
 1297              	hal_ob_erase:
 1298              	.LFB138:
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      erase option byte
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_ob_erase(void)
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1299              		.loc 1 731 1
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 8
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
 1303 0000 80B5     		push	{r7, lr}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 82B0     		sub	sp, sp, #8
 1308              		.cfi_def_cfa_offset 16
 1309 0004 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t fmc_spc;
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t fmc_plevel = (FMC_OBSTAT & (FMC_OBSTAT_PLEVEL_BIT0 | FMC_OBSTAT_PLEVEL_BIT1));
 1311              		.loc 1 734 28
 1312 0006 314B     		ldr	r3, .L92
 1313 0008 1B68     		ldr	r3, [r3]
 1314              		.loc 1 734 14
 1315 000a 03F00603 		and	r3, r3, #6
 1316 000e 3B60     		str	r3, [r7]
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1317              		.loc 1 735 32
 1318 0010 4FF47020 		mov	r0, #983040
 1319 0014 FFF7FEFF 		bl	hal_fmc_ready_wait
 1320 0018 0346     		mov	r3, r0
 1321 001a 7B71     		strb	r3, [r7, #5]
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* get the original option byte security protection code */
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(OB_OBSTAT_PLEVEL_NO == fmc_plevel) {
 1322              		.loc 1 738 7
 1323 001c 3B68     		ldr	r3, [r7]
 1324 001e 002B     		cmp	r3, #0
 1325 0020 02D1     		bne	.L86
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_spc = FMC_NSPC;
 1326              		.loc 1 739 17
 1327 0022 A523     		movs	r3, #165
 1328 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 1329 0026 09E0     		b	.L87
 1330              	.L86:
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else if(OB_OBSTAT_PLEVEL_LOW == fmc_plevel) {
 1331              		.loc 1 740 14
 1332 0028 3B68     		ldr	r3, [r7]
 1333 002a 022B     		cmp	r3, #2
 1334 002c 02D1     		bne	.L88
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_spc = FMC_LSPC;
 1335              		.loc 1 741 17
 1336 002e BB23     		movs	r3, #187
 1337 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 1338 0032 03E0     		b	.L87
 1339              	.L88:
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_spc = FMC_HSPC;
 1340              		.loc 1 743 17
 1341 0034 CC23     		movs	r3, #204
 1342 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = FMC_OB_HSPC;
 1343              		.loc 1 744 19
 1344 0038 0523     		movs	r3, #5
 1345 003a 7B71     		strb	r3, [r7, #5]
 1346              	.L87:
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 1347              		.loc 1 747 7
 1348 003c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1349 003e 002B     		cmp	r3, #0
 1350 0040 3FD1     		bne	.L89
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* start erase the option byte */
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_OBER;
 1351              		.loc 1 749 17
 1352 0042 234B     		ldr	r3, .L92+4
 1353 0044 1B68     		ldr	r3, [r3]
 1354 0046 224A     		ldr	r2, .L92+4
 1355 0048 43F02003 		orr	r3, r3, #32
 1356 004c 1360     		str	r3, [r2]
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_START;
 1357              		.loc 1 750 17
 1358 004e 204B     		ldr	r3, .L92+4
 1359 0050 1B68     		ldr	r3, [r3]
 1360 0052 1F4A     		ldr	r2, .L92+4
 1361 0054 43F04003 		orr	r3, r3, #64
 1362 0058 1360     		str	r3, [r2]
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1363              		.loc 1 753 21
 1364 005a 4FF47020 		mov	r0, #983040
 1365 005e FFF7FEFF 		bl	hal_fmc_ready_wait
 1366 0062 0346     		mov	r3, r0
 1367 0064 7B71     		strb	r3, [r7, #5]
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 1368              		.loc 1 755 11
 1369 0066 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1370 0068 002B     		cmp	r3, #0
 1371 006a 21D1     		bne	.L90
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* reset the OBER bit */
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL &= ~FMC_CTL_OBER;
 1372              		.loc 1 757 21
 1373 006c 184B     		ldr	r3, .L92+4
 1374 006e 1B68     		ldr	r3, [r3]
 1375 0070 174A     		ldr	r2, .L92+4
 1376 0072 23F02003 		bic	r3, r3, #32
 1377 0076 1360     		str	r3, [r2]
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* set the OBPG bit */
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBPG;
 1378              		.loc 1 760 21
 1379 0078 154B     		ldr	r3, .L92+4
 1380 007a 1B68     		ldr	r3, [r3]
 1381 007c 144A     		ldr	r2, .L92+4
 1382 007e 43F01003 		orr	r3, r3, #16
 1383 0082 1360     		str	r3, [r2]
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* restore the last get option byte security protection code */
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             OB_SPC = fmc_spc;
 1384              		.loc 1 763 13
 1385 0084 134A     		ldr	r2, .L92+8
 1386              		.loc 1 763 20
 1387 0086 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1388 0088 1380     		strh	r3, [r2]	@ movhi
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             OB_USER = OB_USER_DEFAULT;
 1389              		.loc 1 764 13
 1390 008a 134B     		ldr	r3, .L92+12
 1391              		.loc 1 764 21
 1392 008c DF22     		movs	r2, #223
 1393 008e 1A80     		strh	r2, [r3]	@ movhi
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1394              		.loc 1 767 25
 1395 0090 4FF47020 		mov	r0, #983040
 1396 0094 FFF7FEFF 		bl	hal_fmc_ready_wait
 1397 0098 0346     		mov	r3, r0
 1398 009a 7B71     		strb	r3, [r7, #5]
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1399              		.loc 1 769 15
 1400 009c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1401 009e 042B     		cmp	r3, #4
 1402 00a0 0FD0     		beq	.L89
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 1403              		.loc 1 771 25
 1404 00a2 0B4B     		ldr	r3, .L92+4
 1405 00a4 1B68     		ldr	r3, [r3]
 1406 00a6 0A4A     		ldr	r2, .L92+4
 1407 00a8 23F01003 		bic	r3, r3, #16
 1408 00ac 1360     		str	r3, [r2]
 1409 00ae 08E0     		b	.L89
 1410              	.L90:
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1411              		.loc 1 774 15
 1412 00b0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1413 00b2 042B     		cmp	r3, #4
 1414 00b4 05D0     		beq	.L89
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 1415              		.loc 1 776 25
 1416 00b6 064B     		ldr	r3, .L92+4
 1417 00b8 1B68     		ldr	r3, [r3]
 1418 00ba 054A     		ldr	r2, .L92+4
 1419 00bc 23F01003 		bic	r3, r3, #16
 1420 00c0 1360     		str	r3, [r2]
 1421              	.L89:
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 1422              		.loc 1 781 12
 1423 00c2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1424              		.loc 1 782 1
 1425 00c4 1846     		mov	r0, r3
 1426 00c6 0837     		adds	r7, r7, #8
 1427              		.cfi_def_cfa_offset 8
 1428 00c8 BD46     		mov	sp, r7
 1429              		.cfi_def_cfa_register 13
 1430              		@ sp needed
 1431 00ca 80BD     		pop	{r7, pc}
 1432              	.L93:
 1433              		.align	2
 1434              	.L92:
 1435 00cc 1C200240 		.word	1073881116
 1436 00d0 10200240 		.word	1073881104
 1437 00d4 00F8FF1F 		.word	536868864
 1438 00d8 02F8FF1F 		.word	536868866
 1439              		.cfi_endproc
 1440              	.LFE138:
 1442              		.section	.text.hal_ob_security_protection_config,"ax",%progbits
 1443              		.align	1
 1444              		.global	hal_ob_security_protection_config
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu softvfp
 1450              	hal_ob_security_protection_config:
 1451              	.LFB139:
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      configure option byte security protection
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  ob_spc: specify security protection code
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_NSPC: no security protection
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_LSPC: low security protection
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_HSPC: high security protection
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_ob_security_protection_config(uint8_t ob_spc)
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1452              		.loc 1 800 1
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 16
 1455              		@ frame_needed = 1, uses_anonymous_args = 0
 1456 0000 80B5     		push	{r7, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 7, -8
 1459              		.cfi_offset 14, -4
 1460 0002 84B0     		sub	sp, sp, #16
 1461              		.cfi_def_cfa_offset 24
 1462 0004 00AF     		add	r7, sp, #0
 1463              		.cfi_def_cfa_register 7
 1464 0006 0346     		mov	r3, r0
 1465 0008 FB71     		strb	r3, [r7, #7]
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1466              		.loc 1 801 32
 1467 000a 4FF47020 		mov	r0, #983040
 1468 000e FFF7FEFF 		bl	hal_fmc_ready_wait
 1469 0012 0346     		mov	r3, r0
 1470 0014 FB73     		strb	r3, [r7, #15]
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_parm_struct ob_parm;
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_parm_get(&ob_parm);
 1471              		.loc 1 804 5
 1472 0016 07F10803 		add	r3, r7, #8
 1473 001a 1846     		mov	r0, r3
 1474 001c FFF7FEFF 		bl	hal_ob_parm_get
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* the OB_SPC byte cannot be reprogrammed if protection level is high */
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(OB_OBSTAT_PLEVEL_HIGH == (FMC_OBSTAT & (FMC_OBSTAT_PLEVEL_BIT0 | FMC_OBSTAT_PLEVEL_BIT1))) {
 1475              		.loc 1 807 34
 1476 0020 284B     		ldr	r3, .L99
 1477 0022 1B68     		ldr	r3, [r3]
 1478              		.loc 1 807 45
 1479 0024 03F00603 		and	r3, r3, #6
 1480              		.loc 1 807 7
 1481 0028 062B     		cmp	r3, #6
 1482 002a 01D1     		bne	.L95
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = FMC_OB_HSPC;
 1483              		.loc 1 808 19
 1484 002c 0523     		movs	r3, #5
 1485 002e FB73     		strb	r3, [r7, #15]
 1486              	.L95:
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 1487              		.loc 1 811 7
 1488 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1489 0032 002B     		cmp	r3, #0
 1490 0034 41D1     		bne	.L96
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* start erase the option byte */
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_OBER;
 1491              		.loc 1 813 17
 1492 0036 244B     		ldr	r3, .L99+4
 1493 0038 1B68     		ldr	r3, [r3]
 1494 003a 234A     		ldr	r2, .L99+4
 1495 003c 43F02003 		orr	r3, r3, #32
 1496 0040 1360     		str	r3, [r2]
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_START;
 1497              		.loc 1 814 17
 1498 0042 214B     		ldr	r3, .L99+4
 1499 0044 1B68     		ldr	r3, [r3]
 1500 0046 204A     		ldr	r2, .L99+4
 1501 0048 43F04003 		orr	r3, r3, #64
 1502 004c 1360     		str	r3, [r2]
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1503              		.loc 1 817 21
 1504 004e 4FF47020 		mov	r0, #983040
 1505 0052 FFF7FEFF 		bl	hal_fmc_ready_wait
 1506 0056 0346     		mov	r3, r0
 1507 0058 FB73     		strb	r3, [r7, #15]
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 1508              		.loc 1 819 11
 1509 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1510 005c 002B     		cmp	r3, #0
 1511 005e 23D1     		bne	.L97
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* reset the OBER bit */
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL &= ~FMC_CTL_OBER;
 1512              		.loc 1 822 21
 1513 0060 194B     		ldr	r3, .L99+4
 1514 0062 1B68     		ldr	r3, [r3]
 1515 0064 184A     		ldr	r2, .L99+4
 1516 0066 23F02003 		bic	r3, r3, #32
 1517 006a 1360     		str	r3, [r2]
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* enable the option bytes programming */
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBPG;
 1518              		.loc 1 825 21
 1519 006c 164B     		ldr	r3, .L99+4
 1520 006e 1B68     		ldr	r3, [r3]
 1521 0070 154A     		ldr	r2, .L99+4
 1522 0072 43F01003 		orr	r3, r3, #16
 1523 0076 1360     		str	r3, [r2]
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             _ob_value_modify(OB_SPC_ADDR, (uint16_t)ob_spc, &ob_parm);
 1524              		.loc 1 827 13
 1525 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1526 007a 9BB2     		uxth	r3, r3
 1527 007c 07F10802 		add	r2, r7, #8
 1528 0080 1946     		mov	r1, r3
 1529 0082 1248     		ldr	r0, .L99+8
 1530 0084 FFF7FEFF 		bl	_ob_value_modify
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1531              		.loc 1 829 25
 1532 0088 4FF47020 		mov	r0, #983040
 1533 008c FFF7FEFF 		bl	hal_fmc_ready_wait
 1534 0090 0346     		mov	r3, r0
 1535 0092 FB73     		strb	r3, [r7, #15]
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1536              		.loc 1 831 15
 1537 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1538 0096 042B     		cmp	r3, #4
 1539 0098 0FD0     		beq	.L96
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 1540              		.loc 1 833 25
 1541 009a 0B4B     		ldr	r3, .L99+4
 1542 009c 1B68     		ldr	r3, [r3]
 1543 009e 0A4A     		ldr	r2, .L99+4
 1544 00a0 23F01003 		bic	r3, r3, #16
 1545 00a4 1360     		str	r3, [r2]
 1546 00a6 08E0     		b	.L96
 1547              	.L97:
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1548              		.loc 1 836 15
 1549 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1550 00aa 042B     		cmp	r3, #4
 1551 00ac 05D0     		beq	.L96
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBER bit */
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBER;
 1552              		.loc 1 838 25
 1553 00ae 064B     		ldr	r3, .L99+4
 1554 00b0 1B68     		ldr	r3, [r3]
 1555 00b2 054A     		ldr	r2, .L99+4
 1556 00b4 23F02003 		bic	r3, r3, #32
 1557 00b8 1360     		str	r3, [r2]
 1558              	.L96:
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 1559              		.loc 1 843 12
 1560 00ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1561              		.loc 1 844 1
 1562 00bc 1846     		mov	r0, r3
 1563 00be 1037     		adds	r7, r7, #16
 1564              		.cfi_def_cfa_offset 8
 1565 00c0 BD46     		mov	sp, r7
 1566              		.cfi_def_cfa_register 13
 1567              		@ sp needed
 1568 00c2 80BD     		pop	{r7, pc}
 1569              	.L100:
 1570              		.align	2
 1571              	.L99:
 1572 00c4 1C200240 		.word	1073881116
 1573 00c8 10200240 		.word	1073881104
 1574 00cc 00F8FF1F 		.word	536868864
 1575              		.cfi_endproc
 1576              	.LFE139:
 1578              		.section	.text.hal_ob_user_write,"ax",%progbits
 1579              		.align	1
 1580              		.global	hal_ob_user_write
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1584              		.fpu softvfp
 1586              	hal_ob_user_write:
 1587              	.LFB140:
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      write option byte user
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 this function can only clear the corresponding bits to be 0 rather than 1.
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 the function ob_erase is used to set all the bits to be 1.
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  ob_user: user option byte
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 one or more parameters (bitwise AND) can be selected which are shown as below:
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_FWDGT_HW: hardware free watchdog timer
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_DEEPSLEEP_RST: no reset when entering deepsleep mode
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_STDBY_RST: no reset when entering standby mode
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_BOOT1_SET_1: BOOT1 bit is 1
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_VDDA_DISABLE: disable VDDA monitor
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_SRAM_PARITY_ENABLE: enable sram parity check
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_ob_user_write(uint8_t ob_user)
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1588              		.loc 1 868 1
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 16
 1591              		@ frame_needed = 1, uses_anonymous_args = 0
 1592 0000 80B5     		push	{r7, lr}
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 84B0     		sub	sp, sp, #16
 1597              		.cfi_def_cfa_offset 24
 1598 0004 00AF     		add	r7, sp, #0
 1599              		.cfi_def_cfa_register 7
 1600 0006 0346     		mov	r3, r0
 1601 0008 FB71     		strb	r3, [r7, #7]
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check whether FMC is ready or not */
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1602              		.loc 1 870 32
 1603 000a 4FF47020 		mov	r0, #983040
 1604 000e FFF7FEFF 		bl	hal_fmc_ready_wait
 1605 0012 0346     		mov	r3, r0
 1606 0014 FB73     		strb	r3, [r7, #15]
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_parm_struct ob_parm;
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_parm_get(&ob_parm);
 1607              		.loc 1 872 5
 1608 0016 07F10803 		add	r3, r7, #8
 1609 001a 1846     		mov	r0, r3
 1610 001c FFF7FEFF 		bl	hal_ob_parm_get
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 1611              		.loc 1 874 7
 1612 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1613 0022 002B     		cmp	r3, #0
 1614 0024 41D1     		bne	.L102
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* start erase the option byte */
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_OBER;
 1615              		.loc 1 876 17
 1616 0026 234B     		ldr	r3, .L105
 1617 0028 1B68     		ldr	r3, [r3]
 1618 002a 224A     		ldr	r2, .L105
 1619 002c 43F02003 		orr	r3, r3, #32
 1620 0030 1360     		str	r3, [r2]
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_START;
 1621              		.loc 1 877 17
 1622 0032 204B     		ldr	r3, .L105
 1623 0034 1B68     		ldr	r3, [r3]
 1624 0036 1F4A     		ldr	r2, .L105
 1625 0038 43F04003 		orr	r3, r3, #64
 1626 003c 1360     		str	r3, [r2]
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1627              		.loc 1 880 21
 1628 003e 4FF47020 		mov	r0, #983040
 1629 0042 FFF7FEFF 		bl	hal_fmc_ready_wait
 1630 0046 0346     		mov	r3, r0
 1631 0048 FB73     		strb	r3, [r7, #15]
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 1632              		.loc 1 882 11
 1633 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1634 004c 002B     		cmp	r3, #0
 1635 004e 23D1     		bne	.L103
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* reset the OBER bit */
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL &= ~FMC_CTL_OBER;
 1636              		.loc 1 884 21
 1637 0050 184B     		ldr	r3, .L105
 1638 0052 1B68     		ldr	r3, [r3]
 1639 0054 174A     		ldr	r2, .L105
 1640 0056 23F02003 		bic	r3, r3, #32
 1641 005a 1360     		str	r3, [r2]
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* set the OBPG bit */
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBPG;
 1642              		.loc 1 887 21
 1643 005c 154B     		ldr	r3, .L105
 1644 005e 1B68     		ldr	r3, [r3]
 1645 0060 144A     		ldr	r2, .L105
 1646 0062 43F01003 		orr	r3, r3, #16
 1647 0066 1360     		str	r3, [r2]
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* restore the last get option byte security protection code */
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             _ob_value_modify(OB_USER_ADDR, (uint16_t)ob_user, &ob_parm);
 1648              		.loc 1 890 13
 1649 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1650 006a 9BB2     		uxth	r3, r3
 1651 006c 07F10802 		add	r2, r7, #8
 1652 0070 1946     		mov	r1, r3
 1653 0072 1148     		ldr	r0, .L105+4
 1654 0074 FFF7FEFF 		bl	_ob_value_modify
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1655              		.loc 1 893 25
 1656 0078 4FF47020 		mov	r0, #983040
 1657 007c FFF7FEFF 		bl	hal_fmc_ready_wait
 1658 0080 0346     		mov	r3, r0
 1659 0082 FB73     		strb	r3, [r7, #15]
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1660              		.loc 1 895 15
 1661 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1662 0086 042B     		cmp	r3, #4
 1663 0088 0FD0     		beq	.L102
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 1664              		.loc 1 897 25
 1665 008a 0A4B     		ldr	r3, .L105
 1666 008c 1B68     		ldr	r3, [r3]
 1667 008e 094A     		ldr	r2, .L105
 1668 0090 23F01003 		bic	r3, r3, #16
 1669 0094 1360     		str	r3, [r2]
 1670 0096 08E0     		b	.L102
 1671              	.L103:
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1672              		.loc 1 900 15
 1673 0098 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1674 009a 042B     		cmp	r3, #4
 1675 009c 05D0     		beq	.L102
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 1676              		.loc 1 902 25
 1677 009e 054B     		ldr	r3, .L105
 1678 00a0 1B68     		ldr	r3, [r3]
 1679 00a2 044A     		ldr	r2, .L105
 1680 00a4 23F01003 		bic	r3, r3, #16
 1681 00a8 1360     		str	r3, [r2]
 1682              	.L102:
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 1683              		.loc 1 907 12
 1684 00aa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1685              		.loc 1 908 1
 1686 00ac 1846     		mov	r0, r3
 1687 00ae 1037     		adds	r7, r7, #16
 1688              		.cfi_def_cfa_offset 8
 1689 00b0 BD46     		mov	sp, r7
 1690              		.cfi_def_cfa_register 13
 1691              		@ sp needed
 1692 00b2 80BD     		pop	{r7, pc}
 1693              	.L106:
 1694              		.align	2
 1695              	.L105:
 1696 00b4 10200240 		.word	1073881104
 1697 00b8 02F8FF1F 		.word	536868866
 1698              		.cfi_endproc
 1699              	.LFE140:
 1701              		.section	.text.hal_ob_data_program,"ax",%progbits
 1702              		.align	1
 1703              		.global	hal_ob_data_program
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu softvfp
 1709              	hal_ob_data_program:
 1710              	.LFB141:
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      program the FMC data option byte
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  addr: OB_DATA_ADDR0 or OB_DATA_ADDR1
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_DATA_ADDR0: option byte data address 0
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        OB_DATA_ADDR1: option byte data address 1
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data: the byte to be programmed
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state_enum: state of FMC
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_READY: the operation has been completed
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_BUSY: the operation is in progress
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_PGERR: program error
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_WPERR: erase/program protection error
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_TOERR: timeout error
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_OB_HSPC: option byte security protection code high
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_ob_data_program(uint32_t address, uint8_t ob_data)
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1711              		.loc 1 926 1
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 16
 1714              		@ frame_needed = 1, uses_anonymous_args = 0
 1715 0000 80B5     		push	{r7, lr}
 1716              		.cfi_def_cfa_offset 8
 1717              		.cfi_offset 7, -8
 1718              		.cfi_offset 14, -4
 1719 0002 84B0     		sub	sp, sp, #16
 1720              		.cfi_def_cfa_offset 24
 1721 0004 00AF     		add	r7, sp, #0
 1722              		.cfi_def_cfa_register 7
 1723 0006 7860     		str	r0, [r7, #4]
 1724 0008 0B46     		mov	r3, r1
 1725 000a FB70     		strb	r3, [r7, #3]
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1726              		.loc 1 927 32
 1727 000c 4FF47020 		mov	r0, #983040
 1728 0010 FFF7FEFF 		bl	hal_fmc_ready_wait
 1729 0014 0346     		mov	r3, r0
 1730 0016 FB73     		strb	r3, [r7, #15]
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_parm_struct ob_parm;
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_parm_get(&ob_parm);
 1731              		.loc 1 929 5
 1732 0018 07F10803 		add	r3, r7, #8
 1733 001c 1846     		mov	r0, r3
 1734 001e FFF7FEFF 		bl	hal_ob_parm_get
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0xFFFFU == REG16(address)) {
 1735              		.loc 1 930 19
 1736 0022 7B68     		ldr	r3, [r7, #4]
 1737 0024 1B88     		ldrh	r3, [r3]	@ movhi
 1738 0026 9BB2     		uxth	r3, r3
 1739              		.loc 1 930 7
 1740 0028 4FF6FF72 		movw	r2, #65535
 1741 002c 9342     		cmp	r3, r2
 1742 002e 1CD1     		bne	.L108
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 1743              		.loc 1 931 11
 1744 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1745 0032 002B     		cmp	r3, #0
 1746 0034 5ED1     		bne	.L109
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* set the OBPG bit */
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBPG;
 1747              		.loc 1 933 21
 1748 0036 324B     		ldr	r3, .L112
 1749 0038 1B68     		ldr	r3, [r3]
 1750 003a 314A     		ldr	r2, .L112
 1751 003c 43F01003 		orr	r3, r3, #16
 1752 0040 1360     		str	r3, [r2]
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             REG16(address) = ob_data ;
 1753              		.loc 1 935 13
 1754 0042 7B68     		ldr	r3, [r7, #4]
 1755              		.loc 1 935 28
 1756 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1757 0046 92B2     		uxth	r2, r2
 1758 0048 1A80     		strh	r2, [r3]	@ movhi
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1759              		.loc 1 938 25
 1760 004a 4FF47020 		mov	r0, #983040
 1761 004e FFF7FEFF 		bl	hal_fmc_ready_wait
 1762 0052 0346     		mov	r3, r0
 1763 0054 FB73     		strb	r3, [r7, #15]
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 1764              		.loc 1 940 15
 1765 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1766 0058 042B     		cmp	r3, #4
 1767 005a 4BD0     		beq	.L109
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 1768              		.loc 1 942 25
 1769 005c 284B     		ldr	r3, .L112
 1770 005e 1B68     		ldr	r3, [r3]
 1771 0060 274A     		ldr	r2, .L112
 1772 0062 23F01003 		bic	r3, r3, #16
 1773 0066 1360     		str	r3, [r2]
 1774 0068 44E0     		b	.L109
 1775              	.L108:
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 1776              		.loc 1 946 11
 1777 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1778 006c 002B     		cmp	r3, #0
 1779 006e 41D1     		bne	.L109
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* start erase the option byte */
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBER;
 1780              		.loc 1 948 21
 1781 0070 234B     		ldr	r3, .L112
 1782 0072 1B68     		ldr	r3, [r3]
 1783 0074 224A     		ldr	r2, .L112
 1784 0076 43F02003 		orr	r3, r3, #32
 1785 007a 1360     		str	r3, [r2]
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_START;
 1786              		.loc 1 949 21
 1787 007c 204B     		ldr	r3, .L112
 1788 007e 1B68     		ldr	r3, [r3]
 1789 0080 1F4A     		ldr	r2, .L112
 1790 0082 43F04003 		orr	r3, r3, #64
 1791 0086 1360     		str	r3, [r2]
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1792              		.loc 1 952 25
 1793 0088 4FF47020 		mov	r0, #983040
 1794 008c FFF7FEFF 		bl	hal_fmc_ready_wait
 1795 0090 0346     		mov	r3, r0
 1796 0092 FB73     		strb	r3, [r7, #15]
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_READY == fmc_state) {
 1797              		.loc 1 954 15
 1798 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1799 0096 002B     		cmp	r3, #0
 1800 0098 23D1     		bne	.L110
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBER bit */
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBER;
 1801              		.loc 1 957 25
 1802 009a 194B     		ldr	r3, .L112
 1803 009c 1B68     		ldr	r3, [r3]
 1804 009e 184A     		ldr	r2, .L112
 1805 00a0 23F02003 		bic	r3, r3, #32
 1806 00a4 1360     		str	r3, [r2]
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* enable the option bytes programming */
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL |= FMC_CTL_OBPG;
 1807              		.loc 1 960 25
 1808 00a6 164B     		ldr	r3, .L112
 1809 00a8 1B68     		ldr	r3, [r3]
 1810 00aa 154A     		ldr	r2, .L112
 1811 00ac 43F01003 		orr	r3, r3, #16
 1812 00b0 1360     		str	r3, [r2]
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 _ob_value_modify(address, (uint16_t)ob_data, &ob_parm);
 1813              		.loc 1 962 17
 1814 00b2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1815 00b4 9BB2     		uxth	r3, r3
 1816 00b6 07F10802 		add	r2, r7, #8
 1817 00ba 1946     		mov	r1, r3
 1818 00bc 7868     		ldr	r0, [r7, #4]
 1819 00be FFF7FEFF 		bl	_ob_value_modify
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* wait for the FMC ready */
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 1820              		.loc 1 964 29
 1821 00c2 4FF47020 		mov	r0, #983040
 1822 00c6 FFF7FEFF 		bl	hal_fmc_ready_wait
 1823 00ca 0346     		mov	r3, r0
 1824 00cc FB73     		strb	r3, [r7, #15]
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(FMC_TOERR != fmc_state) {
 1825              		.loc 1 966 19
 1826 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1827 00d0 042B     		cmp	r3, #4
 1828 00d2 0FD0     		beq	.L109
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* reset the OBPG bit */
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     FMC_CTL &= ~FMC_CTL_OBPG;
 1829              		.loc 1 968 29
 1830 00d4 0A4B     		ldr	r3, .L112
 1831 00d6 1B68     		ldr	r3, [r3]
 1832 00d8 094A     		ldr	r2, .L112
 1833 00da 23F01003 		bic	r3, r3, #16
 1834 00de 1360     		str	r3, [r2]
 1835 00e0 08E0     		b	.L109
 1836              	.L110:
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             } else {
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(FMC_TOERR != fmc_state) {
 1837              		.loc 1 971 19
 1838 00e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1839 00e4 042B     		cmp	r3, #4
 1840 00e6 05D0     		beq	.L109
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* reset the OBER bit */
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     FMC_CTL &= ~FMC_CTL_OBER;
 1841              		.loc 1 973 29
 1842 00e8 054B     		ldr	r3, .L112
 1843 00ea 1B68     		ldr	r3, [r3]
 1844 00ec 044A     		ldr	r2, .L112
 1845 00ee 23F02003 		bic	r3, r3, #32
 1846 00f2 1360     		str	r3, [r2]
 1847              	.L109:
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 1848              		.loc 1 980 12
 1849 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 1850              		.loc 1 981 1
 1851 00f6 1846     		mov	r0, r3
 1852 00f8 1037     		adds	r7, r7, #16
 1853              		.cfi_def_cfa_offset 8
 1854 00fa BD46     		mov	sp, r7
 1855              		.cfi_def_cfa_register 13
 1856              		@ sp needed
 1857 00fc 80BD     		pop	{r7, pc}
 1858              	.L113:
 1859 00fe 00BF     		.align	2
 1860              	.L112:
 1861 0100 10200240 		.word	1073881104
 1862              		.cfi_endproc
 1863              	.LFE141:
 1865              		.section	.text.hal_ob_wp_enable,"ax",%progbits
 1866              		.align	1
 1867              		.global	hal_ob_wp_enable
 1868              		.syntax unified
 1869              		.thumb
 1870              		.thumb_func
 1871              		.fpu softvfp
 1873              	hal_ob_wp_enable:
 1874              	.LFB142:
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      enable the targeted address region written protection
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data_size: target region size
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     sector_addr_range_struct: actual start and end address
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** hal_sector_addr_range_struct hal_ob_wp_enable(uint32_t start_addr, uint32_t data_size)
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 1875              		.loc 1 991 1
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 40
 1878              		@ frame_needed = 1, uses_anonymous_args = 0
 1879 0000 80B5     		push	{r7, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 8AB0     		sub	sp, sp, #40
 1884              		.cfi_def_cfa_offset 48
 1885 0004 00AF     		add	r7, sp, #0
 1886              		.cfi_def_cfa_register 7
 1887 0006 F860     		str	r0, [r7, #12]
 1888 0008 B960     		str	r1, [r7, #8]
 1889 000a 7A60     		str	r2, [r7, #4]
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t index, counter, sub_counter;
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_sector_addr_range_struct sector;
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_temp0 = (uint16_t)REG8(OB + 8U);
 1890              		.loc 1 994 35
 1891 000c 454B     		ldr	r3, .L125
 1892 000e 1B78     		ldrb	r3, [r3]
 1893 0010 DBB2     		uxtb	r3, r3
 1894              		.loc 1 994 14
 1895 0012 FB83     		strh	r3, [r7, #30]	@ movhi
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_temp1 = (uint16_t)(REG8(OB + 0xaU) << 8U);
 1896              		.loc 1 995 36
 1897 0014 444B     		ldr	r3, .L125+4
 1898 0016 1B78     		ldrb	r3, [r3]
 1899 0018 DBB2     		uxtb	r3, r3
 1900 001a 9BB2     		uxth	r3, r3
 1901              		.loc 1 995 14
 1902 001c 1B02     		lsls	r3, r3, #8
 1903 001e BB83     		strh	r3, [r7, #28]	@ movhi
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_prev = wp_temp0 | wp_temp1;
 1904              		.loc 1 996 14
 1905 0020 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 1906 0022 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 1907 0024 1343     		orrs	r3, r3, r2
 1908 0026 7B83     		strh	r3, [r7, #26]	@ movhi
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp = 0U;
 1909              		.loc 1 997 14
 1910 0028 0023     		movs	r3, #0
 1911 002a BB84     		strh	r3, [r7, #36]	@ movhi
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_sector = 1U ;
 1912              		.loc 1 998 14
 1913 002c 0123     		movs	r3, #1
 1914 002e 7B84     		strh	r3, [r7, #34]	@ movhi
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t sector_number;
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameters */
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((start_addr < FMC_BASE_ADDRESS) || (start_addr > FMC_END_ADDRESS)) {
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [start_addr] is a invalid address.");
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(data_size > (FMC_END_ADDRESS - start_addr)) {
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("target data size exceed flash atual address scope.");
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     index = (start_addr & 0x000f000U) >> 12U;
 1915              		.loc 1 1011 39
 1916 0030 BB68     		ldr	r3, [r7, #8]
 1917 0032 1B0B     		lsrs	r3, r3, #12
 1918 0034 DBB2     		uxtb	r3, r3
 1919              		.loc 1 1011 11
 1920 0036 03F00F03 		and	r3, r3, #15
 1921 003a 7B76     		strb	r3, [r7, #25]
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(data_size % FMC_SECTOR_SIZE) {
 1922              		.loc 1 1012 18
 1923 003c 7B68     		ldr	r3, [r7, #4]
 1924 003e C3F30B03 		ubfx	r3, r3, #0, #12
 1925              		.loc 1 1012 7
 1926 0042 002B     		cmp	r3, #0
 1927 0044 06D0     		beq	.L115
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         sector_number = data_size / FMC_SECTOR_SIZE + 1U;
 1928              		.loc 1 1013 35
 1929 0046 7B68     		ldr	r3, [r7, #4]
 1930 0048 1B0B     		lsrs	r3, r3, #12
 1931              		.loc 1 1013 53
 1932 004a DBB2     		uxtb	r3, r3
 1933              		.loc 1 1013 23
 1934 004c 0133     		adds	r3, r3, #1
 1935 004e 87F82130 		strb	r3, [r7, #33]
 1936 0052 03E0     		b	.L116
 1937              	.L115:
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         sector_number = data_size / FMC_SECTOR_SIZE;
 1938              		.loc 1 1015 35
 1939 0054 7B68     		ldr	r3, [r7, #4]
 1940 0056 1B0B     		lsrs	r3, r3, #12
 1941              		.loc 1 1015 23
 1942 0058 87F82130 		strb	r3, [r7, #33]
 1943              	.L116:
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0U; counter < sector_number ; counter++) {
 1944              		.loc 1 1017 17
 1945 005c 0023     		movs	r3, #0
 1946 005e 87F82730 		strb	r3, [r7, #39]
 1947              		.loc 1 1017 5
 1948 0062 1EE0     		b	.L117
 1949              	.L120:
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1950              		.loc 1 1018 25
 1951 0064 0023     		movs	r3, #0
 1952 0066 87F82630 		strb	r3, [r7, #38]
 1953              		.loc 1 1018 9
 1954 006a 07E0     		b	.L118
 1955              	.L119:
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_sector = 2U * wp_sector;
 1956              		.loc 1 1019 23 discriminator 3
 1957 006c 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 1958 006e 5B00     		lsls	r3, r3, #1
 1959 0070 7B84     		strh	r3, [r7, #34]	@ movhi
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1960              		.loc 1 1018 75 discriminator 3
 1961 0072 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1962 0076 0133     		adds	r3, r3, #1
 1963 0078 87F82630 		strb	r3, [r7, #38]
 1964              	.L118:
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1965              		.loc 1 1018 43 discriminator 1
 1966 007c 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1967              		.loc 1 1018 52 discriminator 1
 1968 0080 797E     		ldrb	r1, [r7, #25]	@ zero_extendqisi2
 1969 0082 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1970 0086 0B44     		add	r3, r3, r1
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1971              		.loc 1 1018 9 discriminator 1
 1972 0088 9A42     		cmp	r2, r3
 1973 008a EFDB     		blt	.L119
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp = wp + wp_sector;
 1974              		.loc 1 1021 12 discriminator 2
 1975 008c BA8C     		ldrh	r2, [r7, #36]	@ movhi
 1976 008e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 1977 0090 1344     		add	r3, r3, r2
 1978 0092 BB84     		strh	r3, [r7, #36]	@ movhi
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp_sector = 1U;
 1979              		.loc 1 1022 19 discriminator 2
 1980 0094 0123     		movs	r3, #1
 1981 0096 7B84     		strh	r3, [r7, #34]	@ movhi
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1982              		.loc 1 1017 56 discriminator 2
 1983 0098 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1984 009c 0133     		adds	r3, r3, #1
 1985 009e 87F82730 		strb	r3, [r7, #39]
 1986              	.L117:
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 1987              		.loc 1 1017 5 discriminator 1
 1988 00a2 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1989 00a6 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 1990 00aa 9A42     		cmp	r2, r3
 1991 00ac DAD3     		bcc	.L120
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check current write protection sector, if there is confict, erase option byte */
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(((0xFFU != (uint8_t)wp_prev) && (0U != (uint8_t)wp)) || ((0xFFU != (uint8_t)(wp_prev >> 8U))
 1992              		.loc 1 1025 19
 1993 00ae 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1994 00b0 DBB2     		uxtb	r3, r3
 1995              		.loc 1 1025 7
 1996 00b2 FF2B     		cmp	r3, #255
 1997 00b4 03D0     		beq	.L121
 1998              		.loc 1 1025 47 discriminator 1
 1999 00b6 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 2000 00b8 DBB2     		uxtb	r3, r3
 2001              		.loc 1 1025 37 discriminator 1
 2002 00ba 002B     		cmp	r3, #0
 2003 00bc 0BD1     		bne	.L122
 2004              	.L121:
 2005              		.loc 1 1025 75 discriminator 3
 2006 00be 7B8B     		ldrh	r3, [r7, #26]
 2007 00c0 1B0A     		lsrs	r3, r3, #8
 2008 00c2 9BB2     		uxth	r3, r3
 2009 00c4 DBB2     		uxtb	r3, r3
 2010              		.loc 1 1025 61 discriminator 3
 2011 00c6 FF2B     		cmp	r3, #255
 2012 00c8 10D0     		beq	.L123
 2013              		.loc 1 1025 110 discriminator 4
 2014 00ca BB8C     		ldrh	r3, [r7, #36]
 2015 00cc 1B0A     		lsrs	r3, r3, #8
 2016 00ce 9BB2     		uxth	r3, r3
 2017 00d0 DBB2     		uxtb	r3, r3
 2018              		.loc 1 1025 101 discriminator 4
 2019 00d2 002B     		cmp	r3, #0
 2020 00d4 0AD0     		beq	.L123
 2021              	.L122:
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp = wp | (~wp_prev);
 2022              		.loc 1 1026 17
 2023 00d6 B7F91A30 		ldrsh	r3, [r7, #26]
 2024 00da DB43     		mvns	r3, r3
 2025 00dc 1AB2     		sxth	r2, r3
 2026 00de B7F92430 		ldrsh	r3, [r7, #36]
 2027 00e2 1343     		orrs	r3, r3, r2
 2028 00e4 1BB2     		sxth	r3, r3
 2029              		.loc 1 1026 12
 2030 00e6 BB84     		strh	r3, [r7, #36]	@ movhi
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         hal_ob_erase();
 2031              		.loc 1 1027 9
 2032 00e8 FFF7FEFF 		bl	hal_ob_erase
 2033              	.L123:
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* enable the target sector write protected */
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_write_protection_enable(wp);
 2034              		.loc 1 1030 5
 2035 00ec BB8C     		ldrh	r3, [r7, #36]
 2036 00ee 1846     		mov	r0, r3
 2037 00f0 FFF7FEFF 		bl	hal_ob_write_protection_enable
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* define actual address range which is writen protected */
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     sector.sector_start_addr = FMC_BASE_ADDRESS + index * FMC_SECTOR_SIZE;
 2038              		.loc 1 1033 49
 2039 00f4 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2040 00f6 03F50043 		add	r3, r3, #32768
 2041 00fa 1B03     		lsls	r3, r3, #12
 2042              		.loc 1 1033 30
 2043 00fc 3B61     		str	r3, [r7, #16]
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     sector.sector_end_addr = sector.sector_start_addr + sector_number * FMC_SECTOR_SIZE;
 2044              		.loc 1 1034 36
 2045 00fe 3A69     		ldr	r2, [r7, #16]
 2046              		.loc 1 1034 71
 2047 0100 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 2048 0104 1B03     		lsls	r3, r3, #12
 2049              		.loc 1 1034 55
 2050 0106 1344     		add	r3, r3, r2
 2051              		.loc 1 1034 28
 2052 0108 7B61     		str	r3, [r7, #20]
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return(sector);
 2053              		.loc 1 1036 11
 2054 010a FB68     		ldr	r3, [r7, #12]
 2055 010c 1A46     		mov	r2, r3
 2056 010e 07F11003 		add	r3, r7, #16
 2057 0112 93E80300 		ldm	r3, {r0, r1}
 2058 0116 82E80300 		stm	r2, {r0, r1}
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 2059              		.loc 1 1037 1
 2060 011a F868     		ldr	r0, [r7, #12]
 2061 011c 2837     		adds	r7, r7, #40
 2062              		.cfi_def_cfa_offset 8
 2063 011e BD46     		mov	sp, r7
 2064              		.cfi_def_cfa_register 13
 2065              		@ sp needed
 2066 0120 80BD     		pop	{r7, pc}
 2067              	.L126:
 2068 0122 00BF     		.align	2
 2069              	.L125:
 2070 0124 08F8FF1F 		.word	536868872
 2071 0128 0AF8FF1F 		.word	536868874
 2072              		.cfi_endproc
 2073              	.LFE142:
 2075              		.section	.text.hal_ob_wp_disable,"ax",%progbits
 2076              		.align	1
 2077              		.global	hal_ob_wp_disable
 2078              		.syntax unified
 2079              		.thumb
 2080              		.thumb_func
 2081              		.fpu softvfp
 2083              	hal_ob_wp_disable:
 2084              	.LFB143:
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      disable the targeted address region written protection
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data_size: target region size
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     sector_addr_range_struct: actual start and end address
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** hal_sector_addr_range_struct hal_ob_wp_disable(uint32_t start_addr, uint32_t data_size)
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 2085              		.loc 1 1047 1
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 40
 2088              		@ frame_needed = 1, uses_anonymous_args = 0
 2089 0000 80B5     		push	{r7, lr}
 2090              		.cfi_def_cfa_offset 8
 2091              		.cfi_offset 7, -8
 2092              		.cfi_offset 14, -4
 2093 0002 8AB0     		sub	sp, sp, #40
 2094              		.cfi_def_cfa_offset 48
 2095 0004 00AF     		add	r7, sp, #0
 2096              		.cfi_def_cfa_register 7
 2097 0006 F860     		str	r0, [r7, #12]
 2098 0008 B960     		str	r1, [r7, #8]
 2099 000a 7A60     		str	r2, [r7, #4]
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t index, counter, sub_counter;
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_sector_addr_range_struct sector;
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_temp0 = (uint16_t)REG8(OB + 8U);
 2100              		.loc 1 1050 35
 2101 000c 394B     		ldr	r3, .L135
 2102 000e 1B78     		ldrb	r3, [r3]
 2103 0010 DBB2     		uxtb	r3, r3
 2104              		.loc 1 1050 14
 2105 0012 FB83     		strh	r3, [r7, #30]	@ movhi
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_temp1 = (uint16_t)(REG8(OB + 0xaU) << 8U);
 2106              		.loc 1 1051 36
 2107 0014 384B     		ldr	r3, .L135+4
 2108 0016 1B78     		ldrb	r3, [r3]
 2109 0018 DBB2     		uxtb	r3, r3
 2110 001a 9BB2     		uxth	r3, r3
 2111              		.loc 1 1051 14
 2112 001c 1B02     		lsls	r3, r3, #8
 2113 001e BB83     		strh	r3, [r7, #28]	@ movhi
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_prev = wp_temp0 | wp_temp1;
 2114              		.loc 1 1052 14
 2115 0020 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 2116 0022 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 2117 0024 1343     		orrs	r3, r3, r2
 2118 0026 7B83     		strh	r3, [r7, #26]	@ movhi
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp = 0U;
 2119              		.loc 1 1054 14
 2120 0028 0023     		movs	r3, #0
 2121 002a BB84     		strh	r3, [r7, #36]	@ movhi
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp_sector = 1U ;
 2122              		.loc 1 1055 14
 2123 002c 0123     		movs	r3, #1
 2124 002e 7B84     		strh	r3, [r7, #34]	@ movhi
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t page_number;
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameters */
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((start_addr < FMC_BASE_ADDRESS) || (start_addr > FMC_END_ADDRESS)) {
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [start_addr] is a invalid address.");
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(data_size > (FMC_END_ADDRESS - start_addr)) {
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("target data size exceed flash atual address scope.");
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     index = (start_addr & 0x000f000U) >> 12U;
 2125              		.loc 1 1068 39
 2126 0030 BB68     		ldr	r3, [r7, #8]
 2127 0032 1B0B     		lsrs	r3, r3, #12
 2128 0034 DBB2     		uxtb	r3, r3
 2129              		.loc 1 1068 11
 2130 0036 03F00F03 		and	r3, r3, #15
 2131 003a 7B76     		strb	r3, [r7, #25]
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(data_size % FMC_SECTOR_SIZE) {
 2132              		.loc 1 1069 18
 2133 003c 7B68     		ldr	r3, [r7, #4]
 2134 003e C3F30B03 		ubfx	r3, r3, #0, #12
 2135              		.loc 1 1069 7
 2136 0042 002B     		cmp	r3, #0
 2137 0044 06D0     		beq	.L128
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         page_number = data_size / FMC_SECTOR_SIZE + 1U;
 2138              		.loc 1 1070 33
 2139 0046 7B68     		ldr	r3, [r7, #4]
 2140 0048 1B0B     		lsrs	r3, r3, #12
 2141              		.loc 1 1070 51
 2142 004a DBB2     		uxtb	r3, r3
 2143              		.loc 1 1070 21
 2144 004c 0133     		adds	r3, r3, #1
 2145 004e 87F82130 		strb	r3, [r7, #33]
 2146 0052 03E0     		b	.L129
 2147              	.L128:
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         page_number = data_size / FMC_SECTOR_SIZE;
 2148              		.loc 1 1072 33
 2149 0054 7B68     		ldr	r3, [r7, #4]
 2150 0056 1B0B     		lsrs	r3, r3, #12
 2151              		.loc 1 1072 21
 2152 0058 87F82130 		strb	r3, [r7, #33]
 2153              	.L129:
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0U; counter < page_number ; counter++) {
 2154              		.loc 1 1075 17
 2155 005c 0023     		movs	r3, #0
 2156 005e 87F82730 		strb	r3, [r7, #39]
 2157              		.loc 1 1075 5
 2158 0062 1EE0     		b	.L130
 2159              	.L133:
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2160              		.loc 1 1076 25
 2161 0064 0023     		movs	r3, #0
 2162 0066 87F82630 		strb	r3, [r7, #38]
 2163              		.loc 1 1076 9
 2164 006a 07E0     		b	.L131
 2165              	.L132:
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_sector = 2U * wp_sector;
 2166              		.loc 1 1077 23 discriminator 3
 2167 006c 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 2168 006e 5B00     		lsls	r3, r3, #1
 2169 0070 7B84     		strh	r3, [r7, #34]	@ movhi
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2170              		.loc 1 1076 75 discriminator 3
 2171 0072 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 2172 0076 0133     		adds	r3, r3, #1
 2173 0078 87F82630 		strb	r3, [r7, #38]
 2174              	.L131:
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2175              		.loc 1 1076 43 discriminator 1
 2176 007c 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2177              		.loc 1 1076 52 discriminator 1
 2178 0080 797E     		ldrb	r1, [r7, #25]	@ zero_extendqisi2
 2179 0082 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 2180 0086 0B44     		add	r3, r3, r1
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2181              		.loc 1 1076 9 discriminator 1
 2182 0088 9A42     		cmp	r2, r3
 2183 008a EFDB     		blt	.L132
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp = wp + wp_sector;
 2184              		.loc 1 1079 12 discriminator 2
 2185 008c BA8C     		ldrh	r2, [r7, #36]	@ movhi
 2186 008e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 2187 0090 1344     		add	r3, r3, r2
 2188 0092 BB84     		strh	r3, [r7, #36]	@ movhi
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp_sector = 1U;
 2189              		.loc 1 1080 19 discriminator 2
 2190 0094 0123     		movs	r3, #1
 2191 0096 7B84     		strh	r3, [r7, #34]	@ movhi
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2192              		.loc 1 1075 54 discriminator 2
 2193 0098 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 2194 009c 0133     		adds	r3, r3, #1
 2195 009e 87F82730 		strb	r3, [r7, #39]
 2196              	.L130:
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(sub_counter = 0U; sub_counter < (index + counter); sub_counter++) {
 2197              		.loc 1 1075 5 discriminator 1
 2198 00a2 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 2199 00a6 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 2200 00aa 9A42     		cmp	r2, r3
 2201 00ac DAD3     		bcc	.L133
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* disable the target sector write protected */
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     wp = (~wp) & (~wp_prev);
 2202              		.loc 1 1083 16
 2203 00ae BA8C     		ldrh	r2, [r7, #36]	@ movhi
 2204 00b0 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 2205 00b2 1343     		orrs	r3, r3, r2
 2206 00b4 9BB2     		uxth	r3, r3
 2207              		.loc 1 1083 8
 2208 00b6 DB43     		mvns	r3, r3
 2209 00b8 BB84     		strh	r3, [r7, #36]	@ movhi
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_erase();
 2210              		.loc 1 1085 5
 2211 00ba FFF7FEFF 		bl	hal_ob_erase
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_write_protection_enable(wp);
 2212              		.loc 1 1087 5
 2213 00be BB8C     		ldrh	r3, [r7, #36]
 2214 00c0 1846     		mov	r0, r3
 2215 00c2 FFF7FEFF 		bl	hal_ob_write_protection_enable
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* define actual address range which is writen protected */
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     sector.sector_start_addr = FMC_BASE_ADDRESS + index * FMC_SECTOR_SIZE;
 2216              		.loc 1 1090 49
 2217 00c6 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 2218 00c8 03F50043 		add	r3, r3, #32768
 2219 00cc 1B03     		lsls	r3, r3, #12
 2220              		.loc 1 1090 30
 2221 00ce 3B61     		str	r3, [r7, #16]
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     sector.sector_end_addr = sector.sector_start_addr + page_number * FMC_SECTOR_SIZE;
 2222              		.loc 1 1091 36
 2223 00d0 3A69     		ldr	r2, [r7, #16]
 2224              		.loc 1 1091 69
 2225 00d2 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 2226 00d6 1B03     		lsls	r3, r3, #12
 2227              		.loc 1 1091 55
 2228 00d8 1344     		add	r3, r3, r2
 2229              		.loc 1 1091 28
 2230 00da 7B61     		str	r3, [r7, #20]
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return(sector);
 2231              		.loc 1 1093 11
 2232 00dc FB68     		ldr	r3, [r7, #12]
 2233 00de 1A46     		mov	r2, r3
 2234 00e0 07F11003 		add	r3, r7, #16
 2235 00e4 93E80300 		ldm	r3, {r0, r1}
 2236 00e8 82E80300 		stm	r2, {r0, r1}
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 2237              		.loc 1 1094 1
 2238 00ec F868     		ldr	r0, [r7, #12]
 2239 00ee 2837     		adds	r7, r7, #40
 2240              		.cfi_def_cfa_offset 8
 2241 00f0 BD46     		mov	sp, r7
 2242              		.cfi_def_cfa_register 13
 2243              		@ sp needed
 2244 00f2 80BD     		pop	{r7, pc}
 2245              	.L136:
 2246              		.align	2
 2247              	.L135:
 2248 00f4 08F8FF1F 		.word	536868872
 2249 00f8 0AF8FF1F 		.word	536868874
 2250              		.cfi_endproc
 2251              	.LFE143:
 2253              		.section	.text.hal_ob_parm_get,"ax",%progbits
 2254              		.align	1
 2255              		.global	hal_ob_parm_get
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2259              		.fpu softvfp
 2261              	hal_ob_parm_get:
 2262              	.LFB144:
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      get option byte parameters, which are stored in register FMC_OBSTAT and FMC_WP
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  p_parm: pointer to currently valid option byte parameters
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** int32_t hal_ob_parm_get(ob_parm_struct *p_parm)
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 2263              		.loc 1 1103 1
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 8
 2266              		@ frame_needed = 1, uses_anonymous_args = 0
 2267              		@ link register save eliminated.
 2268 0000 80B4     		push	{r7}
 2269              		.cfi_def_cfa_offset 4
 2270              		.cfi_offset 7, -4
 2271 0002 83B0     		sub	sp, sp, #12
 2272              		.cfi_def_cfa_offset 16
 2273 0004 00AF     		add	r7, sp, #0
 2274              		.cfi_def_cfa_register 7
 2275 0006 7860     		str	r0, [r7, #4]
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameter */
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(NULL == p_parm) {
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [p_parm] is a NULL pointer.");
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* get the information of option byte */
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_parm->data0 = (uint8_t)(FMC_OBSTAT >> 16U);
 2276              		.loc 1 1113 31
 2277 0008 154B     		ldr	r3, .L139
 2278 000a 1B68     		ldr	r3, [r3]
 2279              		.loc 1 1113 42
 2280 000c 1B0C     		lsrs	r3, r3, #16
 2281              		.loc 1 1113 21
 2282 000e DAB2     		uxtb	r2, r3
 2283              		.loc 1 1113 19
 2284 0010 7B68     		ldr	r3, [r7, #4]
 2285 0012 9A70     		strb	r2, [r3, #2]
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_parm->data1 = (uint8_t)(FMC_OBSTAT >> 24U);
 2286              		.loc 1 1114 31
 2287 0014 124B     		ldr	r3, .L139
 2288 0016 1B68     		ldr	r3, [r3]
 2289              		.loc 1 1114 42
 2290 0018 1B0E     		lsrs	r3, r3, #24
 2291              		.loc 1 1114 21
 2292 001a DAB2     		uxtb	r2, r3
 2293              		.loc 1 1114 19
 2294 001c 7B68     		ldr	r3, [r7, #4]
 2295 001e DA70     		strb	r2, [r3, #3]
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_parm->user = (uint8_t)(FMC_OBSTAT >> 8U);
 2296              		.loc 1 1115 30
 2297 0020 0F4B     		ldr	r3, .L139
 2298 0022 1B68     		ldr	r3, [r3]
 2299              		.loc 1 1115 41
 2300 0024 1B0A     		lsrs	r3, r3, #8
 2301              		.loc 1 1115 20
 2302 0026 DAB2     		uxtb	r2, r3
 2303              		.loc 1 1115 18
 2304 0028 7B68     		ldr	r3, [r7, #4]
 2305 002a 5A70     		strb	r2, [r3, #1]
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_parm->spc = (FMC_OBSTAT & (FMC_OBSTAT_PLEVEL_BIT0 | FMC_OBSTAT_PLEVEL_BIT1));
 2306              		.loc 1 1116 20
 2307 002c 0C4B     		ldr	r3, .L139
 2308 002e 1B68     		ldr	r3, [r3]
 2309              		.loc 1 1116 31
 2310 0030 DBB2     		uxtb	r3, r3
 2311 0032 03F00603 		and	r3, r3, #6
 2312 0036 DAB2     		uxtb	r2, r3
 2313              		.loc 1 1116 17
 2314 0038 7B68     		ldr	r3, [r7, #4]
 2315 003a 1A70     		strb	r2, [r3]
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_parm->wp0 = (uint8_t)(FMC_WP);
 2316              		.loc 1 1117 29
 2317 003c 094B     		ldr	r3, .L139+4
 2318 003e 1B68     		ldr	r3, [r3]
 2319              		.loc 1 1117 19
 2320 0040 DAB2     		uxtb	r2, r3
 2321              		.loc 1 1117 17
 2322 0042 7B68     		ldr	r3, [r7, #4]
 2323 0044 1A71     		strb	r2, [r3, #4]
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     p_parm->wp1 = (uint8_t)(FMC_WP >> 8);
 2324              		.loc 1 1118 29
 2325 0046 074B     		ldr	r3, .L139+4
 2326 0048 1B68     		ldr	r3, [r3]
 2327              		.loc 1 1118 36
 2328 004a 1B0A     		lsrs	r3, r3, #8
 2329              		.loc 1 1118 19
 2330 004c DAB2     		uxtb	r2, r3
 2331              		.loc 1 1118 17
 2332 004e 7B68     		ldr	r3, [r7, #4]
 2333 0050 5A71     		strb	r2, [r3, #5]
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return HAL_ERR_NONE;
 2334              		.loc 1 1120 12
 2335 0052 0023     		movs	r3, #0
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 2336              		.loc 1 1121 1
 2337 0054 1846     		mov	r0, r3
 2338 0056 0C37     		adds	r7, r7, #12
 2339              		.cfi_def_cfa_offset 4
 2340 0058 BD46     		mov	sp, r7
 2341              		.cfi_def_cfa_register 13
 2342              		@ sp needed
 2343 005a 80BC     		pop	{r7}
 2344              		.cfi_restore 7
 2345              		.cfi_def_cfa_offset 0
 2346 005c 7047     		bx	lr
 2347              	.L140:
 2348 005e 00BF     		.align	2
 2349              	.L139:
 2350 0060 1C200240 		.word	1073881116
 2351 0064 20200240 		.word	1073881120
 2352              		.cfi_endproc
 2353              	.LFE144:
 2355              		.section	.text.hal_ob_write_protection_enable,"ax",%progbits
 2356              		.align	1
 2357              		.global	hal_ob_write_protection_enable
 2358              		.syntax unified
 2359              		.thumb
 2360              		.thumb_func
 2361              		.fpu softvfp
 2363              	hal_ob_write_protection_enable:
 2364              	.LFB145:
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      enable option byte write protection(OB_WP) depending on current option byte
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  ob_wp: write protection configuration data
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                        setting the bit of ob_wp means enabling the corresponding sector write prote
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum hal_ob_write_protection_enable(uint16_t ob_wp)
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 2365              		.loc 1 1130 1
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 24
 2368              		@ frame_needed = 1, uses_anonymous_args = 0
 2369 0000 80B5     		push	{r7, lr}
 2370              		.cfi_def_cfa_offset 8
 2371              		.cfi_offset 7, -8
 2372              		.cfi_offset 14, -4
 2373 0002 86B0     		sub	sp, sp, #24
 2374              		.cfi_def_cfa_offset 32
 2375 0004 00AF     		add	r7, sp, #0
 2376              		.cfi_def_cfa_register 7
 2377 0006 0346     		mov	r3, r0
 2378 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t ob_wrp0, ob_wrp1;
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_parm_struct ob_parm;
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 2379              		.loc 1 1133 32
 2380 000a 4FF47020 		mov	r0, #983040
 2381 000e FFF7FEFF 		bl	hal_fmc_ready_wait
 2382 0012 0346     		mov	r3, r0
 2383 0014 FB75     		strb	r3, [r7, #23]
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_parm_get(&ob_parm);
 2384              		.loc 1 1134 5
 2385 0016 07F10C03 		add	r3, r7, #12
 2386 001a 1846     		mov	r0, r3
 2387 001c FFF7FEFF 		bl	hal_ob_parm_get
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_wp   = (uint16_t)(~ob_wp);
 2388              		.loc 1 1135 13
 2389 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2390 0022 DB43     		mvns	r3, r3
 2391 0024 FB80     		strh	r3, [r7, #6]	@ movhi
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_wrp0 = (uint8_t)(ob_wp & OB_LWP);
 2392              		.loc 1 1136 13
 2393 0026 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2394 0028 BB75     		strb	r3, [r7, #22]
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     ob_wrp1 = (uint8_t)((ob_wp & OB_HWP) >> 8U);
 2395              		.loc 1 1137 42
 2396 002a FB88     		ldrh	r3, [r7, #6]
 2397 002c 1B0A     		lsrs	r3, r3, #8
 2398 002e 9BB2     		uxth	r3, r3
 2399              		.loc 1 1137 13
 2400 0030 7B75     		strb	r3, [r7, #21]
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0xFFFFU == OB_WP0) {
 2401              		.loc 1 1139 19
 2402 0032 434B     		ldr	r3, .L148
 2403 0034 1B88     		ldrh	r3, [r3]	@ movhi
 2404 0036 9BB2     		uxth	r3, r3
 2405              		.loc 1 1139 7
 2406 0038 4FF6FF72 		movw	r2, #65535
 2407 003c 9342     		cmp	r3, r2
 2408 003e 36D1     		bne	.L142
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(0xFFFFU == OB_WP1) {
 2409              		.loc 1 1140 23
 2410 0040 404B     		ldr	r3, .L148+4
 2411 0042 1B88     		ldrh	r3, [r3]	@ movhi
 2412 0044 9BB2     		uxth	r3, r3
 2413              		.loc 1 1140 11
 2414 0046 4FF6FF72 		movw	r2, #65535
 2415 004a 9342     		cmp	r3, r2
 2416 004c 73D1     		bne	.L143
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_READY == fmc_state) {
 2417              		.loc 1 1141 15
 2418 004e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2419 0050 002B     		cmp	r3, #0
 2420 0052 70D1     		bne	.L143
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* set the OBPG bit*/
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL |= FMC_CTL_OBPG;
 2421              		.loc 1 1143 25
 2422 0054 3C4B     		ldr	r3, .L148+8
 2423 0056 1B68     		ldr	r3, [r3]
 2424 0058 3B4A     		ldr	r2, .L148+8
 2425 005a 43F01003 		orr	r3, r3, #16
 2426 005e 1360     		str	r3, [r2]
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(0xFFU != ob_wrp0) {
 2427              		.loc 1 1145 19
 2428 0060 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2429 0062 FF2B     		cmp	r3, #255
 2430 0064 09D0     		beq	.L144
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     OB_WP0 = ob_wrp0 ;
 2431              		.loc 1 1146 21
 2432 0066 364B     		ldr	r3, .L148
 2433              		.loc 1 1146 28
 2434 0068 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 2435 006a 92B2     		uxth	r2, r2
 2436 006c 1A80     		strh	r2, [r3]	@ movhi
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* wait for the FMC ready */
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 2437              		.loc 1 1148 33
 2438 006e 4FF47020 		mov	r0, #983040
 2439 0072 FFF7FEFF 		bl	hal_fmc_ready_wait
 2440 0076 0346     		mov	r3, r0
 2441 0078 FB75     		strb	r3, [r7, #23]
 2442              	.L144:
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if((FMC_READY == fmc_state) && (0xFFU != ob_wrp1)) {
 2443              		.loc 1 1151 19
 2444 007a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2445 007c 002B     		cmp	r3, #0
 2446 007e 0CD1     		bne	.L145
 2447              		.loc 1 1151 45 discriminator 1
 2448 0080 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 2449 0082 FF2B     		cmp	r3, #255
 2450 0084 09D0     		beq	.L145
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     OB_WP1 = ob_wrp1 ;
 2451              		.loc 1 1152 21
 2452 0086 2F4B     		ldr	r3, .L148+4
 2453              		.loc 1 1152 28
 2454 0088 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 2455 008a 92B2     		uxth	r2, r2
 2456 008c 1A80     		strh	r2, [r3]	@ movhi
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* wait for the FMC ready */
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 2457              		.loc 1 1154 33
 2458 008e 4FF47020 		mov	r0, #983040
 2459 0092 FFF7FEFF 		bl	hal_fmc_ready_wait
 2460 0096 0346     		mov	r3, r0
 2461 0098 FB75     		strb	r3, [r7, #23]
 2462              	.L145:
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(FMC_TOERR != fmc_state) {
 2463              		.loc 1 1157 19
 2464 009a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2465 009c 042B     		cmp	r3, #4
 2466 009e 4AD0     		beq	.L143
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* reset the OBPG bit */
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     FMC_CTL &= ~FMC_CTL_OBPG;
 2467              		.loc 1 1159 29
 2468 00a0 294B     		ldr	r3, .L148+8
 2469 00a2 1B68     		ldr	r3, [r3]
 2470 00a4 284A     		ldr	r2, .L148+8
 2471 00a6 23F01003 		bic	r3, r3, #16
 2472 00aa 1360     		str	r3, [r2]
 2473 00ac 43E0     		b	.L143
 2474              	.L142:
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 2475              		.loc 1 1164 11
 2476 00ae FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2477 00b0 002B     		cmp	r3, #0
 2478 00b2 40D1     		bne	.L143
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* start erase the option byte */
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBER;
 2479              		.loc 1 1166 21
 2480 00b4 244B     		ldr	r3, .L148+8
 2481 00b6 1B68     		ldr	r3, [r3]
 2482 00b8 234A     		ldr	r2, .L148+8
 2483 00ba 43F02003 		orr	r3, r3, #32
 2484 00be 1360     		str	r3, [r2]
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_START;
 2485              		.loc 1 1167 21
 2486 00c0 214B     		ldr	r3, .L148+8
 2487 00c2 1B68     		ldr	r3, [r3]
 2488 00c4 204A     		ldr	r2, .L148+8
 2489 00c6 43F04003 		orr	r3, r3, #64
 2490 00ca 1360     		str	r3, [r2]
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 2491              		.loc 1 1170 25
 2492 00cc 4FF47020 		mov	r0, #983040
 2493 00d0 FFF7FEFF 		bl	hal_fmc_ready_wait
 2494 00d4 0346     		mov	r3, r0
 2495 00d6 FB75     		strb	r3, [r7, #23]
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_READY == fmc_state) {
 2496              		.loc 1 1172 15
 2497 00d8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2498 00da 002B     		cmp	r3, #0
 2499 00dc 22D1     		bne	.L146
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBER bit */
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBER;
 2500              		.loc 1 1175 25
 2501 00de 1A4B     		ldr	r3, .L148+8
 2502 00e0 1B68     		ldr	r3, [r3]
 2503 00e2 194A     		ldr	r2, .L148+8
 2504 00e4 23F02003 		bic	r3, r3, #32
 2505 00e8 1360     		str	r3, [r2]
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* enable the option bytes programming */
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL |= FMC_CTL_OBPG;
 2506              		.loc 1 1178 25
 2507 00ea 174B     		ldr	r3, .L148+8
 2508 00ec 1B68     		ldr	r3, [r3]
 2509 00ee 164A     		ldr	r2, .L148+8
 2510 00f0 43F01003 		orr	r3, r3, #16
 2511 00f4 1360     		str	r3, [r2]
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 _ob_value_modify(OB_WP_ADDR0, ob_wp, &ob_parm);
 2512              		.loc 1 1180 17
 2513 00f6 07F10C02 		add	r2, r7, #12
 2514 00fa FB88     		ldrh	r3, [r7, #6]
 2515 00fc 1946     		mov	r1, r3
 2516 00fe 1048     		ldr	r0, .L148
 2517 0100 FFF7FEFF 		bl	_ob_value_modify
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* wait for the FMC ready */
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 2518              		.loc 1 1182 29
 2519 0104 4FF47020 		mov	r0, #983040
 2520 0108 FFF7FEFF 		bl	hal_fmc_ready_wait
 2521 010c 0346     		mov	r3, r0
 2522 010e FB75     		strb	r3, [r7, #23]
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(FMC_TOERR != fmc_state) {
 2523              		.loc 1 1184 19
 2524 0110 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2525 0112 042B     		cmp	r3, #4
 2526 0114 0FD0     		beq	.L143
1185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* reset the OBPG bit */
1186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     FMC_CTL &= ~FMC_CTL_OBPG;
 2527              		.loc 1 1186 29
 2528 0116 0C4B     		ldr	r3, .L148+8
 2529 0118 1B68     		ldr	r3, [r3]
 2530 011a 0B4A     		ldr	r2, .L148+8
 2531 011c 23F01003 		bic	r3, r3, #16
 2532 0120 1360     		str	r3, [r2]
 2533 0122 08E0     		b	.L143
 2534              	.L146:
1187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
1188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             } else {
1189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 if(FMC_TOERR != fmc_state) {
 2535              		.loc 1 1189 19
 2536 0124 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2537 0126 042B     		cmp	r3, #4
 2538 0128 05D0     		beq	.L143
1190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     /* reset the OBER bit */
1191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                     FMC_CTL &= ~FMC_CTL_OBER;
 2539              		.loc 1 1191 29
 2540 012a 074B     		ldr	r3, .L148+8
 2541 012c 1B68     		ldr	r3, [r3]
 2542 012e 064A     		ldr	r2, .L148+8
 2543 0130 23F02003 		bic	r3, r3, #32
 2544 0134 1360     		str	r3, [r2]
 2545              	.L143:
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 }
1193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
1194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
1197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 2546              		.loc 1 1197 12
 2547 0136 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 2548              		.loc 1 1198 1
 2549 0138 1846     		mov	r0, r3
 2550 013a 1837     		adds	r7, r7, #24
 2551              		.cfi_def_cfa_offset 8
 2552 013c BD46     		mov	sp, r7
 2553              		.cfi_def_cfa_register 13
 2554              		@ sp needed
 2555 013e 80BD     		pop	{r7, pc}
 2556              	.L149:
 2557              		.align	2
 2558              	.L148:
 2559 0140 08F8FF1F 		.word	536868872
 2560 0144 0AF8FF1F 		.word	536868874
 2561 0148 10200240 		.word	1073881104
 2562              		.cfi_endproc
 2563              	.LFE145:
 2565              		.section	.text.hal_ob_parm_config,"ax",%progbits
 2566              		.align	1
 2567              		.global	hal_ob_parm_config
 2568              		.syntax unified
 2569              		.thumb
 2570              		.thumb_func
 2571              		.fpu softvfp
 2573              	hal_ob_parm_config:
 2574              	.LFB146:
1199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      configure option byte parameters thoroughly
1201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  ob_parm: pointer to option byte struct used to configure its parameters
1202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
1204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** int32_t hal_ob_parm_config(hal_ob_parm_config_struct *ob_parm)
1206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 2575              		.loc 1 1206 1
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 56
 2578              		@ frame_needed = 1, uses_anonymous_args = 0
 2579 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 2580              		.cfi_def_cfa_offset 32
 2581              		.cfi_offset 4, -32
 2582              		.cfi_offset 5, -28
 2583              		.cfi_offset 7, -24
 2584              		.cfi_offset 8, -20
 2585              		.cfi_offset 9, -16
 2586              		.cfi_offset 10, -12
 2587              		.cfi_offset 11, -8
 2588              		.cfi_offset 14, -4
 2589 0004 8EB0     		sub	sp, sp, #56
 2590              		.cfi_def_cfa_offset 88
 2591 0006 00AF     		add	r7, sp, #0
 2592              		.cfi_def_cfa_register 7
 2593 0008 F860     		str	r0, [r7, #12]
1207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t spc = 0xA5U;
 2594              		.loc 1 1208 13
 2595 000a A523     		movs	r3, #165
 2596 000c 87F83730 		strb	r3, [r7, #55]
1209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t user = 0xFFU;
 2597              		.loc 1 1209 13
 2598 0010 FF23     		movs	r3, #255
 2599 0012 87F83630 		strb	r3, [r7, #54]
1210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t data = 0xFFFFU;
 2600              		.loc 1 1210 14
 2601 0016 4FF6FF73 		movw	r3, #65535
 2602 001a BB86     		strh	r3, [r7, #52]	@ movhi
1211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint16_t wp = 0xFFFFU;
 2603              		.loc 1 1211 14
 2604 001c 4FF6FF73 		movw	r3, #65535
 2605 0020 7B86     		strh	r3, [r7, #50]	@ movhi
1212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t wp_flag = 0U;
 2606              		.loc 1 1212 13
 2607 0022 0023     		movs	r3, #0
 2608 0024 87F83130 		strb	r3, [r7, #49]
1213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint64_t ob_parameter = 0U;
 2609              		.loc 1 1213 14
 2610 0028 4FF00002 		mov	r2, #0
 2611 002c 4FF00003 		mov	r3, #0
 2612 0030 C7E90A23 		strd	r2, [r7, #40]
1214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t data_temp0, data_temp1, wp_temp0, wp_temp1;
1215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state;
1216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == HAL_PARAMETER_CHECK)
1218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check the parameter */
1219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(NULL == ob_parm) {
1220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         HAL_DEBUGE("parameter [ob_parm] is a NULL pointer.");
1221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         return HAL_ERR_ADDRESS;
1222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* unlock flash and option byte */
1226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_fmc_unlock();
 2613              		.loc 1 1226 5
 2614 0034 FFF7FEFF 		bl	hal_fmc_unlock
1227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_unlock();
 2615              		.loc 1 1227 5
 2616 0038 FFF7FEFF 		bl	hal_ob_unlock
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check whether spc is default value */
1230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(OB_SPC != spc) {
 2617              		.loc 1 1230 8
 2618 003c 434B     		ldr	r3, .L166
 2619 003e 1B88     		ldrh	r3, [r3]	@ movhi
 2620 0040 9AB2     		uxth	r2, r3
 2621              		.loc 1 1230 15
 2622 0042 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 2623 0046 9BB2     		uxth	r3, r3
 2624              		.loc 1 1230 7
 2625 0048 9A42     		cmp	r2, r3
 2626 004a 04D0     		beq	.L151
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         spc = OB_SPC;
 2627              		.loc 1 1231 15
 2628 004c 3F4B     		ldr	r3, .L166
 2629 004e 1B88     		ldrh	r3, [r3]	@ movhi
 2630 0050 9BB2     		uxth	r3, r3
 2631              		.loc 1 1231 13
 2632 0052 87F83730 		strb	r3, [r7, #55]
 2633              	.L151:
1232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check whether user is default value */
1234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(OB_USER != user) {
 2634              		.loc 1 1234 8
 2635 0056 3E4B     		ldr	r3, .L166+4
 2636 0058 1B88     		ldrh	r3, [r3]	@ movhi
 2637 005a 9AB2     		uxth	r2, r3
 2638              		.loc 1 1234 16
 2639 005c 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 2640 0060 9BB2     		uxth	r3, r3
 2641              		.loc 1 1234 7
 2642 0062 9A42     		cmp	r2, r3
 2643 0064 04D0     		beq	.L152
1235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         user = OB_USER;
 2644              		.loc 1 1235 16
 2645 0066 3A4B     		ldr	r3, .L166+4
 2646 0068 1B88     		ldrh	r3, [r3]	@ movhi
 2647 006a 9BB2     		uxth	r3, r3
 2648              		.loc 1 1235 14
 2649 006c 87F83630 		strb	r3, [r7, #54]
 2650              	.L152:
1236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check whether data is default value */
1238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((OB_DATA0 != (uint8_t)data) || (OB_DATA1 != (uint8_t)(data >> 8U))) {
 2651              		.loc 1 1238 9
 2652 0070 384B     		ldr	r3, .L166+8
 2653 0072 1B88     		ldrh	r3, [r3]	@ movhi
 2654 0074 9AB2     		uxth	r2, r3
 2655              		.loc 1 1238 21
 2656 0076 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 2657 0078 DBB2     		uxtb	r3, r3
 2658              		.loc 1 1238 18
 2659 007a 9BB2     		uxth	r3, r3
 2660              		.loc 1 1238 7
 2661 007c 9A42     		cmp	r2, r3
 2662 007e 09D1     		bne	.L153
 2663              		.loc 1 1238 40 discriminator 1
 2664 0080 354B     		ldr	r3, .L166+12
 2665 0082 1B88     		ldrh	r3, [r3]	@ movhi
 2666 0084 9AB2     		uxth	r2, r3
 2667              		.loc 1 1238 52 discriminator 1
 2668 0086 BB8E     		ldrh	r3, [r7, #52]
 2669 0088 1B0A     		lsrs	r3, r3, #8
 2670 008a 9BB2     		uxth	r3, r3
 2671 008c DBB2     		uxtb	r3, r3
 2672              		.loc 1 1238 49 discriminator 1
 2673 008e 9BB2     		uxth	r3, r3
 2674              		.loc 1 1238 36 discriminator 1
 2675 0090 9A42     		cmp	r2, r3
 2676 0092 0FD0     		beq	.L154
 2677              	.L153:
1239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_temp0 = (uint16_t) OB_DATA0;
 2678              		.loc 1 1239 33
 2679 0094 2F4B     		ldr	r3, .L166+8
 2680 0096 1B88     		ldrh	r3, [r3]	@ movhi
 2681 0098 9BB2     		uxth	r3, r3
 2682              		.loc 1 1239 20
 2683 009a 7B62     		str	r3, [r7, #36]
1240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_temp1 = (uint16_t)(OB_DATA1 << 8U);
 2684              		.loc 1 1240 33
 2685 009c 2E4B     		ldr	r3, .L166+12
 2686 009e 1B88     		ldrh	r3, [r3]	@ movhi
 2687 00a0 9BB2     		uxth	r3, r3
 2688              		.loc 1 1240 22
 2689 00a2 1B02     		lsls	r3, r3, #8
 2690 00a4 9BB2     		uxth	r3, r3
 2691              		.loc 1 1240 20
 2692 00a6 3B62     		str	r3, [r7, #32]
1241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data = data_temp0 | data_temp1;
 2693              		.loc 1 1241 27
 2694 00a8 7B6A     		ldr	r3, [r7, #36]
 2695 00aa 9AB2     		uxth	r2, r3
 2696 00ac 3B6A     		ldr	r3, [r7, #32]
 2697 00ae 9BB2     		uxth	r3, r3
 2698              		.loc 1 1241 14
 2699 00b0 1343     		orrs	r3, r3, r2
 2700 00b2 BB86     		strh	r3, [r7, #52]	@ movhi
 2701              	.L154:
1242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* check whether WP is default value */
1244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((OB_WP0 != (uint8_t)wp) || (OB_WP1 != (uint8_t)(wp >> 8U))) {
 2702              		.loc 1 1244 9
 2703 00b4 294B     		ldr	r3, .L166+16
 2704 00b6 1B88     		ldrh	r3, [r3]	@ movhi
 2705 00b8 9AB2     		uxth	r2, r3
 2706              		.loc 1 1244 19
 2707 00ba 7B8E     		ldrh	r3, [r7, #50]	@ movhi
 2708 00bc DBB2     		uxtb	r3, r3
 2709              		.loc 1 1244 16
 2710 00be 9BB2     		uxth	r3, r3
 2711              		.loc 1 1244 7
 2712 00c0 9A42     		cmp	r2, r3
 2713 00c2 09D1     		bne	.L155
 2714              		.loc 1 1244 36 discriminator 1
 2715 00c4 264B     		ldr	r3, .L166+20
 2716 00c6 1B88     		ldrh	r3, [r3]	@ movhi
 2717 00c8 9AB2     		uxth	r2, r3
 2718              		.loc 1 1244 46 discriminator 1
 2719 00ca 7B8E     		ldrh	r3, [r7, #50]
 2720 00cc 1B0A     		lsrs	r3, r3, #8
 2721 00ce 9BB2     		uxth	r3, r3
 2722 00d0 DBB2     		uxtb	r3, r3
 2723              		.loc 1 1244 43 discriminator 1
 2724 00d2 9BB2     		uxth	r3, r3
 2725              		.loc 1 1244 32 discriminator 1
 2726 00d4 9A42     		cmp	r2, r3
 2727 00d6 12D0     		beq	.L156
 2728              	.L155:
1245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp_temp0 = (uint16_t) OB_WP0;
 2729              		.loc 1 1245 31
 2730 00d8 204B     		ldr	r3, .L166+16
 2731 00da 1B88     		ldrh	r3, [r3]	@ movhi
 2732 00dc 9BB2     		uxth	r3, r3
 2733              		.loc 1 1245 18
 2734 00de FB61     		str	r3, [r7, #28]
1246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp_temp1 = (uint16_t)(OB_WP1 << 8U);
 2735              		.loc 1 1246 31
 2736 00e0 1F4B     		ldr	r3, .L166+20
 2737 00e2 1B88     		ldrh	r3, [r3]	@ movhi
 2738 00e4 9BB2     		uxth	r3, r3
 2739              		.loc 1 1246 20
 2740 00e6 1B02     		lsls	r3, r3, #8
 2741 00e8 9BB2     		uxth	r3, r3
 2742              		.loc 1 1246 18
 2743 00ea BB61     		str	r3, [r7, #24]
1247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp = wp_temp0 | wp_temp1;
 2744              		.loc 1 1247 23
 2745 00ec FB69     		ldr	r3, [r7, #28]
 2746 00ee 9AB2     		uxth	r2, r3
 2747 00f0 BB69     		ldr	r3, [r7, #24]
 2748 00f2 9BB2     		uxth	r3, r3
 2749              		.loc 1 1247 12
 2750 00f4 1343     		orrs	r3, r3, r2
 2751 00f6 7B86     		strh	r3, [r7, #50]	@ movhi
1248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp_flag = 1U;
 2752              		.loc 1 1248 17
 2753 00f8 0123     		movs	r3, #1
 2754 00fa 87F83130 		strb	r3, [r7, #49]
 2755              	.L156:
1249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* write protection process */
1251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(ob_parm->ob_type & OB_TYPE_WP) {
 2756              		.loc 1 1251 15
 2757 00fe FB68     		ldr	r3, [r7, #12]
 2758 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2759              		.loc 1 1251 25
 2760 0102 03F00103 		and	r3, r3, #1
 2761              		.loc 1 1251 7
 2762 0106 002B     		cmp	r3, #0
 2763 0108 47D0     		beq	.L157
1252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(OB_WP_ENABLE == ob_parm->wp_state) {
 2764              		.loc 1 1252 35
 2765 010a FB68     		ldr	r3, [r7, #12]
 2766 010c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2767              		.loc 1 1252 11
 2768 010e 012B     		cmp	r3, #1
 2769 0110 28D1     		bne	.L158
1253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             hal_ob_wp_enable(ob_parm->wp_addr, ob_parm->wp_size);
 2770              		.loc 1 1253 13
 2771 0112 FB68     		ldr	r3, [r7, #12]
 2772 0114 5968     		ldr	r1, [r3, #4]
 2773 0116 FB68     		ldr	r3, [r7, #12]
 2774 0118 9A68     		ldr	r2, [r3, #8]
 2775 011a 3B46     		mov	r3, r7
 2776 011c 1846     		mov	r0, r3
 2777 011e FFF7FEFF 		bl	hal_ob_wp_enable
1254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_temp0 = (uint16_t) OB_WP0;
 2778              		.loc 1 1254 35
 2779 0122 0E4B     		ldr	r3, .L166+16
 2780 0124 1B88     		ldrh	r3, [r3]	@ movhi
 2781 0126 9BB2     		uxth	r3, r3
 2782              		.loc 1 1254 22
 2783 0128 FB61     		str	r3, [r7, #28]
1255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_temp1 = (uint16_t)(OB_WP1 << 8U);
 2784              		.loc 1 1255 35
 2785 012a 0D4B     		ldr	r3, .L166+20
 2786 012c 1B88     		ldrh	r3, [r3]	@ movhi
 2787 012e 9BB2     		uxth	r3, r3
 2788              		.loc 1 1255 24
 2789 0130 1B02     		lsls	r3, r3, #8
 2790 0132 9BB2     		uxth	r3, r3
 2791              		.loc 1 1255 22
 2792 0134 BB61     		str	r3, [r7, #24]
1256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp = wp_temp0 | wp_temp1;
 2793              		.loc 1 1256 27
 2794 0136 FB69     		ldr	r3, [r7, #28]
 2795 0138 9AB2     		uxth	r2, r3
 2796 013a BB69     		ldr	r3, [r7, #24]
 2797 013c 9BB2     		uxth	r3, r3
 2798              		.loc 1 1256 16
 2799 013e 1343     		orrs	r3, r3, r2
 2800 0140 7B86     		strh	r3, [r7, #50]	@ movhi
1257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_flag = 0U;
 2801              		.loc 1 1257 21
 2802 0142 0023     		movs	r3, #0
 2803 0144 87F83130 		strb	r3, [r7, #49]
 2804 0148 27E0     		b	.L157
 2805              	.L167:
 2806 014a 00BF     		.align	2
 2807              	.L166:
 2808 014c 00F8FF1F 		.word	536868864
 2809 0150 02F8FF1F 		.word	536868866
 2810 0154 04F8FF1F 		.word	536868868
 2811 0158 06F8FF1F 		.word	536868870
 2812 015c 08F8FF1F 		.word	536868872
 2813 0160 0AF8FF1F 		.word	536868874
 2814              	.L158:
1258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
1259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             hal_ob_wp_disable(ob_parm->wp_addr, ob_parm->wp_size);
 2815              		.loc 1 1259 13
 2816 0164 FB68     		ldr	r3, [r7, #12]
 2817 0166 5968     		ldr	r1, [r3, #4]
 2818 0168 FB68     		ldr	r3, [r7, #12]
 2819 016a 9A68     		ldr	r2, [r3, #8]
 2820 016c 3B46     		mov	r3, r7
 2821 016e 1846     		mov	r0, r3
 2822 0170 FFF7FEFF 		bl	hal_ob_wp_disable
1260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_temp0 = (uint16_t) OB_WP0;
 2823              		.loc 1 1260 35
 2824 0174 6F4B     		ldr	r3, .L168
 2825 0176 1B88     		ldrh	r3, [r3]	@ movhi
 2826 0178 9BB2     		uxth	r3, r3
 2827              		.loc 1 1260 22
 2828 017a FB61     		str	r3, [r7, #28]
1261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_temp1 = (uint16_t)(OB_WP1 << 8U);
 2829              		.loc 1 1261 35
 2830 017c 6E4B     		ldr	r3, .L168+4
 2831 017e 1B88     		ldrh	r3, [r3]	@ movhi
 2832 0180 9BB2     		uxth	r3, r3
 2833              		.loc 1 1261 24
 2834 0182 1B02     		lsls	r3, r3, #8
 2835 0184 9BB2     		uxth	r3, r3
 2836              		.loc 1 1261 22
 2837 0186 BB61     		str	r3, [r7, #24]
1262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp = wp_temp0 | wp_temp1;
 2838              		.loc 1 1262 27
 2839 0188 FB69     		ldr	r3, [r7, #28]
 2840 018a 9AB2     		uxth	r2, r3
 2841 018c BB69     		ldr	r3, [r7, #24]
 2842 018e 9BB2     		uxth	r3, r3
 2843              		.loc 1 1262 16
 2844 0190 1343     		orrs	r3, r3, r2
 2845 0192 7B86     		strh	r3, [r7, #50]	@ movhi
1263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             wp_flag = 0U;
 2846              		.loc 1 1263 21
 2847 0194 0023     		movs	r3, #0
 2848 0196 87F83130 		strb	r3, [r7, #49]
 2849              	.L157:
1264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* security protection process */
1267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(ob_parm->ob_type & (OB_TYPE_SPC | OB_TYPE_USER | OB_TYPE_DATA)) {
 2850              		.loc 1 1267 15
 2851 019a FB68     		ldr	r3, [r7, #12]
 2852 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2853              		.loc 1 1267 25
 2854 019e 03F00E03 		and	r3, r3, #14
 2855              		.loc 1 1267 7
 2856 01a2 002B     		cmp	r3, #0
 2857 01a4 00F0B280 		beq	.L159
1268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp_flag = 1U;
 2858              		.loc 1 1268 17
 2859 01a8 0123     		movs	r3, #1
 2860 01aa 87F83130 		strb	r3, [r7, #49]
1269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(ob_parm->ob_type & OB_TYPE_SPC) {
 2861              		.loc 1 1269 19
 2862 01ae FB68     		ldr	r3, [r7, #12]
 2863 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2864              		.loc 1 1269 29
 2865 01b2 03F00203 		and	r3, r3, #2
 2866              		.loc 1 1269 11
 2867 01b6 002B     		cmp	r3, #0
 2868 01b8 03D0     		beq	.L160
1270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             spc = ob_parm->spc_level;
 2869              		.loc 1 1270 17
 2870 01ba FB68     		ldr	r3, [r7, #12]
 2871 01bc 1B7B     		ldrb	r3, [r3, #12]
 2872 01be 87F83730 		strb	r3, [r7, #55]
 2873              	.L160:
1271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(ob_parm->ob_type & OB_TYPE_USER) {
 2874              		.loc 1 1272 19
 2875 01c2 FB68     		ldr	r3, [r7, #12]
 2876 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2877              		.loc 1 1272 29
 2878 01c6 03F00403 		and	r3, r3, #4
 2879              		.loc 1 1272 11
 2880 01ca 002B     		cmp	r3, #0
 2881 01cc 06D0     		beq	.L161
1273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             user &= ob_parm->user;
 2882              		.loc 1 1273 28
 2883 01ce FB68     		ldr	r3, [r7, #12]
 2884 01d0 5A7B     		ldrb	r2, [r3, #13]	@ zero_extendqisi2
 2885              		.loc 1 1273 18
 2886 01d2 97F83630 		ldrb	r3, [r7, #54]
 2887 01d6 1340     		ands	r3, r3, r2
 2888 01d8 87F83630 		strb	r3, [r7, #54]
 2889              	.L161:
1274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(ob_parm->ob_type & OB_TYPE_DATA) {
 2890              		.loc 1 1275 19
 2891 01dc FB68     		ldr	r3, [r7, #12]
 2892 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2893              		.loc 1 1275 29
 2894 01e0 03F00803 		and	r3, r3, #8
 2895              		.loc 1 1275 11
 2896 01e4 002B     		cmp	r3, #0
 2897 01e6 02D0     		beq	.L162
1276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             data = ob_parm->data_value;
 2898              		.loc 1 1276 18
 2899 01e8 FB68     		ldr	r3, [r7, #12]
 2900 01ea DB89     		ldrh	r3, [r3, #14]	@ movhi
 2901 01ec BB86     		strh	r3, [r7, #52]	@ movhi
 2902              	.L162:
1277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         ob_parameter = ((uint64_t)spc | (uint64_t)(user << 16U) | (uint64_t)((uint8_t)data) << 32U
 2903              		.loc 1 1279 25
 2904 01ee 97F83700 		ldrb	r0, [r7, #55]	@ zero_extendqisi2
 2905 01f2 4FF00001 		mov	r1, #0
 2906              		.loc 1 1279 57
 2907 01f6 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 2908 01fa 1B04     		lsls	r3, r3, #16
 2909              		.loc 1 1279 41
 2910 01fc 1A46     		mov	r2, r3
 2911 01fe 4FEAE273 		asr	r3, r2, #31
 2912              		.loc 1 1279 39
 2913 0202 40EA0208 		orr	r8, r0, r2
 2914 0206 41EA0309 		orr	r9, r1, r3
 2915              		.loc 1 1279 78
 2916 020a BB8E     		ldrh	r3, [r7, #52]	@ movhi
 2917 020c DBB2     		uxtb	r3, r3
 2918              		.loc 1 1279 67
 2919 020e D8B2     		uxtb	r0, r3
 2920 0210 4FF00001 		mov	r1, #0
 2921              		.loc 1 1279 93
 2922 0214 4FF00002 		mov	r2, #0
 2923 0218 4FF00003 		mov	r3, #0
 2924 021c 0300     		movs	r3, r0
 2925 021e 0022     		movs	r2, #0
 2926              		.loc 1 1279 65
 2927 0220 48EA0204 		orr	r4, r8, r2
 2928 0224 49EA0305 		orr	r5, r9, r3
1280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         | (uint64_t)(data >> 8U) << 48U);
 2929              		.loc 1 1280 27
 2930 0228 BB8E     		ldrh	r3, [r7, #52]
 2931 022a 1B0A     		lsrs	r3, r3, #8
 2932 022c 9BB2     		uxth	r3, r3
 2933 022e 98B2     		uxth	r0, r3
 2934 0230 4FF00001 		mov	r1, #0
 2935              		.loc 1 1280 50
 2936 0234 4FF00002 		mov	r2, #0
 2937 0238 4FF00003 		mov	r3, #0
 2938 023c 0304     		lsls	r3, r0, #16
 2939 023e 0022     		movs	r2, #0
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                         | (uint64_t)(data >> 8U) << 48U);
 2940              		.loc 1 1279 22
 2941 0240 44EA020A 		orr	r10, r4, r2
 2942 0244 45EA030B 		orr	fp, r5, r3
 2943 0248 C7E90AAB 		strd	r10, [r7, #40]
1281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* start erase the option byte */
1283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_OBER;
 2944              		.loc 1 1283 17
 2945 024c 3B4B     		ldr	r3, .L168+8
 2946 024e 1B68     		ldr	r3, [r3]
 2947 0250 3A4A     		ldr	r2, .L168+8
 2948 0252 43F02003 		orr	r3, r3, #32
 2949 0256 1360     		str	r3, [r2]
1284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_START;
 2950              		.loc 1 1284 17
 2951 0258 384B     		ldr	r3, .L168+8
 2952 025a 1B68     		ldr	r3, [r3]
 2953 025c 374A     		ldr	r2, .L168+8
 2954 025e 43F04003 		orr	r3, r3, #64
 2955 0262 1360     		str	r3, [r2]
1285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
1286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 2956              		.loc 1 1286 21
 2957 0264 4FF47020 		mov	r0, #983040
 2958 0268 FFF7FEFF 		bl	hal_fmc_ready_wait
 2959 026c 0346     		mov	r3, r0
 2960 026e FB75     		strb	r3, [r7, #23]
1287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(FMC_READY == fmc_state) {
 2961              		.loc 1 1288 11
 2962 0270 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2963 0272 002B     		cmp	r3, #0
 2964 0274 41D1     		bne	.L163
1289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* reset the OBER bit */
1291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL &= ~FMC_CTL_OBER;
 2965              		.loc 1 1291 21
 2966 0276 314B     		ldr	r3, .L168+8
 2967 0278 1B68     		ldr	r3, [r3]
 2968 027a 304A     		ldr	r2, .L168+8
 2969 027c 23F02003 		bic	r3, r3, #32
 2970 0280 1360     		str	r3, [r2]
1292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* enable the option bytes programming */
1294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             FMC_CTL |= FMC_CTL_OBPG;
 2971              		.loc 1 1294 21
 2972 0282 2E4B     		ldr	r3, .L168+8
 2973 0284 1B68     		ldr	r3, [r3]
 2974 0286 2D4A     		ldr	r2, .L168+8
 2975 0288 43F01003 		orr	r3, r3, #16
 2976 028c 1360     		str	r3, [r2]
1295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             OB_SPC = (uint16_t)ob_parameter;
 2977              		.loc 1 1297 13
 2978 028e 2C4B     		ldr	r3, .L168+12
 2979              		.loc 1 1297 22
 2980 0290 3A8D     		ldrh	r2, [r7, #40]
 2981              		.loc 1 1297 20
 2982 0292 1A80     		strh	r2, [r3]	@ movhi
1298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             OB_USER = (uint16_t)(ob_parameter >> 16U);
 2983              		.loc 1 1298 47
 2984 0294 D7E90A01 		ldrd	r0, [r7, #40]
 2985 0298 4FF00002 		mov	r2, #0
 2986 029c 4FF00003 		mov	r3, #0
 2987 02a0 020C     		lsrs	r2, r0, #16
 2988 02a2 42EA0142 		orr	r2, r2, r1, lsl #16
 2989 02a6 0B0C     		lsrs	r3, r1, #16
 2990              		.loc 1 1298 13
 2991 02a8 2649     		ldr	r1, .L168+16
 2992              		.loc 1 1298 23
 2993 02aa 93B2     		uxth	r3, r2
 2994              		.loc 1 1298 21
 2995 02ac 0B80     		strh	r3, [r1]	@ movhi
1299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             OB_DATA0 = (uint16_t)(ob_parameter >> 32U);
 2996              		.loc 1 1299 48
 2997 02ae D7E90A01 		ldrd	r0, [r7, #40]
 2998 02b2 4FF00002 		mov	r2, #0
 2999 02b6 4FF00003 		mov	r3, #0
 3000 02ba 0A00     		movs	r2, r1
 3001 02bc 0023     		movs	r3, #0
 3002              		.loc 1 1299 13
 3003 02be 2249     		ldr	r1, .L168+20
 3004              		.loc 1 1299 24
 3005 02c0 93B2     		uxth	r3, r2
 3006              		.loc 1 1299 22
 3007 02c2 0B80     		strh	r3, [r1]	@ movhi
1300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             OB_DATA1 = (uint16_t)(ob_parameter >> 48U);
 3008              		.loc 1 1300 48
 3009 02c4 D7E90A01 		ldrd	r0, [r7, #40]
 3010 02c8 4FF00002 		mov	r2, #0
 3011 02cc 4FF00003 		mov	r3, #0
 3012 02d0 0A0C     		lsrs	r2, r1, #16
 3013 02d2 0023     		movs	r3, #0
 3014              		.loc 1 1300 13
 3015 02d4 1D49     		ldr	r1, .L168+24
 3016              		.loc 1 1300 24
 3017 02d6 93B2     		uxth	r3, r2
 3018              		.loc 1 1300 22
 3019 02d8 0B80     		strh	r3, [r1]	@ movhi
1301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             /* wait for the FMC ready */
1303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 3020              		.loc 1 1303 25
 3021 02da 4FF47020 		mov	r0, #983040
 3022 02de FFF7FEFF 		bl	hal_fmc_ready_wait
 3023 02e2 0346     		mov	r3, r0
 3024 02e4 FB75     		strb	r3, [r7, #23]
1304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 3025              		.loc 1 1305 15
 3026 02e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3027 02e8 042B     		cmp	r3, #4
 3028 02ea 0FD0     		beq	.L159
1306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBPG bit */
1307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBPG;
 3029              		.loc 1 1307 25
 3030 02ec 134B     		ldr	r3, .L168+8
 3031 02ee 1B68     		ldr	r3, [r3]
 3032 02f0 124A     		ldr	r2, .L168+8
 3033 02f2 23F01003 		bic	r3, r3, #16
 3034 02f6 1360     		str	r3, [r2]
 3035 02f8 08E0     		b	.L159
 3036              	.L163:
1308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
1309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
1310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if(FMC_TOERR != fmc_state) {
 3037              		.loc 1 1310 15
 3038 02fa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3039 02fc 042B     		cmp	r3, #4
 3040 02fe 05D0     		beq	.L159
1311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 /* reset the OBER bit */
1312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 FMC_CTL &= ~FMC_CTL_OBER;
 3041              		.loc 1 1312 25
 3042 0300 0E4B     		ldr	r3, .L168+8
 3043 0302 1B68     		ldr	r3, [r3]
 3044 0304 0D4A     		ldr	r2, .L168+8
 3045 0306 23F02003 		bic	r3, r3, #32
 3046 030a 1360     		str	r3, [r2]
 3047              	.L159:
1313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
1314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* if previously actual option byte value exist, write it back */
1318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(1U == wp_flag) {
 3048              		.loc 1 1318 7
 3049 030c 97F83130 		ldrb	r3, [r7, #49]	@ zero_extendqisi2
 3050 0310 012B     		cmp	r3, #1
 3051 0312 05D1     		bne	.L164
1319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         hal_ob_write_protection_enable(~wp);
 3052              		.loc 1 1319 9
 3053 0314 7B8E     		ldrh	r3, [r7, #50]	@ movhi
 3054 0316 DB43     		mvns	r3, r3
 3055 0318 9BB2     		uxth	r3, r3
 3056 031a 1846     		mov	r0, r3
 3057 031c FFF7FEFF 		bl	hal_ob_write_protection_enable
 3058              	.L164:
1320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* lock flash and option byte */
1322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_ob_lock();
 3059              		.loc 1 1322 5
 3060 0320 FFF7FEFF 		bl	hal_ob_lock
1323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     hal_fmc_lock();
 3061              		.loc 1 1323 5
 3062 0324 FFF7FEFF 		bl	hal_fmc_lock
1324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return HAL_ERR_NONE;
 3063              		.loc 1 1325 12
 3064 0328 0023     		movs	r3, #0
1326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3065              		.loc 1 1326 1
 3066 032a 1846     		mov	r0, r3
 3067 032c 3837     		adds	r7, r7, #56
 3068              		.cfi_def_cfa_offset 32
 3069 032e BD46     		mov	sp, r7
 3070              		.cfi_def_cfa_register 13
 3071              		@ sp needed
 3072 0330 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 3073              	.L169:
 3074              		.align	2
 3075              	.L168:
 3076 0334 08F8FF1F 		.word	536868872
 3077 0338 0AF8FF1F 		.word	536868874
 3078 033c 10200240 		.word	1073881104
 3079 0340 00F8FF1F 		.word	536868864
 3080 0344 02F8FF1F 		.word	536868866
 3081 0348 04F8FF1F 		.word	536868868
 3082 034c 06F8FF1F 		.word	536868870
 3083              		.cfi_endproc
 3084              	.LFE146:
 3086              		.section	.text._fmc_program_align_word,"ax",%progbits
 3087              		.align	1
 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3091              		.fpu softvfp
 3093              	_fmc_program_align_word:
 3094              	.LFB147:
1327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #if (1 == FLASH_OPER_RESERVE_ORIGINAL_DATA)
1329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      write target data aligned in word
1331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  p_buffer: pointer to data buffer
1332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  size: target region size
1333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  page_addr: page head address
1334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  page_offset: the offset with respect to page head address
1335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
1337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** static void _fmc_page_erase_update(uint8_t *p_buffer, uint32_t size, uint32_t page_addr, \
1339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                                    uint32_t page_offset)
1340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
1341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t temp;
1342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t counter;
1343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t update_index = 0U;
1344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     temp = (uint32_t)p_buffer;
1346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0U; counter < FMC_PAGE_SIZE; counter += 4) {
1348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if(0xFFFFFFFF != REG32(page_addr + counter)) {
1349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             update_index = counter;
1350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             break;
1351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_PAGE_SIZE != counter) {
1355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = update_index; counter < FMC_PAGE_SIZE; counter += 4) {
1356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             REG32(temp + counter) = REG32(page_addr + counter);
1357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* configure the target region to 0xFF */
1360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = 0U; counter < size; counter++) {
1361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             p_buffer[page_offset + counter] = 0xFFU;
1362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         _fmc_page_erase(page_addr);
1365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* write the orignal data to address outside the target range */
1367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         temp = (uint32_t)p_buffer;
1368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = update_index; counter < FMC_PAGE_SIZE; counter += 4) {
1369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             hal_fmc_word_program(page_addr + counter, REG32(temp + counter));
1370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
1373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** #endif /* FLASH_OPER_RESERVE_ORIGINAL_DATA */
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      write target data aligned in word
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  start_addr: target region start address
1378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data: pointer to target data
1379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  data_size: target region size
1380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
1382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** static void _fmc_program_align_word(uint32_t dst_addr, uint8_t *data, uint32_t data_size)
1384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 3095              		.loc 1 1384 1
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 48
 3098              		@ frame_needed = 1, uses_anonymous_args = 0
 3099 0000 80B5     		push	{r7, lr}
 3100              		.cfi_def_cfa_offset 8
 3101              		.cfi_offset 7, -8
 3102              		.cfi_offset 14, -4
 3103 0002 8CB0     		sub	sp, sp, #48
 3104              		.cfi_def_cfa_offset 56
 3105 0004 00AF     		add	r7, sp, #0
 3106              		.cfi_def_cfa_register 7
 3107 0006 F860     		str	r0, [r7, #12]
 3108 0008 B960     		str	r1, [r7, #8]
 3109 000a 7A60     		str	r2, [r7, #4]
1385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t head_offset, tail_offset, data_offset;
1386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t data_addr_align, data_size_align;
1387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t counter;
1388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint32_t temp_addr;
1389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t align_buffer[4] = {0xFF, 0xFF, 0xFF, 0xFF};
 3110              		.loc 1 1389 13
 3111 000c 4FF0FF33 		mov	r3, #-1
 3112 0010 3B61     		str	r3, [r7, #16]
1390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     head_offset = dst_addr % 4U;
 3113              		.loc 1 1391 17
 3114 0012 FB68     		ldr	r3, [r7, #12]
 3115 0014 03F00303 		and	r3, r3, #3
 3116 0018 BB61     		str	r3, [r7, #24]
1392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     tail_offset = (data_size + head_offset) % 4U;
 3117              		.loc 1 1392 30
 3118 001a 7A68     		ldr	r2, [r7, #4]
 3119 001c BB69     		ldr	r3, [r7, #24]
 3120 001e 1344     		add	r3, r3, r2
 3121              		.loc 1 1392 17
 3122 0020 03F00303 		and	r3, r3, #3
 3123 0024 7B61     		str	r3, [r7, #20]
1393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0 != head_offset) {
 3124              		.loc 1 1394 7
 3125 0026 BB69     		ldr	r3, [r7, #24]
 3126 0028 002B     		cmp	r3, #0
 3127 002a 2FD0     		beq	.L171
1395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* write the target region if front address is non-aligned */
1396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_addr_align = dst_addr + (4 - head_offset);
 3128              		.loc 1 1396 36
 3129 002c FA68     		ldr	r2, [r7, #12]
 3130 002e BB69     		ldr	r3, [r7, #24]
 3131 0030 D31A     		subs	r3, r2, r3
 3132              		.loc 1 1396 25
 3133 0032 0433     		adds	r3, r3, #4
 3134 0034 BB62     		str	r3, [r7, #40]
1397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_size_align = data_size - (4 - head_offset);
 3135              		.loc 1 1397 37
 3136 0036 BA69     		ldr	r2, [r7, #24]
 3137 0038 7B68     		ldr	r3, [r7, #4]
 3138 003a 1344     		add	r3, r3, r2
 3139              		.loc 1 1397 25
 3140 003c 043B     		subs	r3, r3, #4
 3141 003e 7B62     		str	r3, [r7, #36]
1398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         temp_addr = (uint32_t)data;
 3142              		.loc 1 1399 19
 3143 0040 BB68     		ldr	r3, [r7, #8]
 3144 0042 FB61     		str	r3, [r7, #28]
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = head_offset; counter < 4; counter++) {
 3145              		.loc 1 1400 21
 3146 0044 BB69     		ldr	r3, [r7, #24]
 3147 0046 3B62     		str	r3, [r7, #32]
 3148              		.loc 1 1400 9
 3149 0048 0EE0     		b	.L172
 3150              	.L173:
1401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             align_buffer[counter] = REG8(temp_addr);
 3151              		.loc 1 1401 37 discriminator 3
 3152 004a FB69     		ldr	r3, [r7, #28]
 3153 004c 1B78     		ldrb	r3, [r3]
 3154 004e D9B2     		uxtb	r1, r3
 3155              		.loc 1 1401 35 discriminator 3
 3156 0050 07F11002 		add	r2, r7, #16
 3157 0054 3B6A     		ldr	r3, [r7, #32]
 3158 0056 1344     		add	r3, r3, r2
 3159 0058 0A46     		mov	r2, r1
 3160 005a 1A70     		strb	r2, [r3]
1402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             temp_addr++;
 3161              		.loc 1 1402 22 discriminator 3
 3162 005c FB69     		ldr	r3, [r7, #28]
 3163 005e 0133     		adds	r3, r3, #1
 3164 0060 FB61     		str	r3, [r7, #28]
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = head_offset; counter < 4; counter++) {
 3165              		.loc 1 1400 56 discriminator 3
 3166 0062 3B6A     		ldr	r3, [r7, #32]
 3167 0064 0133     		adds	r3, r3, #1
 3168 0066 3B62     		str	r3, [r7, #32]
 3169              	.L172:
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = head_offset; counter < 4; counter++) {
 3170              		.loc 1 1400 9 discriminator 1
 3171 0068 3B6A     		ldr	r3, [r7, #32]
 3172 006a 032B     		cmp	r3, #3
 3173 006c EDD9     		bls	.L173
1403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_offset = 4 - head_offset;
 3174              		.loc 1 1404 21
 3175 006e BB69     		ldr	r3, [r7, #24]
 3176 0070 C3F10403 		rsb	r3, r3, #4
 3177 0074 FB62     		str	r3, [r7, #44]
1405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         hal_fmc_word_program(dst_addr - head_offset, REG32(align_buffer));
 3178              		.loc 1 1405 9
 3179 0076 FA68     		ldr	r2, [r7, #12]
 3180 0078 BB69     		ldr	r3, [r7, #24]
 3181 007a D21A     		subs	r2, r2, r3
 3182              		.loc 1 1405 54
 3183 007c 07F11003 		add	r3, r7, #16
 3184              		.loc 1 1405 9
 3185 0080 1B68     		ldr	r3, [r3]
 3186 0082 1946     		mov	r1, r3
 3187 0084 1046     		mov	r0, r2
 3188 0086 FFF7FEFF 		bl	hal_fmc_word_program
 3189 008a 05E0     		b	.L174
 3190              	.L171:
1406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
1407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* write the target region aligned address */
1408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_addr_align = dst_addr;
 3191              		.loc 1 1408 25
 3192 008c FB68     		ldr	r3, [r7, #12]
 3193 008e BB62     		str	r3, [r7, #40]
1409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_size_align = data_size;
 3194              		.loc 1 1409 25
 3195 0090 7B68     		ldr	r3, [r7, #4]
 3196 0092 7B62     		str	r3, [r7, #36]
1410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_offset = 0;
 3197              		.loc 1 1410 21
 3198 0094 0023     		movs	r3, #0
 3199 0096 FB62     		str	r3, [r7, #44]
 3200              	.L174:
1411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* write the target region if back address is non-aligned */
1413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0 != tail_offset) {
 3201              		.loc 1 1413 7
 3202 0098 7B69     		ldr	r3, [r7, #20]
 3203 009a 002B     		cmp	r3, #0
 3204 009c 2DD0     		beq	.L175
1414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data_size_align = data_size - tail_offset;
 3205              		.loc 1 1414 25
 3206 009e 7A68     		ldr	r2, [r7, #4]
 3207 00a0 7B69     		ldr	r3, [r7, #20]
 3208 00a2 D31A     		subs	r3, r2, r3
 3209 00a4 7B62     		str	r3, [r7, #36]
1415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         temp_addr = (uint32_t)data;
 3210              		.loc 1 1416 19
 3211 00a6 BB68     		ldr	r3, [r7, #8]
 3212 00a8 FB61     		str	r3, [r7, #28]
1417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         temp_addr = temp_addr + data_size - tail_offset;
 3213              		.loc 1 1417 31
 3214 00aa FA69     		ldr	r2, [r7, #28]
 3215 00ac 7B68     		ldr	r3, [r7, #4]
 3216 00ae 1A44     		add	r2, r2, r3
 3217              		.loc 1 1417 19
 3218 00b0 7B69     		ldr	r3, [r7, #20]
 3219 00b2 D31A     		subs	r3, r2, r3
 3220 00b4 FB61     		str	r3, [r7, #28]
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = 0; counter < tail_offset; counter++) {
 3221              		.loc 1 1418 21
 3222 00b6 0023     		movs	r3, #0
 3223 00b8 3B62     		str	r3, [r7, #32]
 3224              		.loc 1 1418 9
 3225 00ba 0EE0     		b	.L176
 3226              	.L177:
1419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             align_buffer[counter] = REG8(temp_addr);
 3227              		.loc 1 1419 37 discriminator 3
 3228 00bc FB69     		ldr	r3, [r7, #28]
 3229 00be 1B78     		ldrb	r3, [r3]
 3230 00c0 D9B2     		uxtb	r1, r3
 3231              		.loc 1 1419 35 discriminator 3
 3232 00c2 07F11002 		add	r2, r7, #16
 3233 00c6 3B6A     		ldr	r3, [r7, #32]
 3234 00c8 1344     		add	r3, r3, r2
 3235 00ca 0A46     		mov	r2, r1
 3236 00cc 1A70     		strb	r2, [r3]
1420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             temp_addr++;
 3237              		.loc 1 1420 22 discriminator 3
 3238 00ce FB69     		ldr	r3, [r7, #28]
 3239 00d0 0133     		adds	r3, r3, #1
 3240 00d2 FB61     		str	r3, [r7, #28]
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = 0; counter < tail_offset; counter++) {
 3241              		.loc 1 1418 56 discriminator 3
 3242 00d4 3B6A     		ldr	r3, [r7, #32]
 3243 00d6 0133     		adds	r3, r3, #1
 3244 00d8 3B62     		str	r3, [r7, #32]
 3245              	.L176:
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         for(counter = 0; counter < tail_offset; counter++) {
 3246              		.loc 1 1418 9 discriminator 1
 3247 00da 3A6A     		ldr	r2, [r7, #32]
 3248 00dc 7B69     		ldr	r3, [r7, #20]
 3249 00de 9A42     		cmp	r2, r3
 3250 00e0 ECD3     		bcc	.L177
1421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         hal_fmc_word_program(dst_addr + data_size - tail_offset, REG32(align_buffer));
 3251              		.loc 1 1423 39
 3252 00e2 FA68     		ldr	r2, [r7, #12]
 3253 00e4 7B68     		ldr	r3, [r7, #4]
 3254 00e6 1A44     		add	r2, r2, r3
 3255              		.loc 1 1423 9
 3256 00e8 7B69     		ldr	r3, [r7, #20]
 3257 00ea D21A     		subs	r2, r2, r3
 3258              		.loc 1 1423 66
 3259 00ec 07F11003 		add	r3, r7, #16
 3260              		.loc 1 1423 9
 3261 00f0 1B68     		ldr	r3, [r3]
 3262 00f2 1946     		mov	r1, r3
 3263 00f4 1046     		mov	r0, r2
 3264 00f6 FFF7FEFF 		bl	hal_fmc_word_program
 3265              	.L175:
1424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* write the target region middle aligned address */
1426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     temp_addr = (uint32_t)data + data_offset;
 3266              		.loc 1 1426 17
 3267 00fa BB68     		ldr	r3, [r7, #8]
 3268              		.loc 1 1426 15
 3269 00fc FA6A     		ldr	r2, [r7, #44]
 3270 00fe 1344     		add	r3, r3, r2
 3271 0100 FB61     		str	r3, [r7, #28]
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0; counter < data_size_align; counter += 4) {
 3272              		.loc 1 1427 17
 3273 0102 0023     		movs	r3, #0
 3274 0104 3B62     		str	r3, [r7, #32]
 3275              		.loc 1 1427 5
 3276 0106 0CE0     		b	.L178
 3277              	.L179:
1428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         hal_fmc_word_program(data_addr_align + counter, REG32(temp_addr + counter));
 3278              		.loc 1 1428 9 discriminator 3
 3279 0108 BA6A     		ldr	r2, [r7, #40]
 3280 010a 3B6A     		ldr	r3, [r7, #32]
 3281 010c D018     		adds	r0, r2, r3
 3282              		.loc 1 1428 57 discriminator 3
 3283 010e FA69     		ldr	r2, [r7, #28]
 3284 0110 3B6A     		ldr	r3, [r7, #32]
 3285 0112 1344     		add	r3, r3, r2
 3286              		.loc 1 1428 9 discriminator 3
 3287 0114 1B68     		ldr	r3, [r3]
 3288 0116 1946     		mov	r1, r3
 3289 0118 FFF7FEFF 		bl	hal_fmc_word_program
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0; counter < data_size_align; counter += 4) {
 3290              		.loc 1 1427 57 discriminator 3
 3291 011c 3B6A     		ldr	r3, [r7, #32]
 3292 011e 0433     		adds	r3, r3, #4
 3293 0120 3B62     		str	r3, [r7, #32]
 3294              	.L178:
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     for(counter = 0; counter < data_size_align; counter += 4) {
 3295              		.loc 1 1427 5 discriminator 1
 3296 0122 3A6A     		ldr	r2, [r7, #32]
 3297 0124 7B6A     		ldr	r3, [r7, #36]
 3298 0126 9A42     		cmp	r2, r3
 3299 0128 EED3     		bcc	.L179
1429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3300              		.loc 1 1430 1
 3301 012a 00BF     		nop
 3302 012c 00BF     		nop
 3303 012e 3037     		adds	r7, r7, #48
 3304              		.cfi_def_cfa_offset 8
 3305 0130 BD46     		mov	sp, r7
 3306              		.cfi_def_cfa_register 13
 3307              		@ sp needed
 3308 0132 80BD     		pop	{r7, pc}
 3309              		.cfi_endproc
 3310              	.LFE147:
 3312              		.section	.text._fmc_page_erase,"ax",%progbits
 3313              		.align	1
 3314              		.global	_fmc_page_erase
 3315              		.syntax unified
 3316              		.thumb
 3317              		.thumb_func
 3318              		.fpu softvfp
 3320              	_fmc_page_erase:
 3321              	.LFB148:
1431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      erase page
1434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  page_address: target page start address
1435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state
1437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum _fmc_page_erase(uint32_t page_address)
1439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 3322              		.loc 1 1439 1
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 16
 3325              		@ frame_needed = 1, uses_anonymous_args = 0
 3326 0000 80B5     		push	{r7, lr}
 3327              		.cfi_def_cfa_offset 8
 3328              		.cfi_offset 7, -8
 3329              		.cfi_offset 14, -4
 3330 0002 84B0     		sub	sp, sp, #16
 3331              		.cfi_def_cfa_offset 24
 3332 0004 00AF     		add	r7, sp, #0
 3333              		.cfi_def_cfa_register 7
 3334 0006 7860     		str	r0, [r7, #4]
1440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 3335              		.loc 1 1440 32
 3336 0008 4FF47020 		mov	r0, #983040
 3337 000c FFF7FEFF 		bl	hal_fmc_ready_wait
 3338 0010 0346     		mov	r3, r0
 3339 0012 FB73     		strb	r3, [r7, #15]
1441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_READY == fmc_state) {
 3340              		.loc 1 1442 7
 3341 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3342 0016 002B     		cmp	r3, #0
 3343 0018 1AD1     		bne	.L181
1443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* start page erase */
1444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_PER;
 3344              		.loc 1 1444 17
 3345 001a 104B     		ldr	r3, .L183
 3346 001c 1B68     		ldr	r3, [r3]
 3347 001e 0F4A     		ldr	r2, .L183
 3348 0020 43F00203 		orr	r3, r3, #2
 3349 0024 1360     		str	r3, [r2]
1445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_ADDR = page_address;
 3350              		.loc 1 1445 9
 3351 0026 0E4A     		ldr	r2, .L183+4
 3352              		.loc 1 1445 18
 3353 0028 7B68     		ldr	r3, [r7, #4]
 3354 002a 1360     		str	r3, [r2]
1446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL |= FMC_CTL_START;
 3355              		.loc 1 1446 17
 3356 002c 0B4B     		ldr	r3, .L183
 3357 002e 1B68     		ldr	r3, [r3]
 3358 0030 0A4A     		ldr	r2, .L183
 3359 0032 43F04003 		orr	r3, r3, #64
 3360 0036 1360     		str	r3, [r2]
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* wait for the FMC ready */
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = hal_fmc_ready_wait(FMC_TIMEOUT_COUNT);
 3361              		.loc 1 1449 21
 3362 0038 4FF47020 		mov	r0, #983040
 3363 003c FFF7FEFF 		bl	hal_fmc_ready_wait
 3364 0040 0346     		mov	r3, r0
 3365 0042 FB73     		strb	r3, [r7, #15]
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         /* reset the PER bit */
1452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         FMC_CTL &= ~FMC_CTL_PER;
 3366              		.loc 1 1452 17
 3367 0044 054B     		ldr	r3, .L183
 3368 0046 1B68     		ldr	r3, [r3]
 3369 0048 044A     		ldr	r2, .L183
 3370 004a 23F00203 		bic	r3, r3, #2
 3371 004e 1360     		str	r3, [r2]
 3372              	.L181:
1453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state  */
1456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 3373              		.loc 1 1456 12
 3374 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3375              		.loc 1 1457 1
 3376 0052 1846     		mov	r0, r3
 3377 0054 1037     		adds	r7, r7, #16
 3378              		.cfi_def_cfa_offset 8
 3379 0056 BD46     		mov	sp, r7
 3380              		.cfi_def_cfa_register 13
 3381              		@ sp needed
 3382 0058 80BD     		pop	{r7, pc}
 3383              	.L184:
 3384 005a 00BF     		.align	2
 3385              	.L183:
 3386 005c 10200240 		.word	1073881104
 3387 0060 14200240 		.word	1073881108
 3388              		.cfi_endproc
 3389              	.LFE148:
 3391              		.section	.text._ob_value_modify,"ax",%progbits
 3392              		.align	1
 3393              		.global	_ob_value_modify
 3394              		.syntax unified
 3395              		.thumb
 3396              		.thumb_func
 3397              		.fpu softvfp
 3399              	_ob_value_modify:
 3400              	.LFB149:
1458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      modify the target option byte depending on the original value
1461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  address: target option byte address
1462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  value: target option byte value
1463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  ob_parm: pointer to option byte parameter struct
1464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     none
1466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** void _ob_value_modify(uint32_t address, uint16_t value, ob_parm_struct *ob_parm)
1468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 3401              		.loc 1 1468 1
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 24
 3404              		@ frame_needed = 1, uses_anonymous_args = 0
 3405              		@ link register save eliminated.
 3406 0000 80B4     		push	{r7}
 3407              		.cfi_def_cfa_offset 4
 3408              		.cfi_offset 7, -4
 3409 0002 87B0     		sub	sp, sp, #28
 3410              		.cfi_def_cfa_offset 32
 3411 0004 00AF     		add	r7, sp, #0
 3412              		.cfi_def_cfa_register 7
 3413 0006 F860     		str	r0, [r7, #12]
 3414 0008 0B46     		mov	r3, r1
 3415 000a 7A60     		str	r2, [r7, #4]
 3416 000c 7B81     		strh	r3, [r7, #10]	@ movhi
1469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     uint8_t spc, user, data0, data1, wp0, wp1;
1470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* store the original option bytes */
1471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     spc = ob_parm->spc;
 3417              		.loc 1 1471 9
 3418 000e 7B68     		ldr	r3, [r7, #4]
 3419 0010 1B78     		ldrb	r3, [r3]
 3420 0012 FB75     		strb	r3, [r7, #23]
1472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     user = ob_parm->user;
 3421              		.loc 1 1472 10
 3422 0014 7B68     		ldr	r3, [r7, #4]
 3423 0016 5B78     		ldrb	r3, [r3, #1]
 3424 0018 BB75     		strb	r3, [r7, #22]
1473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     data0 = ob_parm->data0;
 3425              		.loc 1 1473 11
 3426 001a 7B68     		ldr	r3, [r7, #4]
 3427 001c 9B78     		ldrb	r3, [r3, #2]
 3428 001e 7B75     		strb	r3, [r7, #21]
1474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     data1 = ob_parm->data1;
 3429              		.loc 1 1474 11
 3430 0020 7B68     		ldr	r3, [r7, #4]
 3431 0022 DB78     		ldrb	r3, [r3, #3]
 3432 0024 3B75     		strb	r3, [r7, #20]
1475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     wp0 = ob_parm->wp0;
 3433              		.loc 1 1475 9
 3434 0026 7B68     		ldr	r3, [r7, #4]
 3435 0028 1B79     		ldrb	r3, [r3, #4]
 3436 002a FB74     		strb	r3, [r7, #19]
1476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     wp1 = ob_parm->wp1;
 3437              		.loc 1 1476 9
 3438 002c 7B68     		ldr	r3, [r7, #4]
 3439 002e 5B79     		ldrb	r3, [r3, #5]
 3440 0030 BB74     		strb	r3, [r7, #18]
1477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* bring in the target option byte */
1479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(OB_SPC_ADDR == address) {
 3441              		.loc 1 1479 7
 3442 0032 FB68     		ldr	r3, [r7, #12]
 3443 0034 294A     		ldr	r2, .L196
 3444 0036 9342     		cmp	r3, r2
 3445 0038 02D1     		bne	.L186
1480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         spc = (uint8_t)value;
 3446              		.loc 1 1480 13
 3447 003a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 3448 003c FB75     		strb	r3, [r7, #23]
 3449 003e 23E0     		b	.L187
 3450              	.L186:
1481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else if(OB_DATA_ADDR0 == address) {
 3451              		.loc 1 1481 14
 3452 0040 FB68     		ldr	r3, [r7, #12]
 3453 0042 274A     		ldr	r2, .L196+4
 3454 0044 9342     		cmp	r3, r2
 3455 0046 02D1     		bne	.L188
1482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data0 = (uint8_t)value;
 3456              		.loc 1 1482 15
 3457 0048 7B89     		ldrh	r3, [r7, #10]	@ movhi
 3458 004a 7B75     		strb	r3, [r7, #21]
 3459 004c 1CE0     		b	.L187
 3460              	.L188:
1483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else if(OB_DATA_ADDR1 == address) {
 3461              		.loc 1 1483 14
 3462 004e FB68     		ldr	r3, [r7, #12]
 3463 0050 244A     		ldr	r2, .L196+8
 3464 0052 9342     		cmp	r3, r2
 3465 0054 02D1     		bne	.L189
1484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         data1 = (uint8_t)value;
 3466              		.loc 1 1484 15
 3467 0056 7B89     		ldrh	r3, [r7, #10]	@ movhi
 3468 0058 3B75     		strb	r3, [r7, #20]
 3469 005a 15E0     		b	.L187
 3470              	.L189:
1485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else if(OB_USER_ADDR == address) {
 3471              		.loc 1 1485 14
 3472 005c FB68     		ldr	r3, [r7, #12]
 3473 005e 224A     		ldr	r2, .L196+12
 3474 0060 9342     		cmp	r3, r2
 3475 0062 05D1     		bne	.L190
1486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         user =  user & (uint8_t)value;
 3476              		.loc 1 1486 24
 3477 0064 7B89     		ldrh	r3, [r7, #10]	@ movhi
 3478 0066 DAB2     		uxtb	r2, r3
 3479              		.loc 1 1486 14
 3480 0068 BB7D     		ldrb	r3, [r7, #22]
 3481 006a 1340     		ands	r3, r3, r2
 3482 006c BB75     		strb	r3, [r7, #22]
 3483 006e 0BE0     		b	.L187
 3484              	.L190:
1487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
1488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp0 = wp0 & ((uint8_t)(value));
 3485              		.loc 1 1488 22
 3486 0070 7B89     		ldrh	r3, [r7, #10]	@ movhi
 3487 0072 DAB2     		uxtb	r2, r3
 3488              		.loc 1 1488 13
 3489 0074 FB7C     		ldrb	r3, [r7, #19]
 3490 0076 1340     		ands	r3, r3, r2
 3491 0078 FB74     		strb	r3, [r7, #19]
1489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         wp1 = wp1 & ((uint8_t)(value >> 8U));
 3492              		.loc 1 1489 22
 3493 007a 7B89     		ldrh	r3, [r7, #10]
 3494 007c 1B0A     		lsrs	r3, r3, #8
 3495 007e 9BB2     		uxth	r3, r3
 3496 0080 DAB2     		uxtb	r2, r3
 3497              		.loc 1 1489 13
 3498 0082 BB7C     		ldrb	r3, [r7, #18]
 3499 0084 1340     		ands	r3, r3, r2
 3500 0086 BB74     		strb	r3, [r7, #18]
 3501              	.L187:
1490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* basing on original value, modify the target option byte */
1492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     OB_SPC = spc;
 3502              		.loc 1 1492 5
 3503 0088 144B     		ldr	r3, .L196
 3504              		.loc 1 1492 12
 3505 008a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 3506 008c 92B2     		uxth	r2, r2
 3507 008e 1A80     		strh	r2, [r3]	@ movhi
1493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     OB_USER = user;
 3508              		.loc 1 1493 5
 3509 0090 154B     		ldr	r3, .L196+12
 3510              		.loc 1 1493 13
 3511 0092 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3512 0094 92B2     		uxth	r2, r2
 3513 0096 1A80     		strh	r2, [r3]	@ movhi
1494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0xFFU != data0) {
 3514              		.loc 1 1494 7
 3515 0098 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 3516 009a FF2B     		cmp	r3, #255
 3517 009c 03D0     		beq	.L191
1495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         OB_DATA0 = data0;
 3518              		.loc 1 1495 9
 3519 009e 104B     		ldr	r3, .L196+4
 3520              		.loc 1 1495 18
 3521 00a0 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 3522 00a2 92B2     		uxth	r2, r2
 3523 00a4 1A80     		strh	r2, [r3]	@ movhi
 3524              	.L191:
1496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0xFFU != data1) {
 3525              		.loc 1 1497 7
 3526 00a6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 3527 00a8 FF2B     		cmp	r3, #255
 3528 00aa 03D0     		beq	.L192
1498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         OB_DATA1 = data1;
 3529              		.loc 1 1498 9
 3530 00ac 0D4B     		ldr	r3, .L196+8
 3531              		.loc 1 1498 18
 3532 00ae 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 3533 00b0 92B2     		uxth	r2, r2
 3534 00b2 1A80     		strh	r2, [r3]	@ movhi
 3535              	.L192:
1499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0xFFU != wp0) {
 3536              		.loc 1 1500 7
 3537 00b4 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3538 00b6 FF2B     		cmp	r3, #255
 3539 00b8 03D0     		beq	.L193
1501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         OB_WP0 = wp0;
 3540              		.loc 1 1501 9
 3541 00ba 0C4B     		ldr	r3, .L196+16
 3542              		.loc 1 1501 16
 3543 00bc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 3544 00be 92B2     		uxth	r2, r2
 3545 00c0 1A80     		strh	r2, [r3]	@ movhi
 3546              	.L193:
1502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(0xFFU != wp1) {
 3547              		.loc 1 1503 7
 3548 00c2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 3549 00c4 FF2B     		cmp	r3, #255
 3550 00c6 03D0     		beq	.L195
1504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         OB_WP1 = wp1;
 3551              		.loc 1 1504 9
 3552 00c8 094B     		ldr	r3, .L196+20
 3553              		.loc 1 1504 16
 3554 00ca BA7C     		ldrb	r2, [r7, #18]	@ zero_extendqisi2
 3555 00cc 92B2     		uxth	r2, r2
 3556 00ce 1A80     		strh	r2, [r3]	@ movhi
 3557              	.L195:
1505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3558              		.loc 1 1506 1
 3559 00d0 00BF     		nop
 3560 00d2 1C37     		adds	r7, r7, #28
 3561              		.cfi_def_cfa_offset 4
 3562 00d4 BD46     		mov	sp, r7
 3563              		.cfi_def_cfa_register 13
 3564              		@ sp needed
 3565 00d6 80BC     		pop	{r7}
 3566              		.cfi_restore 7
 3567              		.cfi_def_cfa_offset 0
 3568 00d8 7047     		bx	lr
 3569              	.L197:
 3570 00da 00BF     		.align	2
 3571              	.L196:
 3572 00dc 00F8FF1F 		.word	536868864
 3573 00e0 04F8FF1F 		.word	536868868
 3574 00e4 06F8FF1F 		.word	536868870
 3575 00e8 02F8FF1F 		.word	536868866
 3576 00ec 08F8FF1F 		.word	536868872
 3577 00f0 0AF8FF1F 		.word	536868874
 3578              		.cfi_endproc
 3579              	.LFE149:
 3581              		.section	.text._fmc_state_get,"ax",%progbits
 3582              		.align	1
 3583              		.global	_fmc_state_get
 3584              		.syntax unified
 3585              		.thumb
 3586              		.thumb_func
 3587              		.fpu softvfp
 3589              	_fmc_state_get:
 3590              	.LFB150:
1507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      get the FMC state
1510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  none
1511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     fmc_state
1513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** fmc_state_enum _fmc_state_get(void)
1515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 3591              		.loc 1 1515 1
 3592              		.cfi_startproc
 3593              		@ args = 0, pretend = 0, frame = 8
 3594              		@ frame_needed = 1, uses_anonymous_args = 0
 3595              		@ link register save eliminated.
 3596 0000 80B4     		push	{r7}
 3597              		.cfi_def_cfa_offset 4
 3598              		.cfi_offset 7, -4
 3599 0002 83B0     		sub	sp, sp, #12
 3600              		.cfi_def_cfa_offset 16
 3601 0004 00AF     		add	r7, sp, #0
 3602              		.cfi_def_cfa_register 7
1516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     fmc_state_enum fmc_state = FMC_READY;
 3603              		.loc 1 1516 20
 3604 0006 0023     		movs	r3, #0
 3605 0008 FB71     		strb	r3, [r7, #7]
1517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if((uint32_t)0x00U != (FMC_STAT & FMC_STAT_BUSY)) {
 3606              		.loc 1 1518 28
 3607 000a 104B     		ldr	r3, .L203
 3608 000c 1B68     		ldr	r3, [r3]
 3609              		.loc 1 1518 37
 3610 000e 03F00103 		and	r3, r3, #1
 3611              		.loc 1 1518 7
 3612 0012 002B     		cmp	r3, #0
 3613 0014 02D0     		beq	.L199
1519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         fmc_state = FMC_BUSY;
 3614              		.loc 1 1519 19
 3615 0016 0123     		movs	r3, #1
 3616 0018 FB71     		strb	r3, [r7, #7]
 3617 001a 10E0     		b	.L200
 3618              	.L199:
1520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     } else {
1521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         if((uint32_t)0x00U != (FMC_STAT & FMC_STAT_WPERR)) {
 3619              		.loc 1 1521 32
 3620 001c 0B4B     		ldr	r3, .L203
 3621 001e 1B68     		ldr	r3, [r3]
 3622              		.loc 1 1521 41
 3623 0020 03F01003 		and	r3, r3, #16
 3624              		.loc 1 1521 11
 3625 0024 002B     		cmp	r3, #0
 3626 0026 02D0     		beq	.L201
1522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             fmc_state = FMC_WPERR;
 3627              		.loc 1 1522 23
 3628 0028 0323     		movs	r3, #3
 3629 002a FB71     		strb	r3, [r7, #7]
 3630 002c 07E0     		b	.L200
 3631              	.L201:
1523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         } else {
1524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             if((uint32_t)0x00U != (FMC_STAT & FMC_STAT_PGERR)) {
 3632              		.loc 1 1524 36
 3633 002e 074B     		ldr	r3, .L203
 3634 0030 1B68     		ldr	r3, [r3]
 3635              		.loc 1 1524 45
 3636 0032 03F00403 		and	r3, r3, #4
 3637              		.loc 1 1524 15
 3638 0036 002B     		cmp	r3, #0
 3639 0038 01D0     		beq	.L200
1525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 fmc_state = FMC_PGERR;
 3640              		.loc 1 1525 27
 3641 003a 0223     		movs	r3, #2
 3642 003c FB71     		strb	r3, [r7, #7]
 3643              	.L200:
1526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****             }
1527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         }
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the FMC state */
1530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return fmc_state;
 3644              		.loc 1 1530 12
 3645 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3646              		.loc 1 1531 1
 3647 0040 1846     		mov	r0, r3
 3648 0042 0C37     		adds	r7, r7, #12
 3649              		.cfi_def_cfa_offset 4
 3650 0044 BD46     		mov	sp, r7
 3651              		.cfi_def_cfa_register 13
 3652              		@ sp needed
 3653 0046 80BC     		pop	{r7}
 3654              		.cfi_restore 7
 3655              		.cfi_def_cfa_offset 0
 3656 0048 7047     		bx	lr
 3657              	.L204:
 3658 004a 00BF     		.align	2
 3659              	.L203:
 3660 004c 0C200240 		.word	1073881100
 3661              		.cfi_endproc
 3662              	.LFE150:
 3664              		.section	.text._fmc_flag_get,"ax",%progbits
 3665              		.align	1
 3666              		.global	_fmc_flag_get
 3667              		.syntax unified
 3668              		.thumb
 3669              		.thumb_func
 3670              		.fpu softvfp
 3672              	_fmc_flag_get:
 3673              	.LFB151:
1532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      get FMC flag
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  flag: FMC flag
1536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 only one parameter can be selected which is shown as below:
1537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_BUSY: FMC busy flag
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_PGERR: FMC programming error flag
1539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_WPERR: FMC write protection error flag
1540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_END: FMC end of programming flag
1541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     FlagStatus: SET or RESET
1543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** FlagStatus _fmc_flag_get(uint32_t flag)
1545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 3674              		.loc 1 1545 1
 3675              		.cfi_startproc
 3676              		@ args = 0, pretend = 0, frame = 16
 3677              		@ frame_needed = 1, uses_anonymous_args = 0
 3678              		@ link register save eliminated.
 3679 0000 80B4     		push	{r7}
 3680              		.cfi_def_cfa_offset 4
 3681              		.cfi_offset 7, -4
 3682 0002 85B0     		sub	sp, sp, #20
 3683              		.cfi_def_cfa_offset 24
 3684 0004 00AF     		add	r7, sp, #0
 3685              		.cfi_def_cfa_register 7
 3686 0006 7860     		str	r0, [r7, #4]
1546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FlagStatus status = RESET;
 3687              		.loc 1 1546 16
 3688 0008 0023     		movs	r3, #0
 3689 000a FB73     		strb	r3, [r7, #15]
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_STAT & flag) {
 3690              		.loc 1 1548 8
 3691 000c 064B     		ldr	r3, .L208
 3692 000e 1A68     		ldr	r2, [r3]
 3693              		.loc 1 1548 17
 3694 0010 7B68     		ldr	r3, [r7, #4]
 3695 0012 1340     		ands	r3, r3, r2
 3696              		.loc 1 1548 7
 3697 0014 002B     		cmp	r3, #0
 3698 0016 01D0     		beq	.L206
1549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         status = SET;
 3699              		.loc 1 1549 16
 3700 0018 0123     		movs	r3, #1
 3701 001a FB73     		strb	r3, [r7, #15]
 3702              	.L206:
1550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the state of corresponding FMC flag */
1552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return status;
 3703              		.loc 1 1552 12
 3704 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3705              		.loc 1 1553 1
 3706 001e 1846     		mov	r0, r3
 3707 0020 1437     		adds	r7, r7, #20
 3708              		.cfi_def_cfa_offset 4
 3709 0022 BD46     		mov	sp, r7
 3710              		.cfi_def_cfa_register 13
 3711              		@ sp needed
 3712 0024 80BC     		pop	{r7}
 3713              		.cfi_restore 7
 3714              		.cfi_def_cfa_offset 0
 3715 0026 7047     		bx	lr
 3716              	.L209:
 3717              		.align	2
 3718              	.L208:
 3719 0028 0C200240 		.word	1073881100
 3720              		.cfi_endproc
 3721              	.LFE151:
 3723              		.section	.text._fmc_interrupt_flag_get,"ax",%progbits
 3724              		.align	1
 3725              		.global	_fmc_interrupt_flag_get
 3726              		.syntax unified
 3727              		.thumb
 3728              		.thumb_func
 3729              		.fpu softvfp
 3731              	_fmc_interrupt_flag_get:
 3732              	.LFB152:
1554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** /*!
1556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \brief      get flag set or reset
1557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[in]  flag: check FMC flag
1558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****                 only one parameter can be selected which is shown as below:
1559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_PGERR: FMC programming error flag
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_WPERR: FMC write protection error flag
1561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****       \arg        FMC_FLAG_END: FMC end of programming flag
1562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \param[out] none
1563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     \retval     FlagStatus: SET or RESET
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** */
1565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** FlagStatus _fmc_interrupt_flag_get(uint32_t flag)
1566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** {
 3733              		.loc 1 1566 1
 3734              		.cfi_startproc
 3735              		@ args = 0, pretend = 0, frame = 16
 3736              		@ frame_needed = 1, uses_anonymous_args = 0
 3737              		@ link register save eliminated.
 3738 0000 80B4     		push	{r7}
 3739              		.cfi_def_cfa_offset 4
 3740              		.cfi_offset 7, -4
 3741 0002 85B0     		sub	sp, sp, #20
 3742              		.cfi_def_cfa_offset 24
 3743 0004 00AF     		add	r7, sp, #0
 3744              		.cfi_def_cfa_register 7
 3745 0006 7860     		str	r0, [r7, #4]
1567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     FlagStatus status = RESET;
 3746              		.loc 1 1567 16
 3747 0008 0023     		movs	r3, #0
 3748 000a FB73     		strb	r3, [r7, #15]
1568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** 
1569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     if(FMC_STAT & flag) {
 3749              		.loc 1 1569 8
 3750 000c 064B     		ldr	r3, .L213
 3751 000e 1A68     		ldr	r2, [r3]
 3752              		.loc 1 1569 17
 3753 0010 7B68     		ldr	r3, [r7, #4]
 3754 0012 1340     		ands	r3, r3, r2
 3755              		.loc 1 1569 7
 3756 0014 002B     		cmp	r3, #0
 3757 0016 01D0     		beq	.L211
1570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****         status = SET;
 3758              		.loc 1 1570 16
 3759 0018 0123     		movs	r3, #1
 3760 001a FB73     		strb	r3, [r7, #15]
 3761              	.L211:
1571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     }
1572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     /* return the state of corresponding FMC flag */
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c ****     return status;
 3762              		.loc 1 1573 12
 3763 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_fmc.c **** }
 3764              		.loc 1 1574 1
 3765 001e 1846     		mov	r0, r3
 3766 0020 1437     		adds	r7, r7, #20
 3767              		.cfi_def_cfa_offset 4
 3768 0022 BD46     		mov	sp, r7
 3769              		.cfi_def_cfa_register 13
 3770              		@ sp needed
 3771 0024 80BC     		pop	{r7}
 3772              		.cfi_restore 7
 3773              		.cfi_def_cfa_offset 0
 3774 0026 7047     		bx	lr
 3775              	.L214:
 3776              		.align	2
 3777              	.L213:
 3778 0028 0C200240 		.word	1073881100
 3779              		.cfi_endproc
 3780              	.LFE152:
 3782              		.text
 3783              	.Letext0:
 3784              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3785              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3786              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3787              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3788              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3789              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 3790              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 3791              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 3792              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 3793              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 3794              		.file 12 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 3795              		.file 13 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_fmc.h"
 3796              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 3797              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_exti.h"
 3798              		.file 16 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_sys.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_fmc.c
                            *COM*:00000004 p_irq
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:17     .text.hal_fmc_unlock:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:25     .text.hal_fmc_unlock:00000000 hal_fmc_unlock
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:84     .text.hal_fmc_unlock:00000038 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:92     .text.hal_fmc_lock:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:99     .text.hal_fmc_lock:00000000 hal_fmc_lock
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:131    .text.hal_fmc_lock:0000001c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:136    .text.hal_fmc_wait_state_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:143    .text.hal_fmc_wait_state_enable:00000000 hal_fmc_wait_state_enable
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:171    .text.hal_fmc_wait_state_enable:0000001c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:176    .text.hal_fmc_wait_state_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:183    .text.hal_fmc_wait_state_disable:00000000 hal_fmc_wait_state_disable
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:211    .text.hal_fmc_wait_state_disable:0000001c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:216    .text.hal_fmc_ready_wait:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:223    .text.hal_fmc_ready_wait:00000000 hal_fmc_ready_wait
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3589   .text._fmc_state_get:00000000 _fmc_state_get
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:281    .text.hal_fmc_wscnt_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:288    .text.hal_fmc_wscnt_set:00000000 hal_fmc_wscnt_set
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:336    .text.hal_fmc_wscnt_set:0000002c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:341    .text.hal_fmc_region_read:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:348    .text.hal_fmc_region_read:00000000 hal_fmc_region_read
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:411    .text.hal_fmc_word_program:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:418    .text.hal_fmc_word_program:00000000 hal_fmc_word_program
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:479    .text.hal_fmc_word_program:00000050 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:484    .text.hal_fmc_halfword_program:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:491    .text.hal_fmc_halfword_program:00000000 hal_fmc_halfword_program
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:553    .text.hal_fmc_halfword_program:00000054 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:558    .text.hal_fmc_region_write:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:565    .text.hal_fmc_region_write:00000000 hal_fmc_region_write
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3320   .text._fmc_page_erase:00000000 _fmc_page_erase
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3093   .text._fmc_program_align_word:00000000 _fmc_program_align_word
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:698    .text.hal_fmc_page_erase:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:705    .text.hal_fmc_page_erase:00000000 hal_fmc_page_erase
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:749    .text.hal_fmc_mass_erase:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:756    .text.hal_fmc_mass_erase:00000000 hal_fmc_mass_erase
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:816    .text.hal_fmc_mass_erase:00000054 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:821    .text.hal_fmc_region_erase:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:828    .text.hal_fmc_region_erase:00000000 hal_fmc_region_erase
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:922    .text.hal_fmc_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:929    .text.hal_fmc_irq:00000000 hal_fmc_irq
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3731   .text._fmc_interrupt_flag_get:00000000 _fmc_interrupt_flag_get
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1003   .text.hal_fmc_irq:0000005c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1008   .text.hal_fmc_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1015   .text.hal_fmc_irq_handle_set:00000000 hal_fmc_irq_handle_set
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1098   .text.hal_fmc_irq_handle_set:00000064 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1103   .text.hal_fmc_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1110   .text.hal_fmc_irq_handle_all_reset:00000000 hal_fmc_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1148   .text.hal_ob_unlock:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1155   .text.hal_ob_unlock:00000000 hal_ob_unlock
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1198   .text.hal_ob_unlock:00000024 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1206   .text.hal_ob_lock:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1213   .text.hal_ob_lock:00000000 hal_ob_lock
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1243   .text.hal_ob_lock:00000018 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1248   .text.hal_ob_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1255   .text.hal_ob_reset:00000000 hal_ob_reset
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1285   .text.hal_ob_reset:00000018 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1290   .text.hal_ob_erase:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1297   .text.hal_ob_erase:00000000 hal_ob_erase
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1435   .text.hal_ob_erase:000000cc $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1443   .text.hal_ob_security_protection_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1450   .text.hal_ob_security_protection_config:00000000 hal_ob_security_protection_config
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2261   .text.hal_ob_parm_get:00000000 hal_ob_parm_get
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3399   .text._ob_value_modify:00000000 _ob_value_modify
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1572   .text.hal_ob_security_protection_config:000000c4 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1579   .text.hal_ob_user_write:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1586   .text.hal_ob_user_write:00000000 hal_ob_user_write
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1696   .text.hal_ob_user_write:000000b4 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1702   .text.hal_ob_data_program:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1709   .text.hal_ob_data_program:00000000 hal_ob_data_program
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1861   .text.hal_ob_data_program:00000100 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1866   .text.hal_ob_wp_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:1873   .text.hal_ob_wp_enable:00000000 hal_ob_wp_enable
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2363   .text.hal_ob_write_protection_enable:00000000 hal_ob_write_protection_enable
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2070   .text.hal_ob_wp_enable:00000124 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2076   .text.hal_ob_wp_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2083   .text.hal_ob_wp_disable:00000000 hal_ob_wp_disable
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2248   .text.hal_ob_wp_disable:000000f4 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2254   .text.hal_ob_parm_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2350   .text.hal_ob_parm_get:00000060 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2356   .text.hal_ob_write_protection_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2559   .text.hal_ob_write_protection_enable:00000140 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2566   .text.hal_ob_parm_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2573   .text.hal_ob_parm_config:00000000 hal_ob_parm_config
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2808   .text.hal_ob_parm_config:0000014c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:2816   .text.hal_ob_parm_config:00000164 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3076   .text.hal_ob_parm_config:00000334 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3087   .text._fmc_program_align_word:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3313   .text._fmc_page_erase:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3386   .text._fmc_page_erase:0000005c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3392   .text._ob_value_modify:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3572   .text._ob_value_modify:000000dc $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3582   .text._fmc_state_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3660   .text._fmc_state_get:0000004c $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3665   .text._fmc_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3672   .text._fmc_flag_get:00000000 _fmc_flag_get
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3719   .text._fmc_flag_get:00000028 $d
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3724   .text._fmc_interrupt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cczpBb7S.s:3778   .text._fmc_interrupt_flag_get:00000028 $d
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

NO UNDEFINED SYMBOLS
