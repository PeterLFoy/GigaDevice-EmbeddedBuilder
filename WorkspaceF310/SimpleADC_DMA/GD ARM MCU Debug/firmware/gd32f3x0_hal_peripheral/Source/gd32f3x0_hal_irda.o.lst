   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_irda.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hal_irda_struct_init,"ax",%progbits
  16              		.align	1
  17              		.global	hal_irda_struct_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hal_irda_struct_init:
  25              	.LFB119:
  26              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \file    gd32f3x0_hal_irda.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief   IRDA driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static uint16_t _irda_data_bit_mask_get(hal_irda_dev_struct *irda);
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static FlagStatus _irda_error_flag_get(hal_irda_dev_struct *irda);
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_transmit_complete_interrupt(void *irda);
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_transmit_interrupt(void *irda);
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_receive_interrupt(void *irda);
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_transmit_dma(void *dma);
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_receive_dma(void *dma);
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_dma_error(void *dma);
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      initialize the irda structure with the default values
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 note: this function must be called after the structure is created
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  hal_struct_type: type of irda structure for initialization
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        HAL_IRDA_INIT_STRUCT: initialization structure
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        HAL_IRDA_DEV_STRUCT: device information structure
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        HAL_IRDA_USER_CALLBCAK_STRUCT: user callback structure
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_struct: structure pointer
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hal_irda_struct_init(hal_irda_struct_type_enum hal_struct_type, void *p_struct)
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
  27              		.loc 1 58 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 3960     		str	r1, [r7]
  41 000a FB71     		strb	r3, [r7, #7]
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == p_struct) {
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [*p_struct] value is invalid");
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return;
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     switch(hal_struct_type) {
  42              		.loc 1 66 5
  43 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  44 000e 022B     		cmp	r3, #2
  45 0010 62D0     		beq	.L2
  46 0012 022B     		cmp	r3, #2
  47 0014 67DC     		bgt	.L7
  48 0016 002B     		cmp	r3, #0
  49 0018 02D0     		beq	.L4
  50 001a 012B     		cmp	r3, #1
  51 001c 17D0     		beq	.L5
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case HAL_IRDA_INIT_STRUCT:
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* initialize irda initialization structure with the default values */
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->baudrate     = 115200U;
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->parity       = IRDA_PARITY_NONE;
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->word_length  = IRDA_WORD_LENGTH_8BIT;
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->direction    = IRDA_DIRECTION_RX_TX;
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->rx_fifo_en   = DISABLE;
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->mode         = IRDA_NORMAL_MODE;
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->prescaler    = 1U;
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case HAL_IRDA_DEV_STRUCT:
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* initialize irda device information structure with the default values */
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->periph = 0U;
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.error_handle = NULL;
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.receive_complete_handle = NULL;
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.transmit_complete_handle = NULL;
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.transmit_ready_handle = NULL;
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->p_dma_rx          = NULL;
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->p_dma_tx          = NULL;
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->txbuffer.buffer   = NULL;
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->txbuffer.length   = 0U;
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->txbuffer.pos      = 0U;
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rxbuffer.buffer   = NULL;
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rxbuffer.length   = 0U;
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rxbuffer.pos      = 0U;
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->data_bit_mask      = 0U;
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->last_error        = HAL_IRDA_ERROR_NONE;
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->error_state       = HAL_IRDA_ERROR_NONE;
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->tx_state          = IRDA_STATE_FREE;
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rx_state          = IRDA_STATE_FREE;
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rx_callback       = NULL;
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->tx_callback       = NULL;
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->mutex             = HAL_MUTEX_UNLOCKED;
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->priv              = NULL;
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case HAL_IRDA_USER_CALLBCAK_STRUCT:
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* initialize user callback structure with the default values */
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_user_callback_struct *)p_struct)->complete_func = NULL;
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_user_callback_struct *)p_struct)->error_func = NULL;
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     default:
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGW("parameter [hal_struct_type] value is undefine");
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
  52              		.loc 1 111 9
  53 001e 62E0     		b	.L7
  54              	.L4:
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->parity       = IRDA_PARITY_NONE;
  55              		.loc 1 69 58
  56 0020 3B68     		ldr	r3, [r7]
  57 0022 4FF4E132 		mov	r2, #115200
  58 0026 1A60     		str	r2, [r3]
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->word_length  = IRDA_WORD_LENGTH_8BIT;
  59              		.loc 1 70 58
  60 0028 3B68     		ldr	r3, [r7]
  61 002a 0022     		movs	r2, #0
  62 002c 5A60     		str	r2, [r3, #4]
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->direction    = IRDA_DIRECTION_RX_TX;
  63              		.loc 1 71 58
  64 002e 3B68     		ldr	r3, [r7]
  65 0030 0022     		movs	r2, #0
  66 0032 9A60     		str	r2, [r3, #8]
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->rx_fifo_en   = DISABLE;
  67              		.loc 1 72 58
  68 0034 3B68     		ldr	r3, [r7]
  69 0036 0C22     		movs	r2, #12
  70 0038 DA60     		str	r2, [r3, #12]
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->mode         = IRDA_NORMAL_MODE;
  71              		.loc 1 73 58
  72 003a 3B68     		ldr	r3, [r7]
  73 003c 0022     		movs	r2, #0
  74 003e 1A74     		strb	r2, [r3, #16]
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_init_struct *)p_struct)->prescaler    = 1U;
  75              		.loc 1 74 58
  76 0040 3B68     		ldr	r3, [r7]
  77 0042 0022     		movs	r2, #0
  78 0044 5A61     		str	r2, [r3, #20]
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
  79              		.loc 1 75 58
  80 0046 3B68     		ldr	r3, [r7]
  81 0048 0122     		movs	r2, #1
  82 004a 1A76     		strb	r2, [r3, #24]
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
  83              		.loc 1 76 9
  84 004c 4CE0     		b	.L6
  85              	.L5:
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.error_handle = NULL;
  86              		.loc 1 80 51
  87 004e 3B68     		ldr	r3, [r7]
  88 0050 0022     		movs	r2, #0
  89 0052 1A60     		str	r2, [r3]
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.receive_complete_handle = NULL;
  90              		.loc 1 81 66
  91 0054 3B68     		ldr	r3, [r7]
  92 0056 0022     		movs	r2, #0
  93 0058 1A61     		str	r2, [r3, #16]
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.transmit_complete_handle = NULL;
  94              		.loc 1 82 77
  95 005a 3B68     		ldr	r3, [r7]
  96 005c 0022     		movs	r2, #0
  97 005e 5A60     		str	r2, [r3, #4]
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->irda_irq.transmit_ready_handle = NULL;
  98              		.loc 1 83 78
  99 0060 3B68     		ldr	r3, [r7]
 100 0062 0022     		movs	r2, #0
 101 0064 DA60     		str	r2, [r3, #12]
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->p_dma_rx          = NULL;
 102              		.loc 1 84 75
 103 0066 3B68     		ldr	r3, [r7]
 104 0068 0022     		movs	r2, #0
 105 006a 9A60     		str	r2, [r3, #8]
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->p_dma_tx          = NULL;
 106              		.loc 1 85 62
 107 006c 3B68     		ldr	r3, [r7]
 108 006e 0022     		movs	r2, #0
 109 0070 5A61     		str	r2, [r3, #20]
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->txbuffer.buffer   = NULL;
 110              		.loc 1 86 62
 111 0072 3B68     		ldr	r3, [r7]
 112 0074 0022     		movs	r2, #0
 113 0076 9A61     		str	r2, [r3, #24]
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->txbuffer.length   = 0U;
 114              		.loc 1 87 62
 115 0078 3B68     		ldr	r3, [r7]
 116 007a 0022     		movs	r2, #0
 117 007c DA61     		str	r2, [r3, #28]
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->txbuffer.pos      = 0U;
 118              		.loc 1 88 62
 119 007e 3B68     		ldr	r3, [r7]
 120 0080 0022     		movs	r2, #0
 121 0082 1A62     		str	r2, [r3, #32]
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rxbuffer.buffer   = NULL;
 122              		.loc 1 89 62
 123 0084 3B68     		ldr	r3, [r7]
 124 0086 0022     		movs	r2, #0
 125 0088 5A62     		str	r2, [r3, #36]
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rxbuffer.length   = 0U;
 126              		.loc 1 90 62
 127 008a 3B68     		ldr	r3, [r7]
 128 008c 0022     		movs	r2, #0
 129 008e 9A62     		str	r2, [r3, #40]
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rxbuffer.pos      = 0U;
 130              		.loc 1 91 62
 131 0090 3B68     		ldr	r3, [r7]
 132 0092 0022     		movs	r2, #0
 133 0094 DA62     		str	r2, [r3, #44]
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->data_bit_mask      = 0U;
 134              		.loc 1 92 62
 135 0096 3B68     		ldr	r3, [r7]
 136 0098 0022     		movs	r2, #0
 137 009a 1A63     		str	r2, [r3, #48]
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->last_error        = HAL_IRDA_ERROR_NONE;
 138              		.loc 1 93 63
 139 009c 3B68     		ldr	r3, [r7]
 140 009e 0022     		movs	r2, #0
 141 00a0 9A86     		strh	r2, [r3, #52]	@ movhi
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->error_state       = HAL_IRDA_ERROR_NONE;
 142              		.loc 1 94 62
 143 00a2 3B68     		ldr	r3, [r7]
 144 00a4 0022     		movs	r2, #0
 145 00a6 DA86     		strh	r2, [r3, #54]	@ movhi
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->tx_state          = IRDA_STATE_FREE;
 146              		.loc 1 95 62
 147 00a8 3B68     		ldr	r3, [r7]
 148 00aa 0022     		movs	r2, #0
 149 00ac 1A87     		strh	r2, [r3, #56]	@ movhi
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rx_state          = IRDA_STATE_FREE;
 150              		.loc 1 96 62
 151 00ae 3B68     		ldr	r3, [r7]
 152 00b0 0022     		movs	r2, #0
 153 00b2 83F83A20 		strb	r2, [r3, #58]
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->rx_callback       = NULL;
 154              		.loc 1 97 62
 155 00b6 3B68     		ldr	r3, [r7]
 156 00b8 0022     		movs	r2, #0
 157 00ba 83F83B20 		strb	r2, [r3, #59]
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->tx_callback       = NULL;
 158              		.loc 1 98 62
 159 00be 3B68     		ldr	r3, [r7]
 160 00c0 0022     		movs	r2, #0
 161 00c2 DA63     		str	r2, [r3, #60]
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->mutex             = HAL_MUTEX_UNLOCKED;
 162              		.loc 1 99 62
 163 00c4 3B68     		ldr	r3, [r7]
 164 00c6 0022     		movs	r2, #0
 165 00c8 1A64     		str	r2, [r3, #64]
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_dev_struct *)p_struct)->priv              = NULL;
 166              		.loc 1 100 62
 167 00ca 3B68     		ldr	r3, [r7]
 168 00cc 0022     		movs	r2, #0
 169 00ce 83F84420 		strb	r2, [r3, #68]
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 170              		.loc 1 101 62
 171 00d2 3B68     		ldr	r3, [r7]
 172 00d4 0022     		movs	r2, #0
 173 00d6 9A64     		str	r2, [r3, #72]
 174              	.L2:
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         ((hal_irda_user_callback_struct *)p_struct)->error_func = NULL;
 175              		.loc 1 105 68
 176 00d8 3B68     		ldr	r3, [r7]
 177 00da 0022     		movs	r2, #0
 178 00dc 1A60     		str	r2, [r3]
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 179              		.loc 1 106 65
 180 00de 3B68     		ldr	r3, [r7]
 181 00e0 0022     		movs	r2, #0
 182 00e2 5A60     		str	r2, [r3, #4]
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 183              		.loc 1 107 9
 184 00e4 00E0     		b	.L6
 185              	.L7:
 186              		.loc 1 111 9
 187 00e6 00BF     		nop
 188              	.L6:
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 189              		.loc 1 113 1
 190 00e8 00BF     		nop
 191 00ea 0C37     		adds	r7, r7, #12
 192              		.cfi_def_cfa_offset 4
 193 00ec BD46     		mov	sp, r7
 194              		.cfi_def_cfa_register 13
 195              		@ sp needed
 196 00ee 80BC     		pop	{r7}
 197              		.cfi_restore 7
 198              		.cfi_def_cfa_offset 0
 199 00f0 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE119:
 203              		.section	.text.hal_irda_deinit,"ax",%progbits
 204              		.align	1
 205              		.global	hal_irda_deinit
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	hal_irda_deinit:
 212              	.LFB120:
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      deinitialize irda
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hal_irda_deinit(hal_irda_dev_struct *irda)
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 213              		.loc 1 124 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 84B0     		sub	sp, sp, #16
 222              		.cfi_def_cfa_offset 24
 223 0004 00AF     		add	r7, sp, #0
 224              		.cfi_def_cfa_register 7
 225 0006 7860     		str	r0, [r7, #4]
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t periph;
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     periph = irda->periph;
 226              		.loc 1 127 12
 227 0008 7B68     		ldr	r3, [r7, #4]
 228 000a 1B68     		ldr	r3, [r3]
 229 000c FB60     		str	r3, [r7, #12]
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(USART0 == periph) {
 230              		.loc 1 128 7
 231 000e FB68     		ldr	r3, [r7, #12]
 232 0010 084A     		ldr	r2, .L11
 233 0012 9342     		cmp	r3, r2
 234 0014 09D1     		bne	.L10
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* deinitialize the periph and the device information sturcture */
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_deinit(periph);
 235              		.loc 1 130 9
 236 0016 F868     		ldr	r0, [r7, #12]
 237 0018 FFF7FEFF 		bl	hals_irda_deinit
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hal_irda_struct_init(HAL_IRDA_DEV_STRUCT, irda);
 238              		.loc 1 131 9
 239 001c 7968     		ldr	r1, [r7, #4]
 240 001e 0120     		movs	r0, #1
 241 0020 FFF7FEFF 		bl	hal_irda_struct_init
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->periph = periph;
 242              		.loc 1 132 22
 243 0024 7B68     		ldr	r3, [r7, #4]
 244 0026 FA68     		ldr	r2, [r7, #12]
 245 0028 1A60     		str	r2, [r3]
 246              	.L10:
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda->periph] value is invalid");
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 247              		.loc 1 136 1
 248 002a 00BF     		nop
 249 002c 1037     		adds	r7, r7, #16
 250              		.cfi_def_cfa_offset 8
 251 002e BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0030 80BD     		pop	{r7, pc}
 255              	.L12:
 256 0032 00BF     		.align	2
 257              	.L11:
 258 0034 00380140 		.word	1073821696
 259              		.cfi_endproc
 260              	.LFE120:
 262              		.section	.text.hal_irda_init,"ax",%progbits
 263              		.align	1
 264              		.global	hal_irda_init
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	hal_irda_init:
 271              	.LFB121:
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      initialize irda
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  periph: specify which IRDA is initialized, USART0 only
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_init: the initialization data needed to initialize irda
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   baudrate: communication baudrate
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   parity: IRDA_PARITY_NONE, IRDA_PARITY_EVEN, IRDA_PARITY_ODD
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   word_length: IRDA_WORD_LENGTH_8BIT, IRDA_WORD_LENGTH_9BIT
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   direction: IRDA_DIRECTION_RX_TX, IRDA_DIRECTION_RX_ONLY, IRDA_DIRECTION_TX_ONLY
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   mode: IRDA_NORMAL_MODE, IRDA_LOW_POWER_MODE
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   prescaler: 1 - 255
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_init(hal_irda_dev_struct *irda, uint32_t periph, hal_irda_init_struct *p_init)
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 272              		.loc 1 155 1
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 24
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 86B0     		sub	sp, sp, #24
 281              		.cfi_def_cfa_offset 32
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 284 0006 F860     		str	r0, [r7, #12]
 285 0008 B960     		str	r1, [r7, #8]
 286 000a 7A60     		str	r2, [r7, #4]
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t reg_temp;
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check irda pointer and p_init address */
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_init)) {
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("pointer [irda] or [p_init] address is invalid");
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check periph parameter */
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(USART0 != periph) {
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [periph] value is invalid");
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_VAL;
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check periph value from irda device struct */
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(0U != irda->periph) {
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGI("periph value from irda device struct has been rewrite");
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 287              		.loc 1 178 5
 288 000c FB68     		ldr	r3, [r7, #12]
 289 000e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 290 0012 012B     		cmp	r3, #1
 291 0014 02D1     		bne	.L14
 292              		.loc 1 178 5 is_stmt 0 discriminator 1
 293 0016 6FF00103 		mvn	r3, #1
 294 001a 70E0     		b	.L15
 295              	.L14:
 296              		.loc 1 178 5 discriminator 2
 297 001c FB68     		ldr	r3, [r7, #12]
 298 001e 0122     		movs	r2, #1
 299 0020 83F84420 		strb	r2, [r3, #68]
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->periph = periph;
 300              		.loc 1 180 18 is_stmt 1 discriminator 2
 301 0024 FB68     		ldr	r3, [r7, #12]
 302 0026 BA68     		ldr	r2, [r7, #8]
 303 0028 1A60     		str	r2, [r3]
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable irda */
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_disable(periph);
 304              		.loc 1 183 5 discriminator 2
 305 002a B868     		ldr	r0, [r7, #8]
 306 002c FFF7FEFF 		bl	hals_irda_disable
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure CTL0 register */
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     reg_temp = USART_CTL0(periph);
 307              		.loc 1 186 16 discriminator 2
 308 0030 BB68     		ldr	r3, [r7, #8]
 309              		.loc 1 186 14 discriminator 2
 310 0032 1B68     		ldr	r3, [r3]
 311 0034 7B61     		str	r3, [r7, #20]
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     reg_temp &= ~(USART_CTL0_PM | USART_CTL0_PCEN | USART_CTL0_WL | USART_CTL0_REN | USART_CTL0_TEN
 312              		.loc 1 187 14 discriminator 2
 313 0036 7B69     		ldr	r3, [r7, #20]
 314 0038 23F4B053 		bic	r3, r3, #5632
 315 003c 23F00C03 		bic	r3, r3, #12
 316 0040 7B61     		str	r3, [r7, #20]
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     reg_temp |= (p_init->direction | p_init->parity | p_init->word_length);
 317              		.loc 1 188 24 discriminator 2
 318 0042 7B68     		ldr	r3, [r7, #4]
 319 0044 DA68     		ldr	r2, [r3, #12]
 320              		.loc 1 188 44 discriminator 2
 321 0046 7B68     		ldr	r3, [r7, #4]
 322 0048 5B68     		ldr	r3, [r3, #4]
 323              		.loc 1 188 36 discriminator 2
 324 004a 1A43     		orrs	r2, r2, r3
 325              		.loc 1 188 61 discriminator 2
 326 004c 7B68     		ldr	r3, [r7, #4]
 327 004e 9B68     		ldr	r3, [r3, #8]
 328              		.loc 1 188 53 discriminator 2
 329 0050 1343     		orrs	r3, r3, r2
 330              		.loc 1 188 14 discriminator 2
 331 0052 7A69     		ldr	r2, [r7, #20]
 332 0054 1343     		orrs	r3, r3, r2
 333 0056 7B61     		str	r3, [r7, #20]
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(periph) = reg_temp;
 334              		.loc 1 189 5 discriminator 2
 335 0058 BB68     		ldr	r3, [r7, #8]
 336              		.loc 1 189 24 discriminator 2
 337 005a 7A69     		ldr	r2, [r7, #20]
 338 005c 1A60     		str	r2, [r3]
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure GP register */
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     reg_temp = USART_GP(periph);
 339              		.loc 1 192 16 discriminator 2
 340 005e BB68     		ldr	r3, [r7, #8]
 341 0060 1033     		adds	r3, r3, #16
 342              		.loc 1 192 14 discriminator 2
 343 0062 1B68     		ldr	r3, [r3]
 344 0064 7B61     		str	r3, [r7, #20]
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     reg_temp &= ~USART_GP_PSC;
 345              		.loc 1 193 14 discriminator 2
 346 0066 7B69     		ldr	r3, [r7, #20]
 347 0068 23F0FF03 		bic	r3, r3, #255
 348 006c 7B61     		str	r3, [r7, #20]
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     reg_temp |= p_init->prescaler;
 349              		.loc 1 194 23 discriminator 2
 350 006e 7B68     		ldr	r3, [r7, #4]
 351 0070 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 352 0072 1A46     		mov	r2, r3
 353              		.loc 1 194 14 discriminator 2
 354 0074 7B69     		ldr	r3, [r7, #20]
 355 0076 1343     		orrs	r3, r3, r2
 356 0078 7B61     		str	r3, [r7, #20]
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_GP(periph) = reg_temp;
 357              		.loc 1 195 5 discriminator 2
 358 007a BB68     		ldr	r3, [r7, #8]
 359 007c 1033     		adds	r3, r3, #16
 360 007e 1A46     		mov	r2, r3
 361              		.loc 1 195 22 discriminator 2
 362 0080 7B69     		ldr	r3, [r7, #20]
 363 0082 1360     		str	r3, [r2]
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure RFCS register */
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(ENABLE == p_init->rx_fifo_en) {
 364              		.loc 1 198 24 discriminator 2
 365 0084 7B68     		ldr	r3, [r7, #4]
 366 0086 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 367              		.loc 1 198 7 discriminator 2
 368 0088 012B     		cmp	r3, #1
 369 008a 08D1     		bne	.L16
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_RFCS(periph) |= USART_RFCS_RFEN;
 370              		.loc 1 199 28
 371 008c BB68     		ldr	r3, [r7, #8]
 372 008e D033     		adds	r3, r3, #208
 373 0090 1B68     		ldr	r3, [r3]
 374 0092 BA68     		ldr	r2, [r7, #8]
 375 0094 D032     		adds	r2, r2, #208
 376 0096 43F48073 		orr	r3, r3, #256
 377 009a 1360     		str	r3, [r2]
 378 009c 07E0     		b	.L17
 379              	.L16:
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_RFCS(periph) &= ~USART_RFCS_RFEN;
 380              		.loc 1 201 28
 381 009e BB68     		ldr	r3, [r7, #8]
 382 00a0 D033     		adds	r3, r3, #208
 383 00a2 1B68     		ldr	r3, [r3]
 384 00a4 BA68     		ldr	r2, [r7, #8]
 385 00a6 D032     		adds	r2, r2, #208
 386 00a8 23F48073 		bic	r3, r3, #256
 387 00ac 1360     		str	r3, [r2]
 388              	.L17:
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure baudrate */
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_baudrate_set(periph, p_init->baudrate);
 389              		.loc 1 205 5
 390 00ae 7B68     		ldr	r3, [r7, #4]
 391 00b0 1B68     		ldr	r3, [r3]
 392 00b2 1946     		mov	r1, r3
 393 00b4 B868     		ldr	r0, [r7, #8]
 394 00b6 FFF7FEFF 		bl	hals_irda_baudrate_set
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->data_bit_mask = _irda_data_bit_mask_get(irda);
 395              		.loc 1 206 27
 396 00ba F868     		ldr	r0, [r7, #12]
 397 00bc FFF7FEFF 		bl	_irda_data_bit_mask_get
 398 00c0 0346     		mov	r3, r0
 399 00c2 1A46     		mov	r2, r3
 400              		.loc 1 206 25
 401 00c4 FB68     		ldr	r3, [r7, #12]
 402 00c6 9A86     		strh	r2, [r3, #52]	@ movhi
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* reset the Rx and Tx state */
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_state = IRDA_STATE_FREE;
 403              		.loc 1 209 20
 404 00c8 FB68     		ldr	r3, [r7, #12]
 405 00ca 0022     		movs	r2, #0
 406 00cc 83F83A20 		strb	r2, [r3, #58]
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_state = IRDA_STATE_FREE;
 407              		.loc 1 210 20
 408 00d0 FB68     		ldr	r3, [r7, #12]
 409 00d2 0022     		movs	r2, #0
 410 00d4 83F83B20 		strb	r2, [r3, #59]
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure irda in low power mode */
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_lowpower_config(periph, p_init->mode);
 411              		.loc 1 213 5
 412 00d8 7B68     		ldr	r3, [r7, #4]
 413 00da 5B69     		ldr	r3, [r3, #20]
 414 00dc 1946     		mov	r1, r3
 415 00de B868     		ldr	r0, [r7, #8]
 416 00e0 FFF7FEFF 		bl	hals_irda_lowpower_config
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_mode_enable(periph);
 417              		.loc 1 214 5
 418 00e4 B868     		ldr	r0, [r7, #8]
 419 00e6 FFF7FEFF 		bl	hals_irda_mode_enable
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* enable usart */
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_enable(irda->periph);
 420              		.loc 1 217 5
 421 00ea FB68     		ldr	r3, [r7, #12]
 422 00ec 1B68     		ldr	r3, [r3]
 423 00ee 1846     		mov	r0, r3
 424 00f0 FFF7FEFF 		bl	hals_irda_enable
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 425              		.loc 1 220 5
 426 00f4 FB68     		ldr	r3, [r7, #12]
 427 00f6 0022     		movs	r2, #0
 428 00f8 83F84420 		strb	r2, [r3, #68]
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 429              		.loc 1 222 12
 430 00fc 0023     		movs	r3, #0
 431              	.L15:
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 432              		.loc 1 223 1
 433 00fe 1846     		mov	r0, r3
 434 0100 1837     		adds	r7, r7, #24
 435              		.cfi_def_cfa_offset 8
 436 0102 BD46     		mov	sp, r7
 437              		.cfi_def_cfa_register 13
 438              		@ sp needed
 439 0104 80BD     		pop	{r7, pc}
 440              		.cfi_endproc
 441              	.LFE121:
 443              		.section	.text.hal_irda_irq,"ax",%progbits
 444              		.align	1
 445              		.global	hal_irda_irq
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu softvfp
 451              	hal_irda_irq:
 452              	.LFB122:
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      irda interrupt handler content function,which is merely used in irda_handler
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hal_irda_irq(hal_irda_dev_struct *irda)
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 453              		.loc 1 234 1
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 8
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 80B5     		push	{r7, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 82B0     		sub	sp, sp, #8
 462              		.cfi_def_cfa_offset 16
 463 0004 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 0006 7860     		str	r0, [r7, #4]
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET == _irda_error_flag_get(irda)) {
 466              		.loc 1 235 17
 467 0008 7868     		ldr	r0, [r7, #4]
 468 000a FFF7FEFF 		bl	_irda_error_flag_get
 469 000e 0346     		mov	r3, r0
 470              		.loc 1 235 7
 471 0010 002B     		cmp	r3, #0
 472 0012 13D1     		bne	.L19
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether IRDA is in receiver mode or not */
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_RBNE)) {
 473              		.loc 1 237 21
 474 0014 7B68     		ldr	r3, [r7, #4]
 475 0016 1B68     		ldr	r3, [r3]
 476 0018 6C49     		ldr	r1, .L36
 477 001a 1846     		mov	r0, r3
 478 001c FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 479 0020 0346     		mov	r3, r0
 480              		.loc 1 237 11
 481 0022 002B     		cmp	r3, #0
 482 0024 00F09D80 		beq	.L20
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(NULL != irda->irda_irq.receive_complete_handle) {
 483              		.loc 1 238 38
 484 0028 7B68     		ldr	r3, [r7, #4]
 485 002a 5B68     		ldr	r3, [r3, #4]
 486              		.loc 1 238 15
 487 002c 002B     		cmp	r3, #0
 488 002e 00F0C280 		beq	.L32
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 irda->irda_irq.receive_complete_handle(irda);
 489              		.loc 1 239 31
 490 0032 7B68     		ldr	r3, [r7, #4]
 491 0034 5B68     		ldr	r3, [r3, #4]
 492              		.loc 1 239 17
 493 0036 7868     		ldr	r0, [r7, #4]
 494 0038 9847     		blx	r3
 495              	.LVL0:
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             }
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             return;
 496              		.loc 1 241 13
 497 003a BCE0     		b	.L32
 498              	.L19:
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether the PERR flag is set or not */
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_PERR)) {
 499              		.loc 1 245 21
 500 003c 7B68     		ldr	r3, [r7, #4]
 501 003e 1B68     		ldr	r3, [r3]
 502 0040 6349     		ldr	r1, .L36+4
 503 0042 1846     		mov	r0, r3
 504 0044 FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 505 0048 0346     		mov	r3, r0
 506              		.loc 1 245 11
 507 004a 002B     		cmp	r3, #0
 508 004c 10D0     		beq	.L23
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_PERR);
 509              		.loc 1 246 13
 510 004e 7B68     		ldr	r3, [r7, #4]
 511 0050 1B68     		ldr	r3, [r3]
 512 0052 5F49     		ldr	r1, .L36+4
 513 0054 1846     		mov	r0, r3
 514 0056 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->error_state |= HAL_IRDA_ERROR_PERR;
 515              		.loc 1 247 31
 516 005a 7B68     		ldr	r3, [r7, #4]
 517 005c 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 518 005e 9BB2     		uxth	r3, r3
 519 0060 43F00103 		orr	r3, r3, #1
 520 0064 9AB2     		uxth	r2, r3
 521 0066 7B68     		ldr	r3, [r7, #4]
 522 0068 1A87     		strh	r2, [r3, #56]	@ movhi
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->last_error = HAL_IRDA_ERROR_PERR;
 523              		.loc 1 248 30
 524 006a 7B68     		ldr	r3, [r7, #4]
 525 006c 0122     		movs	r2, #1
 526 006e DA86     		strh	r2, [r3, #54]	@ movhi
 527              	.L23:
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether the NERR flag is set or not */
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_ERR_NERR)) {
 528              		.loc 1 252 21
 529 0070 7B68     		ldr	r3, [r7, #4]
 530 0072 1B68     		ldr	r3, [r3]
 531 0074 5749     		ldr	r1, .L36+8
 532 0076 1846     		mov	r0, r3
 533 0078 FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 534 007c 0346     		mov	r3, r0
 535              		.loc 1 252 11
 536 007e 002B     		cmp	r3, #0
 537 0080 10D0     		beq	.L24
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_ERR_NERR);
 538              		.loc 1 253 13
 539 0082 7B68     		ldr	r3, [r7, #4]
 540 0084 1B68     		ldr	r3, [r3]
 541 0086 5349     		ldr	r1, .L36+8
 542 0088 1846     		mov	r0, r3
 543 008a FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->error_state |= HAL_IRDA_ERROR_NERR;
 544              		.loc 1 254 31
 545 008e 7B68     		ldr	r3, [r7, #4]
 546 0090 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 547 0092 9BB2     		uxth	r3, r3
 548 0094 43F00203 		orr	r3, r3, #2
 549 0098 9AB2     		uxth	r2, r3
 550 009a 7B68     		ldr	r3, [r7, #4]
 551 009c 1A87     		strh	r2, [r3, #56]	@ movhi
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->last_error = HAL_IRDA_ERROR_NERR;
 552              		.loc 1 255 30
 553 009e 7B68     		ldr	r3, [r7, #4]
 554 00a0 0222     		movs	r2, #2
 555 00a2 DA86     		strh	r2, [r3, #54]	@ movhi
 556              	.L24:
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether the FERR flag is set or not */
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_ERR_FERR)) {
 557              		.loc 1 259 21
 558 00a4 7B68     		ldr	r3, [r7, #4]
 559 00a6 1B68     		ldr	r3, [r3]
 560 00a8 4B49     		ldr	r1, .L36+12
 561 00aa 1846     		mov	r0, r3
 562 00ac FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 563 00b0 0346     		mov	r3, r0
 564              		.loc 1 259 11
 565 00b2 002B     		cmp	r3, #0
 566 00b4 10D0     		beq	.L25
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_ERR_FERR);
 567              		.loc 1 260 13
 568 00b6 7B68     		ldr	r3, [r7, #4]
 569 00b8 1B68     		ldr	r3, [r3]
 570 00ba 4749     		ldr	r1, .L36+12
 571 00bc 1846     		mov	r0, r3
 572 00be FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->error_state |= HAL_IRDA_ERROR_FERR;
 573              		.loc 1 261 31
 574 00c2 7B68     		ldr	r3, [r7, #4]
 575 00c4 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 576 00c6 9BB2     		uxth	r3, r3
 577 00c8 43F00403 		orr	r3, r3, #4
 578 00cc 9AB2     		uxth	r2, r3
 579 00ce 7B68     		ldr	r3, [r7, #4]
 580 00d0 1A87     		strh	r2, [r3, #56]	@ movhi
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->last_error = HAL_IRDA_ERROR_FERR;
 581              		.loc 1 262 30
 582 00d2 7B68     		ldr	r3, [r7, #4]
 583 00d4 0422     		movs	r2, #4
 584 00d6 DA86     		strh	r2, [r3, #54]	@ movhi
 585              	.L25:
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether the ERR ORERR is set or not */
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_ERR_ORERR)) {
 586              		.loc 1 266 21
 587 00d8 7B68     		ldr	r3, [r7, #4]
 588 00da 1B68     		ldr	r3, [r3]
 589 00dc 3F49     		ldr	r1, .L36+16
 590 00de 1846     		mov	r0, r3
 591 00e0 FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 592 00e4 0346     		mov	r3, r0
 593              		.loc 1 266 11
 594 00e6 002B     		cmp	r3, #0
 595 00e8 10D0     		beq	.L26
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_ERR_ORERR);
 596              		.loc 1 267 13
 597 00ea 7B68     		ldr	r3, [r7, #4]
 598 00ec 1B68     		ldr	r3, [r3]
 599 00ee 3B49     		ldr	r1, .L36+16
 600 00f0 1846     		mov	r0, r3
 601 00f2 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->error_state |= HAL_IRDA_ERROR_ORERR;
 602              		.loc 1 268 31
 603 00f6 7B68     		ldr	r3, [r7, #4]
 604 00f8 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 605 00fa 9BB2     		uxth	r3, r3
 606 00fc 43F00803 		orr	r3, r3, #8
 607 0100 9AB2     		uxth	r2, r3
 608 0102 7B68     		ldr	r3, [r7, #4]
 609 0104 1A87     		strh	r2, [r3, #56]	@ movhi
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->last_error = HAL_IRDA_ERROR_ORERR;
 610              		.loc 1 269 30
 611 0106 7B68     		ldr	r3, [r7, #4]
 612 0108 0822     		movs	r2, #8
 613 010a DA86     		strh	r2, [r3, #54]	@ movhi
 614              	.L26:
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether RBNE ORERR is set or not */
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_RBNE_ORERR)) {
 615              		.loc 1 273 21
 616 010c 7B68     		ldr	r3, [r7, #4]
 617 010e 1B68     		ldr	r3, [r3]
 618 0110 3349     		ldr	r1, .L36+20
 619 0112 1846     		mov	r0, r3
 620 0114 FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 621 0118 0346     		mov	r3, r0
 622              		.loc 1 273 11
 623 011a 002B     		cmp	r3, #0
 624 011c 10D0     		beq	.L27
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_RBNE_ORERR);
 625              		.loc 1 274 13
 626 011e 7B68     		ldr	r3, [r7, #4]
 627 0120 1B68     		ldr	r3, [r3]
 628 0122 2F49     		ldr	r1, .L36+20
 629 0124 1846     		mov	r0, r3
 630 0126 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->error_state |= HAL_IRDA_ERROR_ORERR;
 631              		.loc 1 275 31
 632 012a 7B68     		ldr	r3, [r7, #4]
 633 012c 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 634 012e 9BB2     		uxth	r3, r3
 635 0130 43F00803 		orr	r3, r3, #8
 636 0134 9AB2     		uxth	r2, r3
 637 0136 7B68     		ldr	r3, [r7, #4]
 638 0138 1A87     		strh	r2, [r3, #56]	@ movhi
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->last_error = HAL_IRDA_ERROR_ORERR;
 639              		.loc 1 276 30
 640 013a 7B68     		ldr	r3, [r7, #4]
 641 013c 0822     		movs	r2, #8
 642 013e DA86     		strh	r2, [r3, #54]	@ movhi
 643              	.L27:
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether error state is none or not */
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(HAL_IRDA_ERROR_NONE != irda->error_state) {
 644              		.loc 1 280 39
 645 0140 7B68     		ldr	r3, [r7, #4]
 646 0142 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 647 0144 9BB2     		uxth	r3, r3
 648              		.loc 1 280 11
 649 0146 002B     		cmp	r3, #0
 650 0148 0BD0     		beq	.L20
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(NULL != irda->irda_irq.error_handle) {
 651              		.loc 1 281 38
 652 014a 7B68     		ldr	r3, [r7, #4]
 653 014c 1B69     		ldr	r3, [r3, #16]
 654              		.loc 1 281 15
 655 014e 002B     		cmp	r3, #0
 656 0150 33D0     		beq	.L33
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 irda->irda_irq.error_handle(irda);
 657              		.loc 1 282 31
 658 0152 7B68     		ldr	r3, [r7, #4]
 659 0154 1B69     		ldr	r3, [r3, #16]
 660              		.loc 1 282 17
 661 0156 7868     		ldr	r0, [r7, #4]
 662 0158 9847     		blx	r3
 663              	.LVL1:
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 irda->error_state = HAL_IRDA_ERROR_NONE;
 664              		.loc 1 283 35
 665 015a 7B68     		ldr	r3, [r7, #4]
 666 015c 0022     		movs	r2, #0
 667 015e 1A87     		strh	r2, [r3, #56]	@ movhi
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             }
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             return;
 668              		.loc 1 285 13
 669 0160 2BE0     		b	.L33
 670              	.L20:
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* transmitter buffer empty interrupt handle */
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_TBE)) {
 671              		.loc 1 290 17
 672 0162 7B68     		ldr	r3, [r7, #4]
 673 0164 1B68     		ldr	r3, [r3]
 674 0166 1F49     		ldr	r1, .L36+24
 675 0168 1846     		mov	r0, r3
 676 016a FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 677 016e 0346     		mov	r3, r0
 678              		.loc 1 290 7
 679 0170 002B     		cmp	r3, #0
 680 0172 08D0     		beq	.L29
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(NULL != irda->irda_irq.transmit_ready_handle) {
 681              		.loc 1 291 34
 682 0174 7B68     		ldr	r3, [r7, #4]
 683 0176 9B68     		ldr	r3, [r3, #8]
 684              		.loc 1 291 11
 685 0178 002B     		cmp	r3, #0
 686 017a 20D0     		beq	.L34
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->irda_irq.transmit_ready_handle(irda);
 687              		.loc 1 292 27
 688 017c 7B68     		ldr	r3, [r7, #4]
 689 017e 9B68     		ldr	r3, [r3, #8]
 690              		.loc 1 292 13
 691 0180 7868     		ldr	r0, [r7, #4]
 692 0182 9847     		blx	r3
 693              	.LVL2:
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return;
 694              		.loc 1 294 9
 695 0184 1BE0     		b	.L34
 696              	.L29:
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* transmission complete interrupt handle */
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET != hals_irda_interrupt_flag_get(irda->periph, USART_INT_FLAG_TC)) {
 697              		.loc 1 298 17
 698 0186 7B68     		ldr	r3, [r7, #4]
 699 0188 1B68     		ldr	r3, [r3]
 700 018a 1749     		ldr	r1, .L36+28
 701 018c 1846     		mov	r0, r3
 702 018e FFF7FEFF 		bl	hals_irda_interrupt_flag_get
 703 0192 0346     		mov	r3, r0
 704              		.loc 1 298 7
 705 0194 002B     		cmp	r3, #0
 706 0196 15D0     		beq	.L18
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_TC);
 707              		.loc 1 299 9
 708 0198 7B68     		ldr	r3, [r7, #4]
 709 019a 1B68     		ldr	r3, [r3]
 710 019c 1249     		ldr	r1, .L36+28
 711 019e 1846     		mov	r0, r3
 712 01a0 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(NULL != irda->irda_irq.transmit_complete_handle) {
 713              		.loc 1 301 34
 714 01a4 7B68     		ldr	r3, [r7, #4]
 715 01a6 DB68     		ldr	r3, [r3, #12]
 716              		.loc 1 301 11
 717 01a8 002B     		cmp	r3, #0
 718 01aa 0AD0     		beq	.L35
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->irda_irq.transmit_complete_handle(irda);
 719              		.loc 1 302 27
 720 01ac 7B68     		ldr	r3, [r7, #4]
 721 01ae DB68     		ldr	r3, [r3, #12]
 722              		.loc 1 302 13
 723 01b0 7868     		ldr	r0, [r7, #4]
 724 01b2 9847     		blx	r3
 725              	.LVL3:
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return;
 726              		.loc 1 304 9
 727 01b4 05E0     		b	.L35
 728              	.L32:
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 729              		.loc 1 241 13
 730 01b6 00BF     		nop
 731 01b8 04E0     		b	.L18
 732              	.L33:
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 733              		.loc 1 285 13
 734 01ba 00BF     		nop
 735 01bc 02E0     		b	.L18
 736              	.L34:
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 737              		.loc 1 294 9
 738 01be 00BF     		nop
 739 01c0 00E0     		b	.L18
 740              	.L35:
 741              		.loc 1 304 9
 742 01c2 00BF     		nop
 743              	.L18:
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 744              		.loc 1 306 1
 745 01c4 0837     		adds	r7, r7, #8
 746              		.cfi_def_cfa_offset 8
 747 01c6 BD46     		mov	sp, r7
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 01c8 80BD     		pop	{r7, pc}
 751              	.L37:
 752 01ca 00BF     		.align	2
 753              	.L36:
 754 01cc 05000507 		.word	117768197
 755 01d0 08000007 		.word	117440520
 756 01d4 00020207 		.word	117572096
 757 01d8 00020107 		.word	117506560
 758 01dc 00020307 		.word	117637632
 759 01e0 05000307 		.word	117637125
 760 01e4 07000707 		.word	117899271
 761 01e8 06000607 		.word	117833734
 762              		.cfi_endproc
 763              	.LFE122:
 765              		.section	.text.hal_irda_irq_handle_set,"ax",%progbits
 766              		.align	1
 767              		.global	hal_irda_irq_handle_set
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu softvfp
 773              	hal_irda_irq_handle_set:
 774              	.LFB123:
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      set user-defined interrupt callback function,
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 which will be registered and called when corresponding interrupt be triggered
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structrue
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   the structure parameters altering is automatically configured by core
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_irq: point to irda interrupt callback functions structure
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                   The structure member can be assigned as following parameters:
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        hal_irq_handle_cb function pointer: the function is user-defined,
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the corresponding callback mechanism is in use, and enable corresponding interr
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        NULL: The corresponding callback mechanism is out of use, and
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     disable corresponding interrupt
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hal_irda_irq_handle_set(hal_irda_dev_struct *irda, hal_irda_irq_struct *p_irq)
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 775              		.loc 1 324 1
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779 0000 80B5     		push	{r7, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 82B0     		sub	sp, sp, #8
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 787 0006 7860     		str	r0, [r7, #4]
 788 0008 3960     		str	r1, [r7]
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* set user-defined error interrupt callback */
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_irq->error_handle) {
 789              		.loc 1 326 21
 790 000a 3B68     		ldr	r3, [r7]
 791 000c DB68     		ldr	r3, [r3, #12]
 792              		.loc 1 326 7
 793 000e 002B     		cmp	r3, #0
 794 0010 11D0     		beq	.L39
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.error_handle = p_irq->error_handle;
 795              		.loc 1 327 44
 796 0012 3B68     		ldr	r3, [r7]
 797 0014 DA68     		ldr	r2, [r3, #12]
 798              		.loc 1 327 37
 799 0016 7B68     		ldr	r3, [r7, #4]
 800 0018 1A61     		str	r2, [r3, #16]
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_ERR);
 801              		.loc 1 328 9
 802 001a 7B68     		ldr	r3, [r7, #4]
 803 001c 1B68     		ldr	r3, [r3]
 804 001e 4FF40071 		mov	r1, #512
 805 0022 1846     		mov	r0, r3
 806 0024 FFF7FEFF 		bl	hals_irda_interrupt_enable
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_PERR);
 807              		.loc 1 329 9
 808 0028 7B68     		ldr	r3, [r7, #4]
 809 002a 1B68     		ldr	r3, [r3]
 810 002c 0821     		movs	r1, #8
 811 002e 1846     		mov	r0, r3
 812 0030 FFF7FEFF 		bl	hals_irda_interrupt_enable
 813 0034 0FE0     		b	.L40
 814              	.L39:
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.error_handle = NULL;
 815              		.loc 1 331 37
 816 0036 7B68     		ldr	r3, [r7, #4]
 817 0038 0022     		movs	r2, #0
 818 003a 1A61     		str	r2, [r3, #16]
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_ERR);
 819              		.loc 1 332 9
 820 003c 7B68     		ldr	r3, [r7, #4]
 821 003e 1B68     		ldr	r3, [r3]
 822 0040 4FF40071 		mov	r1, #512
 823 0044 1846     		mov	r0, r3
 824 0046 FFF7FEFF 		bl	hals_irda_interrupt_disable
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_PERR);
 825              		.loc 1 333 9
 826 004a 7B68     		ldr	r3, [r7, #4]
 827 004c 1B68     		ldr	r3, [r3]
 828 004e 0821     		movs	r1, #8
 829 0050 1846     		mov	r0, r3
 830 0052 FFF7FEFF 		bl	hals_irda_interrupt_disable
 831              	.L40:
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* set user-defined receive complete interrupt callback */
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_irq->receive_complete_handle) {
 832              		.loc 1 337 21
 833 0056 3B68     		ldr	r3, [r7]
 834 0058 1B68     		ldr	r3, [r3]
 835              		.loc 1 337 7
 836 005a 002B     		cmp	r3, #0
 837 005c 0AD0     		beq	.L41
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.receive_complete_handle = p_irq->receive_complete_handle;
 838              		.loc 1 338 55
 839 005e 3B68     		ldr	r3, [r7]
 840 0060 1A68     		ldr	r2, [r3]
 841              		.loc 1 338 48
 842 0062 7B68     		ldr	r3, [r7, #4]
 843 0064 5A60     		str	r2, [r3, #4]
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_RBNE);
 844              		.loc 1 339 9
 845 0066 7B68     		ldr	r3, [r7, #4]
 846 0068 1B68     		ldr	r3, [r3]
 847 006a 0521     		movs	r1, #5
 848 006c 1846     		mov	r0, r3
 849 006e FFF7FEFF 		bl	hals_irda_interrupt_enable
 850 0072 08E0     		b	.L42
 851              	.L41:
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.receive_complete_handle = NULL;
 852              		.loc 1 341 48
 853 0074 7B68     		ldr	r3, [r7, #4]
 854 0076 0022     		movs	r2, #0
 855 0078 5A60     		str	r2, [r3, #4]
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_RBNE);
 856              		.loc 1 342 9
 857 007a 7B68     		ldr	r3, [r7, #4]
 858 007c 1B68     		ldr	r3, [r3]
 859 007e 0521     		movs	r1, #5
 860 0080 1846     		mov	r0, r3
 861 0082 FFF7FEFF 		bl	hals_irda_interrupt_disable
 862              	.L42:
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* set user-defined transmit complete interrupt callback */
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_irq->transmit_complete_handle) {
 863              		.loc 1 346 21
 864 0086 3B68     		ldr	r3, [r7]
 865 0088 9B68     		ldr	r3, [r3, #8]
 866              		.loc 1 346 7
 867 008a 002B     		cmp	r3, #0
 868 008c 0AD0     		beq	.L43
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.transmit_complete_handle = p_irq->transmit_complete_handle;
 869              		.loc 1 347 56
 870 008e 3B68     		ldr	r3, [r7]
 871 0090 9A68     		ldr	r2, [r3, #8]
 872              		.loc 1 347 49
 873 0092 7B68     		ldr	r3, [r7, #4]
 874 0094 DA60     		str	r2, [r3, #12]
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_TC);
 875              		.loc 1 348 9
 876 0096 7B68     		ldr	r3, [r7, #4]
 877 0098 1B68     		ldr	r3, [r3]
 878 009a 0621     		movs	r1, #6
 879 009c 1846     		mov	r0, r3
 880 009e FFF7FEFF 		bl	hals_irda_interrupt_enable
 881 00a2 08E0     		b	.L44
 882              	.L43:
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.transmit_complete_handle = NULL;
 883              		.loc 1 350 49
 884 00a4 7B68     		ldr	r3, [r7, #4]
 885 00a6 0022     		movs	r2, #0
 886 00a8 DA60     		str	r2, [r3, #12]
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_TC);
 887              		.loc 1 351 9
 888 00aa 7B68     		ldr	r3, [r7, #4]
 889 00ac 1B68     		ldr	r3, [r3]
 890 00ae 0621     		movs	r1, #6
 891 00b0 1846     		mov	r0, r3
 892 00b2 FFF7FEFF 		bl	hals_irda_interrupt_disable
 893              	.L44:
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* set user-defined transmit ready interrupt callback */
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_irq->transmit_ready_handle) {
 894              		.loc 1 355 21
 895 00b6 3B68     		ldr	r3, [r7]
 896 00b8 5B68     		ldr	r3, [r3, #4]
 897              		.loc 1 355 7
 898 00ba 002B     		cmp	r3, #0
 899 00bc 0AD0     		beq	.L45
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.transmit_ready_handle = p_irq->transmit_ready_handle;
 900              		.loc 1 356 53
 901 00be 3B68     		ldr	r3, [r7]
 902 00c0 5A68     		ldr	r2, [r3, #4]
 903              		.loc 1 356 46
 904 00c2 7B68     		ldr	r3, [r7, #4]
 905 00c4 9A60     		str	r2, [r3, #8]
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_TBE);
 906              		.loc 1 357 9
 907 00c6 7B68     		ldr	r3, [r7, #4]
 908 00c8 1B68     		ldr	r3, [r3]
 909 00ca 0721     		movs	r1, #7
 910 00cc 1846     		mov	r0, r3
 911 00ce FFF7FEFF 		bl	hals_irda_interrupt_enable
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.transmit_ready_handle = NULL;
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_TBE);
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 912              		.loc 1 362 1
 913 00d2 08E0     		b	.L47
 914              	.L45:
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_TBE);
 915              		.loc 1 359 46
 916 00d4 7B68     		ldr	r3, [r7, #4]
 917 00d6 0022     		movs	r2, #0
 918 00d8 9A60     		str	r2, [r3, #8]
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 919              		.loc 1 360 9
 920 00da 7B68     		ldr	r3, [r7, #4]
 921 00dc 1B68     		ldr	r3, [r3]
 922 00de 0721     		movs	r1, #7
 923 00e0 1846     		mov	r0, r3
 924 00e2 FFF7FEFF 		bl	hals_irda_interrupt_disable
 925              	.L47:
 926              		.loc 1 362 1
 927 00e6 00BF     		nop
 928 00e8 0837     		adds	r7, r7, #8
 929              		.cfi_def_cfa_offset 8
 930 00ea BD46     		mov	sp, r7
 931              		.cfi_def_cfa_register 13
 932              		@ sp needed
 933 00ec 80BD     		pop	{r7, pc}
 934              		.cfi_endproc
 935              	.LFE123:
 937              		.section	.text.hal_irda_irq_handle_all_reset,"ax",%progbits
 938              		.align	1
 939              		.global	hal_irda_irq_handle_all_reset
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 943              		.fpu softvfp
 945              	hal_irda_irq_handle_all_reset:
 946              	.LFB124:
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      reset all user-defined interrupt callback function,
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 which will be registered and called when corresponding interrupt be triggered
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hal_irda_irq_handle_all_reset(hal_irda_dev_struct *irda)
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 947              		.loc 1 374 1
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 8
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 952 0000 80B4     		push	{r7}
 953              		.cfi_def_cfa_offset 4
 954              		.cfi_offset 7, -4
 955 0002 83B0     		sub	sp, sp, #12
 956              		.cfi_def_cfa_offset 16
 957 0004 00AF     		add	r7, sp, #0
 958              		.cfi_def_cfa_register 7
 959 0006 7860     		str	r0, [r7, #4]
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure interrupt callback function to NULL */
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.error_handle = NULL;
 960              		.loc 1 376 33
 961 0008 7B68     		ldr	r3, [r7, #4]
 962 000a 0022     		movs	r2, #0
 963 000c 1A61     		str	r2, [r3, #16]
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.receive_complete_handle = NULL;
 964              		.loc 1 377 44
 965 000e 7B68     		ldr	r3, [r7, #4]
 966 0010 0022     		movs	r2, #0
 967 0012 5A60     		str	r2, [r3, #4]
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.transmit_complete_handle = NULL;
 968              		.loc 1 378 45
 969 0014 7B68     		ldr	r3, [r7, #4]
 970 0016 0022     		movs	r2, #0
 971 0018 DA60     		str	r2, [r3, #12]
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.transmit_ready_handle = NULL;
 972              		.loc 1 379 42
 973 001a 7B68     		ldr	r3, [r7, #4]
 974 001c 0022     		movs	r2, #0
 975 001e 9A60     		str	r2, [r3, #8]
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 976              		.loc 1 380 1
 977 0020 00BF     		nop
 978 0022 0C37     		adds	r7, r7, #12
 979              		.cfi_def_cfa_offset 4
 980 0024 BD46     		mov	sp, r7
 981              		.cfi_def_cfa_register 13
 982              		@ sp needed
 983 0026 80BC     		pop	{r7}
 984              		.cfi_restore 7
 985              		.cfi_def_cfa_offset 0
 986 0028 7047     		bx	lr
 987              		.cfi_endproc
 988              	.LFE124:
 990              		.section	.text.hal_irda_transmit_poll,"ax",%progbits
 991              		.align	1
 992              		.global	hal_irda_transmit_poll
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 996              		.fpu softvfp
 998              	hal_irda_transmit_poll:
 999              	.LFB125:
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      transmit amounts of data, poll transmit process and completed status
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is blocking
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_buffer: pointer to data buffer
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  length: number of data to be transmitted
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  timeout_ms: timeout duration
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY, HAL_ERR_TIMEO
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_transmit_poll(hal_irda_dev_struct *irda, uint8_t *p_buffer, uint32_t length, uint3
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 1000              		.loc 1 395 1
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 24
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 86B0     		sub	sp, sp, #24
 1009              		.cfi_def_cfa_offset 32
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 F860     		str	r0, [r7, #12]
 1013 0008 B960     		str	r1, [r7, #8]
 1014 000a 7A60     		str	r2, [r7, #4]
 1015 000c 3B60     		str	r3, [r7]
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint8_t data_length;
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t tick_start;
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameters */
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_buffer) || (0U == length)) {
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] or [p_buffer] or [length] value is invalid");
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the tx_state wheher is busy or not */
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->tx_state) {
 1016              		.loc 1 408 31
 1017 000e FB68     		ldr	r3, [r7, #12]
 1018 0010 93F83A30 		ldrb	r3, [r3, #58]
 1019 0014 DBB2     		uxtb	r3, r3
 1020              		.loc 1 408 7
 1021 0016 012B     		cmp	r3, #1
 1022 0018 02D1     		bne	.L50
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda tx has already been used, please wait until run_state change to free ");
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_BUSY;
 1023              		.loc 1 410 16
 1024 001a 6FF00203 		mvn	r3, #2
 1025 001e ABE0     		b	.L51
 1026              	.L50:
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 1027              		.loc 1 414 5
 1028 0020 FB68     		ldr	r3, [r7, #12]
 1029 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1030 0026 012B     		cmp	r3, #1
 1031 0028 02D1     		bne	.L52
 1032              		.loc 1 414 5 is_stmt 0 discriminator 1
 1033 002a 6FF00103 		mvn	r3, #1
 1034 002e A3E0     		b	.L51
 1035              	.L52:
 1036              		.loc 1 414 5 discriminator 2
 1037 0030 FB68     		ldr	r3, [r7, #12]
 1038 0032 0122     		movs	r2, #1
 1039 0034 83F84420 		strb	r2, [r3, #68]
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->error_state = HAL_IRDA_ERROR_NONE;
 1040              		.loc 1 416 23 is_stmt 1 discriminator 2
 1041 0038 FB68     		ldr	r3, [r7, #12]
 1042 003a 0022     		movs	r2, #0
 1043 003c 1A87     		strh	r2, [r3, #56]	@ movhi
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_state = IRDA_STATE_BUSY;
 1044              		.loc 1 417 20 discriminator 2
 1045 003e FB68     		ldr	r3, [r7, #12]
 1046 0040 0122     		movs	r2, #1
 1047 0042 83F83A20 		strb	r2, [r3, #58]
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* initialize transmit parameters */
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.buffer   = (uint8_t *)p_buffer;
 1048              		.loc 1 420 29 discriminator 2
 1049 0046 FB68     		ldr	r3, [r7, #12]
 1050 0048 BA68     		ldr	r2, [r7, #8]
 1051 004a DA61     		str	r2, [r3, #28]
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.length   = length;
 1052              		.loc 1 421 29 discriminator 2
 1053 004c FB68     		ldr	r3, [r7, #12]
 1054 004e 7A68     		ldr	r2, [r7, #4]
 1055 0050 1A62     		str	r2, [r3, #32]
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.pos      = 0U;
 1056              		.loc 1 422 29 discriminator 2
 1057 0052 FB68     		ldr	r3, [r7, #12]
 1058 0054 0022     		movs	r2, #0
 1059 0056 5A62     		str	r2, [r3, #36]
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* calculate the data length */
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     data_length = 1U;
 1060              		.loc 1 425 17 discriminator 2
 1061 0058 0123     		movs	r3, #1
 1062 005a FB75     		strb	r3, [r7, #23]
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET != (USART_CTL0(irda->periph) & USART_CTL0_WL)) {
 1063              		.loc 1 426 18 discriminator 2
 1064 005c FB68     		ldr	r3, [r7, #12]
 1065 005e 1B68     		ldr	r3, [r3]
 1066 0060 1B68     		ldr	r3, [r3]
 1067              		.loc 1 426 43 discriminator 2
 1068 0062 03F48053 		and	r3, r3, #4096
 1069              		.loc 1 426 7 discriminator 2
 1070 0066 002B     		cmp	r3, #0
 1071 0068 08D0     		beq	.L53
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET == (USART_CTL0(irda->periph) & USART_CTL0_PCEN)) {
 1072              		.loc 1 427 22
 1073 006a FB68     		ldr	r3, [r7, #12]
 1074 006c 1B68     		ldr	r3, [r3]
 1075 006e 1B68     		ldr	r3, [r3]
 1076              		.loc 1 427 47
 1077 0070 03F48063 		and	r3, r3, #1024
 1078              		.loc 1 427 11
 1079 0074 002B     		cmp	r3, #0
 1080 0076 01D1     		bne	.L53
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             data_length = 2U;
 1081              		.loc 1 428 25
 1082 0078 0223     		movs	r3, #2
 1083 007a FB75     		strb	r3, [r7, #23]
 1084              	.L53:
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure timeout */
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     tick_start = hal_sys_basetick_count_get();
 1085              		.loc 1 433 18
 1086 007c FFF7FEFF 		bl	hal_sys_basetick_count_get
 1087 0080 3861     		str	r0, [r7, #16]
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     while(irda->txbuffer.pos < irda->txbuffer.length) {
 1088              		.loc 1 435 10
 1089 0082 49E0     		b	.L54
 1090              	.L56:
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for transmit buffer empty */
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         while(RESET == hals_irda_flag_get(irda->periph, USART_FLAG_TBE)) {
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1091              		.loc 1 438 15
 1092 0084 3B68     		ldr	r3, [r7]
 1093 0086 B3F1FF3F 		cmp	r3, #-1
 1094 008a 11D0     		beq	.L55
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1095              		.loc 1 439 27
 1096 008c 3968     		ldr	r1, [r7]
 1097 008e 3869     		ldr	r0, [r7, #16]
 1098 0090 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1099 0094 0346     		mov	r3, r0
 1100              		.loc 1 439 19
 1101 0096 012B     		cmp	r3, #1
 1102 0098 0AD1     		bne	.L55
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     HAL_DEBUGW("irda transmit timeout");
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     /* reset the state */
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     irda->rx_state = IRDA_STATE_FREE;
 1103              		.loc 1 442 36
 1104 009a FB68     		ldr	r3, [r7, #12]
 1105 009c 0022     		movs	r2, #0
 1106 009e 83F83B20 		strb	r2, [r3, #59]
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     /* unlock irda */
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     HAL_UNLOCK(irda);
 1107              		.loc 1 444 21
 1108 00a2 FB68     		ldr	r3, [r7, #12]
 1109 00a4 0022     		movs	r2, #0
 1110 00a6 83F84420 		strb	r2, [r3, #68]
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     return HAL_ERR_TIMEOUT;
 1111              		.loc 1 445 28
 1112 00aa 6FF00403 		mvn	r3, #4
 1113 00ae 63E0     		b	.L51
 1114              	.L55:
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1115              		.loc 1 437 24
 1116 00b0 FB68     		ldr	r3, [r7, #12]
 1117 00b2 1B68     		ldr	r3, [r3]
 1118 00b4 40F20771 		movw	r1, #1799
 1119 00b8 1846     		mov	r0, r3
 1120 00ba FFF7FEFF 		bl	hals_irda_flag_get
 1121 00be 0346     		mov	r3, r0
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1122              		.loc 1 437 14
 1123 00c0 002B     		cmp	r3, #0
 1124 00c2 DFD0     		beq	.L56
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 }
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             }
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* send the data to be transmitted */
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(2U == data_length) {
 1125              		.loc 1 451 11
 1126 00c4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1127 00c6 022B     		cmp	r3, #2
 1128 00c8 11D1     		bne	.L57
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_data_transmit(irda->periph, (*(uint16_t *)irda->txbuffer.buffer & (uint16_t)0
 1129              		.loc 1 452 13
 1130 00ca FB68     		ldr	r3, [r7, #12]
 1131 00cc 1A68     		ldr	r2, [r3]
 1132              		.loc 1 452 79
 1133 00ce FB68     		ldr	r3, [r7, #12]
 1134 00d0 DB69     		ldr	r3, [r3, #28]
 1135              		.loc 1 452 52
 1136 00d2 1B88     		ldrh	r3, [r3]
 1137              		.loc 1 452 13
 1138 00d4 C3F30803 		ubfx	r3, r3, #0, #9
 1139 00d8 9BB2     		uxth	r3, r3
 1140 00da 1946     		mov	r1, r3
 1141 00dc 1046     		mov	r0, r2
 1142 00de FFF7FEFF 		bl	hals_irda_data_transmit
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->txbuffer.buffer += 2;
 1143              		.loc 1 453 35
 1144 00e2 FB68     		ldr	r3, [r7, #12]
 1145 00e4 DB69     		ldr	r3, [r3, #28]
 1146 00e6 9A1C     		adds	r2, r3, #2
 1147 00e8 FB68     		ldr	r3, [r7, #12]
 1148 00ea DA61     		str	r2, [r3, #28]
 1149 00ec 0FE0     		b	.L58
 1150              	.L57:
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         } else {
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_data_transmit(irda->periph, (*irda->txbuffer.buffer & (uint8_t)0xFFU));
 1151              		.loc 1 455 13
 1152 00ee FB68     		ldr	r3, [r7, #12]
 1153 00f0 1A68     		ldr	r2, [r3]
 1154              		.loc 1 455 67
 1155 00f2 FB68     		ldr	r3, [r7, #12]
 1156 00f4 DB69     		ldr	r3, [r3, #28]
 1157              		.loc 1 455 52
 1158 00f6 1B78     		ldrb	r3, [r3]
 1159 00f8 DBB2     		uxtb	r3, r3
 1160              		.loc 1 455 13
 1161 00fa 9BB2     		uxth	r3, r3
 1162 00fc 1946     		mov	r1, r3
 1163 00fe 1046     		mov	r0, r2
 1164 0100 FFF7FEFF 		bl	hals_irda_data_transmit
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->txbuffer.buffer++;
 1165              		.loc 1 456 27
 1166 0104 FB68     		ldr	r3, [r7, #12]
 1167 0106 DB69     		ldr	r3, [r3, #28]
 1168              		.loc 1 456 34
 1169 0108 5A1C     		adds	r2, r3, #1
 1170 010a FB68     		ldr	r3, [r7, #12]
 1171 010c DA61     		str	r2, [r3, #28]
 1172              	.L58:
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* change the transmit pointer */
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->txbuffer.pos++;
 1173              		.loc 1 460 23
 1174 010e FB68     		ldr	r3, [r7, #12]
 1175 0110 5B6A     		ldr	r3, [r3, #36]
 1176              		.loc 1 460 27
 1177 0112 5A1C     		adds	r2, r3, #1
 1178 0114 FB68     		ldr	r3, [r7, #12]
 1179 0116 5A62     		str	r2, [r3, #36]
 1180              	.L54:
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for transmit buffer empty */
 1181              		.loc 1 435 25
 1182 0118 FB68     		ldr	r3, [r7, #12]
 1183 011a 5A6A     		ldr	r2, [r3, #36]
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for transmit buffer empty */
 1184              		.loc 1 435 46
 1185 011c FB68     		ldr	r3, [r7, #12]
 1186 011e 1B6A     		ldr	r3, [r3, #32]
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for transmit buffer empty */
 1187              		.loc 1 435 10
 1188 0120 9A42     		cmp	r2, r3
 1189 0122 C5D3     		bcc	.L55
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* wait for transmit complete */
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     while(RESET == hals_irda_flag_get(irda->periph, USART_FLAG_TC)) {
 1190              		.loc 1 464 10
 1191 0124 15E0     		b	.L60
 1192              	.L61:
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1193              		.loc 1 465 11
 1194 0126 3B68     		ldr	r3, [r7]
 1195 0128 B3F1FF3F 		cmp	r3, #-1
 1196 012c 11D0     		beq	.L60
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1197              		.loc 1 466 23
 1198 012e 3968     		ldr	r1, [r7]
 1199 0130 3869     		ldr	r0, [r7, #16]
 1200 0132 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1201 0136 0346     		mov	r3, r0
 1202              		.loc 1 466 15
 1203 0138 012B     		cmp	r3, #1
 1204 013a 0AD1     		bne	.L60
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 HAL_DEBUGW("irda transmit timeout");
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 /* reset the state */
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 irda->rx_state = IRDA_STATE_FREE;
 1205              		.loc 1 469 32
 1206 013c FB68     		ldr	r3, [r7, #12]
 1207 013e 0022     		movs	r2, #0
 1208 0140 83F83B20 		strb	r2, [r3, #59]
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 /* unlock irda */
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 HAL_UNLOCK(irda);
 1209              		.loc 1 471 17
 1210 0144 FB68     		ldr	r3, [r7, #12]
 1211 0146 0022     		movs	r2, #0
 1212 0148 83F84420 		strb	r2, [r3, #68]
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 return HAL_ERR_TIMEOUT;
 1213              		.loc 1 472 24
 1214 014c 6FF00403 		mvn	r3, #4
 1215 0150 12E0     		b	.L51
 1216              	.L60:
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1217              		.loc 1 464 20
 1218 0152 FB68     		ldr	r3, [r7, #12]
 1219 0154 1B68     		ldr	r3, [r3]
 1220 0156 40F20671 		movw	r1, #1798
 1221 015a 1846     		mov	r0, r3
 1222 015c FFF7FEFF 		bl	hals_irda_flag_get
 1223 0160 0346     		mov	r3, r0
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1224              		.loc 1 464 10
 1225 0162 002B     		cmp	r3, #0
 1226 0164 DFD0     		beq	.L61
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             }
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* change the Tx state to free */
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_state = IRDA_STATE_FREE;
 1227              		.loc 1 478 20
 1228 0166 FB68     		ldr	r3, [r7, #12]
 1229 0168 0022     		movs	r2, #0
 1230 016a 83F83A20 		strb	r2, [r3, #58]
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 1231              		.loc 1 481 5
 1232 016e FB68     		ldr	r3, [r7, #12]
 1233 0170 0022     		movs	r2, #0
 1234 0172 83F84420 		strb	r2, [r3, #68]
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 1235              		.loc 1 483 12
 1236 0176 0023     		movs	r3, #0
 1237              	.L51:
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 1238              		.loc 1 484 1
 1239 0178 1846     		mov	r0, r3
 1240 017a 1837     		adds	r7, r7, #24
 1241              		.cfi_def_cfa_offset 8
 1242 017c BD46     		mov	sp, r7
 1243              		.cfi_def_cfa_register 13
 1244              		@ sp needed
 1245 017e 80BD     		pop	{r7, pc}
 1246              		.cfi_endproc
 1247              	.LFE125:
 1249              		.section	.text.hal_irda_receive_poll,"ax",%progbits
 1250              		.align	1
 1251              		.global	hal_irda_receive_poll
 1252              		.syntax unified
 1253              		.thumb
 1254              		.thumb_func
 1255              		.fpu softvfp
 1257              	hal_irda_receive_poll:
 1258              	.LFB126:
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      receive amounts of data, poll receive process and completed status
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is blocking
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_buffer: pointer to data buffer
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  length: number of data to be received
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  timeout_ms: timeout duration
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY, HAL_ERR_TIMEO
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_receive_poll(hal_irda_dev_struct *irda, uint8_t *p_buffer, uint32_t length, uint32
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 1259              		.loc 1 499 1
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 24
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263 0000 80B5     		push	{r7, lr}
 1264              		.cfi_def_cfa_offset 8
 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 0002 86B0     		sub	sp, sp, #24
 1268              		.cfi_def_cfa_offset 32
 1269 0004 00AF     		add	r7, sp, #0
 1270              		.cfi_def_cfa_register 7
 1271 0006 F860     		str	r0, [r7, #12]
 1272 0008 B960     		str	r1, [r7, #8]
 1273 000a 7A60     		str	r2, [r7, #4]
 1274 000c 3B60     		str	r3, [r7]
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint8_t data_length;
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t tick_start;
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameters */
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_buffer) || (0U == length)) {
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] or [p_buffer] or [length] value is invalid");
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the rx_state wheher is busy or not */
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->rx_state) {
 1275              		.loc 1 512 31
 1276 000e FB68     		ldr	r3, [r7, #12]
 1277 0010 93F83B30 		ldrb	r3, [r3, #59]
 1278 0014 DBB2     		uxtb	r3, r3
 1279              		.loc 1 512 7
 1280 0016 012B     		cmp	r3, #1
 1281 0018 02D1     		bne	.L63
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda rx has already been used, please wait until run_state change to free ");
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_BUSY;
 1282              		.loc 1 514 16
 1283 001a 6FF00203 		mvn	r3, #2
 1284 001e 97E0     		b	.L64
 1285              	.L63:
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 1286              		.loc 1 518 5
 1287 0020 FB68     		ldr	r3, [r7, #12]
 1288 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1289 0026 012B     		cmp	r3, #1
 1290 0028 02D1     		bne	.L65
 1291              		.loc 1 518 5 is_stmt 0 discriminator 1
 1292 002a 6FF00103 		mvn	r3, #1
 1293 002e 8FE0     		b	.L64
 1294              	.L65:
 1295              		.loc 1 518 5 discriminator 2
 1296 0030 FB68     		ldr	r3, [r7, #12]
 1297 0032 0122     		movs	r2, #1
 1298 0034 83F84420 		strb	r2, [r3, #68]
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->error_state = HAL_IRDA_ERROR_NONE;
 1299              		.loc 1 520 23 is_stmt 1 discriminator 2
 1300 0038 FB68     		ldr	r3, [r7, #12]
 1301 003a 0022     		movs	r2, #0
 1302 003c 1A87     		strh	r2, [r3, #56]	@ movhi
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_state = IRDA_STATE_BUSY;
 1303              		.loc 1 521 20 discriminator 2
 1304 003e FB68     		ldr	r3, [r7, #12]
 1305 0040 0122     		movs	r2, #1
 1306 0042 83F83B20 		strb	r2, [r3, #59]
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* initialize receive parameters */
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.buffer   = (uint8_t *)p_buffer;
 1307              		.loc 1 525 29 discriminator 2
 1308 0046 FB68     		ldr	r3, [r7, #12]
 1309 0048 BA68     		ldr	r2, [r7, #8]
 1310 004a 9A62     		str	r2, [r3, #40]
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.length   = length;
 1311              		.loc 1 526 29 discriminator 2
 1312 004c FB68     		ldr	r3, [r7, #12]
 1313 004e 7A68     		ldr	r2, [r7, #4]
 1314 0050 DA62     		str	r2, [r3, #44]
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.pos      = 0U;
 1315              		.loc 1 527 29 discriminator 2
 1316 0052 FB68     		ldr	r3, [r7, #12]
 1317 0054 0022     		movs	r2, #0
 1318 0056 1A63     		str	r2, [r3, #48]
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->data_bit_mask     = _irda_data_bit_mask_get(irda);
 1319              		.loc 1 528 31 discriminator 2
 1320 0058 F868     		ldr	r0, [r7, #12]
 1321 005a FFF7FEFF 		bl	_irda_data_bit_mask_get
 1322 005e 0346     		mov	r3, r0
 1323 0060 1A46     		mov	r2, r3
 1324              		.loc 1 528 29 discriminator 2
 1325 0062 FB68     		ldr	r3, [r7, #12]
 1326 0064 9A86     		strh	r2, [r3, #52]	@ movhi
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* calculate the data length */
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     data_length = 1U;
 1327              		.loc 1 531 17 discriminator 2
 1328 0066 0123     		movs	r3, #1
 1329 0068 FB75     		strb	r3, [r7, #23]
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET != (USART_CTL0(irda->periph) & USART_CTL0_WL)) {
 1330              		.loc 1 532 18 discriminator 2
 1331 006a FB68     		ldr	r3, [r7, #12]
 1332 006c 1B68     		ldr	r3, [r3]
 1333 006e 1B68     		ldr	r3, [r3]
 1334              		.loc 1 532 43 discriminator 2
 1335 0070 03F48053 		and	r3, r3, #4096
 1336              		.loc 1 532 7 discriminator 2
 1337 0074 002B     		cmp	r3, #0
 1338 0076 08D0     		beq	.L66
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET == (USART_CTL0(irda->periph) & USART_CTL0_PCEN)) {
 1339              		.loc 1 533 22
 1340 0078 FB68     		ldr	r3, [r7, #12]
 1341 007a 1B68     		ldr	r3, [r3]
 1342 007c 1B68     		ldr	r3, [r3]
 1343              		.loc 1 533 47
 1344 007e 03F48063 		and	r3, r3, #1024
 1345              		.loc 1 533 11
 1346 0082 002B     		cmp	r3, #0
 1347 0084 01D1     		bne	.L66
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             data_length = 2U;
 1348              		.loc 1 534 25
 1349 0086 0223     		movs	r3, #2
 1350 0088 FB75     		strb	r3, [r7, #23]
 1351              	.L66:
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure timeout */
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     tick_start = hal_sys_basetick_count_get();
 1352              		.loc 1 539 18
 1353 008a FFF7FEFF 		bl	hal_sys_basetick_count_get
 1354 008e 3861     		str	r0, [r7, #16]
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     while(irda->rxbuffer.pos < irda->rxbuffer.length) {
 1355              		.loc 1 541 10
 1356 0090 4FE0     		b	.L67
 1357              	.L69:
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for read data buffer not empty */
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         while(RESET == hals_irda_flag_get(irda->periph, USART_FLAG_RBNE)) {
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1358              		.loc 1 544 15
 1359 0092 3B68     		ldr	r3, [r7]
 1360 0094 B3F1FF3F 		cmp	r3, #-1
 1361 0098 11D0     		beq	.L68
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 1362              		.loc 1 545 27
 1363 009a 3968     		ldr	r1, [r7]
 1364 009c 3869     		ldr	r0, [r7, #16]
 1365 009e FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 1366 00a2 0346     		mov	r3, r0
 1367              		.loc 1 545 19
 1368 00a4 012B     		cmp	r3, #1
 1369 00a6 0AD1     		bne	.L68
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     HAL_DEBUGW("irda receive timeout");
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     /* reset the state */
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     irda->rx_state = IRDA_STATE_FREE;
 1370              		.loc 1 548 36
 1371 00a8 FB68     		ldr	r3, [r7, #12]
 1372 00aa 0022     		movs	r2, #0
 1373 00ac 83F83B20 		strb	r2, [r3, #59]
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     /* unlock irda */
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     HAL_UNLOCK(irda);
 1374              		.loc 1 550 21
 1375 00b0 FB68     		ldr	r3, [r7, #12]
 1376 00b2 0022     		movs	r2, #0
 1377 00b4 83F84420 		strb	r2, [r3, #68]
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     return HAL_ERR_TIMEOUT;
 1378              		.loc 1 552 28
 1379 00b8 6FF00403 		mvn	r3, #4
 1380 00bc 48E0     		b	.L64
 1381              	.L68:
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1382              		.loc 1 543 24
 1383 00be FB68     		ldr	r3, [r7, #12]
 1384 00c0 1B68     		ldr	r3, [r3]
 1385 00c2 40F20571 		movw	r1, #1797
 1386 00c6 1846     		mov	r0, r3
 1387 00c8 FFF7FEFF 		bl	hals_irda_flag_get
 1388 00cc 0346     		mov	r3, r0
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 1389              		.loc 1 543 14
 1390 00ce 002B     		cmp	r3, #0
 1391 00d0 DFD0     		beq	.L69
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 }
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             }
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* read data from data register */
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(2U == data_length) {
 1392              		.loc 1 558 11
 1393 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1394 00d4 022B     		cmp	r3, #2
 1395 00d6 13D1     		bne	.L70
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             *(uint16_t *)irda->rxbuffer.buffer = (hals_irda_data_receive(irda->periph) & irda->data
 1396              		.loc 1 559 51
 1397 00d8 FB68     		ldr	r3, [r7, #12]
 1398 00da 1B68     		ldr	r3, [r3]
 1399 00dc 1846     		mov	r0, r3
 1400 00de FFF7FEFF 		bl	hals_irda_data_receive
 1401 00e2 0346     		mov	r3, r0
 1402 00e4 1946     		mov	r1, r3
 1403              		.loc 1 559 94
 1404 00e6 FB68     		ldr	r3, [r7, #12]
 1405 00e8 9A8E     		ldrh	r2, [r3, #52]
 1406              		.loc 1 559 40
 1407 00ea FB68     		ldr	r3, [r7, #12]
 1408 00ec 9B6A     		ldr	r3, [r3, #40]
 1409              		.loc 1 559 48
 1410 00ee 0A40     		ands	r2, r2, r1
 1411 00f0 92B2     		uxth	r2, r2
 1412 00f2 1A80     		strh	r2, [r3]	@ movhi
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->rxbuffer.buffer += 2;
 1413              		.loc 1 560 35
 1414 00f4 FB68     		ldr	r3, [r7, #12]
 1415 00f6 9B6A     		ldr	r3, [r3, #40]
 1416 00f8 9A1C     		adds	r2, r3, #2
 1417 00fa FB68     		ldr	r3, [r7, #12]
 1418 00fc 9A62     		str	r2, [r3, #40]
 1419 00fe 13E0     		b	.L71
 1420              	.L70:
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         } else {
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             *irda->rxbuffer.buffer = (uint8_t)(hals_irda_data_receive(irda->periph) & irda->data_bi
 1421              		.loc 1 562 48
 1422 0100 FB68     		ldr	r3, [r7, #12]
 1423 0102 1B68     		ldr	r3, [r3]
 1424 0104 1846     		mov	r0, r3
 1425 0106 FFF7FEFF 		bl	hals_irda_data_receive
 1426 010a 0346     		mov	r3, r0
 1427              		.loc 1 562 38
 1428 010c D9B2     		uxtb	r1, r3
 1429              		.loc 1 562 91
 1430 010e FB68     		ldr	r3, [r7, #12]
 1431 0110 9B8E     		ldrh	r3, [r3, #52]
 1432              		.loc 1 562 38
 1433 0112 DAB2     		uxtb	r2, r3
 1434              		.loc 1 562 28
 1435 0114 FB68     		ldr	r3, [r7, #12]
 1436 0116 9B6A     		ldr	r3, [r3, #40]
 1437              		.loc 1 562 38
 1438 0118 0A40     		ands	r2, r2, r1
 1439 011a D2B2     		uxtb	r2, r2
 1440              		.loc 1 562 36
 1441 011c 1A70     		strb	r2, [r3]
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             irda->rxbuffer.buffer++;
 1442              		.loc 1 563 27
 1443 011e FB68     		ldr	r3, [r7, #12]
 1444 0120 9B6A     		ldr	r3, [r3, #40]
 1445              		.loc 1 563 34
 1446 0122 5A1C     		adds	r2, r3, #1
 1447 0124 FB68     		ldr	r3, [r7, #12]
 1448 0126 9A62     		str	r2, [r3, #40]
 1449              	.L71:
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* change the receive pointer */
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->rxbuffer.pos++;
 1450              		.loc 1 567 23
 1451 0128 FB68     		ldr	r3, [r7, #12]
 1452 012a 1B6B     		ldr	r3, [r3, #48]
 1453              		.loc 1 567 27
 1454 012c 5A1C     		adds	r2, r3, #1
 1455 012e FB68     		ldr	r3, [r7, #12]
 1456 0130 1A63     		str	r2, [r3, #48]
 1457              	.L67:
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for read data buffer not empty */
 1458              		.loc 1 541 25
 1459 0132 FB68     		ldr	r3, [r7, #12]
 1460 0134 1A6B     		ldr	r2, [r3, #48]
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for read data buffer not empty */
 1461              		.loc 1 541 46
 1462 0136 FB68     		ldr	r3, [r7, #12]
 1463 0138 DB6A     		ldr	r3, [r3, #44]
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* wait for read data buffer not empty */
 1464              		.loc 1 541 10
 1465 013a 9A42     		cmp	r2, r3
 1466 013c BFD3     		bcc	.L68
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* change the Rx state to free */
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_state = IRDA_STATE_FREE;
 1467              		.loc 1 571 20
 1468 013e FB68     		ldr	r3, [r7, #12]
 1469 0140 0022     		movs	r2, #0
 1470 0142 83F83B20 		strb	r2, [r3, #59]
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 1471              		.loc 1 574 5
 1472 0146 FB68     		ldr	r3, [r7, #12]
 1473 0148 0022     		movs	r2, #0
 1474 014a 83F84420 		strb	r2, [r3, #68]
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 1475              		.loc 1 576 12
 1476 014e 0023     		movs	r3, #0
 1477              	.L64:
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 1478              		.loc 1 577 1
 1479 0150 1846     		mov	r0, r3
 1480 0152 1837     		adds	r7, r7, #24
 1481              		.cfi_def_cfa_offset 8
 1482 0154 BD46     		mov	sp, r7
 1483              		.cfi_def_cfa_register 13
 1484              		@ sp needed
 1485 0156 80BD     		pop	{r7, pc}
 1486              		.cfi_endproc
 1487              	.LFE126:
 1489              		.section	.text.hal_irda_transmit_interrupt,"ax",%progbits
 1490              		.align	1
 1491              		.global	hal_irda_transmit_interrupt
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu softvfp
 1497              	hal_irda_transmit_interrupt:
 1498              	.LFB127:
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      transmit amounts of data by interrupt method
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is non-blocking
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_buffer: pointer to data buffer
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  length: number of data to be transmitted
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_user_func: user callback function
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_transmit_interrupt(hal_irda_dev_struct *irda, uint8_t *p_buffer, uint32_t length,
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                     hal_irda_user_cb p_user_func)
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 1499              		.loc 1 593 1
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 16
 1502              		@ frame_needed = 1, uses_anonymous_args = 0
 1503 0000 80B5     		push	{r7, lr}
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 7, -8
 1506              		.cfi_offset 14, -4
 1507 0002 84B0     		sub	sp, sp, #16
 1508              		.cfi_def_cfa_offset 24
 1509 0004 00AF     		add	r7, sp, #0
 1510              		.cfi_def_cfa_register 7
 1511 0006 F860     		str	r0, [r7, #12]
 1512 0008 B960     		str	r1, [r7, #8]
 1513 000a 7A60     		str	r2, [r7, #4]
 1514 000c 3B60     		str	r3, [r7]
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameters */
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_buffer) || (0U == length)) {
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] or [p_buffer] or [length] value is invalid");
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the tx_state wheher is busy or not */
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->tx_state) {
 1515              		.loc 1 603 31
 1516 000e FB68     		ldr	r3, [r7, #12]
 1517 0010 93F83A30 		ldrb	r3, [r3, #58]
 1518 0014 DBB2     		uxtb	r3, r3
 1519              		.loc 1 603 7
 1520 0016 012B     		cmp	r3, #1
 1521 0018 02D1     		bne	.L74
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda tx has already been used, please wait until run_state change to free ");
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_BUSY;
 1522              		.loc 1 605 16
 1523 001a 6FF00203 		mvn	r3, #2
 1524 001e 35E0     		b	.L75
 1525              	.L74:
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 1526              		.loc 1 609 5
 1527 0020 FB68     		ldr	r3, [r7, #12]
 1528 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1529 0026 012B     		cmp	r3, #1
 1530 0028 02D1     		bne	.L76
 1531              		.loc 1 609 5 is_stmt 0 discriminator 1
 1532 002a 6FF00103 		mvn	r3, #1
 1533 002e 2DE0     		b	.L75
 1534              	.L76:
 1535              		.loc 1 609 5 discriminator 2
 1536 0030 FB68     		ldr	r3, [r7, #12]
 1537 0032 0122     		movs	r2, #1
 1538 0034 83F84420 		strb	r2, [r3, #68]
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_state = IRDA_STATE_BUSY;
 1539              		.loc 1 611 20 is_stmt 1 discriminator 2
 1540 0038 FB68     		ldr	r3, [r7, #12]
 1541 003a 0122     		movs	r2, #1
 1542 003c 83F83A20 		strb	r2, [r3, #58]
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->error_state = HAL_IRDA_ERROR_NONE;
 1543              		.loc 1 612 23 discriminator 2
 1544 0040 FB68     		ldr	r3, [r7, #12]
 1545 0042 0022     		movs	r2, #0
 1546 0044 1A87     		strh	r2, [r3, #56]	@ movhi
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* initialize transmit parameters */
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.buffer   = (uint8_t *)p_buffer;
 1547              		.loc 1 615 29 discriminator 2
 1548 0046 FB68     		ldr	r3, [r7, #12]
 1549 0048 BA68     		ldr	r2, [r7, #8]
 1550 004a DA61     		str	r2, [r3, #28]
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.length   = length;
 1551              		.loc 1 616 29 discriminator 2
 1552 004c FB68     		ldr	r3, [r7, #12]
 1553 004e 7A68     		ldr	r2, [r7, #4]
 1554 0050 1A62     		str	r2, [r3, #32]
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.pos      = 0U;
 1555              		.loc 1 617 29 discriminator 2
 1556 0052 FB68     		ldr	r3, [r7, #12]
 1557 0054 0022     		movs	r2, #0
 1558 0056 5A62     		str	r2, [r3, #36]
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_callback       = (void *)p_user_func;
 1559              		.loc 1 618 29 discriminator 2
 1560 0058 FB68     		ldr	r3, [r7, #12]
 1561 005a 3A68     		ldr	r2, [r7]
 1562 005c 1A64     		str	r2, [r3, #64]
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure the transmit ready and complete callback as the function implemented */
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.transmit_ready_handle = _irda_transmit_interrupt;
 1563              		.loc 1 621 42 discriminator 2
 1564 005e FB68     		ldr	r3, [r7, #12]
 1565 0060 0C4A     		ldr	r2, .L77
 1566 0062 9A60     		str	r2, [r3, #8]
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.transmit_complete_handle = _irda_transmit_complete_interrupt;
 1567              		.loc 1 622 45 discriminator 2
 1568 0064 FB68     		ldr	r3, [r7, #12]
 1569 0066 0C4A     		ldr	r2, .L77+4
 1570 0068 DA60     		str	r2, [r3, #12]
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* clear IRDA TC interrupt flag */
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_TC);
 1571              		.loc 1 625 5 discriminator 2
 1572 006a FB68     		ldr	r3, [r7, #12]
 1573 006c 1B68     		ldr	r3, [r3]
 1574 006e 0B49     		ldr	r1, .L77+8
 1575 0070 1846     		mov	r0, r3
 1576 0072 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* enable the TBE interrupt */
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_enable(irda->periph, USART_INT_TBE);
 1577              		.loc 1 628 5 discriminator 2
 1578 0076 FB68     		ldr	r3, [r7, #12]
 1579 0078 1B68     		ldr	r3, [r3]
 1580 007a 0721     		movs	r1, #7
 1581 007c 1846     		mov	r0, r3
 1582 007e FFF7FEFF 		bl	hals_irda_interrupt_enable
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 1583              		.loc 1 631 5 discriminator 2
 1584 0082 FB68     		ldr	r3, [r7, #12]
 1585 0084 0022     		movs	r2, #0
 1586 0086 83F84420 		strb	r2, [r3, #68]
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 1587              		.loc 1 633 12 discriminator 2
 1588 008a 0023     		movs	r3, #0
 1589              	.L75:
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 1590              		.loc 1 634 1
 1591 008c 1846     		mov	r0, r3
 1592 008e 1037     		adds	r7, r7, #16
 1593              		.cfi_def_cfa_offset 8
 1594 0090 BD46     		mov	sp, r7
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 0092 80BD     		pop	{r7, pc}
 1598              	.L78:
 1599              		.align	2
 1600              	.L77:
 1601 0094 00000000 		.word	_irda_transmit_interrupt
 1602 0098 00000000 		.word	_irda_transmit_complete_interrupt
 1603 009c 06000607 		.word	117833734
 1604              		.cfi_endproc
 1605              	.LFE127:
 1607              		.section	.text.hal_irda_receive_interrupt,"ax",%progbits
 1608              		.align	1
 1609              		.global	hal_irda_receive_interrupt
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu softvfp
 1615              	hal_irda_receive_interrupt:
 1616              	.LFB128:
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      receive amounts of data by interrupt method
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is non-blocking
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_buffer: pointer to data buffer
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  length: number of data to be received
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_user_func: user callback function
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_receive_interrupt(hal_irda_dev_struct *irda, uint8_t *p_buffer, uint32_t length,
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                    hal_irda_user_cb p_user_func)
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 1617              		.loc 1 650 1
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 16
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 84B0     		sub	sp, sp, #16
 1626              		.cfi_def_cfa_offset 24
 1627 0004 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
 1629 0006 F860     		str	r0, [r7, #12]
 1630 0008 B960     		str	r1, [r7, #8]
 1631 000a 7A60     		str	r2, [r7, #4]
 1632 000c 3B60     		str	r3, [r7]
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameters */
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_buffer) || (0U == length)) {
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] or [p_buffer] or [length] value is invalid");
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the rx_state wheher is busy or not */
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->rx_state) {
 1633              		.loc 1 660 31
 1634 000e FB68     		ldr	r3, [r7, #12]
 1635 0010 93F83B30 		ldrb	r3, [r3, #59]
 1636 0014 DBB2     		uxtb	r3, r3
 1637              		.loc 1 660 7
 1638 0016 012B     		cmp	r3, #1
 1639 0018 02D1     		bne	.L80
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda rx has already been used, please wait until run_state change to free ");
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_BUSY;
 1640              		.loc 1 662 16
 1641 001a 6FF00203 		mvn	r3, #2
 1642 001e 40E0     		b	.L81
 1643              	.L80:
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 1644              		.loc 1 666 5
 1645 0020 FB68     		ldr	r3, [r7, #12]
 1646 0022 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1647 0026 012B     		cmp	r3, #1
 1648 0028 02D1     		bne	.L82
 1649              		.loc 1 666 5 is_stmt 0 discriminator 1
 1650 002a 6FF00103 		mvn	r3, #1
 1651 002e 38E0     		b	.L81
 1652              	.L82:
 1653              		.loc 1 666 5 discriminator 2
 1654 0030 FB68     		ldr	r3, [r7, #12]
 1655 0032 0122     		movs	r2, #1
 1656 0034 83F84420 		strb	r2, [r3, #68]
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_state = IRDA_STATE_BUSY;
 1657              		.loc 1 668 20 is_stmt 1 discriminator 2
 1658 0038 FB68     		ldr	r3, [r7, #12]
 1659 003a 0122     		movs	r2, #1
 1660 003c 83F83B20 		strb	r2, [r3, #59]
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->error_state = HAL_IRDA_ERROR_NONE;
 1661              		.loc 1 669 23 discriminator 2
 1662 0040 FB68     		ldr	r3, [r7, #12]
 1663 0042 0022     		movs	r2, #0
 1664 0044 1A87     		strh	r2, [r3, #56]	@ movhi
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* initialize receive parameters */
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.buffer   = (uint8_t *)p_buffer;
 1665              		.loc 1 672 29 discriminator 2
 1666 0046 FB68     		ldr	r3, [r7, #12]
 1667 0048 BA68     		ldr	r2, [r7, #8]
 1668 004a 9A62     		str	r2, [r3, #40]
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.length   = length;
 1669              		.loc 1 673 29 discriminator 2
 1670 004c FB68     		ldr	r3, [r7, #12]
 1671 004e 7A68     		ldr	r2, [r7, #4]
 1672 0050 DA62     		str	r2, [r3, #44]
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.pos      = 0U;
 1673              		.loc 1 674 29 discriminator 2
 1674 0052 FB68     		ldr	r3, [r7, #12]
 1675 0054 0022     		movs	r2, #0
 1676 0056 1A63     		str	r2, [r3, #48]
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_callback       = (void *)p_user_func;
 1677              		.loc 1 675 29 discriminator 2
 1678 0058 FB68     		ldr	r3, [r7, #12]
 1679 005a 3A68     		ldr	r2, [r7]
 1680 005c DA63     		str	r2, [r3, #60]
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.receive_complete_handle = _irda_receive_interrupt;
 1681              		.loc 1 676 44 discriminator 2
 1682 005e FB68     		ldr	r3, [r7, #12]
 1683 0060 124A     		ldr	r2, .L83
 1684 0062 5A60     		str	r2, [r3, #4]
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->data_bit_mask = _irda_data_bit_mask_get(irda);
 1685              		.loc 1 677 27 discriminator 2
 1686 0064 F868     		ldr	r0, [r7, #12]
 1687 0066 FFF7FEFF 		bl	_irda_data_bit_mask_get
 1688 006a 0346     		mov	r3, r0
 1689 006c 1A46     		mov	r2, r3
 1690              		.loc 1 677 25 discriminator 2
 1691 006e FB68     		ldr	r3, [r7, #12]
 1692 0070 9A86     		strh	r2, [r3, #52]	@ movhi
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* enable PERR, ERR, RBNE interrupt */
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_enable(irda->periph, USART_INT_PERR);
 1693              		.loc 1 680 5 discriminator 2
 1694 0072 FB68     		ldr	r3, [r7, #12]
 1695 0074 1B68     		ldr	r3, [r3]
 1696 0076 0821     		movs	r1, #8
 1697 0078 1846     		mov	r0, r3
 1698 007a FFF7FEFF 		bl	hals_irda_interrupt_enable
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_enable(irda->periph, USART_INT_ERR);
 1699              		.loc 1 681 5 discriminator 2
 1700 007e FB68     		ldr	r3, [r7, #12]
 1701 0080 1B68     		ldr	r3, [r3]
 1702 0082 4FF40071 		mov	r1, #512
 1703 0086 1846     		mov	r0, r3
 1704 0088 FFF7FEFF 		bl	hals_irda_interrupt_enable
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_enable(irda->periph, USART_INT_RBNE);
 1705              		.loc 1 682 5 discriminator 2
 1706 008c FB68     		ldr	r3, [r7, #12]
 1707 008e 1B68     		ldr	r3, [r3]
 1708 0090 0521     		movs	r1, #5
 1709 0092 1846     		mov	r0, r3
 1710 0094 FFF7FEFF 		bl	hals_irda_interrupt_enable
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 1711              		.loc 1 685 5 discriminator 2
 1712 0098 FB68     		ldr	r3, [r7, #12]
 1713 009a 0022     		movs	r2, #0
 1714 009c 83F84420 		strb	r2, [r3, #68]
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 1715              		.loc 1 687 12 discriminator 2
 1716 00a0 0023     		movs	r3, #0
 1717              	.L81:
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 1718              		.loc 1 688 1
 1719 00a2 1846     		mov	r0, r3
 1720 00a4 1037     		adds	r7, r7, #16
 1721              		.cfi_def_cfa_offset 8
 1722 00a6 BD46     		mov	sp, r7
 1723              		.cfi_def_cfa_register 13
 1724              		@ sp needed
 1725 00a8 80BD     		pop	{r7, pc}
 1726              	.L84:
 1727 00aa 00BF     		.align	2
 1728              	.L83:
 1729 00ac 00000000 		.word	_irda_receive_interrupt
 1730              		.cfi_endproc
 1731              	.LFE128:
 1733              		.section	.text.hal_irda_transmit_dma,"ax",%progbits
 1734              		.align	1
 1735              		.global	hal_irda_transmit_dma
 1736              		.syntax unified
 1737              		.thumb
 1738              		.thumb_func
 1739              		.fpu softvfp
 1741              	hal_irda_transmit_dma:
 1742              	.LFB129:
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      transmit amounts of data by dma method
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is non-blocking
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_buffer: pointer to data buffer
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  length: number of data to be transmitted
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_func: pointer to callback function
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_transmit_dma(hal_irda_dev_struct *irda, uint8_t *p_buffer, uint16_t length, hal_ir
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 1743              		.loc 1 703 1
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 32
 1746              		@ frame_needed = 1, uses_anonymous_args = 0
 1747 0000 90B5     		push	{r4, r7, lr}
 1748              		.cfi_def_cfa_offset 12
 1749              		.cfi_offset 4, -12
 1750              		.cfi_offset 7, -8
 1751              		.cfi_offset 14, -4
 1752 0002 8BB0     		sub	sp, sp, #44
 1753              		.cfi_def_cfa_offset 56
 1754 0004 02AF     		add	r7, sp, #8
 1755              		.cfi_def_cfa 7, 48
 1756 0006 F860     		str	r0, [r7, #12]
 1757 0008 B960     		str	r1, [r7, #8]
 1758 000a 3B60     		str	r3, [r7]
 1759 000c 1346     		mov	r3, r2	@ movhi
 1760 000e FB80     		strh	r3, [r7, #6]	@ movhi
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_irq_struct dma_irq;
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameters */
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_buffer) || (0U == length)) {
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] or [p_buffer] or [length] value is invalid");
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameter */
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == irda->p_dma_tx) {
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda->p_dma_tx] value is invalid");
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the tx_state wheher is busy or not */
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->tx_state) {
 1761              		.loc 1 721 31
 1762 0010 FB68     		ldr	r3, [r7, #12]
 1763 0012 93F83A30 		ldrb	r3, [r3, #58]
 1764 0016 DBB2     		uxtb	r3, r3
 1765              		.loc 1 721 7
 1766 0018 012B     		cmp	r3, #1
 1767 001a 02D1     		bne	.L86
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda tx has already been used, please wait until run_state change to free ");
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_BUSY;
 1768              		.loc 1 723 16
 1769 001c 6FF00203 		mvn	r3, #2
 1770 0020 72E0     		b	.L94
 1771              	.L86:
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 1772              		.loc 1 727 5
 1773 0022 FB68     		ldr	r3, [r7, #12]
 1774 0024 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1775 0028 012B     		cmp	r3, #1
 1776 002a 02D1     		bne	.L88
 1777              		.loc 1 727 5 is_stmt 0 discriminator 1
 1778 002c 6FF00103 		mvn	r3, #1
 1779 0030 6AE0     		b	.L94
 1780              	.L88:
 1781              		.loc 1 727 5 discriminator 2
 1782 0032 FB68     		ldr	r3, [r7, #12]
 1783 0034 0122     		movs	r2, #1
 1784 0036 83F84420 		strb	r2, [r3, #68]
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_state = IRDA_STATE_BUSY;
 1785              		.loc 1 729 20 is_stmt 1 discriminator 2
 1786 003a FB68     		ldr	r3, [r7, #12]
 1787 003c 0122     		movs	r2, #1
 1788 003e 83F83A20 		strb	r2, [r3, #58]
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->error_state = HAL_IRDA_ERROR_NONE;
 1789              		.loc 1 730 23 discriminator 2
 1790 0042 FB68     		ldr	r3, [r7, #12]
 1791 0044 0022     		movs	r2, #0
 1792 0046 1A87     		strh	r2, [r3, #56]	@ movhi
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* initialize transmit parameters */
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.buffer   = (uint8_t *)p_buffer;
 1793              		.loc 1 733 29 discriminator 2
 1794 0048 FB68     		ldr	r3, [r7, #12]
 1795 004a BA68     		ldr	r2, [r7, #8]
 1796 004c DA61     		str	r2, [r3, #28]
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.length   = length;
 1797              		.loc 1 734 29 discriminator 2
 1798 004e FA88     		ldrh	r2, [r7, #6]
 1799 0050 FB68     		ldr	r3, [r7, #12]
 1800 0052 1A62     		str	r2, [r3, #32]
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.pos      = 0U;
 1801              		.loc 1 735 29 discriminator 2
 1802 0054 FB68     		ldr	r3, [r7, #12]
 1803 0056 0022     		movs	r2, #0
 1804 0058 5A62     		str	r2, [r3, #36]
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_func) {
 1805              		.loc 1 737 7 discriminator 2
 1806 005a 3B68     		ldr	r3, [r7]
 1807 005c 002B     		cmp	r3, #0
 1808 005e 08D0     		beq	.L89
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->tx_callback = (void *)p_func->complete_func;
 1809              		.loc 1 738 43
 1810 0060 3B68     		ldr	r3, [r7]
 1811 0062 1A68     		ldr	r2, [r3]
 1812              		.loc 1 738 27
 1813 0064 FB68     		ldr	r3, [r7, #12]
 1814 0066 1A64     		str	r2, [r3, #64]
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 1815              		.loc 1 739 64
 1816 0068 3B68     		ldr	r3, [r7]
 1817 006a 5A68     		ldr	r2, [r3, #4]
 1818              		.loc 1 739 37
 1819 006c FB68     		ldr	r3, [r7, #12]
 1820 006e 1A61     		str	r2, [r3, #16]
 1821 0070 05E0     		b	.L90
 1822              	.L89:
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->tx_callback = NULL;
 1823              		.loc 1 741 27
 1824 0072 FB68     		ldr	r3, [r7, #12]
 1825 0074 0022     		movs	r2, #0
 1826 0076 1A64     		str	r2, [r3, #64]
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.error_handle = NULL;
 1827              		.loc 1 742 37
 1828 0078 FB68     		ldr	r3, [r7, #12]
 1829 007a 0022     		movs	r2, #0
 1830 007c 1A61     		str	r2, [r3, #16]
 1831              	.L90:
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->irda_irq.transmit_complete_handle = _irda_transmit_complete_interrupt;
 1832              		.loc 1 744 45
 1833 007e FB68     		ldr	r3, [r7, #12]
 1834 0080 234A     		ldr	r2, .L95
 1835 0082 DA60     		str	r2, [r3, #12]
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure DMA interrupt callback function */
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     dma_irq.full_finish_handle = _irda_transmit_dma;
 1836              		.loc 1 747 32
 1837 0084 234B     		ldr	r3, .L95+4
 1838 0086 FB61     		str	r3, [r7, #28]
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     dma_irq.error_handle = _irda_dma_error;
 1839              		.loc 1 748 26
 1840 0088 234B     		ldr	r3, .L95+8
 1841 008a 7B61     		str	r3, [r7, #20]
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != irda->p_dma_tx->dma_irq.half_finish_handle) {
 1842              		.loc 1 749 20
 1843 008c FB68     		ldr	r3, [r7, #12]
 1844 008e 9B69     		ldr	r3, [r3, #24]
 1845              		.loc 1 749 39
 1846 0090 9B68     		ldr	r3, [r3, #8]
 1847              		.loc 1 749 7
 1848 0092 002B     		cmp	r3, #0
 1849 0094 04D0     		beq	.L91
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         dma_irq.half_finish_handle = irda->p_dma_tx->dma_irq.half_finish_handle;
 1850              		.loc 1 750 42
 1851 0096 FB68     		ldr	r3, [r7, #12]
 1852 0098 9B69     		ldr	r3, [r3, #24]
 1853              		.loc 1 750 61
 1854 009a 9B68     		ldr	r3, [r3, #8]
 1855              		.loc 1 750 36
 1856 009c BB61     		str	r3, [r7, #24]
 1857 009e 01E0     		b	.L92
 1858              	.L91:
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         dma_irq.half_finish_handle = NULL;
 1859              		.loc 1 752 36
 1860 00a0 0023     		movs	r3, #0
 1861 00a2 BB61     		str	r3, [r7, #24]
 1862              	.L92:
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* start DMA interrupt mode transfer */
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(irda->p_dma_tx, (uint32_t)irda->txbuffer.buffer,
 1863              		.loc 1 756 24
 1864 00a4 FB68     		ldr	r3, [r7, #12]
 1865 00a6 9869     		ldr	r0, [r3, #24]
 1866              		.loc 1 756 88
 1867 00a8 FB68     		ldr	r3, [r7, #12]
 1868 00aa DB69     		ldr	r3, [r3, #28]
 1869              		.loc 1 756 24
 1870 00ac 1C46     		mov	r4, r3
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)&USART_TDATA(irda->periph), irda->txbuffer.length, &dma_irq)) {
 1871              		.loc 1 757 24
 1872 00ae FB68     		ldr	r3, [r7, #12]
 1873 00b0 1B68     		ldr	r3, [r3]
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)&USART_TDATA(irda->periph), irda->txbuffer.length, &dma_irq)) {
 1874              		.loc 1 756 24
 1875 00b2 03F12802 		add	r2, r3, #40
 1876              		.loc 1 757 65
 1877 00b6 FB68     		ldr	r3, [r7, #12]
 1878 00b8 1B6A     		ldr	r3, [r3, #32]
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)&USART_TDATA(irda->periph), irda->txbuffer.length, &dma_irq)) {
 1879              		.loc 1 756 24
 1880 00ba 99B2     		uxth	r1, r3
 1881 00bc 07F11403 		add	r3, r7, #20
 1882 00c0 0093     		str	r3, [sp]
 1883 00c2 0B46     		mov	r3, r1
 1884 00c4 2146     		mov	r1, r4
 1885 00c6 FFF7FEFF 		bl	hal_dma_start_interrupt
 1886 00ca 0346     		mov	r3, r0
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)&USART_TDATA(irda->periph), irda->txbuffer.length, &dma_irq)) {
 1887              		.loc 1 756 7
 1888 00cc 002B     		cmp	r3, #0
 1889 00ce 0AD0     		beq	.L93
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->tx_state = IRDA_STATE_FREE;
 1890              		.loc 1 758 24
 1891 00d0 FB68     		ldr	r3, [r7, #12]
 1892 00d2 0022     		movs	r2, #0
 1893 00d4 83F83A20 		strb	r2, [r3, #58]
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->error_state = HAL_IRDA_ERROR_DMATX;
 1894              		.loc 1 759 27
 1895 00d8 FB68     		ldr	r3, [r7, #12]
 1896 00da 1022     		movs	r2, #16
 1897 00dc 1A87     		strh	r2, [r3, #56]	@ movhi
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* unlock uart */
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_UNLOCK(irda);
 1898              		.loc 1 761 9
 1899 00de FB68     		ldr	r3, [r7, #12]
 1900 00e0 0022     		movs	r2, #0
 1901 00e2 83F84420 		strb	r2, [r3, #68]
 1902              	.L93:
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* clear IRDA TC interrupt flag */
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_TC);
 1903              		.loc 1 765 5
 1904 00e6 FB68     		ldr	r3, [r7, #12]
 1905 00e8 1B68     		ldr	r3, [r3]
 1906 00ea 0C49     		ldr	r1, .L95+12
 1907 00ec 1846     		mov	r0, r3
 1908 00ee FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* DMA enable for transmission */
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_dma_transmit_config(irda->periph, USART_TRANSMIT_DMA_ENABLE);
 1909              		.loc 1 768 5
 1910 00f2 FB68     		ldr	r3, [r7, #12]
 1911 00f4 1B68     		ldr	r3, [r3]
 1912 00f6 8021     		movs	r1, #128
 1913 00f8 1846     		mov	r0, r3
 1914 00fa FFF7FEFF 		bl	hals_irda_dma_transmit_config
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 1915              		.loc 1 771 5
 1916 00fe FB68     		ldr	r3, [r7, #12]
 1917 0100 0022     		movs	r2, #0
 1918 0102 83F84420 		strb	r2, [r3, #68]
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 1919              		.loc 1 773 12
 1920 0106 0023     		movs	r3, #0
 1921              	.L94:
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 1922              		.loc 1 774 1 discriminator 1
 1923 0108 1846     		mov	r0, r3
 1924 010a 2437     		adds	r7, r7, #36
 1925              		.cfi_def_cfa_offset 12
 1926 010c BD46     		mov	sp, r7
 1927              		.cfi_def_cfa_register 13
 1928              		@ sp needed
 1929 010e 90BD     		pop	{r4, r7, pc}
 1930              	.L96:
 1931              		.align	2
 1932              	.L95:
 1933 0110 00000000 		.word	_irda_transmit_complete_interrupt
 1934 0114 00000000 		.word	_irda_transmit_dma
 1935 0118 00000000 		.word	_irda_dma_error
 1936 011c 06000607 		.word	117833734
 1937              		.cfi_endproc
 1938              	.LFE129:
 1940              		.section	.text.hal_irda_receive_dma,"ax",%progbits
 1941              		.align	1
 1942              		.global	hal_irda_receive_dma
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu softvfp
 1948              	hal_irda_receive_dma:
 1949              	.LFB130:
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      receive amounts of data by dma method
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is non-blocking
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_buffer: pointer to data buffer
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  length: number of data to be received
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  p_func: pointer to callback function
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_receive_dma(hal_irda_dev_struct *irda, uint8_t *p_buffer, uint16_t length, hal_ird
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 1950              		.loc 1 789 1
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 32
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 90B5     		push	{r4, r7, lr}
 1955              		.cfi_def_cfa_offset 12
 1956              		.cfi_offset 4, -12
 1957              		.cfi_offset 7, -8
 1958              		.cfi_offset 14, -4
 1959 0002 8BB0     		sub	sp, sp, #44
 1960              		.cfi_def_cfa_offset 56
 1961 0004 02AF     		add	r7, sp, #8
 1962              		.cfi_def_cfa 7, 48
 1963 0006 F860     		str	r0, [r7, #12]
 1964 0008 B960     		str	r1, [r7, #8]
 1965 000a 3B60     		str	r3, [r7]
 1966 000c 1346     		mov	r3, r2	@ movhi
 1967 000e FB80     		strh	r3, [r7, #6]	@ movhi
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_irq_struct dma_irq;
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameters */
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if((NULL == irda) || (NULL == p_buffer) || (0U == length)) {
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] or [p_buffer] or [length] value is invalid");
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameter */
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == irda->p_dma_rx) {
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda->p_dma_rx] value is invalid");
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the rx_state wheher is busy or not */
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->rx_state) {
 1968              		.loc 1 807 31
 1969 0010 FB68     		ldr	r3, [r7, #12]
 1970 0012 93F83B30 		ldrb	r3, [r3, #59]
 1971 0016 DBB2     		uxtb	r3, r3
 1972              		.loc 1 807 7
 1973 0018 012B     		cmp	r3, #1
 1974 001a 02D1     		bne	.L98
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda rx has already been used, please wait until run_state change to free ");
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_BUSY;
 1975              		.loc 1 809 16
 1976 001c 6FF00203 		mvn	r3, #2
 1977 0020 7DE0     		b	.L106
 1978              	.L98:
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 1979              		.loc 1 813 5
 1980 0022 FB68     		ldr	r3, [r7, #12]
 1981 0024 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1982 0028 012B     		cmp	r3, #1
 1983 002a 02D1     		bne	.L100
 1984              		.loc 1 813 5 is_stmt 0 discriminator 1
 1985 002c 6FF00103 		mvn	r3, #1
 1986 0030 75E0     		b	.L106
 1987              	.L100:
 1988              		.loc 1 813 5 discriminator 2
 1989 0032 FB68     		ldr	r3, [r7, #12]
 1990 0034 0122     		movs	r2, #1
 1991 0036 83F84420 		strb	r2, [r3, #68]
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_state = IRDA_STATE_BUSY;
 1992              		.loc 1 815 20 is_stmt 1 discriminator 2
 1993 003a FB68     		ldr	r3, [r7, #12]
 1994 003c 0122     		movs	r2, #1
 1995 003e 83F83B20 		strb	r2, [r3, #59]
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->error_state = HAL_IRDA_ERROR_NONE;
 1996              		.loc 1 816 23 discriminator 2
 1997 0042 FB68     		ldr	r3, [r7, #12]
 1998 0044 0022     		movs	r2, #0
 1999 0046 1A87     		strh	r2, [r3, #56]	@ movhi
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* initialize receive parameters */
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.buffer   = (uint8_t *)p_buffer;
 2000              		.loc 1 819 29 discriminator 2
 2001 0048 FB68     		ldr	r3, [r7, #12]
 2002 004a BA68     		ldr	r2, [r7, #8]
 2003 004c 9A62     		str	r2, [r3, #40]
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.length   = length;
 2004              		.loc 1 820 29 discriminator 2
 2005 004e FA88     		ldrh	r2, [r7, #6]
 2006 0050 FB68     		ldr	r3, [r7, #12]
 2007 0052 DA62     		str	r2, [r3, #44]
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.pos      = 0U;
 2008              		.loc 1 821 29 discriminator 2
 2009 0054 FB68     		ldr	r3, [r7, #12]
 2010 0056 0022     		movs	r2, #0
 2011 0058 1A63     		str	r2, [r3, #48]
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_func) {
 2012              		.loc 1 823 7 discriminator 2
 2013 005a 3B68     		ldr	r3, [r7]
 2014 005c 002B     		cmp	r3, #0
 2015 005e 08D0     		beq	.L101
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->rx_callback = (void *)p_func->complete_func;
 2016              		.loc 1 824 43
 2017 0060 3B68     		ldr	r3, [r7]
 2018 0062 1A68     		ldr	r2, [r3]
 2019              		.loc 1 824 27
 2020 0064 FB68     		ldr	r3, [r7, #12]
 2021 0066 DA63     		str	r2, [r3, #60]
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 2022              		.loc 1 825 64
 2023 0068 3B68     		ldr	r3, [r7]
 2024 006a 5A68     		ldr	r2, [r3, #4]
 2025              		.loc 1 825 37
 2026 006c FB68     		ldr	r3, [r7, #12]
 2027 006e 1A61     		str	r2, [r3, #16]
 2028 0070 05E0     		b	.L102
 2029              	.L101:
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->rx_callback = NULL;
 2030              		.loc 1 827 27
 2031 0072 FB68     		ldr	r3, [r7, #12]
 2032 0074 0022     		movs	r2, #0
 2033 0076 DA63     		str	r2, [r3, #60]
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->irda_irq.error_handle = NULL;
 2034              		.loc 1 828 37
 2035 0078 FB68     		ldr	r3, [r7, #12]
 2036 007a 0022     		movs	r2, #0
 2037 007c 1A61     		str	r2, [r3, #16]
 2038              	.L102:
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->data_bit_mask = _irda_data_bit_mask_get(irda);
 2039              		.loc 1 830 27
 2040 007e F868     		ldr	r0, [r7, #12]
 2041 0080 FFF7FEFF 		bl	_irda_data_bit_mask_get
 2042 0084 0346     		mov	r3, r0
 2043 0086 1A46     		mov	r2, r3
 2044              		.loc 1 830 25
 2045 0088 FB68     		ldr	r3, [r7, #12]
 2046 008a 9A86     		strh	r2, [r3, #52]	@ movhi
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure DMA interrupt interrupt callback function */
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     dma_irq.full_finish_handle = _irda_receive_dma;
 2047              		.loc 1 833 32
 2048 008c 264B     		ldr	r3, .L107
 2049 008e FB61     		str	r3, [r7, #28]
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     dma_irq.error_handle = _irda_dma_error;
 2050              		.loc 1 834 26
 2051 0090 264B     		ldr	r3, .L107+4
 2052 0092 7B61     		str	r3, [r7, #20]
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != irda->p_dma_rx->dma_irq.half_finish_handle) {
 2053              		.loc 1 835 20
 2054 0094 FB68     		ldr	r3, [r7, #12]
 2055 0096 5B69     		ldr	r3, [r3, #20]
 2056              		.loc 1 835 39
 2057 0098 9B68     		ldr	r3, [r3, #8]
 2058              		.loc 1 835 7
 2059 009a 002B     		cmp	r3, #0
 2060 009c 04D0     		beq	.L103
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         dma_irq.half_finish_handle = irda->p_dma_rx->dma_irq.half_finish_handle;
 2061              		.loc 1 836 42
 2062 009e FB68     		ldr	r3, [r7, #12]
 2063 00a0 5B69     		ldr	r3, [r3, #20]
 2064              		.loc 1 836 61
 2065 00a2 9B68     		ldr	r3, [r3, #8]
 2066              		.loc 1 836 36
 2067 00a4 BB61     		str	r3, [r7, #24]
 2068 00a6 01E0     		b	.L104
 2069              	.L103:
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         dma_irq.half_finish_handle = NULL;
 2070              		.loc 1 838 36
 2071 00a8 0023     		movs	r3, #0
 2072 00aa BB61     		str	r3, [r7, #24]
 2073              	.L104:
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* start DMA interrupt mode transfer */
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(irda->p_dma_rx, (uint32_t)&USART_RDATA(irda->periph)
 2074              		.loc 1 842 24
 2075 00ac FB68     		ldr	r3, [r7, #12]
 2076 00ae 5869     		ldr	r0, [r3, #20]
 2077              		.loc 1 842 75
 2078 00b0 FB68     		ldr	r3, [r7, #12]
 2079 00b2 1B68     		ldr	r3, [r3]
 2080              		.loc 1 842 24
 2081 00b4 03F12401 		add	r1, r3, #36
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)irda->rxbuffer.buffer, irda->rxbuffer.length, &dma_irq)) {
 2082              		.loc 1 843 37
 2083 00b8 FB68     		ldr	r3, [r7, #12]
 2084 00ba 9B6A     		ldr	r3, [r3, #40]
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)irda->rxbuffer.buffer, irda->rxbuffer.length, &dma_irq)) {
 2085              		.loc 1 842 24
 2086 00bc 1C46     		mov	r4, r3
 2087              		.loc 1 843 60
 2088 00be FB68     		ldr	r3, [r7, #12]
 2089 00c0 DB6A     		ldr	r3, [r3, #44]
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)irda->rxbuffer.buffer, irda->rxbuffer.length, &dma_irq)) {
 2090              		.loc 1 842 24
 2091 00c2 9AB2     		uxth	r2, r3
 2092 00c4 07F11403 		add	r3, r7, #20
 2093 00c8 0093     		str	r3, [sp]
 2094 00ca 1346     		mov	r3, r2
 2095 00cc 2246     		mov	r2, r4
 2096 00ce FFF7FEFF 		bl	hal_dma_start_interrupt
 2097 00d2 0346     		mov	r3, r0
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             (uint32_t)irda->rxbuffer.buffer, irda->rxbuffer.length, &dma_irq)) {
 2098              		.loc 1 842 7
 2099 00d4 002B     		cmp	r3, #0
 2100 00d6 0AD0     		beq	.L105
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->rx_state = IRDA_STATE_FREE;
 2101              		.loc 1 844 24
 2102 00d8 FB68     		ldr	r3, [r7, #12]
 2103 00da 0022     		movs	r2, #0
 2104 00dc 83F83B20 		strb	r2, [r3, #59]
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         irda->error_state = HAL_IRDA_ERROR_DMARX;
 2105              		.loc 1 845 27
 2106 00e0 FB68     		ldr	r3, [r7, #12]
 2107 00e2 2022     		movs	r2, #32
 2108 00e4 1A87     		strh	r2, [r3, #56]	@ movhi
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* unlock uart */
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_UNLOCK(irda);
 2109              		.loc 1 847 9
 2110 00e6 FB68     		ldr	r3, [r7, #12]
 2111 00e8 0022     		movs	r2, #0
 2112 00ea 83F84420 		strb	r2, [r3, #68]
 2113              	.L105:
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* enable the usart parity error and error interrupt: (frame error, noise error, overrun error)
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_enable(irda->periph, USART_INT_PERR);
 2114              		.loc 1 851 5
 2115 00ee FB68     		ldr	r3, [r7, #12]
 2116 00f0 1B68     		ldr	r3, [r3]
 2117 00f2 0821     		movs	r1, #8
 2118 00f4 1846     		mov	r0, r3
 2119 00f6 FFF7FEFF 		bl	hals_irda_interrupt_enable
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_enable(irda->periph, USART_INT_ERR);
 2120              		.loc 1 852 5
 2121 00fa FB68     		ldr	r3, [r7, #12]
 2122 00fc 1B68     		ldr	r3, [r3]
 2123 00fe 4FF40071 		mov	r1, #512
 2124 0102 1846     		mov	r0, r3
 2125 0104 FFF7FEFF 		bl	hals_irda_interrupt_enable
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* DMA enable for reception */
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_dma_receive_config(irda->periph, USART_RECEIVE_DMA_ENABLE);
 2126              		.loc 1 855 5
 2127 0108 FB68     		ldr	r3, [r7, #12]
 2128 010a 1B68     		ldr	r3, [r3]
 2129 010c 4021     		movs	r1, #64
 2130 010e 1846     		mov	r0, r3
 2131 0110 FFF7FEFF 		bl	hals_irda_dma_receive_config
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 2132              		.loc 1 858 5
 2133 0114 FB68     		ldr	r3, [r7, #12]
 2134 0116 0022     		movs	r2, #0
 2135 0118 83F84420 		strb	r2, [r3, #68]
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 2136              		.loc 1 860 12
 2137 011c 0023     		movs	r3, #0
 2138              	.L106:
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2139              		.loc 1 861 1 discriminator 1
 2140 011e 1846     		mov	r0, r3
 2141 0120 2437     		adds	r7, r7, #36
 2142              		.cfi_def_cfa_offset 12
 2143 0122 BD46     		mov	sp, r7
 2144              		.cfi_def_cfa_register 13
 2145              		@ sp needed
 2146 0124 90BD     		pop	{r4, r7, pc}
 2147              	.L108:
 2148 0126 00BF     		.align	2
 2149              	.L107:
 2150 0128 00000000 		.word	_irda_receive_dma
 2151 012c 00000000 		.word	_irda_dma_error
 2152              		.cfi_endproc
 2153              	.LFE130:
 2155              		.section	.text.hal_irda_dma_pause,"ax",%progbits
 2156              		.align	1
 2157              		.global	hal_irda_dma_pause
 2158              		.syntax unified
 2159              		.thumb
 2160              		.thumb_func
 2161              		.fpu softvfp
 2163              	hal_irda_dma_pause:
 2164              	.LFB131:
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      pause irda DMA transfer during transmission process
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_dma_pause(hal_irda_dev_struct *irda)
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2165              		.loc 1 872 1
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 8
 2168              		@ frame_needed = 1, uses_anonymous_args = 0
 2169 0000 80B5     		push	{r7, lr}
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 7, -8
 2172              		.cfi_offset 14, -4
 2173 0002 82B0     		sub	sp, sp, #8
 2174              		.cfi_def_cfa_offset 16
 2175 0004 00AF     		add	r7, sp, #0
 2176              		.cfi_def_cfa_register 7
 2177 0006 7860     		str	r0, [r7, #4]
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameter */
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == irda) {
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] value is invalid");
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 2178              		.loc 1 882 5
 2179 0008 7B68     		ldr	r3, [r7, #4]
 2180 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2181 000e 012B     		cmp	r3, #1
 2182 0010 02D1     		bne	.L110
 2183              		.loc 1 882 5 is_stmt 0 discriminator 1
 2184 0012 6FF00103 		mvn	r3, #1
 2185 0016 2DE0     		b	.L111
 2186              	.L110:
 2187              		.loc 1 882 5 discriminator 2
 2188 0018 7B68     		ldr	r3, [r7, #4]
 2189 001a 0122     		movs	r2, #1
 2190 001c 83F84420 		strb	r2, [r3, #68]
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the tx_state wheher is busy or not */
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->tx_state) {
 2191              		.loc 1 885 31 is_stmt 1 discriminator 2
 2192 0020 7B68     		ldr	r3, [r7, #4]
 2193 0022 93F83A30 		ldrb	r3, [r3, #58]
 2194 0026 DBB2     		uxtb	r3, r3
 2195              		.loc 1 885 7 discriminator 2
 2196 0028 012B     		cmp	r3, #1
 2197 002a 05D1     		bne	.L112
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable DMA transimt */
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_transmit_config(irda->periph, USART_TRANSMIT_DMA_DISABLE);
 2198              		.loc 1 887 9
 2199 002c 7B68     		ldr	r3, [r7, #4]
 2200 002e 1B68     		ldr	r3, [r3]
 2201 0030 0021     		movs	r1, #0
 2202 0032 1846     		mov	r0, r3
 2203 0034 FFF7FEFF 		bl	hals_irda_dma_transmit_config
 2204              	.L112:
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the rx_state wheher is busy or not */
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->rx_state) {
 2205              		.loc 1 891 31
 2206 0038 7B68     		ldr	r3, [r7, #4]
 2207 003a 93F83B30 		ldrb	r3, [r3, #59]
 2208 003e DBB2     		uxtb	r3, r3
 2209              		.loc 1 891 7
 2210 0040 012B     		cmp	r3, #1
 2211 0042 12D1     		bne	.L113
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable the PERR and ERR interrupt */
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_PERR);
 2212              		.loc 1 893 9
 2213 0044 7B68     		ldr	r3, [r7, #4]
 2214 0046 1B68     		ldr	r3, [r3]
 2215 0048 0821     		movs	r1, #8
 2216 004a 1846     		mov	r0, r3
 2217 004c FFF7FEFF 		bl	hals_irda_interrupt_disable
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(irda->periph, USART_INT_ERR);
 2218              		.loc 1 894 9
 2219 0050 7B68     		ldr	r3, [r7, #4]
 2220 0052 1B68     		ldr	r3, [r3]
 2221 0054 4FF40071 		mov	r1, #512
 2222 0058 1846     		mov	r0, r3
 2223 005a FFF7FEFF 		bl	hals_irda_interrupt_disable
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable DMA receive */
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_receive_config(irda->periph, USART_RECEIVE_DMA_DISABLE);
 2224              		.loc 1 897 9
 2225 005e 7B68     		ldr	r3, [r7, #4]
 2226 0060 1B68     		ldr	r3, [r3]
 2227 0062 0021     		movs	r1, #0
 2228 0064 1846     		mov	r0, r3
 2229 0066 FFF7FEFF 		bl	hals_irda_dma_receive_config
 2230              	.L113:
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 2231              		.loc 1 901 5
 2232 006a 7B68     		ldr	r3, [r7, #4]
 2233 006c 0022     		movs	r2, #0
 2234 006e 83F84420 		strb	r2, [r3, #68]
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 2235              		.loc 1 903 12
 2236 0072 0023     		movs	r3, #0
 2237              	.L111:
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2238              		.loc 1 904 1
 2239 0074 1846     		mov	r0, r3
 2240 0076 0837     		adds	r7, r7, #8
 2241              		.cfi_def_cfa_offset 8
 2242 0078 BD46     		mov	sp, r7
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 007a 80BD     		pop	{r7, pc}
 2246              		.cfi_endproc
 2247              	.LFE131:
 2249              		.section	.text.hal_irda_dma_resume,"ax",%progbits
 2250              		.align	1
 2251              		.global	hal_irda_dma_resume
 2252              		.syntax unified
 2253              		.thumb
 2254              		.thumb_func
 2255              		.fpu softvfp
 2257              	hal_irda_dma_resume:
 2258              	.LFB132:
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      resume irda DMA transfer during transmission process
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_dma_resume(hal_irda_dev_struct *irda)
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2259              		.loc 1 915 1
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 8
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263 0000 80B5     		push	{r7, lr}
 2264              		.cfi_def_cfa_offset 8
 2265              		.cfi_offset 7, -8
 2266              		.cfi_offset 14, -4
 2267 0002 82B0     		sub	sp, sp, #8
 2268              		.cfi_def_cfa_offset 16
 2269 0004 00AF     		add	r7, sp, #0
 2270              		.cfi_def_cfa_register 7
 2271 0006 7860     		str	r0, [r7, #4]
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameter */
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == irda) {
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] value is invalid");
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 2272              		.loc 1 925 5
 2273 0008 7B68     		ldr	r3, [r7, #4]
 2274 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2275 000e 012B     		cmp	r3, #1
 2276 0010 02D1     		bne	.L115
 2277              		.loc 1 925 5 is_stmt 0 discriminator 1
 2278 0012 6FF00103 		mvn	r3, #1
 2279 0016 2DE0     		b	.L116
 2280              	.L115:
 2281              		.loc 1 925 5 discriminator 2
 2282 0018 7B68     		ldr	r3, [r7, #4]
 2283 001a 0122     		movs	r2, #1
 2284 001c 83F84420 		strb	r2, [r3, #68]
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the tx_state wheher is busy or not */
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->tx_state) {
 2285              		.loc 1 928 31 is_stmt 1 discriminator 2
 2286 0020 7B68     		ldr	r3, [r7, #4]
 2287 0022 93F83A30 		ldrb	r3, [r3, #58]
 2288 0026 DBB2     		uxtb	r3, r3
 2289              		.loc 1 928 7 discriminator 2
 2290 0028 012B     		cmp	r3, #1
 2291 002a 05D1     		bne	.L117
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* enable DMA transimt */
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_transmit_config(irda->periph, USART_TRANSMIT_DMA_ENABLE);
 2292              		.loc 1 930 9
 2293 002c 7B68     		ldr	r3, [r7, #4]
 2294 002e 1B68     		ldr	r3, [r3]
 2295 0030 8021     		movs	r1, #128
 2296 0032 1846     		mov	r0, r3
 2297 0034 FFF7FEFF 		bl	hals_irda_dma_transmit_config
 2298              	.L117:
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the rx_state wheher is busy or not */
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == irda->rx_state) {
 2299              		.loc 1 934 31
 2300 0038 7B68     		ldr	r3, [r7, #4]
 2301 003a 93F83B30 		ldrb	r3, [r3, #59]
 2302 003e DBB2     		uxtb	r3, r3
 2303              		.loc 1 934 7
 2304 0040 012B     		cmp	r3, #1
 2305 0042 12D1     		bne	.L118
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* enable the PERR and ERR interrupt */
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_PERR);
 2306              		.loc 1 936 9
 2307 0044 7B68     		ldr	r3, [r7, #4]
 2308 0046 1B68     		ldr	r3, [r3]
 2309 0048 0821     		movs	r1, #8
 2310 004a 1846     		mov	r0, r3
 2311 004c FFF7FEFF 		bl	hals_irda_interrupt_enable
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(irda->periph, USART_INT_ERR);
 2312              		.loc 1 937 9
 2313 0050 7B68     		ldr	r3, [r7, #4]
 2314 0052 1B68     		ldr	r3, [r3]
 2315 0054 4FF40071 		mov	r1, #512
 2316 0058 1846     		mov	r0, r3
 2317 005a FFF7FEFF 		bl	hals_irda_interrupt_enable
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* enable DMA receive */
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_receive_config(irda->periph, USART_RECEIVE_DMA_ENABLE);
 2318              		.loc 1 940 9
 2319 005e 7B68     		ldr	r3, [r7, #4]
 2320 0060 1B68     		ldr	r3, [r3]
 2321 0062 4021     		movs	r1, #64
 2322 0064 1846     		mov	r0, r3
 2323 0066 FFF7FEFF 		bl	hals_irda_dma_receive_config
 2324              	.L118:
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 2325              		.loc 1 944 5
 2326 006a 7B68     		ldr	r3, [r7, #4]
 2327 006c 0022     		movs	r2, #0
 2328 006e 83F84420 		strb	r2, [r3, #68]
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 2329              		.loc 1 946 12
 2330 0072 0023     		movs	r3, #0
 2331              	.L116:
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2332              		.loc 1 947 1
 2333 0074 1846     		mov	r0, r3
 2334 0076 0837     		adds	r7, r7, #8
 2335              		.cfi_def_cfa_offset 8
 2336 0078 BD46     		mov	sp, r7
 2337              		.cfi_def_cfa_register 13
 2338              		@ sp needed
 2339 007a 80BD     		pop	{r7, pc}
 2340              		.cfi_endproc
 2341              	.LFE132:
 2343              		.section	.text.hal_irda_transmit_stop,"ax",%progbits
 2344              		.align	1
 2345              		.global	hal_irda_transmit_stop
 2346              		.syntax unified
 2347              		.thumb
 2348              		.thumb_func
 2349              		.fpu softvfp
 2351              	hal_irda_transmit_stop:
 2352              	.LFB133:
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      stop irda transmit transfer
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is blocking
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_transmit_stop(hal_irda_dev_struct *irda)
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2353              		.loc 1 959 1
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 8
 2356              		@ frame_needed = 1, uses_anonymous_args = 0
 2357 0000 80B5     		push	{r7, lr}
 2358              		.cfi_def_cfa_offset 8
 2359              		.cfi_offset 7, -8
 2360              		.cfi_offset 14, -4
 2361 0002 82B0     		sub	sp, sp, #8
 2362              		.cfi_def_cfa_offset 16
 2363 0004 00AF     		add	r7, sp, #0
 2364              		.cfi_def_cfa_register 7
 2365 0006 7860     		str	r0, [r7, #4]
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameter */
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == irda) {
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] value is invalid");
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 2366              		.loc 1 969 5
 2367 0008 7B68     		ldr	r3, [r7, #4]
 2368 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2369 000e 012B     		cmp	r3, #1
 2370 0010 02D1     		bne	.L120
 2371              		.loc 1 969 5 is_stmt 0 discriminator 1
 2372 0012 6FF00103 		mvn	r3, #1
 2373 0016 26E0     		b	.L121
 2374              	.L120:
 2375              		.loc 1 969 5 discriminator 2
 2376 0018 7B68     		ldr	r3, [r7, #4]
 2377 001a 0122     		movs	r2, #1
 2378 001c 83F84420 		strb	r2, [r3, #68]
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable the TBE and TC interrupt */
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_disable(irda->periph, USART_INT_TBE);
 2379              		.loc 1 972 5 is_stmt 1 discriminator 2
 2380 0020 7B68     		ldr	r3, [r7, #4]
 2381 0022 1B68     		ldr	r3, [r3]
 2382 0024 0721     		movs	r1, #7
 2383 0026 1846     		mov	r0, r3
 2384 0028 FFF7FEFF 		bl	hals_irda_interrupt_disable
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_disable(irda->periph, USART_INT_TC);
 2385              		.loc 1 973 5 discriminator 2
 2386 002c 7B68     		ldr	r3, [r7, #4]
 2387 002e 1B68     		ldr	r3, [r3]
 2388 0030 0621     		movs	r1, #6
 2389 0032 1846     		mov	r0, r3
 2390 0034 FFF7FEFF 		bl	hals_irda_interrupt_disable
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable DMA transimt and stop DMA */
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_dma_transmit_config(irda->periph, USART_TRANSMIT_DMA_DISABLE);
 2391              		.loc 1 976 5 discriminator 2
 2392 0038 7B68     		ldr	r3, [r7, #4]
 2393 003a 1B68     		ldr	r3, [r3]
 2394 003c 0021     		movs	r1, #0
 2395 003e 1846     		mov	r0, r3
 2396 0040 FFF7FEFF 		bl	hals_irda_dma_transmit_config
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_stop(irda->p_dma_tx);
 2397              		.loc 1 977 5 discriminator 2
 2398 0044 7B68     		ldr	r3, [r7, #4]
 2399 0046 9B69     		ldr	r3, [r3, #24]
 2400 0048 1846     		mov	r0, r3
 2401 004a FFF7FEFF 		bl	hal_dma_stop
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* reset the position and state */
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->txbuffer.pos = 0;
 2402              		.loc 1 980 24 discriminator 2
 2403 004e 7B68     		ldr	r3, [r7, #4]
 2404 0050 0022     		movs	r2, #0
 2405 0052 5A62     		str	r2, [r3, #36]
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->tx_state = IRDA_STATE_FREE;
 2406              		.loc 1 981 20 discriminator 2
 2407 0054 7B68     		ldr	r3, [r7, #4]
 2408 0056 0022     		movs	r2, #0
 2409 0058 83F83A20 		strb	r2, [r3, #58]
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 2410              		.loc 1 984 5 discriminator 2
 2411 005c 7B68     		ldr	r3, [r7, #4]
 2412 005e 0022     		movs	r2, #0
 2413 0060 83F84420 		strb	r2, [r3, #68]
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 2414              		.loc 1 986 12 discriminator 2
 2415 0064 0023     		movs	r3, #0
 2416              	.L121:
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2417              		.loc 1 987 1
 2418 0066 1846     		mov	r0, r3
 2419 0068 0837     		adds	r7, r7, #8
 2420              		.cfi_def_cfa_offset 8
 2421 006a BD46     		mov	sp, r7
 2422              		.cfi_def_cfa_register 13
 2423              		@ sp needed
 2424 006c 80BD     		pop	{r7, pc}
 2425              		.cfi_endproc
 2426              	.LFE133:
 2428              		.section	.text.hal_irda_receive_stop,"ax",%progbits
 2429              		.align	1
 2430              		.global	hal_irda_receive_stop
 2431              		.syntax unified
 2432              		.thumb
 2433              		.thumb_func
 2434              		.fpu softvfp
 2436              	hal_irda_receive_stop:
 2437              	.LFB134:
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      stop irda receive transfer
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 the function is blocking
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** int32_t hal_irda_receive_stop(hal_irda_dev_struct *irda)
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2438              		.loc 1 999 1
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 8
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442 0000 80B5     		push	{r7, lr}
 2443              		.cfi_def_cfa_offset 8
 2444              		.cfi_offset 7, -8
 2445              		.cfi_offset 14, -4
 2446 0002 82B0     		sub	sp, sp, #8
 2447              		.cfi_def_cfa_offset 16
 2448 0004 00AF     		add	r7, sp, #0
 2449              		.cfi_def_cfa_register 7
 2450 0006 7860     		str	r0, [r7, #4]
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #if (1 == HAL_PARAMETER_CHECK)
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* check the parameter */
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL == irda) {
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("parameter [irda] value is invalid");
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return HAL_ERR_ADDRESS;
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* lock irda */
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_LOCK(irda);
 2451              		.loc 1 1009 5
 2452 0008 7B68     		ldr	r3, [r7, #4]
 2453 000a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 2454 000e 012B     		cmp	r3, #1
 2455 0010 02D1     		bne	.L123
 2456              		.loc 1 1009 5 is_stmt 0 discriminator 1
 2457 0012 6FF00103 		mvn	r3, #1
 2458 0016 45E0     		b	.L124
 2459              	.L123:
 2460              		.loc 1 1009 5 discriminator 2
 2461 0018 7B68     		ldr	r3, [r7, #4]
 2462 001a 0122     		movs	r2, #1
 2463 001c 83F84420 		strb	r2, [r3, #68]
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable the RBNE, PERR and ERR interrupt */
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_disable(irda->periph, USART_INT_RBNE);
 2464              		.loc 1 1012 5 is_stmt 1 discriminator 2
 2465 0020 7B68     		ldr	r3, [r7, #4]
 2466 0022 1B68     		ldr	r3, [r3]
 2467 0024 0521     		movs	r1, #5
 2468 0026 1846     		mov	r0, r3
 2469 0028 FFF7FEFF 		bl	hals_irda_interrupt_disable
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_disable(irda->periph, USART_INT_PERR);
 2470              		.loc 1 1013 5 discriminator 2
 2471 002c 7B68     		ldr	r3, [r7, #4]
 2472 002e 1B68     		ldr	r3, [r3]
 2473 0030 0821     		movs	r1, #8
 2474 0032 1846     		mov	r0, r3
 2475 0034 FFF7FEFF 		bl	hals_irda_interrupt_disable
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_disable(irda->periph, USART_INT_ERR);
 2476              		.loc 1 1014 5 discriminator 2
 2477 0038 7B68     		ldr	r3, [r7, #4]
 2478 003a 1B68     		ldr	r3, [r3]
 2479 003c 4FF40071 		mov	r1, #512
 2480 0040 1846     		mov	r0, r3
 2481 0042 FFF7FEFF 		bl	hals_irda_interrupt_disable
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable DMA receive and stop DMA */
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_dma_receive_config(irda->periph, USART_RECEIVE_DMA_DISABLE);
 2482              		.loc 1 1017 5 discriminator 2
 2483 0046 7B68     		ldr	r3, [r7, #4]
 2484 0048 1B68     		ldr	r3, [r3]
 2485 004a 0021     		movs	r1, #0
 2486 004c 1846     		mov	r0, r3
 2487 004e FFF7FEFF 		bl	hals_irda_dma_receive_config
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_stop(irda->p_dma_rx);
 2488              		.loc 1 1018 5 discriminator 2
 2489 0052 7B68     		ldr	r3, [r7, #4]
 2490 0054 5B69     		ldr	r3, [r3, #20]
 2491 0056 1846     		mov	r0, r3
 2492 0058 FFF7FEFF 		bl	hal_dma_stop
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* reset the position and state */
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rxbuffer.pos = 0;
 2493              		.loc 1 1021 24 discriminator 2
 2494 005c 7B68     		ldr	r3, [r7, #4]
 2495 005e 0022     		movs	r2, #0
 2496 0060 1A63     		str	r2, [r3, #48]
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     irda->rx_state = IRDA_STATE_FREE;
 2497              		.loc 1 1022 20 discriminator 2
 2498 0062 7B68     		ldr	r3, [r7, #4]
 2499 0064 0022     		movs	r2, #0
 2500 0066 83F83B20 		strb	r2, [r3, #59]
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* clear interrupt error flags */
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_PERR);
 2501              		.loc 1 1025 5 discriminator 2
 2502 006a 7B68     		ldr	r3, [r7, #4]
 2503 006c 1B68     		ldr	r3, [r3]
 2504 006e 0F49     		ldr	r1, .L125
 2505 0070 1846     		mov	r0, r3
 2506 0072 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_ERR_FERR);
 2507              		.loc 1 1026 5 discriminator 2
 2508 0076 7B68     		ldr	r3, [r7, #4]
 2509 0078 1B68     		ldr	r3, [r3]
 2510 007a 0D49     		ldr	r1, .L125+4
 2511 007c 1846     		mov	r0, r3
 2512 007e FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_ERR_NERR);
 2513              		.loc 1 1027 5 discriminator 2
 2514 0082 7B68     		ldr	r3, [r7, #4]
 2515 0084 1B68     		ldr	r3, [r3]
 2516 0086 0B49     		ldr	r1, .L125+8
 2517 0088 1846     		mov	r0, r3
 2518 008a FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_flag_clear(irda->periph, USART_INT_FLAG_ERR_ORERR);
 2519              		.loc 1 1028 5 discriminator 2
 2520 008e 7B68     		ldr	r3, [r7, #4]
 2521 0090 1B68     		ldr	r3, [r3]
 2522 0092 0949     		ldr	r1, .L125+12
 2523 0094 1846     		mov	r0, r3
 2524 0096 FFF7FEFF 		bl	hals_irda_interrupt_flag_clear
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* unlock irda */
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     HAL_UNLOCK(irda);
 2525              		.loc 1 1031 5 discriminator 2
 2526 009a 7B68     		ldr	r3, [r7, #4]
 2527 009c 0022     		movs	r2, #0
 2528 009e 83F84420 		strb	r2, [r3, #68]
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return HAL_ERR_NONE;
 2529              		.loc 1 1033 12 discriminator 2
 2530 00a2 0023     		movs	r3, #0
 2531              	.L124:
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2532              		.loc 1 1034 1
 2533 00a4 1846     		mov	r0, r3
 2534 00a6 0837     		adds	r7, r7, #8
 2535              		.cfi_def_cfa_offset 8
 2536 00a8 BD46     		mov	sp, r7
 2537              		.cfi_def_cfa_register 13
 2538              		@ sp needed
 2539 00aa 80BD     		pop	{r7, pc}
 2540              	.L126:
 2541              		.align	2
 2542              	.L125:
 2543 00ac 08000007 		.word	117440520
 2544 00b0 00020107 		.word	117506560
 2545 00b4 00020207 		.word	117572096
 2546 00b8 00020307 		.word	117637632
 2547              		.cfi_endproc
 2548              	.LFE134:
 2550              		.section	.text.hals_irda_deinit,"ax",%progbits
 2551              		.align	1
 2552              		.global	hals_irda_deinit
 2553              		.syntax unified
 2554              		.thumb
 2555              		.thumb_func
 2556              		.fpu softvfp
 2558              	hals_irda_deinit:
 2559              	.LFB135:
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      reset IRDA
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_deinit(uint32_t irda_periph)
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2560              		.loc 1 1043 1
 2561              		.cfi_startproc
 2562              		@ args = 0, pretend = 0, frame = 8
 2563              		@ frame_needed = 1, uses_anonymous_args = 0
 2564 0000 80B5     		push	{r7, lr}
 2565              		.cfi_def_cfa_offset 8
 2566              		.cfi_offset 7, -8
 2567              		.cfi_offset 14, -4
 2568 0002 82B0     		sub	sp, sp, #8
 2569              		.cfi_def_cfa_offset 16
 2570 0004 00AF     		add	r7, sp, #0
 2571              		.cfi_def_cfa_register 7
 2572 0006 7860     		str	r0, [r7, #4]
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     switch(irda_periph) {
 2573              		.loc 1 1044 5
 2574 0008 7B68     		ldr	r3, [r7, #4]
 2575 000a 0F4A     		ldr	r2, .L132
 2576 000c 9342     		cmp	r3, r2
 2577 000e 0CD0     		beq	.L128
 2578 0010 7B68     		ldr	r3, [r7, #4]
 2579 0012 0E4A     		ldr	r2, .L132+4
 2580 0014 9342     		cmp	r3, r2
 2581 0016 11D1     		bne	.L131
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case USART0:
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* reset USART0 */
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hal_rcu_periph_reset_enable(RCU_USART0RST);
 2582              		.loc 1 1047 9
 2583 0018 40F20E30 		movw	r0, #782
 2584 001c FFF7FEFF 		bl	hal_rcu_periph_reset_enable
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hal_rcu_periph_reset_disable(RCU_USART0RST);
 2585              		.loc 1 1048 9
 2586 0020 40F20E30 		movw	r0, #782
 2587 0024 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 2588              		.loc 1 1049 9
 2589 0028 09E0     		b	.L130
 2590              	.L128:
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case USART1:
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* reset USART1 */
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hal_rcu_periph_reset_enable(RCU_USART1RST);
 2591              		.loc 1 1052 9
 2592 002a 40F21140 		movw	r0, #1041
 2593 002e FFF7FEFF 		bl	hal_rcu_periph_reset_enable
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hal_rcu_periph_reset_disable(RCU_USART1RST);
 2594              		.loc 1 1053 9
 2595 0032 40F21140 		movw	r0, #1041
 2596 0036 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 2597              		.loc 1 1054 9
 2598 003a 00E0     		b	.L130
 2599              	.L131:
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     default:
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 2600              		.loc 1 1056 9
 2601 003c 00BF     		nop
 2602              	.L130:
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2603              		.loc 1 1058 1
 2604 003e 00BF     		nop
 2605 0040 0837     		adds	r7, r7, #8
 2606              		.cfi_def_cfa_offset 8
 2607 0042 BD46     		mov	sp, r7
 2608              		.cfi_def_cfa_register 13
 2609              		@ sp needed
 2610 0044 80BD     		pop	{r7, pc}
 2611              	.L133:
 2612 0046 00BF     		.align	2
 2613              	.L132:
 2614 0048 00440040 		.word	1073759232
 2615 004c 00380140 		.word	1073821696
 2616              		.cfi_endproc
 2617              	.LFE135:
 2619              		.section	.text.hals_irda_baudrate_set,"ax",%progbits
 2620              		.align	1
 2621              		.global	hals_irda_baudrate_set
 2622              		.syntax unified
 2623              		.thumb
 2624              		.thumb_func
 2625              		.fpu softvfp
 2627              	hals_irda_baudrate_set:
 2628              	.LFB136:
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA baud rate value
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  baudval: baud rate value
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_baudrate_set(uint32_t irda_periph, uint32_t baudval)
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2629              		.loc 1 1068 1
 2630              		.cfi_startproc
 2631              		@ args = 0, pretend = 0, frame = 24
 2632              		@ frame_needed = 1, uses_anonymous_args = 0
 2633 0000 80B5     		push	{r7, lr}
 2634              		.cfi_def_cfa_offset 8
 2635              		.cfi_offset 7, -8
 2636              		.cfi_offset 14, -4
 2637 0002 86B0     		sub	sp, sp, #24
 2638              		.cfi_def_cfa_offset 32
 2639 0004 00AF     		add	r7, sp, #0
 2640              		.cfi_def_cfa_register 7
 2641 0006 7860     		str	r0, [r7, #4]
 2642 0008 3960     		str	r1, [r7]
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t uclk = 0U, intdiv = 0U, fradiv = 0U, udiv = 0U;
 2643              		.loc 1 1069 14
 2644 000a 0023     		movs	r3, #0
 2645 000c 7B61     		str	r3, [r7, #20]
 2646              		.loc 1 1069 25
 2647 000e 0023     		movs	r3, #0
 2648 0010 3B61     		str	r3, [r7, #16]
 2649              		.loc 1 1069 38
 2650 0012 0023     		movs	r3, #0
 2651 0014 FB60     		str	r3, [r7, #12]
 2652              		.loc 1 1069 51
 2653 0016 0023     		movs	r3, #0
 2654 0018 BB60     		str	r3, [r7, #8]
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     switch(irda_periph) {
 2655              		.loc 1 1070 5
 2656 001a 7B68     		ldr	r3, [r7, #4]
 2657 001c 294A     		ldr	r2, .L142
 2658 001e 9342     		cmp	r3, r2
 2659 0020 08D0     		beq	.L135
 2660 0022 7B68     		ldr	r3, [r7, #4]
 2661 0024 284A     		ldr	r2, .L142+4
 2662 0026 9342     		cmp	r3, r2
 2663 0028 09D1     		bne	.L140
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* get clock frequency */
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case USART0:
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* get USART0 clock */
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         uclk = hals_rcu_clock_freq_get(CK_USART);
 2664              		.loc 1 1074 16
 2665 002a 0620     		movs	r0, #6
 2666 002c FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2667 0030 7861     		str	r0, [r7, #20]
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 2668              		.loc 1 1075 9
 2669 0032 05E0     		b	.L137
 2670              	.L135:
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     case USART1:
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* get USART1 clock */
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         uclk = hals_rcu_clock_freq_get(CK_APB1);
 2671              		.loc 1 1078 16
 2672 0034 0220     		movs	r0, #2
 2673 0036 FFF7FEFF 		bl	hals_rcu_clock_freq_get
 2674 003a 7861     		str	r0, [r7, #20]
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 2675              		.loc 1 1079 9
 2676 003c 00E0     		b	.L137
 2677              	.L140:
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     default:
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         break;
 2678              		.loc 1 1081 9
 2679 003e 00BF     		nop
 2680              	.L137:
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(USART_CTL0(irda_periph) & USART_CTL0_OVSMOD) {
 2681              		.loc 1 1083 8
 2682 0040 7B68     		ldr	r3, [r7, #4]
 2683 0042 1B68     		ldr	r3, [r3]
 2684              		.loc 1 1083 32
 2685 0044 03F40043 		and	r3, r3, #32768
 2686              		.loc 1 1083 7
 2687 0048 002B     		cmp	r3, #0
 2688 004a 1CD0     		beq	.L138
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* oversampling by 8, configure the value of USART_BAUD */
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         udiv = ((2U * uclk) + (baudval / 2U)) / baudval;
 2689              		.loc 1 1085 21
 2690 004c 7B69     		ldr	r3, [r7, #20]
 2691 004e 5A00     		lsls	r2, r3, #1
 2692              		.loc 1 1085 40
 2693 0050 3B68     		ldr	r3, [r7]
 2694 0052 5B08     		lsrs	r3, r3, #1
 2695              		.loc 1 1085 29
 2696 0054 1A44     		add	r2, r2, r3
 2697              		.loc 1 1085 14
 2698 0056 3B68     		ldr	r3, [r7]
 2699 0058 B2FBF3F3 		udiv	r3, r2, r3
 2700 005c BB60     		str	r3, [r7, #8]
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         intdiv = udiv & 0x0000fff0U;
 2701              		.loc 1 1086 16
 2702 005e BA68     		ldr	r2, [r7, #8]
 2703 0060 4FF6F073 		movw	r3, #65520
 2704 0064 1340     		ands	r3, r3, r2
 2705 0066 3B61     		str	r3, [r7, #16]
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         fradiv = (udiv >> 1U) & 0x00000007U;
 2706              		.loc 1 1087 24
 2707 0068 BB68     		ldr	r3, [r7, #8]
 2708 006a 5B08     		lsrs	r3, r3, #1
 2709              		.loc 1 1087 16
 2710 006c 03F00703 		and	r3, r3, #7
 2711 0070 FB60     		str	r3, [r7, #12]
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_BAUD(irda_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 2712              		.loc 1 1088 86
 2713 0072 3A69     		ldr	r2, [r7, #16]
 2714 0074 FB68     		ldr	r3, [r7, #12]
 2715 0076 42EA0301 		orr	r1, r2, r3
 2716              		.loc 1 1088 9
 2717 007a 7B68     		ldr	r3, [r7, #4]
 2718 007c 0C33     		adds	r3, r3, #12
 2719 007e 1A46     		mov	r2, r3
 2720              		.loc 1 1088 76
 2721 0080 8BB2     		uxth	r3, r1
 2722              		.loc 1 1088 33
 2723 0082 1360     		str	r3, [r2]
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* oversampling by 16, configure the value of USART_BAUD */
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         udiv = (uclk + (baudval / 2U)) / baudval;
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         intdiv = udiv & 0x0000fff0U;
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         fradiv = udiv & 0x0000000fU;
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_BAUD(irda_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2724              		.loc 1 1096 1
 2725 0084 19E0     		b	.L141
 2726              	.L138:
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         intdiv = udiv & 0x0000fff0U;
 2727              		.loc 1 1091 33
 2728 0086 3B68     		ldr	r3, [r7]
 2729 0088 5A08     		lsrs	r2, r3, #1
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         intdiv = udiv & 0x0000fff0U;
 2730              		.loc 1 1091 22
 2731 008a 7B69     		ldr	r3, [r7, #20]
 2732 008c 1A44     		add	r2, r2, r3
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         intdiv = udiv & 0x0000fff0U;
 2733              		.loc 1 1091 14
 2734 008e 3B68     		ldr	r3, [r7]
 2735 0090 B2FBF3F3 		udiv	r3, r2, r3
 2736 0094 BB60     		str	r3, [r7, #8]
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         fradiv = udiv & 0x0000000fU;
 2737              		.loc 1 1092 16
 2738 0096 BA68     		ldr	r2, [r7, #8]
 2739 0098 4FF6F073 		movw	r3, #65520
 2740 009c 1340     		ands	r3, r3, r2
 2741 009e 3B61     		str	r3, [r7, #16]
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_BAUD(irda_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 2742              		.loc 1 1093 16
 2743 00a0 BB68     		ldr	r3, [r7, #8]
 2744 00a2 03F00F03 		and	r3, r3, #15
 2745 00a6 FB60     		str	r3, [r7, #12]
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 2746              		.loc 1 1094 86
 2747 00a8 3A69     		ldr	r2, [r7, #16]
 2748 00aa FB68     		ldr	r3, [r7, #12]
 2749 00ac 42EA0301 		orr	r1, r2, r3
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 2750              		.loc 1 1094 9
 2751 00b0 7B68     		ldr	r3, [r7, #4]
 2752 00b2 0C33     		adds	r3, r3, #12
 2753 00b4 1A46     		mov	r2, r3
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 2754              		.loc 1 1094 76
 2755 00b6 8BB2     		uxth	r3, r1
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 2756              		.loc 1 1094 33
 2757 00b8 1360     		str	r3, [r2]
 2758              	.L141:
 2759              		.loc 1 1096 1
 2760 00ba 00BF     		nop
 2761 00bc 1837     		adds	r7, r7, #24
 2762              		.cfi_def_cfa_offset 8
 2763 00be BD46     		mov	sp, r7
 2764              		.cfi_def_cfa_register 13
 2765              		@ sp needed
 2766 00c0 80BD     		pop	{r7, pc}
 2767              	.L143:
 2768 00c2 00BF     		.align	2
 2769              	.L142:
 2770 00c4 00440040 		.word	1073759232
 2771 00c8 00380140 		.word	1073821696
 2772              		.cfi_endproc
 2773              	.LFE136:
 2775              		.section	.text.hals_irda_parity_config,"ax",%progbits
 2776              		.align	1
 2777              		.global	hals_irda_parity_config
 2778              		.syntax unified
 2779              		.thumb
 2780              		.thumb_func
 2781              		.fpu softvfp
 2783              	hals_irda_parity_config:
 2784              	.LFB137:
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA parity
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  paritycfg: IRDA parity configure
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_PM_NONE: no parity
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_PM_ODD: odd parity
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_PM_EVEN: even parity
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_parity_config(uint32_t irda_periph, uint32_t paritycfg)
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2785              		.loc 1 1110 1
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 8
 2788              		@ frame_needed = 1, uses_anonymous_args = 0
 2789              		@ link register save eliminated.
 2790 0000 80B4     		push	{r7}
 2791              		.cfi_def_cfa_offset 4
 2792              		.cfi_offset 7, -4
 2793 0002 83B0     		sub	sp, sp, #12
 2794              		.cfi_def_cfa_offset 16
 2795 0004 00AF     		add	r7, sp, #0
 2796              		.cfi_def_cfa_register 7
 2797 0006 7860     		str	r0, [r7, #4]
 2798 0008 3960     		str	r1, [r7]
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 2799              		.loc 1 1112 29
 2800 000a 7B68     		ldr	r3, [r7, #4]
 2801 000c 1A68     		ldr	r2, [r3]
 2802 000e 7B68     		ldr	r3, [r7, #4]
 2803 0010 22F00102 		bic	r2, r2, #1
 2804 0014 1A60     		str	r2, [r3]
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* clear USART_CTL0 PM,PCEN bits */
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_PM | USART_CTL0_PCEN);
 2805              		.loc 1 1114 29
 2806 0016 7B68     		ldr	r3, [r7, #4]
 2807 0018 1A68     		ldr	r2, [r3]
 2808 001a 7B68     		ldr	r3, [r7, #4]
 2809 001c 22F4C062 		bic	r2, r2, #1536
 2810 0020 1A60     		str	r2, [r3]
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure IRDA parity mode */
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) |= paritycfg;
 2811              		.loc 1 1116 29
 2812 0022 7B68     		ldr	r3, [r7, #4]
 2813 0024 1968     		ldr	r1, [r3]
 2814 0026 7B68     		ldr	r3, [r7, #4]
 2815 0028 3A68     		ldr	r2, [r7]
 2816 002a 0A43     		orrs	r2, r2, r1
 2817 002c 1A60     		str	r2, [r3]
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2818              		.loc 1 1117 1
 2819 002e 00BF     		nop
 2820 0030 0C37     		adds	r7, r7, #12
 2821              		.cfi_def_cfa_offset 4
 2822 0032 BD46     		mov	sp, r7
 2823              		.cfi_def_cfa_register 13
 2824              		@ sp needed
 2825 0034 80BC     		pop	{r7}
 2826              		.cfi_restore 7
 2827              		.cfi_def_cfa_offset 0
 2828 0036 7047     		bx	lr
 2829              		.cfi_endproc
 2830              	.LFE137:
 2832              		.section	.text.hals_irda_word_length_set,"ax",%progbits
 2833              		.align	1
 2834              		.global	hals_irda_word_length_set
 2835              		.syntax unified
 2836              		.thumb
 2837              		.thumb_func
 2838              		.fpu softvfp
 2840              	hals_irda_word_length_set:
 2841              	.LFB138:
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA word length
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  wlen: IRDA word length configure
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_WL_8BIT: 8 bits
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_WL_9BIT: 9 bits
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_word_length_set(uint32_t irda_periph, uint32_t wlen)
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2842              		.loc 1 1130 1
 2843              		.cfi_startproc
 2844              		@ args = 0, pretend = 0, frame = 8
 2845              		@ frame_needed = 1, uses_anonymous_args = 0
 2846              		@ link register save eliminated.
 2847 0000 80B4     		push	{r7}
 2848              		.cfi_def_cfa_offset 4
 2849              		.cfi_offset 7, -4
 2850 0002 83B0     		sub	sp, sp, #12
 2851              		.cfi_def_cfa_offset 16
 2852 0004 00AF     		add	r7, sp, #0
 2853              		.cfi_def_cfa_register 7
 2854 0006 7860     		str	r0, [r7, #4]
 2855 0008 3960     		str	r1, [r7]
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 2856              		.loc 1 1132 29
 2857 000a 7B68     		ldr	r3, [r7, #4]
 2858 000c 1A68     		ldr	r2, [r3]
 2859 000e 7B68     		ldr	r3, [r7, #4]
 2860 0010 22F00102 		bic	r2, r2, #1
 2861 0014 1A60     		str	r2, [r3]
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* clear USART_CTL0 WL bit */
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~USART_CTL0_WL;
 2862              		.loc 1 1134 29
 2863 0016 7B68     		ldr	r3, [r7, #4]
 2864 0018 1A68     		ldr	r2, [r3]
 2865 001a 7B68     		ldr	r3, [r7, #4]
 2866 001c 22F48052 		bic	r2, r2, #4096
 2867 0020 1A60     		str	r2, [r3]
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure IRDA word length */
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) |= wlen;
 2868              		.loc 1 1136 29
 2869 0022 7B68     		ldr	r3, [r7, #4]
 2870 0024 1968     		ldr	r1, [r3]
 2871 0026 7B68     		ldr	r3, [r7, #4]
 2872 0028 3A68     		ldr	r2, [r7]
 2873 002a 0A43     		orrs	r2, r2, r1
 2874 002c 1A60     		str	r2, [r3]
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2875              		.loc 1 1137 1
 2876 002e 00BF     		nop
 2877 0030 0C37     		adds	r7, r7, #12
 2878              		.cfi_def_cfa_offset 4
 2879 0032 BD46     		mov	sp, r7
 2880              		.cfi_def_cfa_register 13
 2881              		@ sp needed
 2882 0034 80BC     		pop	{r7}
 2883              		.cfi_restore 7
 2884              		.cfi_def_cfa_offset 0
 2885 0036 7047     		bx	lr
 2886              		.cfi_endproc
 2887              	.LFE138:
 2889              		.section	.text.hals_irda_stop_bit_set,"ax",%progbits
 2890              		.align	1
 2891              		.global	hals_irda_stop_bit_set
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu softvfp
 2897              	hals_irda_stop_bit_set:
 2898              	.LFB139:
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA stop bit length
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  stblen: IRDA stop bit configure
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_STB_1BIT: 1 bit
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_STB_0_5BIT: 0.5bit
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_STB_2BIT: 2 bits
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_STB_1_5BIT: 1.5bit
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_stop_bit_set(uint32_t irda_periph, uint32_t stblen)
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2899              		.loc 1 1152 1
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 8
 2902              		@ frame_needed = 1, uses_anonymous_args = 0
 2903              		@ link register save eliminated.
 2904 0000 80B4     		push	{r7}
 2905              		.cfi_def_cfa_offset 4
 2906              		.cfi_offset 7, -4
 2907 0002 83B0     		sub	sp, sp, #12
 2908              		.cfi_def_cfa_offset 16
 2909 0004 00AF     		add	r7, sp, #0
 2910              		.cfi_def_cfa_register 7
 2911 0006 7860     		str	r0, [r7, #4]
 2912 0008 3960     		str	r1, [r7]
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 2913              		.loc 1 1154 29
 2914 000a 7B68     		ldr	r3, [r7, #4]
 2915 000c 1A68     		ldr	r2, [r3]
 2916 000e 7B68     		ldr	r3, [r7, #4]
 2917 0010 22F00102 		bic	r2, r2, #1
 2918 0014 1A60     		str	r2, [r3]
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* clear USART_CTL1 STB bits */
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL1(irda_periph) &= ~USART_CTL1_STB;
 2919              		.loc 1 1156 29
 2920 0016 7B68     		ldr	r3, [r7, #4]
 2921 0018 0433     		adds	r3, r3, #4
 2922 001a 1B68     		ldr	r3, [r3]
 2923 001c 7A68     		ldr	r2, [r7, #4]
 2924 001e 0432     		adds	r2, r2, #4
 2925 0020 23F44053 		bic	r3, r3, #12288
 2926 0024 1360     		str	r3, [r2]
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL1(irda_periph) |= stblen;
 2927              		.loc 1 1157 29
 2928 0026 7B68     		ldr	r3, [r7, #4]
 2929 0028 0433     		adds	r3, r3, #4
 2930 002a 1A68     		ldr	r2, [r3]
 2931 002c 7B68     		ldr	r3, [r7, #4]
 2932 002e 0433     		adds	r3, r3, #4
 2933 0030 1946     		mov	r1, r3
 2934 0032 3B68     		ldr	r3, [r7]
 2935 0034 1343     		orrs	r3, r3, r2
 2936 0036 0B60     		str	r3, [r1]
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2937              		.loc 1 1158 1
 2938 0038 00BF     		nop
 2939 003a 0C37     		adds	r7, r7, #12
 2940              		.cfi_def_cfa_offset 4
 2941 003c BD46     		mov	sp, r7
 2942              		.cfi_def_cfa_register 13
 2943              		@ sp needed
 2944 003e 80BC     		pop	{r7}
 2945              		.cfi_restore 7
 2946              		.cfi_def_cfa_offset 0
 2947 0040 7047     		bx	lr
 2948              		.cfi_endproc
 2949              	.LFE139:
 2951              		.section	.text.hals_irda_enable,"ax",%progbits
 2952              		.align	1
 2953              		.global	hals_irda_enable
 2954              		.syntax unified
 2955              		.thumb
 2956              		.thumb_func
 2957              		.fpu softvfp
 2959              	hals_irda_enable:
 2960              	.LFB140:
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      enable IRDA
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_enable(uint32_t irda_periph)
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 2961              		.loc 1 1167 1
 2962              		.cfi_startproc
 2963              		@ args = 0, pretend = 0, frame = 8
 2964              		@ frame_needed = 1, uses_anonymous_args = 0
 2965              		@ link register save eliminated.
 2966 0000 80B4     		push	{r7}
 2967              		.cfi_def_cfa_offset 4
 2968              		.cfi_offset 7, -4
 2969 0002 83B0     		sub	sp, sp, #12
 2970              		.cfi_def_cfa_offset 16
 2971 0004 00AF     		add	r7, sp, #0
 2972              		.cfi_def_cfa_register 7
 2973 0006 7860     		str	r0, [r7, #4]
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) |= USART_CTL0_UEN;
 2974              		.loc 1 1168 29
 2975 0008 7B68     		ldr	r3, [r7, #4]
 2976 000a 1A68     		ldr	r2, [r3]
 2977 000c 7B68     		ldr	r3, [r7, #4]
 2978 000e 42F00102 		orr	r2, r2, #1
 2979 0012 1A60     		str	r2, [r3]
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 2980              		.loc 1 1169 1
 2981 0014 00BF     		nop
 2982 0016 0C37     		adds	r7, r7, #12
 2983              		.cfi_def_cfa_offset 4
 2984 0018 BD46     		mov	sp, r7
 2985              		.cfi_def_cfa_register 13
 2986              		@ sp needed
 2987 001a 80BC     		pop	{r7}
 2988              		.cfi_restore 7
 2989              		.cfi_def_cfa_offset 0
 2990 001c 7047     		bx	lr
 2991              		.cfi_endproc
 2992              	.LFE140:
 2994              		.section	.text.hals_irda_disable,"ax",%progbits
 2995              		.align	1
 2996              		.global	hals_irda_disable
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3000              		.fpu softvfp
 3002              	hals_irda_disable:
 3003              	.LFB141:
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      disable IRDA
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_disable(uint32_t irda_periph)
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3004              		.loc 1 1178 1
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 8
 3007              		@ frame_needed = 1, uses_anonymous_args = 0
 3008              		@ link register save eliminated.
 3009 0000 80B4     		push	{r7}
 3010              		.cfi_def_cfa_offset 4
 3011              		.cfi_offset 7, -4
 3012 0002 83B0     		sub	sp, sp, #12
 3013              		.cfi_def_cfa_offset 16
 3014 0004 00AF     		add	r7, sp, #0
 3015              		.cfi_def_cfa_register 7
 3016 0006 7860     		str	r0, [r7, #4]
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3017              		.loc 1 1179 29
 3018 0008 7B68     		ldr	r3, [r7, #4]
 3019 000a 1A68     		ldr	r2, [r3]
 3020 000c 7B68     		ldr	r3, [r7, #4]
 3021 000e 22F00102 		bic	r2, r2, #1
 3022 0012 1A60     		str	r2, [r3]
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3023              		.loc 1 1180 1
 3024 0014 00BF     		nop
 3025 0016 0C37     		adds	r7, r7, #12
 3026              		.cfi_def_cfa_offset 4
 3027 0018 BD46     		mov	sp, r7
 3028              		.cfi_def_cfa_register 13
 3029              		@ sp needed
 3030 001a 80BC     		pop	{r7}
 3031              		.cfi_restore 7
 3032              		.cfi_def_cfa_offset 0
 3033 001c 7047     		bx	lr
 3034              		.cfi_endproc
 3035              	.LFE141:
 3037              		.section	.text.hals_irda_transmit_config,"ax",%progbits
 3038              		.align	1
 3039              		.global	hals_irda_transmit_config
 3040              		.syntax unified
 3041              		.thumb
 3042              		.thumb_func
 3043              		.fpu softvfp
 3045              	hals_irda_transmit_config:
 3046              	.LFB142:
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA transmitter
1184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  txconfig: enable or disable IRDA transmitter
1186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_TRANSMIT_ENABLE: enable IRDA transmission
1188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_TRANSMIT_DISABLE: enable IRDA transmission
1189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_transmit_config(uint32_t irda_periph, uint32_t txconfig)
1193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3047              		.loc 1 1193 1
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 8
 3050              		@ frame_needed = 1, uses_anonymous_args = 0
 3051              		@ link register save eliminated.
 3052 0000 80B4     		push	{r7}
 3053              		.cfi_def_cfa_offset 4
 3054              		.cfi_offset 7, -4
 3055 0002 83B0     		sub	sp, sp, #12
 3056              		.cfi_def_cfa_offset 16
 3057 0004 00AF     		add	r7, sp, #0
 3058              		.cfi_def_cfa_register 7
 3059 0006 7860     		str	r0, [r7, #4]
 3060 0008 3960     		str	r1, [r7]
1194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~USART_CTL0_TEN;
 3061              		.loc 1 1194 29
 3062 000a 7B68     		ldr	r3, [r7, #4]
 3063 000c 1A68     		ldr	r2, [r3]
 3064 000e 7B68     		ldr	r3, [r7, #4]
 3065 0010 22F00802 		bic	r2, r2, #8
 3066 0014 1A60     		str	r2, [r3]
1195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure transfer mode */
1196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) |= txconfig;
 3067              		.loc 1 1196 29
 3068 0016 7B68     		ldr	r3, [r7, #4]
 3069 0018 1968     		ldr	r1, [r3]
 3070 001a 7B68     		ldr	r3, [r7, #4]
 3071 001c 3A68     		ldr	r2, [r7]
 3072 001e 0A43     		orrs	r2, r2, r1
 3073 0020 1A60     		str	r2, [r3]
1197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3074              		.loc 1 1197 1
 3075 0022 00BF     		nop
 3076 0024 0C37     		adds	r7, r7, #12
 3077              		.cfi_def_cfa_offset 4
 3078 0026 BD46     		mov	sp, r7
 3079              		.cfi_def_cfa_register 13
 3080              		@ sp needed
 3081 0028 80BC     		pop	{r7}
 3082              		.cfi_restore 7
 3083              		.cfi_def_cfa_offset 0
 3084 002a 7047     		bx	lr
 3085              		.cfi_endproc
 3086              	.LFE142:
 3088              		.section	.text.hals_irda_receive_config,"ax",%progbits
 3089              		.align	1
 3090              		.global	hals_irda_receive_config
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu softvfp
 3096              	hals_irda_receive_config:
 3097              	.LFB143:
1198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA receiver
1201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  rxconfig: enable or disable IRDA receiver
1203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_RECEIVE_ENABLE: enable IRDA reception
1205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_RECEIVE_DISABLE: disable IRDA reception
1206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_receive_config(uint32_t irda_periph, uint32_t rxconfig)
1210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3098              		.loc 1 1210 1
 3099              		.cfi_startproc
 3100              		@ args = 0, pretend = 0, frame = 8
 3101              		@ frame_needed = 1, uses_anonymous_args = 0
 3102              		@ link register save eliminated.
 3103 0000 80B4     		push	{r7}
 3104              		.cfi_def_cfa_offset 4
 3105              		.cfi_offset 7, -4
 3106 0002 83B0     		sub	sp, sp, #12
 3107              		.cfi_def_cfa_offset 16
 3108 0004 00AF     		add	r7, sp, #0
 3109              		.cfi_def_cfa_register 7
 3110 0006 7860     		str	r0, [r7, #4]
 3111 0008 3960     		str	r1, [r7]
1211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~USART_CTL0_REN;
 3112              		.loc 1 1211 29
 3113 000a 7B68     		ldr	r3, [r7, #4]
 3114 000c 1A68     		ldr	r2, [r3]
 3115 000e 7B68     		ldr	r3, [r7, #4]
 3116 0010 22F00402 		bic	r2, r2, #4
 3117 0014 1A60     		str	r2, [r3]
1212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* configure receiver mode */
1213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) |= rxconfig;
 3118              		.loc 1 1213 29
 3119 0016 7B68     		ldr	r3, [r7, #4]
 3120 0018 1968     		ldr	r1, [r3]
 3121 001a 7B68     		ldr	r3, [r7, #4]
 3122 001c 3A68     		ldr	r2, [r7]
 3123 001e 0A43     		orrs	r2, r2, r1
 3124 0020 1A60     		str	r2, [r3]
1214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3125              		.loc 1 1214 1
 3126 0022 00BF     		nop
 3127 0024 0C37     		adds	r7, r7, #12
 3128              		.cfi_def_cfa_offset 4
 3129 0026 BD46     		mov	sp, r7
 3130              		.cfi_def_cfa_register 13
 3131              		@ sp needed
 3132 0028 80BC     		pop	{r7}
 3133              		.cfi_restore 7
 3134              		.cfi_def_cfa_offset 0
 3135 002a 7047     		bx	lr
 3136              		.cfi_endproc
 3137              	.LFE143:
 3139              		.section	.text.hals_irda_data_transmit,"ax",%progbits
 3140              		.align	1
 3141              		.global	hals_irda_data_transmit
 3142              		.syntax unified
 3143              		.thumb
 3144              		.thumb_func
 3145              		.fpu softvfp
 3147              	hals_irda_data_transmit:
 3148              	.LFB144:
1215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      IRDA transmit data function
1218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  data: data of transmission
1220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_data_transmit(uint32_t irda_periph, uint16_t data)
1224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3149              		.loc 1 1224 1
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 8
 3152              		@ frame_needed = 1, uses_anonymous_args = 0
 3153              		@ link register save eliminated.
 3154 0000 80B4     		push	{r7}
 3155              		.cfi_def_cfa_offset 4
 3156              		.cfi_offset 7, -4
 3157 0002 83B0     		sub	sp, sp, #12
 3158              		.cfi_def_cfa_offset 16
 3159 0004 00AF     		add	r7, sp, #0
 3160              		.cfi_def_cfa_register 7
 3161 0006 7860     		str	r0, [r7, #4]
 3162 0008 0B46     		mov	r3, r1
 3163 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_TDATA(irda_periph) = (USART_TDATA_TDATA & (uint32_t)data);
 3164              		.loc 1 1225 51
 3165 000c 7B88     		ldrh	r3, [r7, #2]
 3166              		.loc 1 1225 5
 3167 000e 7A68     		ldr	r2, [r7, #4]
 3168 0010 2832     		adds	r2, r2, #40
 3169              		.loc 1 1225 51
 3170 0012 C3F30803 		ubfx	r3, r3, #0, #9
 3171              		.loc 1 1225 30
 3172 0016 1360     		str	r3, [r2]
1226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3173              		.loc 1 1226 1
 3174 0018 00BF     		nop
 3175 001a 0C37     		adds	r7, r7, #12
 3176              		.cfi_def_cfa_offset 4
 3177 001c BD46     		mov	sp, r7
 3178              		.cfi_def_cfa_register 13
 3179              		@ sp needed
 3180 001e 80BC     		pop	{r7}
 3181              		.cfi_restore 7
 3182              		.cfi_def_cfa_offset 0
 3183 0020 7047     		bx	lr
 3184              		.cfi_endproc
 3185              	.LFE144:
 3187              		.section	.text.hals_irda_data_receive,"ax",%progbits
 3188              		.align	1
 3189              		.global	hals_irda_data_receive
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu softvfp
 3195              	hals_irda_data_receive:
 3196              	.LFB145:
1227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      IRDA receive data function
1230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     data of received
1233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** uint16_t hals_irda_data_receive(uint32_t irda_periph)
1235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3197              		.loc 1 1235 1
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 8
 3200              		@ frame_needed = 1, uses_anonymous_args = 0
 3201              		@ link register save eliminated.
 3202 0000 80B4     		push	{r7}
 3203              		.cfi_def_cfa_offset 4
 3204              		.cfi_offset 7, -4
 3205 0002 83B0     		sub	sp, sp, #12
 3206              		.cfi_def_cfa_offset 16
 3207 0004 00AF     		add	r7, sp, #0
 3208              		.cfi_def_cfa_register 7
 3209 0006 7860     		str	r0, [r7, #4]
1236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return (uint16_t)(GET_BITS(USART_RDATA(irda_periph), 0U, 8U));
 3210              		.loc 1 1236 23
 3211 0008 7B68     		ldr	r3, [r7, #4]
 3212 000a 2433     		adds	r3, r3, #36
 3213 000c 1B68     		ldr	r3, [r3]
 3214              		.loc 1 1236 12
 3215 000e 9BB2     		uxth	r3, r3
 3216 0010 C3F30803 		ubfx	r3, r3, #0, #9
 3217 0014 9BB2     		uxth	r3, r3
1237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3218              		.loc 1 1237 1
 3219 0016 1846     		mov	r0, r3
 3220 0018 0C37     		adds	r7, r7, #12
 3221              		.cfi_def_cfa_offset 4
 3222 001a BD46     		mov	sp, r7
 3223              		.cfi_def_cfa_register 13
 3224              		@ sp needed
 3225 001c 80BC     		pop	{r7}
 3226              		.cfi_restore 7
 3227              		.cfi_def_cfa_offset 0
 3228 001e 7047     		bx	lr
 3229              		.cfi_endproc
 3230              	.LFE145:
 3232              		.section	.text.hals_irda_mode_enable,"ax",%progbits
 3233              		.align	1
 3234              		.global	hals_irda_mode_enable
 3235              		.syntax unified
 3236              		.thumb
 3237              		.thumb_func
 3238              		.fpu softvfp
 3240              	hals_irda_mode_enable:
 3241              	.LFB146:
1238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      enable irda mode
1241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0)
1242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_mode_enable(uint32_t irda_periph)
1246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3242              		.loc 1 1246 1
 3243              		.cfi_startproc
 3244              		@ args = 0, pretend = 0, frame = 8
 3245              		@ frame_needed = 1, uses_anonymous_args = 0
 3246              		@ link register save eliminated.
 3247 0000 80B4     		push	{r7}
 3248              		.cfi_def_cfa_offset 4
 3249              		.cfi_offset 7, -4
 3250 0002 83B0     		sub	sp, sp, #12
 3251              		.cfi_def_cfa_offset 16
 3252 0004 00AF     		add	r7, sp, #0
 3253              		.cfi_def_cfa_register 7
 3254 0006 7860     		str	r0, [r7, #4]
1247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3255              		.loc 1 1248 29
 3256 0008 7B68     		ldr	r3, [r7, #4]
 3257 000a 1A68     		ldr	r2, [r3]
 3258 000c 7B68     		ldr	r3, [r7, #4]
 3259 000e 22F00102 		bic	r2, r2, #1
 3260 0012 1A60     		str	r2, [r3]
1249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) |= USART_CTL2_IREN;
 3261              		.loc 1 1250 29
 3262 0014 7B68     		ldr	r3, [r7, #4]
 3263 0016 0833     		adds	r3, r3, #8
 3264 0018 1B68     		ldr	r3, [r3]
 3265 001a 7A68     		ldr	r2, [r7, #4]
 3266 001c 0832     		adds	r2, r2, #8
 3267 001e 43F00203 		orr	r3, r3, #2
 3268 0022 1360     		str	r3, [r2]
1251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3269              		.loc 1 1251 1
 3270 0024 00BF     		nop
 3271 0026 0C37     		adds	r7, r7, #12
 3272              		.cfi_def_cfa_offset 4
 3273 0028 BD46     		mov	sp, r7
 3274              		.cfi_def_cfa_register 13
 3275              		@ sp needed
 3276 002a 80BC     		pop	{r7}
 3277              		.cfi_restore 7
 3278              		.cfi_def_cfa_offset 0
 3279 002c 7047     		bx	lr
 3280              		.cfi_endproc
 3281              	.LFE146:
 3283              		.section	.text.hals_irda_mode_disable,"ax",%progbits
 3284              		.align	1
 3285              		.global	hals_irda_mode_disable
 3286              		.syntax unified
 3287              		.thumb
 3288              		.thumb_func
 3289              		.fpu softvfp
 3291              	hals_irda_mode_disable:
 3292              	.LFB147:
1252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      disable irda mode
1255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0)
1256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_mode_disable(uint32_t irda_periph)
1260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3293              		.loc 1 1260 1
 3294              		.cfi_startproc
 3295              		@ args = 0, pretend = 0, frame = 8
 3296              		@ frame_needed = 1, uses_anonymous_args = 0
 3297              		@ link register save eliminated.
 3298 0000 80B4     		push	{r7}
 3299              		.cfi_def_cfa_offset 4
 3300              		.cfi_offset 7, -4
 3301 0002 83B0     		sub	sp, sp, #12
 3302              		.cfi_def_cfa_offset 16
 3303 0004 00AF     		add	r7, sp, #0
 3304              		.cfi_def_cfa_register 7
 3305 0006 7860     		str	r0, [r7, #4]
1261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3306              		.loc 1 1262 29
 3307 0008 7B68     		ldr	r3, [r7, #4]
 3308 000a 1A68     		ldr	r2, [r3]
 3309 000c 7B68     		ldr	r3, [r7, #4]
 3310 000e 22F00102 		bic	r2, r2, #1
 3311 0012 1A60     		str	r2, [r3]
1263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) &= ~(USART_CTL2_IREN);
 3312              		.loc 1 1264 29
 3313 0014 7B68     		ldr	r3, [r7, #4]
 3314 0016 0833     		adds	r3, r3, #8
 3315 0018 1B68     		ldr	r3, [r3]
 3316 001a 7A68     		ldr	r2, [r7, #4]
 3317 001c 0832     		adds	r2, r2, #8
 3318 001e 23F00203 		bic	r3, r3, #2
 3319 0022 1360     		str	r3, [r2]
1265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3320              		.loc 1 1265 1
 3321 0024 00BF     		nop
 3322 0026 0C37     		adds	r7, r7, #12
 3323              		.cfi_def_cfa_offset 4
 3324 0028 BD46     		mov	sp, r7
 3325              		.cfi_def_cfa_register 13
 3326              		@ sp needed
 3327 002a 80BC     		pop	{r7}
 3328              		.cfi_restore 7
 3329              		.cfi_def_cfa_offset 0
 3330 002c 7047     		bx	lr
 3331              		.cfi_endproc
 3332              	.LFE147:
 3334              		.section	.text.hals_irda_prescaler_config,"ax",%progbits
 3335              		.align	1
 3336              		.global	hals_irda_prescaler_config
 3337              		.syntax unified
 3338              		.thumb
 3339              		.thumb_func
 3340              		.fpu softvfp
 3342              	hals_irda_prescaler_config:
 3343              	.LFB148:
1266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure the peripheral clock prescaler in IRDA irda low-power or smartcard mode
1269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0)
1270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  psc: 0x00000000-0x000000FF
1271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_prescaler_config(uint32_t irda_periph, uint32_t psc)
1275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3344              		.loc 1 1275 1
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 8
 3347              		@ frame_needed = 1, uses_anonymous_args = 0
 3348              		@ link register save eliminated.
 3349 0000 80B4     		push	{r7}
 3350              		.cfi_def_cfa_offset 4
 3351              		.cfi_offset 7, -4
 3352 0002 83B0     		sub	sp, sp, #12
 3353              		.cfi_def_cfa_offset 16
 3354 0004 00AF     		add	r7, sp, #0
 3355              		.cfi_def_cfa_register 7
 3356 0006 7860     		str	r0, [r7, #4]
 3357 0008 3960     		str	r1, [r7]
1276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3358              		.loc 1 1277 29
 3359 000a 7B68     		ldr	r3, [r7, #4]
 3360 000c 1A68     		ldr	r2, [r3]
 3361 000e 7B68     		ldr	r3, [r7, #4]
 3362 0010 22F00102 		bic	r2, r2, #1
 3363 0014 1A60     		str	r2, [r3]
1278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_GP(irda_periph) &= ~(USART_GP_PSC);
 3364              		.loc 1 1278 27
 3365 0016 7B68     		ldr	r3, [r7, #4]
 3366 0018 1033     		adds	r3, r3, #16
 3367 001a 1B68     		ldr	r3, [r3]
 3368 001c 7A68     		ldr	r2, [r7, #4]
 3369 001e 1032     		adds	r2, r2, #16
 3370 0020 23F0FF03 		bic	r3, r3, #255
 3371 0024 1360     		str	r3, [r2]
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_GP(irda_periph) |= psc;
 3372              		.loc 1 1279 27
 3373 0026 7B68     		ldr	r3, [r7, #4]
 3374 0028 1033     		adds	r3, r3, #16
 3375 002a 1A68     		ldr	r2, [r3]
 3376 002c 7B68     		ldr	r3, [r7, #4]
 3377 002e 1033     		adds	r3, r3, #16
 3378 0030 1946     		mov	r1, r3
 3379 0032 3B68     		ldr	r3, [r7]
 3380 0034 1343     		orrs	r3, r3, r2
 3381 0036 0B60     		str	r3, [r1]
1280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3382              		.loc 1 1280 1
 3383 0038 00BF     		nop
 3384 003a 0C37     		adds	r7, r7, #12
 3385              		.cfi_def_cfa_offset 4
 3386 003c BD46     		mov	sp, r7
 3387              		.cfi_def_cfa_register 13
 3388              		@ sp needed
 3389 003e 80BC     		pop	{r7}
 3390              		.cfi_restore 7
 3391              		.cfi_def_cfa_offset 0
 3392 0040 7047     		bx	lr
 3393              		.cfi_endproc
 3394              	.LFE148:
 3396              		.section	.text.hals_irda_lowpower_config,"ax",%progbits
 3397              		.align	1
 3398              		.global	hals_irda_lowpower_config
 3399              		.syntax unified
 3400              		.thumb
 3401              		.thumb_func
 3402              		.fpu softvfp
 3404              	hals_irda_lowpower_config:
 3405              	.LFB149:
1281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure irda low-power
1284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0)
1285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irlp: irda low-power or normal
1286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_IRLP_LOW:    low-power
1288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_IRLP_NORMAL: normal
1289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_lowpower_config(uint32_t irda_periph, uint32_t irlp)
1293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3406              		.loc 1 1293 1
 3407              		.cfi_startproc
 3408              		@ args = 0, pretend = 0, frame = 8
 3409              		@ frame_needed = 1, uses_anonymous_args = 0
 3410              		@ link register save eliminated.
 3411 0000 80B4     		push	{r7}
 3412              		.cfi_def_cfa_offset 4
 3413              		.cfi_offset 7, -4
 3414 0002 83B0     		sub	sp, sp, #12
 3415              		.cfi_def_cfa_offset 16
 3416 0004 00AF     		add	r7, sp, #0
 3417              		.cfi_def_cfa_register 7
 3418 0006 7860     		str	r0, [r7, #4]
 3419 0008 3960     		str	r1, [r7]
1294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3420              		.loc 1 1295 29
 3421 000a 7B68     		ldr	r3, [r7, #4]
 3422 000c 1A68     		ldr	r2, [r3]
 3423 000e 7B68     		ldr	r3, [r7, #4]
 3424 0010 22F00102 		bic	r2, r2, #1
 3425 0014 1A60     		str	r2, [r3]
1296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) &= ~(USART_CTL2_IRLP);
 3426              		.loc 1 1296 29
 3427 0016 7B68     		ldr	r3, [r7, #4]
 3428 0018 0833     		adds	r3, r3, #8
 3429 001a 1B68     		ldr	r3, [r3]
 3430 001c 7A68     		ldr	r2, [r7, #4]
 3431 001e 0832     		adds	r2, r2, #8
 3432 0020 23F00403 		bic	r3, r3, #4
 3433 0024 1360     		str	r3, [r2]
1297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) |= (USART_CTL2_IRLP & irlp);
 3434              		.loc 1 1297 29
 3435 0026 7B68     		ldr	r3, [r7, #4]
 3436 0028 0833     		adds	r3, r3, #8
 3437 002a 1A68     		ldr	r2, [r3]
 3438              		.loc 1 1297 49
 3439 002c 3B68     		ldr	r3, [r7]
 3440 002e 03F00403 		and	r3, r3, #4
 3441              		.loc 1 1297 29
 3442 0032 7968     		ldr	r1, [r7, #4]
 3443 0034 0831     		adds	r1, r1, #8
 3444 0036 1343     		orrs	r3, r3, r2
 3445 0038 0B60     		str	r3, [r1]
1298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3446              		.loc 1 1298 1
 3447 003a 00BF     		nop
 3448 003c 0C37     		adds	r7, r7, #12
 3449              		.cfi_def_cfa_offset 4
 3450 003e BD46     		mov	sp, r7
 3451              		.cfi_def_cfa_register 13
 3452              		@ sp needed
 3453 0040 80BC     		pop	{r7}
 3454              		.cfi_restore 7
 3455              		.cfi_def_cfa_offset 0
 3456 0042 7047     		bx	lr
 3457              		.cfi_endproc
 3458              	.LFE149:
 3460              		.section	.text.hals_irda_dma_receive_config,"ax",%progbits
 3461              		.align	1
 3462              		.global	hals_irda_dma_receive_config
 3463              		.syntax unified
 3464              		.thumb
 3465              		.thumb_func
 3466              		.fpu softvfp
 3468              	hals_irda_dma_receive_config:
 3469              	.LFB150:
1299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA DMA reception
1302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  dmacmd: IRDA DMA mode
1304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_RECEIVE_DMA_ENABLE: enable IRDA DMA for reception
1306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_RECEIVE_DMA_DISABLE: disable IRDA DMA for reception
1307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_dma_receive_config(uint32_t irda_periph, uint8_t dmacmd)
1311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3470              		.loc 1 1311 1
 3471              		.cfi_startproc
 3472              		@ args = 0, pretend = 0, frame = 8
 3473              		@ frame_needed = 1, uses_anonymous_args = 0
 3474              		@ link register save eliminated.
 3475 0000 80B4     		push	{r7}
 3476              		.cfi_def_cfa_offset 4
 3477              		.cfi_offset 7, -4
 3478 0002 83B0     		sub	sp, sp, #12
 3479              		.cfi_def_cfa_offset 16
 3480 0004 00AF     		add	r7, sp, #0
 3481              		.cfi_def_cfa_register 7
 3482 0006 7860     		str	r0, [r7, #4]
 3483 0008 0B46     		mov	r3, r1
 3484 000a FB70     		strb	r3, [r7, #3]
1312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) &= ~USART_CTL2_DENR;
 3485              		.loc 1 1312 29
 3486 000c 7B68     		ldr	r3, [r7, #4]
 3487 000e 0833     		adds	r3, r3, #8
 3488 0010 1B68     		ldr	r3, [r3]
 3489 0012 7A68     		ldr	r2, [r7, #4]
 3490 0014 0832     		adds	r2, r2, #8
 3491 0016 23F04003 		bic	r3, r3, #64
 3492 001a 1360     		str	r3, [r2]
1313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) |= (USART_CTL2_DENR & dmacmd);
 3493              		.loc 1 1313 29
 3494 001c 7B68     		ldr	r3, [r7, #4]
 3495 001e 0833     		adds	r3, r3, #8
 3496 0020 1A68     		ldr	r2, [r3]
 3497              		.loc 1 1313 49
 3498 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3499 0024 03F04003 		and	r3, r3, #64
 3500              		.loc 1 1313 29
 3501 0028 7968     		ldr	r1, [r7, #4]
 3502 002a 0831     		adds	r1, r1, #8
 3503 002c 1343     		orrs	r3, r3, r2
 3504 002e 0B60     		str	r3, [r1]
1314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3505              		.loc 1 1314 1
 3506 0030 00BF     		nop
 3507 0032 0C37     		adds	r7, r7, #12
 3508              		.cfi_def_cfa_offset 4
 3509 0034 BD46     		mov	sp, r7
 3510              		.cfi_def_cfa_register 13
 3511              		@ sp needed
 3512 0036 80BC     		pop	{r7}
 3513              		.cfi_restore 7
 3514              		.cfi_def_cfa_offset 0
 3515 0038 7047     		bx	lr
 3516              		.cfi_endproc
 3517              	.LFE150:
 3519              		.section	.text.hals_irda_dma_transmit_config,"ax",%progbits
 3520              		.align	1
 3521              		.global	hals_irda_dma_transmit_config
 3522              		.syntax unified
 3523              		.thumb
 3524              		.thumb_func
 3525              		.fpu softvfp
 3527              	hals_irda_dma_transmit_config:
 3528              	.LFB151:
1315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      configure IRDA DMA transmission
1318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  dmacmd: IRDA DMA mode
1320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_TRANSMIT_DMA_ENABLE: enable IRDA DMA for transmission
1322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_TRANSMIT_DMA_DISABLE: disable IRDA DMA for transmission
1323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_dma_transmit_config(uint32_t irda_periph, uint8_t dmacmd)
1327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3529              		.loc 1 1327 1
 3530              		.cfi_startproc
 3531              		@ args = 0, pretend = 0, frame = 8
 3532              		@ frame_needed = 1, uses_anonymous_args = 0
 3533              		@ link register save eliminated.
 3534 0000 80B4     		push	{r7}
 3535              		.cfi_def_cfa_offset 4
 3536              		.cfi_offset 7, -4
 3537 0002 83B0     		sub	sp, sp, #12
 3538              		.cfi_def_cfa_offset 16
 3539 0004 00AF     		add	r7, sp, #0
 3540              		.cfi_def_cfa_register 7
 3541 0006 7860     		str	r0, [r7, #4]
 3542 0008 0B46     		mov	r3, r1
 3543 000a FB70     		strb	r3, [r7, #3]
1328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) &= ~USART_CTL2_DENT;
 3544              		.loc 1 1328 29
 3545 000c 7B68     		ldr	r3, [r7, #4]
 3546 000e 0833     		adds	r3, r3, #8
 3547 0010 1B68     		ldr	r3, [r3]
 3548 0012 7A68     		ldr	r2, [r7, #4]
 3549 0014 0832     		adds	r2, r2, #8
 3550 0016 23F08003 		bic	r3, r3, #128
 3551 001a 1360     		str	r3, [r2]
1329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) |= (USART_CTL2_DENT & dmacmd);
 3552              		.loc 1 1329 29
 3553 001c 7B68     		ldr	r3, [r7, #4]
 3554 001e 0833     		adds	r3, r3, #8
 3555 0020 1A68     		ldr	r2, [r3]
 3556              		.loc 1 1329 49
 3557 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3558 0024 03F08003 		and	r3, r3, #128
 3559              		.loc 1 1329 29
 3560 0028 7968     		ldr	r1, [r7, #4]
 3561 002a 0831     		adds	r1, r1, #8
 3562 002c 1343     		orrs	r3, r3, r2
 3563 002e 0B60     		str	r3, [r1]
1330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3564              		.loc 1 1330 1
 3565 0030 00BF     		nop
 3566 0032 0C37     		adds	r7, r7, #12
 3567              		.cfi_def_cfa_offset 4
 3568 0034 BD46     		mov	sp, r7
 3569              		.cfi_def_cfa_register 13
 3570              		@ sp needed
 3571 0036 80BC     		pop	{r7}
 3572              		.cfi_restore 7
 3573              		.cfi_def_cfa_offset 0
 3574 0038 7047     		bx	lr
 3575              		.cfi_endproc
 3576              	.LFE151:
 3578              		.section	.text.hals_irda_reception_error_dma_enable,"ax",%progbits
 3579              		.align	1
 3580              		.global	hals_irda_reception_error_dma_enable
 3581              		.syntax unified
 3582              		.thumb
 3583              		.thumb_func
 3584              		.fpu softvfp
 3586              	hals_irda_reception_error_dma_enable:
 3587              	.LFB152:
1331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      enable DMA on reception error
1334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_reception_error_dma_enable(uint32_t irda_periph)
1339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3588              		.loc 1 1339 1
 3589              		.cfi_startproc
 3590              		@ args = 0, pretend = 0, frame = 8
 3591              		@ frame_needed = 1, uses_anonymous_args = 0
 3592              		@ link register save eliminated.
 3593 0000 80B4     		push	{r7}
 3594              		.cfi_def_cfa_offset 4
 3595              		.cfi_offset 7, -4
 3596 0002 83B0     		sub	sp, sp, #12
 3597              		.cfi_def_cfa_offset 16
 3598 0004 00AF     		add	r7, sp, #0
 3599              		.cfi_def_cfa_register 7
 3600 0006 7860     		str	r0, [r7, #4]
1340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3601              		.loc 1 1341 29
 3602 0008 7B68     		ldr	r3, [r7, #4]
 3603 000a 1A68     		ldr	r2, [r3]
 3604 000c 7B68     		ldr	r3, [r7, #4]
 3605 000e 22F00102 		bic	r2, r2, #1
 3606 0012 1A60     		str	r2, [r3]
1342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) &= ~(USART_CTL2_DDRE);
 3607              		.loc 1 1342 29
 3608 0014 7B68     		ldr	r3, [r7, #4]
 3609 0016 0833     		adds	r3, r3, #8
 3610 0018 1B68     		ldr	r3, [r3]
 3611 001a 7A68     		ldr	r2, [r7, #4]
 3612 001c 0832     		adds	r2, r2, #8
 3613 001e 23F40053 		bic	r3, r3, #8192
 3614 0022 1360     		str	r3, [r2]
1343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3615              		.loc 1 1343 1
 3616 0024 00BF     		nop
 3617 0026 0C37     		adds	r7, r7, #12
 3618              		.cfi_def_cfa_offset 4
 3619 0028 BD46     		mov	sp, r7
 3620              		.cfi_def_cfa_register 13
 3621              		@ sp needed
 3622 002a 80BC     		pop	{r7}
 3623              		.cfi_restore 7
 3624              		.cfi_def_cfa_offset 0
 3625 002c 7047     		bx	lr
 3626              		.cfi_endproc
 3627              	.LFE152:
 3629              		.section	.text.hals_irda_reception_error_dma_disable,"ax",%progbits
 3630              		.align	1
 3631              		.global	hals_irda_reception_error_dma_disable
 3632              		.syntax unified
 3633              		.thumb
 3634              		.thumb_func
 3635              		.fpu softvfp
 3637              	hals_irda_reception_error_dma_disable:
 3638              	.LFB153:
1344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      disable DMA on reception error
1347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_reception_error_dma_disable(uint32_t irda_periph)
1352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3639              		.loc 1 1352 1
 3640              		.cfi_startproc
 3641              		@ args = 0, pretend = 0, frame = 8
 3642              		@ frame_needed = 1, uses_anonymous_args = 0
 3643              		@ link register save eliminated.
 3644 0000 80B4     		push	{r7}
 3645              		.cfi_def_cfa_offset 4
 3646              		.cfi_offset 7, -4
 3647 0002 83B0     		sub	sp, sp, #12
 3648              		.cfi_def_cfa_offset 16
 3649 0004 00AF     		add	r7, sp, #0
 3650              		.cfi_def_cfa_register 7
 3651 0006 7860     		str	r0, [r7, #4]
1353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable IRDA */
1354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL0(irda_periph) &= ~(USART_CTL0_UEN);
 3652              		.loc 1 1354 29
 3653 0008 7B68     		ldr	r3, [r7, #4]
 3654 000a 1A68     		ldr	r2, [r3]
 3655 000c 7B68     		ldr	r3, [r7, #4]
 3656 000e 22F00102 		bic	r2, r2, #1
 3657 0012 1A60     		str	r2, [r3]
1355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_CTL2(irda_periph) |= USART_CTL2_DDRE;
 3658              		.loc 1 1355 29
 3659 0014 7B68     		ldr	r3, [r7, #4]
 3660 0016 0833     		adds	r3, r3, #8
 3661 0018 1B68     		ldr	r3, [r3]
 3662 001a 7A68     		ldr	r2, [r7, #4]
 3663 001c 0832     		adds	r2, r2, #8
 3664 001e 43F40053 		orr	r3, r3, #8192
 3665 0022 1360     		str	r3, [r2]
1356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3666              		.loc 1 1356 1
 3667 0024 00BF     		nop
 3668 0026 0C37     		adds	r7, r7, #12
 3669              		.cfi_def_cfa_offset 4
 3670 0028 BD46     		mov	sp, r7
 3671              		.cfi_def_cfa_register 13
 3672              		@ sp needed
 3673 002a 80BC     		pop	{r7}
 3674              		.cfi_restore 7
 3675              		.cfi_def_cfa_offset 0
 3676 002c 7047     		bx	lr
 3677              		.cfi_endproc
 3678              	.LFE153:
 3680              		.section	.text.hals_irda_flag_get,"ax",%progbits
 3681              		.align	1
 3682              		.global	hals_irda_flag_get
 3683              		.syntax unified
 3684              		.thumb
 3685              		.thumb_func
 3686              		.fpu softvfp
 3688              	hals_irda_flag_get:
 3689              	.LFB154:
1357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      get IRDA status
1360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  flag: flag type
1362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_PERR: parity error flag
1364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_FERR: frame error flag
1365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_NERR: noise error flag
1366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_ORERR: overrun error flag
1367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_IDLE: idle line detected flag
1368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_RBNE: read data buffer not empty
1369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_TC: transmission complete flag
1370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_TBE: transmit data register empty
1371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_LBD: LIN break detected flag
1372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_CTSF: CTS change flag
1373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_CTS: CTS level
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_RT: receiver timeout flag
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_EB: end of block flag
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_BSY: busy flag
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_AM: address match flag
1378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_SB: send break flag
1379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_RWU: receiver wakeup from mute mode.
1380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_WU: wakeup from deep-sleep mode flag
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_TEA: transmit enable acknowledge flag
1382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_REA: receive enable acknowledge flag
1383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_EPERR: early parity error flag
1384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_RFE: receive FIFO empty flag
1385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_RFF: receive FIFO full flag
1386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     FlagStatus: SET or RESET
1388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** FlagStatus hals_irda_flag_get(uint32_t irda_periph, usart_flag_enum flag)
1390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3690              		.loc 1 1390 1
 3691              		.cfi_startproc
 3692              		@ args = 0, pretend = 0, frame = 8
 3693              		@ frame_needed = 1, uses_anonymous_args = 0
 3694              		@ link register save eliminated.
 3695 0000 80B4     		push	{r7}
 3696              		.cfi_def_cfa_offset 4
 3697              		.cfi_offset 7, -4
 3698 0002 83B0     		sub	sp, sp, #12
 3699              		.cfi_def_cfa_offset 16
 3700 0004 00AF     		add	r7, sp, #0
 3701              		.cfi_def_cfa_register 7
 3702 0006 7860     		str	r0, [r7, #4]
 3703 0008 0B46     		mov	r3, r1
 3704 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET != (USART_REG_VAL(irda_periph, flag) & BIT(USART_BIT_POS(flag)))) {
 3705              		.loc 1 1391 18
 3706 000c 7B88     		ldrh	r3, [r7, #2]
 3707 000e 9B09     		lsrs	r3, r3, #6
 3708 0010 9BB2     		uxth	r3, r3
 3709 0012 1A46     		mov	r2, r3
 3710 0014 7B68     		ldr	r3, [r7, #4]
 3711 0016 1344     		add	r3, r3, r2
 3712 0018 1A68     		ldr	r2, [r3]
 3713              		.loc 1 1391 53
 3714 001a 7B88     		ldrh	r3, [r7, #2]
 3715 001c 03F01F03 		and	r3, r3, #31
 3716              		.loc 1 1391 14
 3717 0020 22FA03F3 		lsr	r3, r2, r3
 3718 0024 03F00103 		and	r3, r3, #1
 3719              		.loc 1 1391 7
 3720 0028 002B     		cmp	r3, #0
 3721 002a 01D0     		beq	.L163
1392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return SET;
 3722              		.loc 1 1392 16
 3723 002c 0123     		movs	r3, #1
 3724 002e 00E0     		b	.L164
 3725              	.L163:
1393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return RESET;
 3726              		.loc 1 1394 16
 3727 0030 0023     		movs	r3, #0
 3728              	.L164:
1395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3729              		.loc 1 1396 1
 3730 0032 1846     		mov	r0, r3
 3731 0034 0C37     		adds	r7, r7, #12
 3732              		.cfi_def_cfa_offset 4
 3733 0036 BD46     		mov	sp, r7
 3734              		.cfi_def_cfa_register 13
 3735              		@ sp needed
 3736 0038 80BC     		pop	{r7}
 3737              		.cfi_restore 7
 3738              		.cfi_def_cfa_offset 0
 3739 003a 7047     		bx	lr
 3740              		.cfi_endproc
 3741              	.LFE154:
 3743              		.section	.text.hals_irda_flag_clear,"ax",%progbits
 3744              		.align	1
 3745              		.global	hals_irda_flag_clear
 3746              		.syntax unified
 3747              		.thumb
 3748              		.thumb_func
 3749              		.fpu softvfp
 3751              	hals_irda_flag_clear:
 3752              	.LFB155:
1397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      clear IRDA status
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  flag: flag type
1402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_PERR: parity error flag
1404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_FERR: frame error flag
1405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_NERR: noise error flag
1406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_ORERR: overrun error flag
1407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_IDLE: idle line detected flag
1408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_TC: transmission complete flag
1409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_LBD: LIN break detected flag
1410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_CTSF: CTS change flag
1411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_RT: receiver timeout flag
1412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_EB: end of block flag
1413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_AM: address match flag
1414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_WU: wakeup from deep-sleep mode flag
1415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_FLAG_EPERR: early parity error flag
1416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_flag_clear(uint32_t irda_periph, usart_flag_enum flag)
1420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3753              		.loc 1 1420 1
 3754              		.cfi_startproc
 3755              		@ args = 0, pretend = 0, frame = 8
 3756              		@ frame_needed = 1, uses_anonymous_args = 0
 3757              		@ link register save eliminated.
 3758 0000 80B4     		push	{r7}
 3759              		.cfi_def_cfa_offset 4
 3760              		.cfi_offset 7, -4
 3761 0002 83B0     		sub	sp, sp, #12
 3762              		.cfi_def_cfa_offset 16
 3763 0004 00AF     		add	r7, sp, #0
 3764              		.cfi_def_cfa_register 7
 3765 0006 7860     		str	r0, [r7, #4]
 3766 0008 0B46     		mov	r3, r1
 3767 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_INTC(irda_periph) |= BIT(USART_BIT_POS(flag));
 3768              		.loc 1 1421 29
 3769 000c 7B68     		ldr	r3, [r7, #4]
 3770 000e 2033     		adds	r3, r3, #32
 3771 0010 1A68     		ldr	r2, [r3]
 3772              		.loc 1 1421 32
 3773 0012 7B88     		ldrh	r3, [r7, #2]
 3774 0014 03F01F03 		and	r3, r3, #31
 3775 0018 0121     		movs	r1, #1
 3776 001a 01FA03F3 		lsl	r3, r1, r3
 3777              		.loc 1 1421 29
 3778 001e 7968     		ldr	r1, [r7, #4]
 3779 0020 2031     		adds	r1, r1, #32
 3780 0022 1343     		orrs	r3, r3, r2
 3781 0024 0B60     		str	r3, [r1]
1422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3782              		.loc 1 1422 1
 3783 0026 00BF     		nop
 3784 0028 0C37     		adds	r7, r7, #12
 3785              		.cfi_def_cfa_offset 4
 3786 002a BD46     		mov	sp, r7
 3787              		.cfi_def_cfa_register 13
 3788              		@ sp needed
 3789 002c 80BC     		pop	{r7}
 3790              		.cfi_restore 7
 3791              		.cfi_def_cfa_offset 0
 3792 002e 7047     		bx	lr
 3793              		.cfi_endproc
 3794              	.LFE155:
 3796              		.section	.text.hals_irda_interrupt_enable,"ax",%progbits
 3797              		.align	1
 3798              		.global	hals_irda_interrupt_enable
 3799              		.syntax unified
 3800              		.thumb
 3801              		.thumb_func
 3802              		.fpu softvfp
 3804              	hals_irda_interrupt_enable:
 3805              	.LFB156:
1423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      enable IRDA interrupt
1426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  interrupt: interrupt
1428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_IDLE: idle line detected interrupt
1430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_RBNE: read data buffer not empty interrupt and overrun error interrupt
1431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_TC: transmission complete interrupt
1432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_TBE: transmitter buffer empty interrupt
1433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_PERR: parity error interrupt
1434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_AM: address match interrupt
1435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_RT: receiver timeout interrupt
1436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_EB: end of block interrupt
1437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_LBD: LIN break detection interrupt
1438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_ERR: error interrupt
1439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_CTS: CTS interrupt
1440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_WU: wakeup from deep-sleep mode interrupt
1441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_RFF: receive FIFO full interrupt
1442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_interrupt_enable(uint32_t irda_periph, usart_interrupt_enum interrupt)
1446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3806              		.loc 1 1446 1
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 8
 3809              		@ frame_needed = 1, uses_anonymous_args = 0
 3810              		@ link register save eliminated.
 3811 0000 80B4     		push	{r7}
 3812              		.cfi_def_cfa_offset 4
 3813              		.cfi_offset 7, -4
 3814 0002 83B0     		sub	sp, sp, #12
 3815              		.cfi_def_cfa_offset 16
 3816 0004 00AF     		add	r7, sp, #0
 3817              		.cfi_def_cfa_register 7
 3818 0006 7860     		str	r0, [r7, #4]
 3819 0008 0B46     		mov	r3, r1
 3820 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_REG_VAL(irda_periph, interrupt) |= BIT(USART_BIT_POS(interrupt));
 3821              		.loc 1 1447 43
 3822 000c 7B88     		ldrh	r3, [r7, #2]
 3823 000e 9B09     		lsrs	r3, r3, #6
 3824 0010 9BB2     		uxth	r3, r3
 3825 0012 1A46     		mov	r2, r3
 3826 0014 7B68     		ldr	r3, [r7, #4]
 3827 0016 1344     		add	r3, r3, r2
 3828 0018 1A68     		ldr	r2, [r3]
 3829              		.loc 1 1447 46
 3830 001a 7B88     		ldrh	r3, [r7, #2]
 3831 001c 03F01F03 		and	r3, r3, #31
 3832 0020 0121     		movs	r1, #1
 3833 0022 01FA03F3 		lsl	r3, r1, r3
 3834              		.loc 1 1447 43
 3835 0026 7988     		ldrh	r1, [r7, #2]
 3836 0028 8909     		lsrs	r1, r1, #6
 3837 002a 89B2     		uxth	r1, r1
 3838 002c 0846     		mov	r0, r1
 3839 002e 7968     		ldr	r1, [r7, #4]
 3840 0030 0144     		add	r1, r1, r0
 3841 0032 1343     		orrs	r3, r3, r2
 3842 0034 0B60     		str	r3, [r1]
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3843              		.loc 1 1448 1
 3844 0036 00BF     		nop
 3845 0038 0C37     		adds	r7, r7, #12
 3846              		.cfi_def_cfa_offset 4
 3847 003a BD46     		mov	sp, r7
 3848              		.cfi_def_cfa_register 13
 3849              		@ sp needed
 3850 003c 80BC     		pop	{r7}
 3851              		.cfi_restore 7
 3852              		.cfi_def_cfa_offset 0
 3853 003e 7047     		bx	lr
 3854              		.cfi_endproc
 3855              	.LFE156:
 3857              		.section	.text.hals_irda_interrupt_disable,"ax",%progbits
 3858              		.align	1
 3859              		.global	hals_irda_interrupt_disable
 3860              		.syntax unified
 3861              		.thumb
 3862              		.thumb_func
 3863              		.fpu softvfp
 3865              	hals_irda_interrupt_disable:
 3866              	.LFB157:
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      disable IRDA interrupt
1452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  interrupt: interrupt
1454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_IDLE: idle interrupt
1456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_RBNE: read data buffer not empty interrupt and overrun error interrupt
1457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_TC: transmission complete interrupt
1458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_TBE: transmitter buffer empty interrupt
1459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_PERR: parity error interrupt
1460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_AM: address match interrupt
1461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_RT: receiver timeout interrupt
1462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_EB: end of block interrupt
1463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_LBD: LIN break detection interrupt
1464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_ERR: error interrupt
1465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_CTS: CTS interrupt
1466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_WU: wakeup from deep-sleep mode interrupt
1467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_RFF: receive FIFO full interrupt
1468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_interrupt_disable(uint32_t irda_periph, usart_interrupt_enum interrupt)
1472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3867              		.loc 1 1472 1
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 8
 3870              		@ frame_needed = 1, uses_anonymous_args = 0
 3871              		@ link register save eliminated.
 3872 0000 80B4     		push	{r7}
 3873              		.cfi_def_cfa_offset 4
 3874              		.cfi_offset 7, -4
 3875 0002 83B0     		sub	sp, sp, #12
 3876              		.cfi_def_cfa_offset 16
 3877 0004 00AF     		add	r7, sp, #0
 3878              		.cfi_def_cfa_register 7
 3879 0006 7860     		str	r0, [r7, #4]
 3880 0008 0B46     		mov	r3, r1
 3881 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     USART_REG_VAL(irda_periph, interrupt) &= ~BIT(USART_BIT_POS(interrupt));
 3882              		.loc 1 1473 43
 3883 000c 7B88     		ldrh	r3, [r7, #2]
 3884 000e 9B09     		lsrs	r3, r3, #6
 3885 0010 9BB2     		uxth	r3, r3
 3886 0012 1A46     		mov	r2, r3
 3887 0014 7B68     		ldr	r3, [r7, #4]
 3888 0016 1344     		add	r3, r3, r2
 3889 0018 1A68     		ldr	r2, [r3]
 3890              		.loc 1 1473 47
 3891 001a 7B88     		ldrh	r3, [r7, #2]
 3892 001c 03F01F03 		and	r3, r3, #31
 3893 0020 0121     		movs	r1, #1
 3894 0022 01FA03F3 		lsl	r3, r1, r3
 3895              		.loc 1 1473 46
 3896 0026 DB43     		mvns	r3, r3
 3897              		.loc 1 1473 43
 3898 0028 7988     		ldrh	r1, [r7, #2]
 3899 002a 8909     		lsrs	r1, r1, #6
 3900 002c 89B2     		uxth	r1, r1
 3901 002e 0846     		mov	r0, r1
 3902 0030 7968     		ldr	r1, [r7, #4]
 3903 0032 0144     		add	r1, r1, r0
 3904 0034 1340     		ands	r3, r3, r2
 3905 0036 0B60     		str	r3, [r1]
1474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3906              		.loc 1 1474 1
 3907 0038 00BF     		nop
 3908 003a 0C37     		adds	r7, r7, #12
 3909              		.cfi_def_cfa_offset 4
 3910 003c BD46     		mov	sp, r7
 3911              		.cfi_def_cfa_register 13
 3912              		@ sp needed
 3913 003e 80BC     		pop	{r7}
 3914              		.cfi_restore 7
 3915              		.cfi_def_cfa_offset 0
 3916 0040 7047     		bx	lr
 3917              		.cfi_endproc
 3918              	.LFE157:
 3920              		.section	.text.hals_irda_interrupt_flag_get,"ax",%progbits
 3921              		.align	1
 3922              		.global	hals_irda_interrupt_flag_get
 3923              		.syntax unified
 3924              		.thumb
 3925              		.thumb_func
 3926              		.fpu softvfp
 3928              	hals_irda_interrupt_flag_get:
 3929              	.LFB158:
1475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      get IRDA interrupt flag status
1478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  int_flag: interrupt and flag type, refer to usart_interrupt_flag_enum
1480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_EB: end of block interrupt flag
1482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RT: receiver timeout interrupt flag
1483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_AM: address match interrupt flag
1484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_PERR: parity error interrupt flag
1485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_TBE: transmitter buffer empty interrupt flag
1486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_TC: transmission complete interrupt flag
1487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RBNE: read data buffer not empty interrupt flag
1488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RBNE_ORERR: overrun error interrupt flag
1489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_IDLE: idle line detected interrupt flag
1490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_LBD: LIN break detected interrupt flag
1491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_WU: wakeup from deep-sleep mode interrupt flag
1492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_CTS: CTS interrupt flag
1493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_ERR_NERR: noise error interrupt flag
1494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_ERR_ORERR: overrun error interrupt flag
1495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_ERR_FERR: frame error interrupt flag
1496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RFF: receive FIFO full interrupt flag
1497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     FlagStatus: SET or RESET
1499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** FlagStatus hals_irda_interrupt_flag_get(uint32_t irda_periph, usart_interrupt_flag_enum int_flag)
1501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 3930              		.loc 1 1501 1
 3931              		.cfi_startproc
 3932              		@ args = 0, pretend = 0, frame = 16
 3933              		@ frame_needed = 1, uses_anonymous_args = 0
 3934              		@ link register save eliminated.
 3935 0000 80B4     		push	{r7}
 3936              		.cfi_def_cfa_offset 4
 3937              		.cfi_offset 7, -4
 3938 0002 85B0     		sub	sp, sp, #20
 3939              		.cfi_def_cfa_offset 24
 3940 0004 00AF     		add	r7, sp, #0
 3941              		.cfi_def_cfa_register 7
 3942 0006 7860     		str	r0, [r7, #4]
 3943 0008 3960     		str	r1, [r7]
1502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t intenable = 0U, flagstatus = 0U;
 3944              		.loc 1 1502 14
 3945 000a 0023     		movs	r3, #0
 3946 000c FB60     		str	r3, [r7, #12]
 3947              		.loc 1 1502 30
 3948 000e 0023     		movs	r3, #0
 3949 0010 BB60     		str	r3, [r7, #8]
1503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* get the interrupt enable bit status */
1504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     intenable = (USART_REG_VAL(irda_periph, int_flag) & BIT(USART_BIT_POS(int_flag)));
 3950              		.loc 1 1504 18
 3951 0012 3B68     		ldr	r3, [r7]
 3952 0014 9B09     		lsrs	r3, r3, #6
 3953 0016 C3F30902 		ubfx	r2, r3, #0, #10
 3954 001a 7B68     		ldr	r3, [r7, #4]
 3955 001c 1344     		add	r3, r3, r2
 3956 001e 1A68     		ldr	r2, [r3]
 3957              		.loc 1 1504 57
 3958 0020 3B68     		ldr	r3, [r7]
 3959 0022 03F01F03 		and	r3, r3, #31
 3960 0026 0121     		movs	r1, #1
 3961 0028 01FA03F3 		lsl	r3, r1, r3
 3962              		.loc 1 1504 15
 3963 002c 1340     		ands	r3, r3, r2
 3964 002e FB60     		str	r3, [r7, #12]
1505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* get the corresponding flag bit status */
1506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     flagstatus = (USART_REG_VAL2(irda_periph, int_flag) & BIT(USART_BIT_POS2(int_flag)));
 3965              		.loc 1 1506 19
 3966 0030 3B68     		ldr	r3, [r7]
 3967 0032 9A0D     		lsrs	r2, r3, #22
 3968 0034 7B68     		ldr	r3, [r7, #4]
 3969 0036 1344     		add	r3, r3, r2
 3970 0038 1A68     		ldr	r2, [r3]
 3971              		.loc 1 1506 59
 3972 003a 3B68     		ldr	r3, [r7]
 3973 003c 1B0C     		lsrs	r3, r3, #16
 3974 003e 03F01F03 		and	r3, r3, #31
 3975 0042 0121     		movs	r1, #1
 3976 0044 01FA03F3 		lsl	r3, r1, r3
 3977              		.loc 1 1506 16
 3978 0048 1340     		ands	r3, r3, r2
 3979 004a BB60     		str	r3, [r7, #8]
1507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(flagstatus && intenable) {
 3980              		.loc 1 1508 7
 3981 004c BB68     		ldr	r3, [r7, #8]
 3982 004e 002B     		cmp	r3, #0
 3983 0050 04D0     		beq	.L169
 3984              		.loc 1 1508 19 discriminator 1
 3985 0052 FB68     		ldr	r3, [r7, #12]
 3986 0054 002B     		cmp	r3, #0
 3987 0056 01D0     		beq	.L169
1509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return SET;
 3988              		.loc 1 1509 16
 3989 0058 0123     		movs	r3, #1
 3990 005a 00E0     		b	.L170
 3991              	.L169:
1510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return RESET;
 3992              		.loc 1 1511 16
 3993 005c 0023     		movs	r3, #0
 3994              	.L170:
1512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 3995              		.loc 1 1513 1
 3996 005e 1846     		mov	r0, r3
 3997 0060 1437     		adds	r7, r7, #20
 3998              		.cfi_def_cfa_offset 4
 3999 0062 BD46     		mov	sp, r7
 4000              		.cfi_def_cfa_register 13
 4001              		@ sp needed
 4002 0064 80BC     		pop	{r7}
 4003              		.cfi_restore 7
 4004              		.cfi_def_cfa_offset 0
 4005 0066 7047     		bx	lr
 4006              		.cfi_endproc
 4007              	.LFE158:
 4009              		.section	.text.hals_irda_interrupt_flag_clear,"ax",%progbits
 4010              		.align	1
 4011              		.global	hals_irda_interrupt_flag_clear
 4012              		.syntax unified
 4013              		.thumb
 4014              		.thumb_func
 4015              		.fpu softvfp
 4017              	hals_irda_interrupt_flag_clear:
 4018              	.LFB159:
1514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      clear IRDA interrupt flag
1517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda_periph: USARTx(x=0,1)
1518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  flag: IRDA interrupt flag
1519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 only one parameter can be selected which is shown as below:
1520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_EB: end of block interrupt flag
1521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RT: receiver timeout interrupt flag
1522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_AM: address match interrupt flag
1523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_PERR: parity error interrupt flag
1524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_TC: transmission complete interrupt flag
1525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RBNE_ORERR: overrun error interrupt flag
1526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_IDLE: idle line detected interrupt flag
1527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_LBD: LIN break detected interrupt flag
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_WU: wakeup from deep-sleep mode interrupt flag
1529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_CTS: CTS change interrupt flag
1530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_ERR_FERR: frame error interrupt flag
1531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_ERR_NERR: noise detected interrupt flag
1532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_ERR_ORERR: overrun error interrupt flag
1533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****       \arg        USART_INT_FLAG_RFF: receive FIFO full interrupt flag
1534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** void hals_irda_interrupt_flag_clear(uint32_t irda_periph, usart_interrupt_flag_enum int_flag)
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4019              		.loc 1 1538 1
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 8
 4022              		@ frame_needed = 1, uses_anonymous_args = 0
 4023              		@ link register save eliminated.
 4024 0000 80B4     		push	{r7}
 4025              		.cfi_def_cfa_offset 4
 4026              		.cfi_offset 7, -4
 4027 0002 83B0     		sub	sp, sp, #12
 4028              		.cfi_def_cfa_offset 16
 4029 0004 00AF     		add	r7, sp, #0
 4030              		.cfi_def_cfa_register 7
 4031 0006 7860     		str	r0, [r7, #4]
 4032 0008 3960     		str	r1, [r7]
1539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(USART_INT_FLAG_RFF == int_flag) {
 4033              		.loc 1 1539 7
 4034 000a 3B68     		ldr	r3, [r7]
 4035 000c 0F4A     		ldr	r2, .L175
 4036 000e 9342     		cmp	r3, r2
 4037 0010 08D1     		bne	.L172
1540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_RFCS(irda_periph) &= (uint32_t)(~USART_RFCS_RFFINT);
 4038              		.loc 1 1540 33
 4039 0012 7B68     		ldr	r3, [r7, #4]
 4040 0014 D033     		adds	r3, r3, #208
 4041 0016 1B68     		ldr	r3, [r3]
 4042 0018 7A68     		ldr	r2, [r7, #4]
 4043 001a D032     		adds	r2, r2, #208
 4044 001c 23F40043 		bic	r3, r3, #32768
 4045 0020 1360     		str	r3, [r2]
1541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         USART_INTC(irda_periph) |= BIT(USART_BIT_POS2(int_flag));
1543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4046              		.loc 1 1544 1
 4047 0022 0DE0     		b	.L174
 4048              	.L172:
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 4049              		.loc 1 1542 33
 4050 0024 7B68     		ldr	r3, [r7, #4]
 4051 0026 2033     		adds	r3, r3, #32
 4052 0028 1A68     		ldr	r2, [r3]
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 4053              		.loc 1 1542 36
 4054 002a 3B68     		ldr	r3, [r7]
 4055 002c 1B0C     		lsrs	r3, r3, #16
 4056 002e 03F01F03 		and	r3, r3, #31
 4057 0032 0121     		movs	r1, #1
 4058 0034 01FA03F3 		lsl	r3, r1, r3
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 4059              		.loc 1 1542 33
 4060 0038 7968     		ldr	r1, [r7, #4]
 4061 003a 2031     		adds	r1, r1, #32
 4062 003c 1343     		orrs	r3, r3, r2
 4063 003e 0B60     		str	r3, [r1]
 4064              	.L174:
 4065              		.loc 1 1544 1
 4066 0040 00BF     		nop
 4067 0042 0C37     		adds	r7, r7, #12
 4068              		.cfi_def_cfa_offset 4
 4069 0044 BD46     		mov	sp, r7
 4070              		.cfi_def_cfa_register 13
 4071              		@ sp needed
 4072 0046 80BC     		pop	{r7}
 4073              		.cfi_restore 7
 4074              		.cfi_def_cfa_offset 0
 4075 0048 7047     		bx	lr
 4076              	.L176:
 4077 004a 00BF     		.align	2
 4078              	.L175:
 4079 004c 09340F34 		.word	873411593
 4080              		.cfi_endproc
 4081              	.LFE159:
 4083              		.section	.text._irda_data_bit_mask_get,"ax",%progbits
 4084              		.align	1
 4085              		.syntax unified
 4086              		.thumb
 4087              		.thumb_func
 4088              		.fpu softvfp
 4090              	_irda_data_bit_mask_get:
 4091              	.LFB160:
1545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      get the mask of data bit
1548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
1549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     the mask of data bit(0x7F, 0xFF, 0x1FF)
1553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static uint16_t _irda_data_bit_mask_get(hal_irda_dev_struct *irda)
1555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4092              		.loc 1 1555 1
 4093              		.cfi_startproc
 4094              		@ args = 0, pretend = 0, frame = 16
 4095              		@ frame_needed = 1, uses_anonymous_args = 0
 4096              		@ link register save eliminated.
 4097 0000 80B4     		push	{r7}
 4098              		.cfi_def_cfa_offset 4
 4099              		.cfi_offset 7, -4
 4100 0002 85B0     		sub	sp, sp, #20
 4101              		.cfi_def_cfa_offset 24
 4102 0004 00AF     		add	r7, sp, #0
 4103              		.cfi_def_cfa_register 7
 4104 0006 7860     		str	r0, [r7, #4]
1556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint16_t reval;
1557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET != (USART_CTL0(irda->periph) & USART_CTL0_WL)) {
 4105              		.loc 1 1558 18
 4106 0008 7B68     		ldr	r3, [r7, #4]
 4107 000a 1B68     		ldr	r3, [r3]
 4108 000c 1B68     		ldr	r3, [r3]
 4109              		.loc 1 1558 43
 4110 000e 03F48053 		and	r3, r3, #4096
 4111              		.loc 1 1558 7
 4112 0012 002B     		cmp	r3, #0
 4113 0014 0DD0     		beq	.L178
1559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether the PCEN is enabled */
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != (USART_CTL0(irda->periph) & USART_CTL0_PCEN)) {
 4114              		.loc 1 1560 22
 4115 0016 7B68     		ldr	r3, [r7, #4]
 4116 0018 1B68     		ldr	r3, [r3]
 4117 001a 1B68     		ldr	r3, [r3]
 4118              		.loc 1 1560 47
 4119 001c 03F48063 		and	r3, r3, #1024
 4120              		.loc 1 1560 11
 4121 0020 002B     		cmp	r3, #0
 4122 0022 02D0     		beq	.L179
1561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             reval = 0xFFU;
 4123              		.loc 1 1561 19
 4124 0024 FF23     		movs	r3, #255
 4125 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 4126 0028 0FE0     		b	.L180
 4127              	.L179:
1562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         } else {
1563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             reval = 0x1FFU;
 4128              		.loc 1 1563 19
 4129 002a 40F2FF13 		movw	r3, #511
 4130 002e FB81     		strh	r3, [r7, #14]	@ movhi
 4131 0030 0BE0     		b	.L180
 4132              	.L178:
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
1565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* check whether the PCEN is enabled */
1567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(RESET != (USART_CTL0(irda->periph) & USART_CTL0_PCEN)) {
 4133              		.loc 1 1567 22
 4134 0032 7B68     		ldr	r3, [r7, #4]
 4135 0034 1B68     		ldr	r3, [r3]
 4136 0036 1B68     		ldr	r3, [r3]
 4137              		.loc 1 1567 47
 4138 0038 03F48063 		and	r3, r3, #1024
 4139              		.loc 1 1567 11
 4140 003c 002B     		cmp	r3, #0
 4141 003e 02D0     		beq	.L181
1568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             reval = 0x7FU;
 4142              		.loc 1 1568 19
 4143 0040 7F23     		movs	r3, #127
 4144 0042 FB81     		strh	r3, [r7, #14]	@ movhi
 4145 0044 01E0     		b	.L180
 4146              	.L181:
1569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         } else {
1570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             reval = 0xFFU;
 4147              		.loc 1 1570 19
 4148 0046 FF23     		movs	r3, #255
 4149 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 4150              	.L180:
1571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
1572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     return reval;
 4151              		.loc 1 1574 12
 4152 004a FB89     		ldrh	r3, [r7, #14]
1575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4153              		.loc 1 1575 1
 4154 004c 1846     		mov	r0, r3
 4155 004e 1437     		adds	r7, r7, #20
 4156              		.cfi_def_cfa_offset 4
 4157 0050 BD46     		mov	sp, r7
 4158              		.cfi_def_cfa_register 13
 4159              		@ sp needed
 4160 0052 80BC     		pop	{r7}
 4161              		.cfi_restore 7
 4162              		.cfi_def_cfa_offset 0
 4163 0054 7047     		bx	lr
 4164              		.cfi_endproc
 4165              	.LFE160:
 4167              		.section	.text._irda_error_flag_get,"ax",%progbits
 4168              		.align	1
 4169              		.syntax unified
 4170              		.thumb
 4171              		.thumb_func
 4172              		.fpu softvfp
 4174              	_irda_error_flag_get:
 4175              	.LFB161:
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      get irda error flag
1579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: irda device information structure
1580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                     the structure parameters altering is automatically configured by core
1582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     SET or RESET
1584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static FlagStatus _irda_error_flag_get(hal_irda_dev_struct *irda)
1586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4176              		.loc 1 1586 1
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 8
 4179              		@ frame_needed = 1, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
 4181 0000 80B4     		push	{r7}
 4182              		.cfi_def_cfa_offset 4
 4183              		.cfi_offset 7, -4
 4184 0002 83B0     		sub	sp, sp, #12
 4185              		.cfi_def_cfa_offset 16
 4186 0004 00AF     		add	r7, sp, #0
 4187              		.cfi_def_cfa_register 7
 4188 0006 7860     		str	r0, [r7, #4]
1587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(0U == (USART_STAT(irda->periph) & (uint32_t)(USART_STAT_PERR | USART_STAT_FERR | \
 4189              		.loc 1 1587 15
 4190 0008 7B68     		ldr	r3, [r7, #4]
 4191 000a 1B68     		ldr	r3, [r3]
 4192 000c 1C33     		adds	r3, r3, #28
 4193 000e 1B68     		ldr	r3, [r3]
 4194              		.loc 1 1587 40
 4195 0010 03F00F03 		and	r3, r3, #15
 4196              		.loc 1 1587 7
 4197 0014 002B     		cmp	r3, #0
 4198 0016 01D1     		bne	.L184
1588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****               USART_STAT_ORERR | USART_STAT_NERR))) {
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return RESET;
 4199              		.loc 1 1589 16
 4200 0018 0023     		movs	r3, #0
 4201 001a 00E0     		b	.L185
 4202              	.L184:
1590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         return SET;
 4203              		.loc 1 1591 16
 4204 001c 0123     		movs	r3, #1
 4205              	.L185:
1592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4206              		.loc 1 1593 1
 4207 001e 1846     		mov	r0, r3
 4208 0020 0C37     		adds	r7, r7, #12
 4209              		.cfi_def_cfa_offset 4
 4210 0022 BD46     		mov	sp, r7
 4211              		.cfi_def_cfa_register 13
 4212              		@ sp needed
 4213 0024 80BC     		pop	{r7}
 4214              		.cfi_restore 7
 4215              		.cfi_def_cfa_offset 0
 4216 0026 7047     		bx	lr
 4217              		.cfi_endproc
 4218              	.LFE161:
 4220              		.section	.text._irda_transmit_complete_interrupt,"ax",%progbits
 4221              		.align	1
 4222              		.syntax unified
 4223              		.thumb
 4224              		.thumb_func
 4225              		.fpu softvfp
 4227              	_irda_transmit_complete_interrupt:
 4228              	.LFB162:
1594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      handle the transmit complete interrupt
1597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: pointer to a irda device information structure
1598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_transmit_complete_interrupt(void *irda)
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4229              		.loc 1 1602 1
 4230              		.cfi_startproc
 4231              		@ args = 0, pretend = 0, frame = 16
 4232              		@ frame_needed = 1, uses_anonymous_args = 0
 4233 0000 80B5     		push	{r7, lr}
 4234              		.cfi_def_cfa_offset 8
 4235              		.cfi_offset 7, -8
 4236              		.cfi_offset 14, -4
 4237 0002 84B0     		sub	sp, sp, #16
 4238              		.cfi_def_cfa_offset 24
 4239 0004 00AF     		add	r7, sp, #0
 4240              		.cfi_def_cfa_register 7
 4241 0006 7860     		str	r0, [r7, #4]
1603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_dev_struct *p_irda = irda;
 4242              		.loc 1 1603 26
 4243 0008 7B68     		ldr	r3, [r7, #4]
 4244 000a FB60     		str	r3, [r7, #12]
1604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_user_cb p_func = (hal_irda_user_cb)p_irda->tx_callback;
 4245              		.loc 1 1604 55
 4246 000c FB68     		ldr	r3, [r7, #12]
 4247 000e 1B6C     		ldr	r3, [r3, #64]
 4248              		.loc 1 1604 22
 4249 0010 BB60     		str	r3, [r7, #8]
1605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* disable the transmit complete interrupt */
1607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hals_irda_interrupt_disable(p_irda->periph, USART_INT_TC);
 4250              		.loc 1 1607 5
 4251 0012 FB68     		ldr	r3, [r7, #12]
 4252 0014 1B68     		ldr	r3, [r3]
 4253 0016 0621     		movs	r1, #6
 4254 0018 1846     		mov	r0, r3
 4255 001a FFF7FEFF 		bl	hals_irda_interrupt_disable
1608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* reset transmit_complete_handle and tx_state */
1609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_irda->irda_irq.transmit_complete_handle = NULL;
 4256              		.loc 1 1609 47
 4257 001e FB68     		ldr	r3, [r7, #12]
 4258 0020 0022     		movs	r2, #0
 4259 0022 DA60     		str	r2, [r3, #12]
1610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_irda->tx_state = IRDA_STATE_FREE;
 4260              		.loc 1 1610 22
 4261 0024 FB68     		ldr	r3, [r7, #12]
 4262 0026 0022     		movs	r2, #0
 4263 0028 83F83A20 		strb	r2, [r3, #58]
1611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_func) {
 4264              		.loc 1 1612 7
 4265 002c BB68     		ldr	r3, [r7, #8]
 4266 002e 002B     		cmp	r3, #0
 4267 0030 02D0     		beq	.L188
1613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* if there is a user transmit complete callback */
1614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_func(p_irda);
 4268              		.loc 1 1614 9
 4269 0032 BB68     		ldr	r3, [r7, #8]
 4270 0034 F868     		ldr	r0, [r7, #12]
 4271 0036 9847     		blx	r3
 4272              	.LVL4:
 4273              	.L188:
1615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4274              		.loc 1 1616 1
 4275 0038 00BF     		nop
 4276 003a 1037     		adds	r7, r7, #16
 4277              		.cfi_def_cfa_offset 8
 4278 003c BD46     		mov	sp, r7
 4279              		.cfi_def_cfa_register 13
 4280              		@ sp needed
 4281 003e 80BD     		pop	{r7, pc}
 4282              		.cfi_endproc
 4283              	.LFE162:
 4285              		.section	.text._irda_transmit_interrupt,"ax",%progbits
 4286              		.align	1
 4287              		.syntax unified
 4288              		.thumb
 4289              		.thumb_func
 4290              		.fpu softvfp
 4292              	_irda_transmit_interrupt:
 4293              	.LFB163:
1617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      handle the transmit interrupt
1620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: pointer to a irda device information structure
1621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_transmit_interrupt(void *irda)
1625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4294              		.loc 1 1625 1
 4295              		.cfi_startproc
 4296              		@ args = 0, pretend = 0, frame = 16
 4297              		@ frame_needed = 1, uses_anonymous_args = 0
 4298 0000 80B5     		push	{r7, lr}
 4299              		.cfi_def_cfa_offset 8
 4300              		.cfi_offset 7, -8
 4301              		.cfi_offset 14, -4
 4302 0002 84B0     		sub	sp, sp, #16
 4303              		.cfi_def_cfa_offset 24
 4304 0004 00AF     		add	r7, sp, #0
 4305              		.cfi_def_cfa_register 7
 4306 0006 7860     		str	r0, [r7, #4]
1626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     uint32_t temp_val;
1627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_dev_struct *p_irda = irda;
 4307              		.loc 1 1627 26
 4308 0008 7B68     		ldr	r3, [r7, #4]
 4309 000a FB60     		str	r3, [r7, #12]
1628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     temp_val = p_irda->txbuffer.pos;
 4310              		.loc 1 1629 14
 4311 000c FB68     		ldr	r3, [r7, #12]
 4312 000e 5B6A     		ldr	r3, [r3, #36]
 4313 0010 BB60     		str	r3, [r7, #8]
1630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(temp_val < p_irda->txbuffer.length) {
 4314              		.loc 1 1630 35
 4315 0012 FB68     		ldr	r3, [r7, #12]
 4316 0014 1B6A     		ldr	r3, [r3, #32]
 4317              		.loc 1 1630 7
 4318 0016 BA68     		ldr	r2, [r7, #8]
 4319 0018 9A42     		cmp	r2, r3
 4320 001a 35D2     		bcs	.L190
1631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if((RESET != (USART_CTL0(p_irda->periph) & USART_CTL0_WL)) && \
 4321              		.loc 1 1631 23
 4322 001c FB68     		ldr	r3, [r7, #12]
 4323 001e 1B68     		ldr	r3, [r3]
 4324 0020 1B68     		ldr	r3, [r3]
 4325              		.loc 1 1631 50
 4326 0022 03F48053 		and	r3, r3, #4096
 4327              		.loc 1 1631 11
 4328 0026 002B     		cmp	r3, #0
 4329 0028 18D0     		beq	.L191
1632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                 (RESET == (USART_CTL0(p_irda->periph) & USART_CTL0_PCEN))) {
 4330              		.loc 1 1632 28 discriminator 1
 4331 002a FB68     		ldr	r3, [r7, #12]
 4332 002c 1B68     		ldr	r3, [r3]
 4333 002e 1B68     		ldr	r3, [r3]
 4334              		.loc 1 1632 55 discriminator 1
 4335 0030 03F48063 		and	r3, r3, #1024
1631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if((RESET != (USART_CTL0(p_irda->periph) & USART_CTL0_WL)) && \
 4336              		.loc 1 1631 68 discriminator 1
 4337 0034 002B     		cmp	r3, #0
 4338 0036 11D1     		bne	.L191
1633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             /* 9-bit data, none parity */
1634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_data_transmit(p_irda->periph, (*(uint16_t *)p_irda->txbuffer.buffer & (uint16
 4339              		.loc 1 1634 13
 4340 0038 FB68     		ldr	r3, [r7, #12]
 4341 003a 1A68     		ldr	r2, [r3]
 4342              		.loc 1 1634 83
 4343 003c FB68     		ldr	r3, [r7, #12]
 4344 003e DB69     		ldr	r3, [r3, #28]
 4345              		.loc 1 1634 54
 4346 0040 1B88     		ldrh	r3, [r3]
 4347              		.loc 1 1634 13
 4348 0042 C3F30803 		ubfx	r3, r3, #0, #9
 4349 0046 9BB2     		uxth	r3, r3
 4350 0048 1946     		mov	r1, r3
 4351 004a 1046     		mov	r0, r2
 4352 004c FFF7FEFF 		bl	hals_irda_data_transmit
1635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             p_irda->txbuffer.buffer += 2U;
 4353              		.loc 1 1635 37
 4354 0050 FB68     		ldr	r3, [r7, #12]
 4355 0052 DB69     		ldr	r3, [r3, #28]
 4356 0054 9A1C     		adds	r2, r3, #2
 4357 0056 FB68     		ldr	r3, [r7, #12]
 4358 0058 DA61     		str	r2, [r3, #28]
 4359 005a 0FE0     		b	.L192
 4360              	.L191:
1636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         } else {
1637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             /* 9-bit data, with parity or 8-bit data */
1638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             hals_irda_data_transmit(p_irda->periph, (*p_irda->txbuffer.buffer & (uint8_t)0xFFU));
 4361              		.loc 1 1638 13
 4362 005c FB68     		ldr	r3, [r7, #12]
 4363 005e 1A68     		ldr	r2, [r3]
 4364              		.loc 1 1638 71
 4365 0060 FB68     		ldr	r3, [r7, #12]
 4366 0062 DB69     		ldr	r3, [r3, #28]
 4367              		.loc 1 1638 54
 4368 0064 1B78     		ldrb	r3, [r3]
 4369 0066 DBB2     		uxtb	r3, r3
 4370              		.loc 1 1638 13
 4371 0068 9BB2     		uxth	r3, r3
 4372 006a 1946     		mov	r1, r3
 4373 006c 1046     		mov	r0, r2
 4374 006e FFF7FEFF 		bl	hals_irda_data_transmit
1639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             p_irda->txbuffer.buffer++;
 4375              		.loc 1 1639 29
 4376 0072 FB68     		ldr	r3, [r7, #12]
 4377 0074 DB69     		ldr	r3, [r3, #28]
 4378              		.loc 1 1639 36
 4379 0076 5A1C     		adds	r2, r3, #1
 4380 0078 FB68     		ldr	r3, [r7, #12]
 4381 007a DA61     		str	r2, [r3, #28]
 4382              	.L192:
1640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
1641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->txbuffer.pos++;
 4383              		.loc 1 1641 25
 4384 007c FB68     		ldr	r3, [r7, #12]
 4385 007e 5B6A     		ldr	r3, [r3, #36]
 4386              		.loc 1 1641 29
 4387 0080 5A1C     		adds	r2, r3, #1
 4388 0082 FB68     		ldr	r3, [r7, #12]
 4389 0084 5A62     		str	r2, [r3, #36]
1642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable the TBE interrupt, enable the TC interrupt and reset the transmit_ready_handle *
1644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_TBE);
1645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(p_irda->periph, USART_INT_TC);
1646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->irda_irq.transmit_ready_handle = NULL;
1647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4390              		.loc 1 1648 1
 4391 0086 0EE0     		b	.L194
 4392              	.L190:
1644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(p_irda->periph, USART_INT_TC);
 4393              		.loc 1 1644 9
 4394 0088 FB68     		ldr	r3, [r7, #12]
 4395 008a 1B68     		ldr	r3, [r3]
 4396 008c 0721     		movs	r1, #7
 4397 008e 1846     		mov	r0, r3
 4398 0090 FFF7FEFF 		bl	hals_irda_interrupt_disable
1645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->irda_irq.transmit_ready_handle = NULL;
 4399              		.loc 1 1645 9
 4400 0094 FB68     		ldr	r3, [r7, #12]
 4401 0096 1B68     		ldr	r3, [r3]
 4402 0098 0621     		movs	r1, #6
 4403 009a 1846     		mov	r0, r3
 4404 009c FFF7FEFF 		bl	hals_irda_interrupt_enable
1646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
 4405              		.loc 1 1646 48
 4406 00a0 FB68     		ldr	r3, [r7, #12]
 4407 00a2 0022     		movs	r2, #0
 4408 00a4 9A60     		str	r2, [r3, #8]
 4409              	.L194:
 4410              		.loc 1 1648 1
 4411 00a6 00BF     		nop
 4412 00a8 1037     		adds	r7, r7, #16
 4413              		.cfi_def_cfa_offset 8
 4414 00aa BD46     		mov	sp, r7
 4415              		.cfi_def_cfa_register 13
 4416              		@ sp needed
 4417 00ac 80BD     		pop	{r7, pc}
 4418              		.cfi_endproc
 4419              	.LFE163:
 4421              		.section	.text._irda_receive_interrupt,"ax",%progbits
 4422              		.align	1
 4423              		.syntax unified
 4424              		.thumb
 4425              		.thumb_func
 4426              		.fpu softvfp
 4428              	_irda_receive_interrupt:
 4429              	.LFB164:
1649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      handle the receive interrupt
1652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  irda: pointer to a irda device information structure
1653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_receive_interrupt(void *irda)
1657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4430              		.loc 1 1657 1
 4431              		.cfi_startproc
 4432              		@ args = 0, pretend = 0, frame = 16
 4433              		@ frame_needed = 1, uses_anonymous_args = 0
 4434 0000 80B5     		push	{r7, lr}
 4435              		.cfi_def_cfa_offset 8
 4436              		.cfi_offset 7, -8
 4437              		.cfi_offset 14, -4
 4438 0002 84B0     		sub	sp, sp, #16
 4439              		.cfi_def_cfa_offset 24
 4440 0004 00AF     		add	r7, sp, #0
 4441              		.cfi_def_cfa_register 7
 4442 0006 7860     		str	r0, [r7, #4]
1658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_dev_struct *p_irda = irda;
 4443              		.loc 1 1658 26
 4444 0008 7B68     		ldr	r3, [r7, #4]
 4445 000a FB60     		str	r3, [r7, #12]
1659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_user_cb p_func = (hal_irda_user_cb)p_irda->rx_callback;
 4446              		.loc 1 1659 55
 4447 000c FB68     		ldr	r3, [r7, #12]
 4448 000e DB6B     		ldr	r3, [r3, #60]
 4449              		.loc 1 1659 22
 4450 0010 BB60     		str	r3, [r7, #8]
1660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* store the received data */
1662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(0x1FFU == p_irda->data_bit_mask) {
 4451              		.loc 1 1662 24
 4452 0012 FB68     		ldr	r3, [r7, #12]
 4453 0014 9B8E     		ldrh	r3, [r3, #52]
 4454              		.loc 1 1662 7
 4455 0016 40F2FF12 		movw	r2, #511
 4456 001a 9342     		cmp	r3, r2
 4457 001c 13D1     		bne	.L196
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         *(uint16_t *)p_irda->rxbuffer.buffer = (hals_irda_data_receive(p_irda->periph) &
 4458              		.loc 1 1663 49
 4459 001e FB68     		ldr	r3, [r7, #12]
 4460 0020 1B68     		ldr	r3, [r3]
 4461 0022 1846     		mov	r0, r3
 4462 0024 FFF7FEFF 		bl	hals_irda_data_receive
 4463 0028 0346     		mov	r3, r0
 4464 002a 1946     		mov	r1, r3
1664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                                 p_irda->data_bit_mask);
 4465              		.loc 1 1664 55
 4466 002c FB68     		ldr	r3, [r7, #12]
 4467 002e 9A8E     		ldrh	r2, [r3, #52]
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         *(uint16_t *)p_irda->rxbuffer.buffer = (hals_irda_data_receive(p_irda->periph) &
 4468              		.loc 1 1663 38
 4469 0030 FB68     		ldr	r3, [r7, #12]
 4470 0032 9B6A     		ldr	r3, [r3, #40]
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         *(uint16_t *)p_irda->rxbuffer.buffer = (hals_irda_data_receive(p_irda->periph) &
 4471              		.loc 1 1663 46
 4472 0034 0A40     		ands	r2, r2, r1
 4473 0036 92B2     		uxth	r2, r2
 4474 0038 1A80     		strh	r2, [r3]	@ movhi
1665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rxbuffer.buffer += 2U;
 4475              		.loc 1 1665 33
 4476 003a FB68     		ldr	r3, [r7, #12]
 4477 003c 9B6A     		ldr	r3, [r3, #40]
 4478 003e 9A1C     		adds	r2, r3, #2
 4479 0040 FB68     		ldr	r3, [r7, #12]
 4480 0042 9A62     		str	r2, [r3, #40]
 4481 0044 13E0     		b	.L197
 4482              	.L196:
1666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         *p_irda->rxbuffer.buffer = (uint8_t)(hals_irda_data_receive(p_irda->periph) &
 4483              		.loc 1 1667 46
 4484 0046 FB68     		ldr	r3, [r7, #12]
 4485 0048 1B68     		ldr	r3, [r3]
 4486 004a 1846     		mov	r0, r3
 4487 004c FFF7FEFF 		bl	hals_irda_data_receive
 4488 0050 0346     		mov	r3, r0
 4489              		.loc 1 1667 36
 4490 0052 D9B2     		uxtb	r1, r3
1668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                              p_irda->data_bit_mask);
 4491              		.loc 1 1668 52
 4492 0054 FB68     		ldr	r3, [r7, #12]
 4493 0056 9B8E     		ldrh	r3, [r3, #52]
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                              p_irda->data_bit_mask);
 4494              		.loc 1 1667 36
 4495 0058 DAB2     		uxtb	r2, r3
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                              p_irda->data_bit_mask);
 4496              		.loc 1 1667 26
 4497 005a FB68     		ldr	r3, [r7, #12]
 4498 005c 9B6A     		ldr	r3, [r3, #40]
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                              p_irda->data_bit_mask);
 4499              		.loc 1 1667 36
 4500 005e 0A40     		ands	r2, r2, r1
 4501 0060 D2B2     		uxtb	r2, r2
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****                                              p_irda->data_bit_mask);
 4502              		.loc 1 1667 34
 4503 0062 1A70     		strb	r2, [r3]
1669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rxbuffer.buffer++;
 4504              		.loc 1 1669 25
 4505 0064 FB68     		ldr	r3, [r7, #12]
 4506 0066 9B6A     		ldr	r3, [r3, #40]
 4507              		.loc 1 1669 32
 4508 0068 5A1C     		adds	r2, r3, #1
 4509 006a FB68     		ldr	r3, [r7, #12]
 4510 006c 9A62     		str	r2, [r3, #40]
 4511              	.L197:
1670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_irda->rxbuffer.pos++;
 4512              		.loc 1 1671 21
 4513 006e FB68     		ldr	r3, [r7, #12]
 4514 0070 1B6B     		ldr	r3, [r3, #48]
 4515              		.loc 1 1671 25
 4516 0072 5A1C     		adds	r2, r3, #1
 4517 0074 FB68     		ldr	r3, [r7, #12]
 4518 0076 1A63     		str	r2, [r3, #48]
1672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(p_irda->rxbuffer.pos == p_irda->rxbuffer.length) {
 4519              		.loc 1 1673 24
 4520 0078 FB68     		ldr	r3, [r7, #12]
 4521 007a 1A6B     		ldr	r2, [r3, #48]
 4522              		.loc 1 1673 48
 4523 007c FB68     		ldr	r3, [r7, #12]
 4524 007e DB6A     		ldr	r3, [r3, #44]
 4525              		.loc 1 1673 7
 4526 0080 9A42     		cmp	r2, r3
 4527 0082 1FD1     		bne	.L199
1674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable PERR, ERR, RBNE interrupt */
1675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_PERR);
 4528              		.loc 1 1675 9
 4529 0084 FB68     		ldr	r3, [r7, #12]
 4530 0086 1B68     		ldr	r3, [r3]
 4531 0088 0821     		movs	r1, #8
 4532 008a 1846     		mov	r0, r3
 4533 008c FFF7FEFF 		bl	hals_irda_interrupt_disable
1676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_ERR);
 4534              		.loc 1 1676 9
 4535 0090 FB68     		ldr	r3, [r7, #12]
 4536 0092 1B68     		ldr	r3, [r3]
 4537 0094 4FF40071 		mov	r1, #512
 4538 0098 1846     		mov	r0, r3
 4539 009a FFF7FEFF 		bl	hals_irda_interrupt_disable
1677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_RBNE);
 4540              		.loc 1 1677 9
 4541 009e FB68     		ldr	r3, [r7, #12]
 4542 00a0 1B68     		ldr	r3, [r3]
 4543 00a2 0521     		movs	r1, #5
 4544 00a4 1846     		mov	r0, r3
 4545 00a6 FFF7FEFF 		bl	hals_irda_interrupt_disable
1678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* reset receive_complete_handle and rx_state */
1680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->irda_irq.receive_complete_handle = NULL;
 4546              		.loc 1 1680 50
 4547 00aa FB68     		ldr	r3, [r7, #12]
 4548 00ac 0022     		movs	r2, #0
 4549 00ae 5A60     		str	r2, [r3, #4]
1681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rx_state = IRDA_STATE_FREE;
 4550              		.loc 1 1681 26
 4551 00b0 FB68     		ldr	r3, [r7, #12]
 4552 00b2 0022     		movs	r2, #0
 4553 00b4 83F83B20 		strb	r2, [r3, #59]
1682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         if(NULL != p_func) {
 4554              		.loc 1 1683 11
 4555 00b8 BB68     		ldr	r3, [r7, #8]
 4556 00ba 002B     		cmp	r3, #0
 4557 00bc 02D0     		beq	.L199
1684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             /* if there is a user receive complete callback */
1685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****             p_func(p_irda);
 4558              		.loc 1 1685 13
 4559 00be BB68     		ldr	r3, [r7, #8]
 4560 00c0 F868     		ldr	r0, [r7, #12]
 4561 00c2 9847     		blx	r3
 4562              	.LVL5:
 4563              	.L199:
1686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         }
1687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4564              		.loc 1 1688 1
 4565 00c4 00BF     		nop
 4566 00c6 1037     		adds	r7, r7, #16
 4567              		.cfi_def_cfa_offset 8
 4568 00c8 BD46     		mov	sp, r7
 4569              		.cfi_def_cfa_register 13
 4570              		@ sp needed
 4571 00ca 80BD     		pop	{r7, pc}
 4572              		.cfi_endproc
 4573              	.LFE164:
 4575              		.section	.text._irda_transmit_dma,"ax",%progbits
 4576              		.align	1
 4577              		.syntax unified
 4578              		.thumb
 4579              		.thumb_func
 4580              		.fpu softvfp
 4582              	_irda_transmit_dma:
 4583              	.LFB165:
1689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      handle the irda DMA transmit process
1692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  dma: pointer to a DMA device information structure
1693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_transmit_dma(void *dma)
1697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4584              		.loc 1 1697 1
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 16
 4587              		@ frame_needed = 1, uses_anonymous_args = 0
 4588 0000 80B5     		push	{r7, lr}
 4589              		.cfi_def_cfa_offset 8
 4590              		.cfi_offset 7, -8
 4591              		.cfi_offset 14, -4
 4592 0002 84B0     		sub	sp, sp, #16
 4593              		.cfi_def_cfa_offset 24
 4594 0004 00AF     		add	r7, sp, #0
 4595              		.cfi_def_cfa_register 7
 4596 0006 7860     		str	r0, [r7, #4]
1698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_dev_struct *p_dma;
1699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_dev_struct *p_irda;
1700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_dma = (hal_dma_dev_struct *)dma;
 4597              		.loc 1 1701 11
 4598 0008 7B68     		ldr	r3, [r7, #4]
 4599 000a FB60     		str	r3, [r7, #12]
1702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_irda = (hal_irda_dev_struct *)p_dma->p_periph;
 4600              		.loc 1 1702 12
 4601 000c FB68     		ldr	r3, [r7, #12]
 4602 000e 5B69     		ldr	r3, [r3, #20]
 4603 0010 BB60     		str	r3, [r7, #8]
1703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* DMA normal mode */
1705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET == (DMA_CHCTL(p_dma->channel) & DMA_CHXCTL_CMEN)) {
 4604              		.loc 1 1705 18
 4605 0012 FB68     		ldr	r3, [r7, #12]
 4606 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4607 0016 1A46     		mov	r2, r3
 4608 0018 1346     		mov	r3, r2
 4609 001a 9B00     		lsls	r3, r3, #2
 4610 001c 1344     		add	r3, r3, r2
 4611 001e 9B00     		lsls	r3, r3, #2
 4612 0020 1A46     		mov	r2, r3
 4613 0022 0D4B     		ldr	r3, .L203
 4614 0024 1344     		add	r3, r3, r2
 4615 0026 1B68     		ldr	r3, [r3]
 4616              		.loc 1 1705 44
 4617 0028 03F02003 		and	r3, r3, #32
 4618              		.loc 1 1705 7
 4619 002c 002B     		cmp	r3, #0
 4620 002e 0FD1     		bne	.L202
1706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->txbuffer.pos = p_irda->txbuffer.length;
 4621              		.loc 1 1706 48
 4622 0030 BB68     		ldr	r3, [r7, #8]
 4623 0032 1A6A     		ldr	r2, [r3, #32]
 4624              		.loc 1 1706 30
 4625 0034 BB68     		ldr	r3, [r7, #8]
 4626 0036 5A62     		str	r2, [r3, #36]
1707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_transmit_config(p_irda->periph, USART_TRANSMIT_DMA_DISABLE);
 4627              		.loc 1 1707 9
 4628 0038 BB68     		ldr	r3, [r7, #8]
 4629 003a 1B68     		ldr	r3, [r3]
 4630 003c 0021     		movs	r1, #0
 4631 003e 1846     		mov	r0, r3
 4632 0040 FFF7FEFF 		bl	hals_irda_dma_transmit_config
1708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* enable TC interrupt */
1709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_enable(p_irda->periph, USART_INT_TC);
 4633              		.loc 1 1709 9
 4634 0044 BB68     		ldr	r3, [r7, #8]
 4635 0046 1B68     		ldr	r3, [r3]
 4636 0048 0621     		movs	r1, #6
 4637 004a 1846     		mov	r0, r3
 4638 004c FFF7FEFF 		bl	hals_irda_interrupt_enable
 4639              	.L202:
1710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4640              		.loc 1 1711 1
 4641 0050 00BF     		nop
 4642 0052 1037     		adds	r7, r7, #16
 4643              		.cfi_def_cfa_offset 8
 4644 0054 BD46     		mov	sp, r7
 4645              		.cfi_def_cfa_register 13
 4646              		@ sp needed
 4647 0056 80BD     		pop	{r7, pc}
 4648              	.L204:
 4649              		.align	2
 4650              	.L203:
 4651 0058 08000240 		.word	1073872904
 4652              		.cfi_endproc
 4653              	.LFE165:
 4655              		.section	.text._irda_receive_dma,"ax",%progbits
 4656              		.align	1
 4657              		.syntax unified
 4658              		.thumb
 4659              		.thumb_func
 4660              		.fpu softvfp
 4662              	_irda_receive_dma:
 4663              	.LFB166:
1712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      handle the irda DMA receive process
1715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  dma: pointer to a DMA device information structure
1716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_receive_dma(void *dma)
1720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4664              		.loc 1 1720 1
 4665              		.cfi_startproc
 4666              		@ args = 0, pretend = 0, frame = 24
 4667              		@ frame_needed = 1, uses_anonymous_args = 0
 4668 0000 80B5     		push	{r7, lr}
 4669              		.cfi_def_cfa_offset 8
 4670              		.cfi_offset 7, -8
 4671              		.cfi_offset 14, -4
 4672 0002 86B0     		sub	sp, sp, #24
 4673              		.cfi_def_cfa_offset 32
 4674 0004 00AF     		add	r7, sp, #0
 4675              		.cfi_def_cfa_register 7
 4676 0006 7860     		str	r0, [r7, #4]
1721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_dev_struct *p_dma;
1722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_dev_struct *p_irda;
1723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_user_cb p_func;
1724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_dma = (hal_dma_dev_struct *)dma;
 4677              		.loc 1 1725 11
 4678 0008 7B68     		ldr	r3, [r7, #4]
 4679 000a 7B61     		str	r3, [r7, #20]
1726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_irda = (hal_irda_dev_struct *)p_dma->p_periph;
 4680              		.loc 1 1726 12
 4681 000c 7B69     		ldr	r3, [r7, #20]
 4682 000e 5B69     		ldr	r3, [r3, #20]
 4683 0010 3B61     		str	r3, [r7, #16]
1727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_func = (hal_irda_user_cb)p_irda->rx_callback;
 4684              		.loc 1 1727 38
 4685 0012 3B69     		ldr	r3, [r7, #16]
 4686 0014 DB6B     		ldr	r3, [r3, #60]
 4687              		.loc 1 1727 12
 4688 0016 FB60     		str	r3, [r7, #12]
1728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     /* DMA normal mode */
1730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(RESET == (DMA_CHCTL(p_dma->channel) & DMA_CHXCTL_CMEN)) {
 4689              		.loc 1 1730 18
 4690 0018 7B69     		ldr	r3, [r7, #20]
 4691 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4692 001c 1A46     		mov	r2, r3
 4693 001e 1346     		mov	r3, r2
 4694 0020 9B00     		lsls	r3, r3, #2
 4695 0022 1344     		add	r3, r3, r2
 4696 0024 9B00     		lsls	r3, r3, #2
 4697 0026 1A46     		mov	r2, r3
 4698 0028 154B     		ldr	r3, .L209
 4699 002a 1344     		add	r3, r3, r2
 4700 002c 1B68     		ldr	r3, [r3]
 4701              		.loc 1 1730 44
 4702 002e 03F02003 		and	r3, r3, #32
 4703              		.loc 1 1730 7
 4704 0032 002B     		cmp	r3, #0
 4705 0034 1AD1     		bne	.L206
1731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rxbuffer.pos = p_irda->rxbuffer.length;
 4706              		.loc 1 1731 48
 4707 0036 3B69     		ldr	r3, [r7, #16]
 4708 0038 DA6A     		ldr	r2, [r3, #44]
 4709              		.loc 1 1731 30
 4710 003a 3B69     		ldr	r3, [r7, #16]
 4711 003c 1A63     		str	r2, [r3, #48]
1732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable DMA receive, PERR and ERR interrupt */
1733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_receive_config(p_irda->periph, USART_RECEIVE_DMA_DISABLE);
 4712              		.loc 1 1733 9
 4713 003e 3B69     		ldr	r3, [r7, #16]
 4714 0040 1B68     		ldr	r3, [r3]
 4715 0042 0021     		movs	r1, #0
 4716 0044 1846     		mov	r0, r3
 4717 0046 FFF7FEFF 		bl	hals_irda_dma_receive_config
1734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_PERR);
 4718              		.loc 1 1734 9
 4719 004a 3B69     		ldr	r3, [r7, #16]
 4720 004c 1B68     		ldr	r3, [r3]
 4721 004e 0821     		movs	r1, #8
 4722 0050 1846     		mov	r0, r3
 4723 0052 FFF7FEFF 		bl	hals_irda_interrupt_disable
1735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_ERR);
 4724              		.loc 1 1735 9
 4725 0056 3B69     		ldr	r3, [r7, #16]
 4726 0058 1B68     		ldr	r3, [r3]
 4727 005a 4FF40071 		mov	r1, #512
 4728 005e 1846     		mov	r0, r3
 4729 0060 FFF7FEFF 		bl	hals_irda_interrupt_disable
1736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* reset rx_state */
1737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rx_state = IRDA_STATE_FREE;
 4730              		.loc 1 1737 26
 4731 0064 3B69     		ldr	r3, [r7, #16]
 4732 0066 0022     		movs	r2, #0
 4733 0068 83F83B20 		strb	r2, [r3, #59]
 4734              	.L206:
1738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(NULL != p_func) {
 4735              		.loc 1 1740 7
 4736 006c FB68     		ldr	r3, [r7, #12]
 4737 006e 002B     		cmp	r3, #0
 4738 0070 02D0     		beq	.L208
1741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* if there is a user receive complete callback */
1742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_func(p_irda);
 4739              		.loc 1 1742 9
 4740 0072 FB68     		ldr	r3, [r7, #12]
 4741 0074 3869     		ldr	r0, [r7, #16]
 4742 0076 9847     		blx	r3
 4743              	.LVL6:
 4744              	.L208:
1743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4745              		.loc 1 1744 1
 4746 0078 00BF     		nop
 4747 007a 1837     		adds	r7, r7, #24
 4748              		.cfi_def_cfa_offset 8
 4749 007c BD46     		mov	sp, r7
 4750              		.cfi_def_cfa_register 13
 4751              		@ sp needed
 4752 007e 80BD     		pop	{r7, pc}
 4753              	.L210:
 4754              		.align	2
 4755              	.L209:
 4756 0080 08000240 		.word	1073872904
 4757              		.cfi_endproc
 4758              	.LFE166:
 4760              		.section	.text._irda_dma_error,"ax",%progbits
 4761              		.align	1
 4762              		.syntax unified
 4763              		.thumb
 4764              		.thumb_func
 4765              		.fpu softvfp
 4767              	_irda_dma_error:
 4768              	.LFB167:
1745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** /*!
1747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \brief      handle the irda DMA error process
1748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[in]  dma: pointer to a DMA device information structure
1749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \param[out] none
1750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     \retval     none
1751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** */
1752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** static void _irda_dma_error(void *dma)
1753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** {
 4769              		.loc 1 1753 1
 4770              		.cfi_startproc
 4771              		@ args = 0, pretend = 0, frame = 16
 4772              		@ frame_needed = 1, uses_anonymous_args = 0
 4773 0000 80B5     		push	{r7, lr}
 4774              		.cfi_def_cfa_offset 8
 4775              		.cfi_offset 7, -8
 4776              		.cfi_offset 14, -4
 4777 0002 84B0     		sub	sp, sp, #16
 4778              		.cfi_def_cfa_offset 24
 4779 0004 00AF     		add	r7, sp, #0
 4780              		.cfi_def_cfa_register 7
 4781 0006 7860     		str	r0, [r7, #4]
1754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_dma_dev_struct *p_dma;
1755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     hal_irda_dev_struct *p_irda;
1756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_dma = (hal_dma_dev_struct *)dma;
 4782              		.loc 1 1757 11
 4783 0008 7B68     		ldr	r3, [r7, #4]
 4784 000a FB60     		str	r3, [r7, #12]
1758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     p_irda = (hal_irda_dev_struct *)p_dma->p_periph;
 4785              		.loc 1 1758 12
 4786 000c FB68     		ldr	r3, [r7, #12]
 4787 000e 5B69     		ldr	r3, [r3, #20]
 4788 0010 BB60     		str	r3, [r7, #8]
1759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(IRDA_STATE_BUSY == p_irda->tx_state) {
 4789              		.loc 1 1760 33
 4790 0012 BB68     		ldr	r3, [r7, #8]
 4791 0014 93F83A30 		ldrb	r3, [r3, #58]
 4792 0018 DBB2     		uxtb	r3, r3
 4793              		.loc 1 1760 7
 4794 001a 012B     		cmp	r3, #1
 4795 001c 19D1     		bne	.L212
1761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* transmit state is busy */
1762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->error_state |= HAL_SMARTCARD_ERROR_DMATX;
 4796              		.loc 1 1762 29
 4797 001e BB68     		ldr	r3, [r7, #8]
 4798 0020 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 4799 0022 9BB2     		uxth	r3, r3
 4800 0024 43F01003 		orr	r3, r3, #16
 4801 0028 9AB2     		uxth	r2, r3
 4802 002a BB68     		ldr	r3, [r7, #8]
 4803 002c 1A87     		strh	r2, [r3, #56]	@ movhi
1763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->last_error = HAL_SMARTCARD_ERROR_DMATX;
 4804              		.loc 1 1763 28
 4805 002e BB68     		ldr	r3, [r7, #8]
 4806 0030 1022     		movs	r2, #16
 4807 0032 DA86     		strh	r2, [r3, #54]	@ movhi
1764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->txbuffer.pos = p_irda->txbuffer.length;
 4808              		.loc 1 1764 48
 4809 0034 BB68     		ldr	r3, [r7, #8]
 4810 0036 1A6A     		ldr	r2, [r3, #32]
 4811              		.loc 1 1764 30
 4812 0038 BB68     		ldr	r3, [r7, #8]
 4813 003a 5A62     		str	r2, [r3, #36]
1765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable DMA transmit and reset tx_state */
1767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_transmit_config(p_irda->periph, USART_TRANSMIT_DMA_DISABLE);
 4814              		.loc 1 1767 9
 4815 003c BB68     		ldr	r3, [r7, #8]
 4816 003e 1B68     		ldr	r3, [r3]
 4817 0040 0021     		movs	r1, #0
 4818 0042 1846     		mov	r0, r3
 4819 0044 FFF7FEFF 		bl	hals_irda_dma_transmit_config
1768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->tx_state = IRDA_STATE_FREE;
 4820              		.loc 1 1768 26
 4821 0048 BB68     		ldr	r3, [r7, #8]
 4822 004a 0022     		movs	r2, #0
 4823 004c 83F83A20 		strb	r2, [r3, #58]
 4824 0050 2BE0     		b	.L213
 4825              	.L212:
1769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else if(IRDA_STATE_BUSY == p_irda->rx_state) {
 4826              		.loc 1 1769 40
 4827 0052 BB68     		ldr	r3, [r7, #8]
 4828 0054 93F83B30 		ldrb	r3, [r3, #59]
 4829 0058 DBB2     		uxtb	r3, r3
 4830              		.loc 1 1769 14
 4831 005a 012B     		cmp	r3, #1
 4832 005c 25D1     		bne	.L213
1770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* receive state is busy */
1771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->error_state |= HAL_SMARTCARD_ERROR_DMARX;
 4833              		.loc 1 1771 29
 4834 005e BB68     		ldr	r3, [r7, #8]
 4835 0060 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 4836 0062 9BB2     		uxth	r3, r3
 4837 0064 43F02003 		orr	r3, r3, #32
 4838 0068 9AB2     		uxth	r2, r3
 4839 006a BB68     		ldr	r3, [r7, #8]
 4840 006c 1A87     		strh	r2, [r3, #56]	@ movhi
1772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->last_error = HAL_SMARTCARD_ERROR_DMARX;
 4841              		.loc 1 1772 28
 4842 006e BB68     		ldr	r3, [r7, #8]
 4843 0070 2022     		movs	r2, #32
 4844 0072 DA86     		strh	r2, [r3, #54]	@ movhi
1773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rxbuffer.pos = p_irda->rxbuffer.length;
 4845              		.loc 1 1773 48
 4846 0074 BB68     		ldr	r3, [r7, #8]
 4847 0076 DA6A     		ldr	r2, [r3, #44]
 4848              		.loc 1 1773 30
 4849 0078 BB68     		ldr	r3, [r7, #8]
 4850 007a 1A63     		str	r2, [r3, #48]
1774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* disable DMA receive, PERR, ERR interrupt */
1776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_dma_receive_config(p_irda->periph, USART_RECEIVE_DMA_DISABLE);
 4851              		.loc 1 1776 9
 4852 007c BB68     		ldr	r3, [r7, #8]
 4853 007e 1B68     		ldr	r3, [r3]
 4854 0080 0021     		movs	r1, #0
 4855 0082 1846     		mov	r0, r3
 4856 0084 FFF7FEFF 		bl	hals_irda_dma_receive_config
1777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_PERR);
 4857              		.loc 1 1777 9
 4858 0088 BB68     		ldr	r3, [r7, #8]
 4859 008a 1B68     		ldr	r3, [r3]
 4860 008c 0821     		movs	r1, #8
 4861 008e 1846     		mov	r0, r3
 4862 0090 FFF7FEFF 		bl	hals_irda_interrupt_disable
1778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         hals_irda_interrupt_disable(p_irda->periph, USART_INT_ERR);
 4863              		.loc 1 1778 9
 4864 0094 BB68     		ldr	r3, [r7, #8]
 4865 0096 1B68     		ldr	r3, [r3]
 4866 0098 4FF40071 		mov	r1, #512
 4867 009c 1846     		mov	r0, r3
 4868 009e FFF7FEFF 		bl	hals_irda_interrupt_disable
1779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* reset rx_state */
1780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->rx_state = IRDA_STATE_FREE;
 4869              		.loc 1 1780 26
 4870 00a2 BB68     		ldr	r3, [r7, #8]
 4871 00a4 0022     		movs	r2, #0
 4872 00a6 83F83B20 		strb	r2, [r3, #59]
 4873              	.L213:
1781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     } else {
1782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         HAL_DEBUGE("irda processor fatal error: dma error exception due to run state");
1783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** 
1785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     if(p_irda->irda_irq.error_handle != NULL) {
 4874              		.loc 1 1785 24
 4875 00aa BB68     		ldr	r3, [r7, #8]
 4876 00ac 1B69     		ldr	r3, [r3, #16]
 4877              		.loc 1 1785 7
 4878 00ae 002B     		cmp	r3, #0
 4879 00b0 06D0     		beq	.L215
1786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         /* if there is a user error callback */
1787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->irda_irq.error_handle(p_irda);
 4880              		.loc 1 1787 25
 4881 00b2 BB68     		ldr	r3, [r7, #8]
 4882 00b4 1B69     		ldr	r3, [r3, #16]
 4883              		.loc 1 1787 9
 4884 00b6 B868     		ldr	r0, [r7, #8]
 4885 00b8 9847     		blx	r3
 4886              	.LVL7:
1788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****         p_irda->error_state = HAL_IRDA_ERROR_NONE;
 4887              		.loc 1 1788 29
 4888 00ba BB68     		ldr	r3, [r7, #8]
 4889 00bc 0022     		movs	r2, #0
 4890 00be 1A87     		strh	r2, [r3, #56]	@ movhi
 4891              	.L215:
1789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c ****     }
1790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_irda.c **** }
 4892              		.loc 1 1790 1
 4893 00c0 00BF     		nop
 4894 00c2 1037     		adds	r7, r7, #16
 4895              		.cfi_def_cfa_offset 8
 4896 00c4 BD46     		mov	sp, r7
 4897              		.cfi_def_cfa_register 13
 4898              		@ sp needed
 4899 00c6 80BD     		pop	{r7, pc}
 4900              		.cfi_endproc
 4901              	.LFE167:
 4903              		.text
 4904              	.Letext0:
 4905              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 4906              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 4907              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 4908              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 4909              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 4910              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 4911              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 4912              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 4913              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 4914              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 4915              		.file 12 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_dma.h"
 4916              		.file 13 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 4917              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 4918              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_usart_com.h"
 4919              		.file 16 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_irda.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_irda.c
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:16     .text.hal_irda_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:24     .text.hal_irda_struct_init:00000000 hal_irda_struct_init
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:204    .text.hal_irda_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:211    .text.hal_irda_deinit:00000000 hal_irda_deinit
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2558   .text.hals_irda_deinit:00000000 hals_irda_deinit
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:258    .text.hal_irda_deinit:00000034 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:263    .text.hal_irda_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:270    .text.hal_irda_init:00000000 hal_irda_init
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3002   .text.hals_irda_disable:00000000 hals_irda_disable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2627   .text.hals_irda_baudrate_set:00000000 hals_irda_baudrate_set
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4090   .text._irda_data_bit_mask_get:00000000 _irda_data_bit_mask_get
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3404   .text.hals_irda_lowpower_config:00000000 hals_irda_lowpower_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3240   .text.hals_irda_mode_enable:00000000 hals_irda_mode_enable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2959   .text.hals_irda_enable:00000000 hals_irda_enable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:444    .text.hal_irda_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:451    .text.hal_irda_irq:00000000 hal_irda_irq
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4174   .text._irda_error_flag_get:00000000 _irda_error_flag_get
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3928   .text.hals_irda_interrupt_flag_get:00000000 hals_irda_interrupt_flag_get
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4017   .text.hals_irda_interrupt_flag_clear:00000000 hals_irda_interrupt_flag_clear
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:754    .text.hal_irda_irq:000001cc $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:766    .text.hal_irda_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:773    .text.hal_irda_irq_handle_set:00000000 hal_irda_irq_handle_set
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3804   .text.hals_irda_interrupt_enable:00000000 hals_irda_interrupt_enable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3865   .text.hals_irda_interrupt_disable:00000000 hals_irda_interrupt_disable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:938    .text.hal_irda_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:945    .text.hal_irda_irq_handle_all_reset:00000000 hal_irda_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:991    .text.hal_irda_transmit_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:998    .text.hal_irda_transmit_poll:00000000 hal_irda_transmit_poll
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3688   .text.hals_irda_flag_get:00000000 hals_irda_flag_get
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3147   .text.hals_irda_data_transmit:00000000 hals_irda_data_transmit
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1250   .text.hal_irda_receive_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1257   .text.hal_irda_receive_poll:00000000 hal_irda_receive_poll
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3195   .text.hals_irda_data_receive:00000000 hals_irda_data_receive
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1490   .text.hal_irda_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1497   .text.hal_irda_transmit_interrupt:00000000 hal_irda_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1601   .text.hal_irda_transmit_interrupt:00000094 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4292   .text._irda_transmit_interrupt:00000000 _irda_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4227   .text._irda_transmit_complete_interrupt:00000000 _irda_transmit_complete_interrupt
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1608   .text.hal_irda_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1615   .text.hal_irda_receive_interrupt:00000000 hal_irda_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1729   .text.hal_irda_receive_interrupt:000000ac $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4428   .text._irda_receive_interrupt:00000000 _irda_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1734   .text.hal_irda_transmit_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1741   .text.hal_irda_transmit_dma:00000000 hal_irda_transmit_dma
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3527   .text.hals_irda_dma_transmit_config:00000000 hals_irda_dma_transmit_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1933   .text.hal_irda_transmit_dma:00000110 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4582   .text._irda_transmit_dma:00000000 _irda_transmit_dma
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4767   .text._irda_dma_error:00000000 _irda_dma_error
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1941   .text.hal_irda_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:1948   .text.hal_irda_receive_dma:00000000 hal_irda_receive_dma
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3468   .text.hals_irda_dma_receive_config:00000000 hals_irda_dma_receive_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2150   .text.hal_irda_receive_dma:00000128 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4662   .text._irda_receive_dma:00000000 _irda_receive_dma
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2156   .text.hal_irda_dma_pause:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2163   .text.hal_irda_dma_pause:00000000 hal_irda_dma_pause
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2250   .text.hal_irda_dma_resume:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2257   .text.hal_irda_dma_resume:00000000 hal_irda_dma_resume
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2344   .text.hal_irda_transmit_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2351   .text.hal_irda_transmit_stop:00000000 hal_irda_transmit_stop
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2429   .text.hal_irda_receive_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2436   .text.hal_irda_receive_stop:00000000 hal_irda_receive_stop
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2543   .text.hal_irda_receive_stop:000000ac $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2551   .text.hals_irda_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2614   .text.hals_irda_deinit:00000048 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2620   .text.hals_irda_baudrate_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2770   .text.hals_irda_baudrate_set:000000c4 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2776   .text.hals_irda_parity_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2783   .text.hals_irda_parity_config:00000000 hals_irda_parity_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2833   .text.hals_irda_word_length_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2840   .text.hals_irda_word_length_set:00000000 hals_irda_word_length_set
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2890   .text.hals_irda_stop_bit_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2897   .text.hals_irda_stop_bit_set:00000000 hals_irda_stop_bit_set
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2952   .text.hals_irda_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:2995   .text.hals_irda_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3038   .text.hals_irda_transmit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3045   .text.hals_irda_transmit_config:00000000 hals_irda_transmit_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3089   .text.hals_irda_receive_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3096   .text.hals_irda_receive_config:00000000 hals_irda_receive_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3140   .text.hals_irda_data_transmit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3188   .text.hals_irda_data_receive:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3233   .text.hals_irda_mode_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3284   .text.hals_irda_mode_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3291   .text.hals_irda_mode_disable:00000000 hals_irda_mode_disable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3335   .text.hals_irda_prescaler_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3342   .text.hals_irda_prescaler_config:00000000 hals_irda_prescaler_config
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3397   .text.hals_irda_lowpower_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3461   .text.hals_irda_dma_receive_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3520   .text.hals_irda_dma_transmit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3579   .text.hals_irda_reception_error_dma_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3586   .text.hals_irda_reception_error_dma_enable:00000000 hals_irda_reception_error_dma_enable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3630   .text.hals_irda_reception_error_dma_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3637   .text.hals_irda_reception_error_dma_disable:00000000 hals_irda_reception_error_dma_disable
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3681   .text.hals_irda_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3744   .text.hals_irda_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3751   .text.hals_irda_flag_clear:00000000 hals_irda_flag_clear
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3797   .text.hals_irda_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3858   .text.hals_irda_interrupt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:3921   .text.hals_irda_interrupt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4010   .text.hals_irda_interrupt_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4079   .text.hals_irda_interrupt_flag_clear:0000004c $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4084   .text._irda_data_bit_mask_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4168   .text._irda_error_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4221   .text._irda_transmit_complete_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4286   .text._irda_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4422   .text._irda_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4576   .text._irda_transmit_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4651   .text._irda_transmit_dma:00000058 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4656   .text._irda_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4756   .text._irda_receive_dma:00000080 $d
C:\Users\peter\AppData\Local\Temp\ccbwDGEd.s:4761   .text._irda_dma_error:00000000 $t
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
hal_dma_start_interrupt
hal_dma_stop
hal_rcu_periph_reset_enable
hal_rcu_periph_reset_disable
hals_rcu_clock_freq_get
