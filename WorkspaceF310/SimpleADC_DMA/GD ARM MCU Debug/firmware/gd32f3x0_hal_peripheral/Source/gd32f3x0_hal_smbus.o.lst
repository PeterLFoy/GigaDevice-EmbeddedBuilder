   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_smbus.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hal_smbus_struct_init,"ax",%progbits
  16              		.align	1
  17              		.global	hal_smbus_struct_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hal_smbus_struct_init:
  25              	.LFB119:
  26              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \file    gd32f3x0_hal_smbus.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief   SMBUS driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     All rights reserved.
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     Redistribution and use in source and binary forms, with or without modification,
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** are permitted provided that the following conditions are met:
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     1. Redistributions of source code must retain the above copyright notice, this
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****        list of conditions and the following disclaimer.
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****        this list of conditions and the following disclaimer in the documentation
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****        and/or other materials provided with the distribution.
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****        may be used to endorse or promote products derived from this software without
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****        specific prior written permission.
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** OF SUCH DAMAGE.
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #include "gd32f3x0_hal.h"
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /* wait the flag status until timeout */
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static int32_t _smbus_wait_flag_timeout(uint32_t smbus_periph, i2c_flag_enum flag, \
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                                         FlagStatus status, uint32_t timeout_ms);
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /* event handler in SMBUS master transmit mode */
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_master_transmit_interrupt(void *smbus);
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /* event handler in SMBUS slave transmit mode */
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_slave_transmit_interrupt(void *smbus);
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /* event handler in SMBUS master receive mode */
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_master_receive_interrupt(void *smbus);
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /* event handler in SMBUS slave receive mode */
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_slave_receive_interrupt(void *smbus);
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      initialize the SMBUS structure with the default values
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  struct_type: refer to hal_smbus_struct_type_enum
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_struct: point to SMBUS structure that contains the configuration information
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_struct_init(hal_smbus_struct_type_enum hal_struct_type, void *p_struct)
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
  27              		.loc 1 59 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 3960     		str	r1, [r7]
  41 000a FB71     		strb	r3, [r7, #7]
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == p_struct) {
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [*p_struct] value is invalid");
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     switch(hal_struct_type) {
  42              		.loc 1 66 5
  43 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  44 000e 022B     		cmp	r3, #2
  45 0010 59D0     		beq	.L2
  46 0012 022B     		cmp	r3, #2
  47 0014 5EDC     		bgt	.L7
  48 0016 002B     		cmp	r3, #0
  49 0018 02D0     		beq	.L4
  50 001a 012B     		cmp	r3, #1
  51 001c 1FD0     		beq	.L5
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     case HAL_SMBUS_INIT_STRUCT:
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* initialize SMBUS initialization structure with the default values */
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->own_address1 = 0;
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->own_address2 = 0;
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->dual_address = SMBUS_DUADEN_DISABLE;
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->clock_speed = 100000;
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->address_format = SMBUS_ADDFORMAT_7BITS;
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->smbus_type = SMBUS_DEVICE;
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->smbus_pec = SMBUS_PEC_DISABLE;
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->smbus_arp = SMBUS_ARP_DISABLE;
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->general_call = SMBUS_GCEN_DISABLE;
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->no_stretch = SMBUS_SCLSTRETCH_DISABLE;
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         break;
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     case HAL_SMBUS_DEV_STRUCT:
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* initialize SMBUS device information structure with the default values */
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->periph = 0;
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->smbus_irq.event_handle = NULL;
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->smbus_irq.error_handle = NULL;
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->txbuffer.buffer = NULL;
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->txbuffer.length = 0;
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->txbuffer.pos = 0;
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rxbuffer.buffer = NULL;
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rxbuffer.length = 0;
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rxbuffer.pos = 0;
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->smbus_pec_transfer = SMBUS_PECTRANS_DISABLE;
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->error_state = HAL_SMBUS_ERROR_NONE;
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->tx_state = HAL_SMBUS_STATE_FREE;
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rx_state = HAL_SMBUS_STATE_FREE;
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->last_error = HAL_SMBUS_ERROR_NONE;
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->priv = NULL;     /* priv data */
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->mutex = HAL_MUTEX_UNLOCKED;
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         break;
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     case HAL_SMBUS_IRQ_STRUCT:
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* initialize SMBS irq structure with the default values */
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_irq_struct *)p_struct)->error_handle = NULL;
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_irq_struct *)p_struct)->event_handle = NULL;
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         break;
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     default:
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGW("parameter [hal_struct_type] value is undefine");
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         break;
  52              		.loc 1 112 9
  53 001e 59E0     		b	.L7
  54              	.L4:
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->own_address2 = 0;
  55              		.loc 1 69 59
  56 0020 3B68     		ldr	r3, [r7]
  57 0022 0022     		movs	r2, #0
  58 0024 9A60     		str	r2, [r3, #8]
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->dual_address = SMBUS_DUADEN_DISABLE;
  59              		.loc 1 70 59
  60 0026 3B68     		ldr	r3, [r7]
  61 0028 0022     		movs	r2, #0
  62 002a 1A61     		str	r2, [r3, #16]
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->clock_speed = 100000;
  63              		.loc 1 71 59
  64 002c 3B68     		ldr	r3, [r7]
  65 002e 0022     		movs	r2, #0
  66 0030 DA60     		str	r2, [r3, #12]
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->address_format = SMBUS_ADDFORMAT_7BITS;
  67              		.loc 1 72 58
  68 0032 3B68     		ldr	r3, [r7]
  69 0034 2A4A     		ldr	r2, .L8
  70 0036 1A60     		str	r2, [r3]
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->smbus_type = SMBUS_DEVICE;
  71              		.loc 1 73 61
  72 0038 3B68     		ldr	r3, [r7]
  73 003a 0022     		movs	r2, #0
  74 003c 5A60     		str	r2, [r3, #4]
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->smbus_pec = SMBUS_PEC_DISABLE;
  75              		.loc 1 74 57
  76 003e 3B68     		ldr	r3, [r7]
  77 0040 0022     		movs	r2, #0
  78 0042 5A61     		str	r2, [r3, #20]
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->smbus_arp = SMBUS_ARP_DISABLE;
  79              		.loc 1 75 56
  80 0044 3B68     		ldr	r3, [r7]
  81 0046 0022     		movs	r2, #0
  82 0048 9A61     		str	r2, [r3, #24]
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->general_call = SMBUS_GCEN_DISABLE;
  83              		.loc 1 76 56
  84 004a 3B68     		ldr	r3, [r7]
  85 004c 0022     		movs	r2, #0
  86 004e DA61     		str	r2, [r3, #28]
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_init_struct *)p_struct)->no_stretch = SMBUS_SCLSTRETCH_DISABLE;
  87              		.loc 1 77 59
  88 0050 3B68     		ldr	r3, [r7]
  89 0052 0022     		movs	r2, #0
  90 0054 1A62     		str	r2, [r3, #32]
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  91              		.loc 1 78 57
  92 0056 3B68     		ldr	r3, [r7]
  93 0058 8022     		movs	r2, #128
  94 005a 5A62     		str	r2, [r3, #36]
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
  95              		.loc 1 80 9
  96 005c 3BE0     		b	.L6
  97              	.L5:
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->smbus_irq.event_handle = NULL;
  98              		.loc 1 84 52
  99 005e 3B68     		ldr	r3, [r7]
 100 0060 0022     		movs	r2, #0
 101 0062 1A60     		str	r2, [r3]
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->smbus_irq.error_handle = NULL;
 102              		.loc 1 85 68
 103 0064 3B68     		ldr	r3, [r7]
 104 0066 0022     		movs	r2, #0
 105 0068 9A60     		str	r2, [r3, #8]
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->txbuffer.buffer = NULL;
 106              		.loc 1 86 68
 107 006a 3B68     		ldr	r3, [r7]
 108 006c 0022     		movs	r2, #0
 109 006e DA60     		str	r2, [r3, #12]
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->txbuffer.length = 0;
 110              		.loc 1 87 61
 111 0070 3B68     		ldr	r3, [r7]
 112 0072 0022     		movs	r2, #0
 113 0074 1A61     		str	r2, [r3, #16]
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->txbuffer.pos = 0;
 114              		.loc 1 88 61
 115 0076 3B68     		ldr	r3, [r7]
 116 0078 0022     		movs	r2, #0
 117 007a 5A61     		str	r2, [r3, #20]
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rxbuffer.buffer = NULL;
 118              		.loc 1 89 58
 119 007c 3B68     		ldr	r3, [r7]
 120 007e 0022     		movs	r2, #0
 121 0080 9A61     		str	r2, [r3, #24]
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rxbuffer.length = 0;
 122              		.loc 1 90 61
 123 0082 3B68     		ldr	r3, [r7]
 124 0084 0022     		movs	r2, #0
 125 0086 DA61     		str	r2, [r3, #28]
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rxbuffer.pos = 0;
 126              		.loc 1 91 61
 127 0088 3B68     		ldr	r3, [r7]
 128 008a 0022     		movs	r2, #0
 129 008c 1A62     		str	r2, [r3, #32]
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->smbus_pec_transfer = SMBUS_PECTRANS_DISABLE;
 130              		.loc 1 92 58
 131 008e 3B68     		ldr	r3, [r7]
 132 0090 0022     		movs	r2, #0
 133 0092 5A62     		str	r2, [r3, #36]
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->error_state = HAL_SMBUS_ERROR_NONE;
 134              		.loc 1 93 64
 135 0094 3B68     		ldr	r3, [r7]
 136 0096 0022     		movs	r2, #0
 137 0098 9A62     		str	r2, [r3, #40]
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->tx_state = HAL_SMBUS_STATE_FREE;
 138              		.loc 1 94 57
 139 009a 3B68     		ldr	r3, [r7]
 140 009c 0022     		movs	r2, #0
 141 009e 1A63     		str	r2, [r3, #48]
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->rx_state = HAL_SMBUS_STATE_FREE;
 142              		.loc 1 95 54
 143 00a0 3B68     		ldr	r3, [r7]
 144 00a2 0122     		movs	r2, #1
 145 00a4 83F83420 		strb	r2, [r3, #52]
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->last_error = HAL_SMBUS_ERROR_NONE;
 146              		.loc 1 96 54
 147 00a8 3B68     		ldr	r3, [r7]
 148 00aa 0122     		movs	r2, #1
 149 00ac 83F83520 		strb	r2, [r3, #53]
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->priv = NULL;     /* priv data */
 150              		.loc 1 97 56
 151 00b0 3B68     		ldr	r3, [r7]
 152 00b2 0022     		movs	r2, #0
 153 00b4 9A85     		strh	r2, [r3, #44]	@ movhi
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_dev_struct *)p_struct)->mutex = HAL_MUTEX_UNLOCKED;
 154              		.loc 1 98 50
 155 00b6 3B68     		ldr	r3, [r7]
 156 00b8 0022     		movs	r2, #0
 157 00ba 1A64     		str	r2, [r3, #64]
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 158              		.loc 1 99 51
 159 00bc 3B68     		ldr	r3, [r7]
 160 00be 0022     		movs	r2, #0
 161 00c0 83F84420 		strb	r2, [r3, #68]
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 162              		.loc 1 101 9
 163 00c4 07E0     		b	.L6
 164              	.L2:
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         ((hal_smbus_irq_struct *)p_struct)->event_handle = NULL;
 165              		.loc 1 105 58
 166 00c6 3B68     		ldr	r3, [r7]
 167 00c8 0022     		movs	r2, #0
 168 00ca 5A60     		str	r2, [r3, #4]
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 169              		.loc 1 106 58
 170 00cc 3B68     		ldr	r3, [r7]
 171 00ce 0022     		movs	r2, #0
 172 00d0 1A60     		str	r2, [r3]
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 173              		.loc 1 108 9
 174 00d2 00E0     		b	.L6
 175              	.L7:
 176              		.loc 1 112 9
 177 00d4 00BF     		nop
 178              	.L6:
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 179              		.loc 1 114 1
 180 00d6 00BF     		nop
 181 00d8 0C37     		adds	r7, r7, #12
 182              		.cfi_def_cfa_offset 4
 183 00da BD46     		mov	sp, r7
 184              		.cfi_def_cfa_register 13
 185              		@ sp needed
 186 00dc 80BC     		pop	{r7}
 187              		.cfi_restore 7
 188              		.cfi_def_cfa_offset 0
 189 00de 7047     		bx	lr
 190              	.L9:
 191              		.align	2
 192              	.L8:
 193 00e0 A0860100 		.word	100000
 194              		.cfi_endproc
 195              	.LFE119:
 197              		.section	.text.hal_smbus_deinit,"ax",%progbits
 198              		.align	1
 199              		.global	hal_smbus_deinit
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	hal_smbus_deinit:
 206              	.LFB120:
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      deinitialize SMBUS
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_deinit(hal_smbus_dev_struct *smbus_dev)
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 207              		.loc 1 125 1
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 16
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 80B5     		push	{r7, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 84B0     		sub	sp, sp, #16
 216              		.cfi_def_cfa_offset 24
 217 0004 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
 219 0006 7860     		str	r0, [r7, #4]
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t periph;
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* check the parameters */
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == smbus_dev) {
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] address is invalid");
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     periph = smbus_dev->periph;
 220              		.loc 1 135 12
 221 0008 7B68     		ldr	r3, [r7, #4]
 222 000a 1B68     		ldr	r3, [r3]
 223 000c FB60     		str	r3, [r7, #12]
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(I2C0 == periph) {
 224              		.loc 1 136 7
 225 000e FB68     		ldr	r3, [r7, #12]
 226 0010 144A     		ldr	r2, .L14
 227 0012 9342     		cmp	r3, r2
 228 0014 0FD1     		bne	.L11
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_rcu_periph_reset_enable(RCU_I2C0RST);
 229              		.loc 1 137 9
 230 0016 40F21540 		movw	r0, #1045
 231 001a FFF7FEFF 		bl	hal_rcu_periph_reset_enable
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_rcu_periph_reset_disable(RCU_I2C0RST);
 232              		.loc 1 138 9
 233 001e 40F21540 		movw	r0, #1045
 234 0022 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_smbus_struct_init(HAL_SMBUS_DEV_STRUCT, smbus_dev);
 235              		.loc 1 140 9
 236 0026 7968     		ldr	r1, [r7, #4]
 237 0028 0120     		movs	r0, #1
 238 002a FFF7FEFF 		bl	hal_smbus_struct_init
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->periph = periph;
 239              		.loc 1 141 27
 240 002e 7B68     		ldr	r3, [r7, #4]
 241 0030 FA68     		ldr	r2, [r7, #12]
 242 0032 1A60     		str	r2, [r3]
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(I2C1 == periph) {
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_rcu_periph_reset_enable(RCU_I2C1RST);
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_rcu_periph_reset_disable(RCU_I2C1RST);
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_smbus_struct_init(HAL_SMBUS_DEV_STRUCT, smbus_dev);
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->periph = periph;
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [smbus_dev->periph] value is invalid");
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 243              		.loc 1 151 1
 244 0034 12E0     		b	.L13
 245              	.L11:
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(I2C1 == periph) {
 246              		.loc 1 142 14
 247 0036 FB68     		ldr	r3, [r7, #12]
 248 0038 0B4A     		ldr	r2, .L14+4
 249 003a 9342     		cmp	r3, r2
 250 003c 0ED1     		bne	.L13
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_rcu_periph_reset_disable(RCU_I2C1RST);
 251              		.loc 1 143 9
 252 003e 40F21640 		movw	r0, #1046
 253 0042 FFF7FEFF 		bl	hal_rcu_periph_reset_enable
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 254              		.loc 1 144 9
 255 0046 40F21640 		movw	r0, #1046
 256 004a FFF7FEFF 		bl	hal_rcu_periph_reset_disable
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->periph = periph;
 257              		.loc 1 146 9
 258 004e 7968     		ldr	r1, [r7, #4]
 259 0050 0120     		movs	r0, #1
 260 0052 FFF7FEFF 		bl	hal_smbus_struct_init
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 261              		.loc 1 147 27
 262 0056 7B68     		ldr	r3, [r7, #4]
 263 0058 FA68     		ldr	r2, [r7, #12]
 264 005a 1A60     		str	r2, [r3]
 265              	.L13:
 266              		.loc 1 151 1
 267 005c 00BF     		nop
 268 005e 1037     		adds	r7, r7, #16
 269              		.cfi_def_cfa_offset 8
 270 0060 BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0062 80BD     		pop	{r7, pc}
 274              	.L15:
 275              		.align	2
 276              	.L14:
 277 0064 00540040 		.word	1073763328
 278 0068 00580040 		.word	1073764352
 279              		.cfi_endproc
 280              	.LFE120:
 282              		.section	.text.hal_smbus_init,"ax",%progbits
 283              		.align	1
 284              		.global	hal_smbus_init
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu softvfp
 290              	hal_smbus_init:
 291              	.LFB121:
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      initialize SMBUS
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  periph: specify which SMBUS is initialized
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_init: the initialization data needed to initialize SMBUS
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   own_address1: SMBUS address
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   own_address2: the second address in dual-address mode
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   clock_speed: SMBUS clock speed, supports standard mode (up to 100 kHz)
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   address_format: SMBUS_ADDFORMAT_7BITS, SMBUS_ADDFORMAT_10BITS
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   smbus_type: SMBUS_DEVICE, SMBUS_HOST
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   dual_address: SMBUS_DUADEN_ENABLE, SMBUS_DUADEN_DISABLE
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   smbus_pec: SMBUS_PEC_ENABLE, SMBUS_PEC_DISABLE
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   smbus_arp: SMBUS_ARP_ENABLE, SMBUS_ARP_DISABLE
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   general_call: SMBUS_GCEN_ENABLE, SMBUS_GCEN_DISABLE
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   no_stretch: SMBUS_SCLSTRETCH_ENABLE, SMBUS_SCLSTRETCH_DISABLE
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_VAL, HAL_ERR_ADDRESS, details refer to gd32f3x0_h
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_init(hal_smbus_dev_struct *smbus_dev, uint32_t periph, \
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                        hal_smbus_init_struct *smbus_init)
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 292              		.loc 1 175 1
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 16
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 84B0     		sub	sp, sp, #16
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 F860     		str	r0, [r7, #12]
 305 0008 B960     		str	r1, [r7, #8]
 306 000a 7A60     		str	r2, [r7, #4]
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((NULL == smbus_dev) && (NULL == smbus_init)) {
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] or [p_init] address is invalid");
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((I2C0 != periph) && (I2C1 != periph)) {
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [periph] value is invalid");
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_VAL;
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(0 != smbus_dev->periph) {
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGI("periph value from smbus device struct has been rewrite");
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->periph = periph;
 307              		.loc 1 192 23
 308 000c FB68     		ldr	r3, [r7, #12]
 309 000e BA68     		ldr	r2, [r7, #8]
 310 0010 1A60     		str	r2, [r3]
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* disable peripheral */
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     HAL_I2C_DISABLE(periph);
 311              		.loc 1 195 5
 312 0012 BB68     		ldr	r3, [r7, #8]
 313 0014 1A68     		ldr	r2, [r3]
 314 0016 BB68     		ldr	r3, [r7, #8]
 315 0018 22F00102 		bic	r2, r2, #1
 316 001c 1A60     		str	r2, [r3]
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_clock_config(periph, smbus_init->clock_speed, I2C_DTCY_2);
 317              		.loc 1 197 5
 318 001e 7B68     		ldr	r3, [r7, #4]
 319 0020 1B68     		ldr	r3, [r3]
 320 0022 0022     		movs	r2, #0
 321 0024 1946     		mov	r1, r3
 322 0026 B868     		ldr	r0, [r7, #8]
 323 0028 FFF7FEFF 		bl	hals_i2c_clock_config
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_init->own_address1 = smbus_init->own_address1 << 1;
 324              		.loc 1 199 42
 325 002c 7B68     		ldr	r3, [r7, #4]
 326 002e 9B68     		ldr	r3, [r3, #8]
 327              		.loc 1 199 57
 328 0030 5A00     		lsls	r2, r3, #1
 329              		.loc 1 199 30
 330 0032 7B68     		ldr	r3, [r7, #4]
 331 0034 9A60     		str	r2, [r3, #8]
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_mode_addr_config(periph, I2C_SMBUSMODE_ENABLE, smbus_init->address_format, smbus_init-
 332              		.loc 1 200 5
 333 0036 7B68     		ldr	r3, [r7, #4]
 334 0038 5A68     		ldr	r2, [r3, #4]
 335 003a 7B68     		ldr	r3, [r7, #4]
 336 003c 9B68     		ldr	r3, [r3, #8]
 337 003e 0221     		movs	r1, #2
 338 0040 B868     		ldr	r0, [r7, #8]
 339 0042 FFF7FEFF 		bl	hals_i2c_mode_addr_config
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* configure dual-address mode */
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(SMBUS_DUADEN_ENABLE == smbus_init->dual_address) {
 340              		.loc 1 203 41
 341 0046 7B68     		ldr	r3, [r7, #4]
 342 0048 DB68     		ldr	r3, [r3, #12]
 343              		.loc 1 203 7
 344 004a 012B     		cmp	r3, #1
 345 004c 0BD1     		bne	.L17
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_init->own_address2 = smbus_init->own_address2 << 1;
 346              		.loc 1 204 46
 347 004e 7B68     		ldr	r3, [r7, #4]
 348 0050 1B69     		ldr	r3, [r3, #16]
 349              		.loc 1 204 61
 350 0052 5A00     		lsls	r2, r3, #1
 351              		.loc 1 204 34
 352 0054 7B68     		ldr	r3, [r7, #4]
 353 0056 1A61     		str	r2, [r3, #16]
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_dualaddr_enable(periph, smbus_init->own_address2);
 354              		.loc 1 205 9
 355 0058 7B68     		ldr	r3, [r7, #4]
 356 005a 1B69     		ldr	r3, [r3, #16]
 357 005c 1946     		mov	r1, r3
 358 005e B868     		ldr	r0, [r7, #8]
 359 0060 FFF7FEFF 		bl	hals_i2c_dualaddr_enable
 360 0064 02E0     		b	.L18
 361              	.L17:
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_dualaddr_disable(periph);
 362              		.loc 1 207 9
 363 0066 B868     		ldr	r0, [r7, #8]
 364 0068 FFF7FEFF 		bl	hals_i2c_dualaddr_disable
 365              	.L18:
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* configure whether to stretch SCL low when data is not ready in slave mode */
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_stretch_scl_low_config(periph, smbus_init->no_stretch);
 366              		.loc 1 210 5
 367 006c 7B68     		ldr	r3, [r7, #4]
 368 006e 5B6A     		ldr	r3, [r3, #36]
 369 0070 1946     		mov	r1, r3
 370 0072 B868     		ldr	r0, [r7, #8]
 371 0074 FFF7FEFF 		bl	hals_i2c_stretch_scl_low_config
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* whether or not to response to a general call */
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_slave_response_to_gcall_config(periph, smbus_init->general_call);
 372              		.loc 1 212 5
 373 0078 7B68     		ldr	r3, [r7, #4]
 374 007a 1B6A     		ldr	r3, [r3, #32]
 375 007c 1946     		mov	r1, r3
 376 007e B868     		ldr	r0, [r7, #8]
 377 0080 FFF7FEFF 		bl	hals_i2c_slave_response_to_gcall_config
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_smbus_type_config(periph, smbus_init->smbus_type);
 378              		.loc 1 214 5
 379 0084 7B68     		ldr	r3, [r7, #4]
 380 0086 5B69     		ldr	r3, [r3, #20]
 381 0088 1946     		mov	r1, r3
 382 008a B868     		ldr	r0, [r7, #8]
 383 008c FFF7FEFF 		bl	hals_i2c_smbus_type_config
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_pec_config(periph, smbus_init->smbus_pec);
 384              		.loc 1 216 5
 385 0090 7B68     		ldr	r3, [r7, #4]
 386 0092 9B69     		ldr	r3, [r3, #24]
 387 0094 1946     		mov	r1, r3
 388 0096 B868     		ldr	r0, [r7, #8]
 389 0098 FFF7FEFF 		bl	hals_i2c_pec_config
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_smbus_arp_enable(periph, smbus_init->smbus_arp);
 390              		.loc 1 218 5
 391 009c 7B68     		ldr	r3, [r7, #4]
 392 009e DB69     		ldr	r3, [r3, #28]
 393 00a0 1946     		mov	r1, r3
 394 00a2 B868     		ldr	r0, [r7, #8]
 395 00a4 FFF7FEFF 		bl	hals_i2c_smbus_arp_enable
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* enable peripheral */
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     HAL_I2C_ENABLE(periph);
 396              		.loc 1 221 5
 397 00a8 BB68     		ldr	r3, [r7, #8]
 398 00aa 1A68     		ldr	r2, [r3]
 399 00ac BB68     		ldr	r3, [r7, #8]
 400 00ae 42F00102 		orr	r2, r2, #1
 401 00b2 1A60     		str	r2, [r3]
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* enable acknowledge */
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_ack_config(periph, SMBUS_ACK_ENABLE);
 402              		.loc 1 223 5
 403 00b4 4FF48061 		mov	r1, #1024
 404 00b8 B868     		ldr	r0, [r7, #8]
 405 00ba FFF7FEFF 		bl	hals_i2c_ack_config
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->tx_state = HAL_SMBUS_STATE_READY;
 406              		.loc 1 225 25
 407 00be FB68     		ldr	r3, [r7, #12]
 408 00c0 0022     		movs	r2, #0
 409 00c2 83F83420 		strb	r2, [r3, #52]
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rx_state = HAL_SMBUS_STATE_READY;
 410              		.loc 1 226 25
 411 00c6 FB68     		ldr	r3, [r7, #12]
 412 00c8 0022     		movs	r2, #0
 413 00ca 83F83520 		strb	r2, [r3, #53]
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     return HAL_ERR_NONE;
 414              		.loc 1 228 12
 415 00ce 0023     		movs	r3, #0
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 416              		.loc 1 229 1
 417 00d0 1846     		mov	r0, r3
 418 00d2 1037     		adds	r7, r7, #16
 419              		.cfi_def_cfa_offset 8
 420 00d4 BD46     		mov	sp, r7
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 00d6 80BD     		pop	{r7, pc}
 424              		.cfi_endproc
 425              	.LFE121:
 427              		.section	.text.hal_smbus_enable_alert_interrupt,"ax",%progbits
 428              		.align	1
 429              		.global	hal_smbus_enable_alert_interrupt
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	hal_smbus_enable_alert_interrupt:
 436              	.LFB122:
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      Enable the SMBUS alert mode with Interrupt.
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, details refer to gd32f3x0_hal.h
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_enable_alert_interrupt(hal_smbus_dev_struct *smbus_dev)
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 437              		.loc 1 240 1
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0000 80B5     		push	{r7, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 82B0     		sub	sp, sp, #8
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 7860     		str	r0, [r7, #4]
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* check the parameters */
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == smbus_dev) {
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] address is invalid");
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* Enable SMBus alert */
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_smbus_alert_config(smbus_dev->periph, I2C_SALTSEND_ENABLE);
 450              		.loc 1 250 5
 451 0008 7B68     		ldr	r3, [r7, #4]
 452 000a 1B68     		ldr	r3, [r3]
 453 000c 4FF40051 		mov	r1, #8192
 454 0010 1846     		mov	r0, r3
 455 0012 FFF7FEFF 		bl	hals_i2c_smbus_alert_config
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* Clear ALERT flag */
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_flag_clear(smbus_dev->periph, I2C_FLAG_SMBALT);
 456              		.loc 1 253 5
 457 0016 7B68     		ldr	r3, [r7, #4]
 458 0018 1B68     		ldr	r3, [r3]
 459 001a 40F20F51 		movw	r1, #1295
 460 001e 1846     		mov	r0, r3
 461 0020 FFF7FEFF 		bl	hals_i2c_flag_clear
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* Enable Alert Interrupt */
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_ERR);
 462              		.loc 1 256 5
 463 0024 7B68     		ldr	r3, [r7, #4]
 464 0026 1B68     		ldr	r3, [r3]
 465 0028 4FF48471 		mov	r1, #264
 466 002c 1846     		mov	r0, r3
 467 002e FFF7FEFF 		bl	hals_i2c_interrupt_enable
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     return HAL_ERR_NONE;
 468              		.loc 1 258 12
 469 0032 0023     		movs	r3, #0
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 470              		.loc 1 259 1
 471 0034 1846     		mov	r0, r3
 472 0036 0837     		adds	r7, r7, #8
 473              		.cfi_def_cfa_offset 8
 474 0038 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 003a 80BD     		pop	{r7, pc}
 478              		.cfi_endproc
 479              	.LFE122:
 481              		.section	.text.hal_smbus_event_irq,"ax",%progbits
 482              		.align	1
 483              		.global	hal_smbus_event_irq
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu softvfp
 489              	hal_smbus_event_irq:
 490              	.LFB123:
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      SMBUS evevt interrupt handler
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_event_irq(hal_smbus_dev_struct *smbus_dev)
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 491              		.loc 1 270 1
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 8
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 82B0     		sub	sp, sp, #8
 500              		.cfi_def_cfa_offset 16
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 503 0006 7860     		str	r0, [r7, #4]
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(smbus_dev->smbus_irq.event_handle != NULL) {
 504              		.loc 1 271 28
 505 0008 7B68     		ldr	r3, [r7, #4]
 506 000a 9B68     		ldr	r3, [r3, #8]
 507              		.loc 1 271 7
 508 000c 002B     		cmp	r3, #0
 509 000e 03D0     		beq	.L24
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle(smbus_dev);
 510              		.loc 1 272 29
 511 0010 7B68     		ldr	r3, [r7, #4]
 512 0012 9B68     		ldr	r3, [r3, #8]
 513              		.loc 1 272 9
 514 0014 7868     		ldr	r0, [r7, #4]
 515 0016 9847     		blx	r3
 516              	.LVL0:
 517              	.L24:
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 518              		.loc 1 274 1
 519 0018 00BF     		nop
 520 001a 0837     		adds	r7, r7, #8
 521              		.cfi_def_cfa_offset 8
 522 001c BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 001e 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE123:
 529              		.section	.text.hal_smbus_error_irq,"ax",%progbits
 530              		.align	1
 531              		.global	hal_smbus_error_irq
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu softvfp
 537              	hal_smbus_error_irq:
 538              	.LFB124:
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      SMBUS error interrupt handler
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_error_irq(hal_smbus_dev_struct *smbus_dev)
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 539              		.loc 1 285 1
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 7860     		str	r0, [r7, #4]
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* PEC error */
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_PECERR) != RESET) {
 552              		.loc 1 287 8
 553 0008 7B68     		ldr	r3, [r7, #4]
 554 000a 1B68     		ldr	r3, [r3]
 555 000c 5C49     		ldr	r1, .L35
 556 000e 1846     		mov	r0, r3
 557 0010 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 558 0014 0346     		mov	r3, r0
 559              		.loc 1 287 7
 560 0016 002B     		cmp	r3, #0
 561 0018 0ED0     		beq	.L26
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_PECERR);
 562              		.loc 1 288 9
 563 001a 7B68     		ldr	r3, [r7, #4]
 564 001c 1B68     		ldr	r3, [r3]
 565 001e 5849     		ldr	r1, .L35
 566 0020 1846     		mov	r0, r3
 567 0022 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_PECERR;
 568              		.loc 1 289 32
 569 0026 7B68     		ldr	r3, [r7, #4]
 570 0028 1B6B     		ldr	r3, [r3, #48]
 571 002a 43F04002 		orr	r2, r3, #64
 572 002e 7B68     		ldr	r3, [r7, #4]
 573 0030 1A63     		str	r2, [r3, #48]
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_PECERR;
 574              		.loc 1 290 31
 575 0032 7B68     		ldr	r3, [r7, #4]
 576 0034 4022     		movs	r2, #64
 577 0036 9A85     		strh	r2, [r3, #44]	@ movhi
 578              	.L26:
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* BERR error */
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_BERR) != RESET) {
 579              		.loc 1 294 8
 580 0038 7B68     		ldr	r3, [r7, #4]
 581 003a 1B68     		ldr	r3, [r3]
 582 003c 5149     		ldr	r1, .L35+4
 583 003e 1846     		mov	r0, r3
 584 0040 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 585 0044 0346     		mov	r3, r0
 586              		.loc 1 294 7
 587 0046 002B     		cmp	r3, #0
 588 0048 0ED0     		beq	.L27
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_BERR);
 589              		.loc 1 295 9
 590 004a 7B68     		ldr	r3, [r7, #4]
 591 004c 1B68     		ldr	r3, [r3]
 592 004e 4D49     		ldr	r1, .L35+4
 593 0050 1846     		mov	r0, r3
 594 0052 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_BERR;
 595              		.loc 1 296 32
 596 0056 7B68     		ldr	r3, [r7, #4]
 597 0058 1B6B     		ldr	r3, [r3, #48]
 598 005a 43F00102 		orr	r2, r3, #1
 599 005e 7B68     		ldr	r3, [r7, #4]
 600 0060 1A63     		str	r2, [r3, #48]
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_BERR;
 601              		.loc 1 297 31
 602 0062 7B68     		ldr	r3, [r7, #4]
 603 0064 0122     		movs	r2, #1
 604 0066 9A85     		strh	r2, [r3, #44]	@ movhi
 605              	.L27:
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* LOSTARB error */
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_LOSTARB) != RESET) {
 606              		.loc 1 301 8
 607 0068 7B68     		ldr	r3, [r7, #4]
 608 006a 1B68     		ldr	r3, [r3]
 609 006c 4649     		ldr	r1, .L35+8
 610 006e 1846     		mov	r0, r3
 611 0070 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 612 0074 0346     		mov	r3, r0
 613              		.loc 1 301 7
 614 0076 002B     		cmp	r3, #0
 615 0078 0ED0     		beq	.L28
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_LOSTARB);
 616              		.loc 1 302 9
 617 007a 7B68     		ldr	r3, [r7, #4]
 618 007c 1B68     		ldr	r3, [r3]
 619 007e 4249     		ldr	r1, .L35+8
 620 0080 1846     		mov	r0, r3
 621 0082 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_LOSTARB;
 622              		.loc 1 303 32
 623 0086 7B68     		ldr	r3, [r7, #4]
 624 0088 1B6B     		ldr	r3, [r3, #48]
 625 008a 43F00202 		orr	r2, r3, #2
 626 008e 7B68     		ldr	r3, [r7, #4]
 627 0090 1A63     		str	r2, [r3, #48]
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_LOSTARB;
 628              		.loc 1 304 31
 629 0092 7B68     		ldr	r3, [r7, #4]
 630 0094 0222     		movs	r2, #2
 631 0096 9A85     		strh	r2, [r3, #44]	@ movhi
 632              	.L28:
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* AERR error */
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_AERR) != RESET) {
 633              		.loc 1 308 8
 634 0098 7B68     		ldr	r3, [r7, #4]
 635 009a 1B68     		ldr	r3, [r3]
 636 009c 3B49     		ldr	r1, .L35+12
 637 009e 1846     		mov	r0, r3
 638 00a0 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 639 00a4 0346     		mov	r3, r0
 640              		.loc 1 308 7
 641 00a6 002B     		cmp	r3, #0
 642 00a8 0ED0     		beq	.L29
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_AERR);
 643              		.loc 1 309 9
 644 00aa 7B68     		ldr	r3, [r7, #4]
 645 00ac 1B68     		ldr	r3, [r3]
 646 00ae 3749     		ldr	r1, .L35+12
 647 00b0 1846     		mov	r0, r3
 648 00b2 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_AERR;
 649              		.loc 1 310 32
 650 00b6 7B68     		ldr	r3, [r7, #4]
 651 00b8 1B6B     		ldr	r3, [r3, #48]
 652 00ba 43F00402 		orr	r2, r3, #4
 653 00be 7B68     		ldr	r3, [r7, #4]
 654 00c0 1A63     		str	r2, [r3, #48]
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_AERR;
 655              		.loc 1 311 31
 656 00c2 7B68     		ldr	r3, [r7, #4]
 657 00c4 0422     		movs	r2, #4
 658 00c6 9A85     		strh	r2, [r3, #44]	@ movhi
 659              	.L29:
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* OUERR error */
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_OUERR) != RESET) {
 660              		.loc 1 315 8
 661 00c8 7B68     		ldr	r3, [r7, #4]
 662 00ca 1B68     		ldr	r3, [r3]
 663 00cc 3049     		ldr	r1, .L35+16
 664 00ce 1846     		mov	r0, r3
 665 00d0 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 666 00d4 0346     		mov	r3, r0
 667              		.loc 1 315 7
 668 00d6 002B     		cmp	r3, #0
 669 00d8 0ED0     		beq	.L30
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_OUERR);
 670              		.loc 1 316 9
 671 00da 7B68     		ldr	r3, [r7, #4]
 672 00dc 1B68     		ldr	r3, [r3]
 673 00de 2C49     		ldr	r1, .L35+16
 674 00e0 1846     		mov	r0, r3
 675 00e2 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_OUERR;
 676              		.loc 1 317 32
 677 00e6 7B68     		ldr	r3, [r7, #4]
 678 00e8 1B6B     		ldr	r3, [r3, #48]
 679 00ea 43F00802 		orr	r2, r3, #8
 680 00ee 7B68     		ldr	r3, [r7, #4]
 681 00f0 1A63     		str	r2, [r3, #48]
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_OUERR;
 682              		.loc 1 318 31
 683 00f2 7B68     		ldr	r3, [r7, #4]
 684 00f4 0822     		movs	r2, #8
 685 00f6 9A85     		strh	r2, [r3, #44]	@ movhi
 686              	.L30:
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS timeout */
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_SMBTO) != RESET) {
 687              		.loc 1 322 8
 688 00f8 7B68     		ldr	r3, [r7, #4]
 689 00fa 1B68     		ldr	r3, [r3]
 690 00fc 2549     		ldr	r1, .L35+20
 691 00fe 1846     		mov	r0, r3
 692 0100 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 693 0104 0346     		mov	r3, r0
 694              		.loc 1 322 7
 695 0106 002B     		cmp	r3, #0
 696 0108 0ED0     		beq	.L31
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_SMBTO);
 697              		.loc 1 323 9
 698 010a 7B68     		ldr	r3, [r7, #4]
 699 010c 1B68     		ldr	r3, [r3]
 700 010e 2149     		ldr	r1, .L35+20
 701 0110 1846     		mov	r0, r3
 702 0112 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_SMBTO;
 703              		.loc 1 324 32
 704 0116 7B68     		ldr	r3, [r7, #4]
 705 0118 1B6B     		ldr	r3, [r3, #48]
 706 011a 43F01002 		orr	r2, r3, #16
 707 011e 7B68     		ldr	r3, [r7, #4]
 708 0120 1A63     		str	r2, [r3, #48]
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_SMBTO;
 709              		.loc 1 325 31
 710 0122 7B68     		ldr	r3, [r7, #4]
 711 0124 1022     		movs	r2, #16
 712 0126 9A85     		strh	r2, [r3, #44]	@ movhi
 713              	.L31:
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS alert */
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(smbus_dev->periph, I2C_INT_FLAG_SMBALT) != RESET) {
 714              		.loc 1 329 8
 715 0128 7B68     		ldr	r3, [r7, #4]
 716 012a 1B68     		ldr	r3, [r3]
 717 012c 1A49     		ldr	r1, .L35+24
 718 012e 1846     		mov	r0, r3
 719 0130 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 720 0134 0346     		mov	r3, r0
 721              		.loc 1 329 7
 722 0136 002B     		cmp	r3, #0
 723 0138 0ED0     		beq	.L32
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(smbus_dev->periph, I2C_INT_FLAG_SMBALT);
 724              		.loc 1 330 9
 725 013a 7B68     		ldr	r3, [r7, #4]
 726 013c 1B68     		ldr	r3, [r3]
 727 013e 1649     		ldr	r1, .L35+24
 728 0140 1846     		mov	r0, r3
 729 0142 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->error_state |= HAL_SMBUS_ERROR_SMBALT;
 730              		.loc 1 331 32
 731 0146 7B68     		ldr	r3, [r7, #4]
 732 0148 1B6B     		ldr	r3, [r3, #48]
 733 014a 43F02002 		orr	r2, r3, #32
 734 014e 7B68     		ldr	r3, [r7, #4]
 735 0150 1A63     		str	r2, [r3, #48]
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->last_error = HAL_SMBUS_ERROR_SMBALT;
 736              		.loc 1 332 31
 737 0152 7B68     		ldr	r3, [r7, #4]
 738 0154 2022     		movs	r2, #32
 739 0156 9A85     		strh	r2, [r3, #44]	@ movhi
 740              	.L32:
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS no error */
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(smbus_dev->error_state != HAL_SMBUS_ERROR_NONE) {
 741              		.loc 1 336 17
 742 0158 7B68     		ldr	r3, [r7, #4]
 743 015a 1B6B     		ldr	r3, [r3, #48]
 744              		.loc 1 336 7
 745 015c 002B     		cmp	r3, #0
 746 015e 0AD0     		beq	.L34
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(smbus_dev->smbus_irq.error_handle != NULL) {
 747              		.loc 1 337 32
 748 0160 7B68     		ldr	r3, [r7, #4]
 749 0162 DB68     		ldr	r3, [r3, #12]
 750              		.loc 1 337 11
 751 0164 002B     		cmp	r3, #0
 752 0166 06D0     		beq	.L34
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             smbus_dev->smbus_irq.error_handle(smbus_dev);
 753              		.loc 1 338 33
 754 0168 7B68     		ldr	r3, [r7, #4]
 755 016a DB68     		ldr	r3, [r3, #12]
 756              		.loc 1 338 13
 757 016c 7868     		ldr	r0, [r7, #4]
 758 016e 9847     		blx	r3
 759              	.LVL1:
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             smbus_dev->error_state = HAL_SMBUS_ERROR_NONE;
 760              		.loc 1 339 36
 761 0170 7B68     		ldr	r3, [r7, #4]
 762 0172 0022     		movs	r2, #0
 763 0174 1A63     		str	r2, [r3, #48]
 764              	.L34:
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 765              		.loc 1 342 1
 766 0176 00BF     		nop
 767 0178 0837     		adds	r7, r7, #8
 768              		.cfi_def_cfa_offset 8
 769 017a BD46     		mov	sp, r7
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 017c 80BD     		pop	{r7, pc}
 773              	.L36:
 774 017e 00BF     		.align	2
 775              	.L35:
 776 0180 08010C05 		.word	84672776
 777 0184 08010805 		.word	84410632
 778 0188 08010905 		.word	84476168
 779 018c 08010A05 		.word	84541704
 780 0190 08010B05 		.word	84607240
 781 0194 08010E05 		.word	84803848
 782 0198 08010F05 		.word	84869384
 783              		.cfi_endproc
 784              	.LFE124:
 786              		.section	.text.hal_smbus_start,"ax",%progbits
 787              		.align	1
 788              		.global	hal_smbus_start
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu softvfp
 794              	hal_smbus_start:
 795              	.LFB125:
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      start SMBUS module function
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_start(hal_smbus_dev_struct *smbus_dev)
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 796              		.loc 1 353 1
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 8
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 7, -4
 804 0002 83B0     		sub	sp, sp, #12
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 808 0006 7860     		str	r0, [r7, #4]
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* check the parameters */
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == smbus_dev) {
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] address is invalid");
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     HAL_I2C_ENABLE(smbus_dev->periph);
 809              		.loc 1 361 5
 810 0008 7B68     		ldr	r3, [r7, #4]
 811 000a 1B68     		ldr	r3, [r3]
 812 000c 1B68     		ldr	r3, [r3]
 813 000e 7A68     		ldr	r2, [r7, #4]
 814 0010 1268     		ldr	r2, [r2]
 815 0012 43F00103 		orr	r3, r3, #1
 816 0016 1360     		str	r3, [r2]
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 817              		.loc 1 362 1
 818 0018 00BF     		nop
 819 001a 0C37     		adds	r7, r7, #12
 820              		.cfi_def_cfa_offset 4
 821 001c BD46     		mov	sp, r7
 822              		.cfi_def_cfa_register 13
 823              		@ sp needed
 824 001e 80BC     		pop	{r7}
 825              		.cfi_restore 7
 826              		.cfi_def_cfa_offset 0
 827 0020 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE125:
 831              		.section	.text.hal_smbus_stop,"ax",%progbits
 832              		.align	1
 833              		.global	hal_smbus_stop
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu softvfp
 839              	hal_smbus_stop:
 840              	.LFB126:
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      stop SMBUS module function
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_stop(hal_smbus_dev_struct *smbus_dev)
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 841              		.loc 1 373 1
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 8
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846 0000 80B4     		push	{r7}
 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 7, -4
 849 0002 83B0     		sub	sp, sp, #12
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              		.cfi_def_cfa_register 7
 853 0006 7860     		str	r0, [r7, #4]
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* check the parameters */
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == smbus_dev) {
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] address is invalid");
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     HAL_I2C_DISABLE(smbus_dev->periph);
 854              		.loc 1 381 5
 855 0008 7B68     		ldr	r3, [r7, #4]
 856 000a 1B68     		ldr	r3, [r3]
 857 000c 1B68     		ldr	r3, [r3]
 858 000e 7A68     		ldr	r2, [r7, #4]
 859 0010 1268     		ldr	r2, [r2]
 860 0012 23F00103 		bic	r3, r3, #1
 861 0016 1360     		str	r3, [r2]
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 862              		.loc 1 382 1
 863 0018 00BF     		nop
 864 001a 0C37     		adds	r7, r7, #12
 865              		.cfi_def_cfa_offset 4
 866 001c BD46     		mov	sp, r7
 867              		.cfi_def_cfa_register 13
 868              		@ sp needed
 869 001e 80BC     		pop	{r7}
 870              		.cfi_restore 7
 871              		.cfi_def_cfa_offset 0
 872 0020 7047     		bx	lr
 873              		.cfi_endproc
 874              	.LFE126:
 876              		.section	.text.hal_smbus_irq_handle_set,"ax",%progbits
 877              		.align	1
 878              		.global	hal_smbus_irq_handle_set
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu softvfp
 884              	hal_smbus_irq_handle_set:
 885              	.LFB127:
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      set user-defined interrupt callback function,
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 which will be registered and called when corresponding interrupt be triggered
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_irq: the structure that contains callback handlers of SMBUS interrupt
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_irq_handle_set(hal_smbus_dev_struct *smbus_dev, hal_smbus_irq_struct *p_irq)
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 886              		.loc 1 395 1
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 8
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 16
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 899 0008 3960     		str	r1, [r7]
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((NULL == smbus_dev) || (NULL == p_irq)) {
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [smbus_dev] or [p_irq] value is invalid");
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* event handle */
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL != p_irq->event_handle) {
 900              		.loc 1 403 21
 901 000a 3B68     		ldr	r3, [r7]
 902 000c 1B68     		ldr	r3, [r3]
 903              		.loc 1 403 7
 904 000e 002B     		cmp	r3, #0
 905 0010 12D0     		beq	.L40
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle = p_irq->event_handle;
 906              		.loc 1 404 50
 907 0012 3B68     		ldr	r3, [r7]
 908 0014 1A68     		ldr	r2, [r3]
 909              		.loc 1 404 43
 910 0016 7B68     		ldr	r3, [r7, #4]
 911 0018 9A60     		str	r2, [r3, #8]
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_EV);
 912              		.loc 1 405 9
 913 001a 7B68     		ldr	r3, [r7, #4]
 914 001c 1B68     		ldr	r3, [r3]
 915 001e 40F20911 		movw	r1, #265
 916 0022 1846     		mov	r0, r3
 917 0024 FFF7FEFF 		bl	hals_i2c_interrupt_enable
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_BUF);
 918              		.loc 1 406 9
 919 0028 7B68     		ldr	r3, [r7, #4]
 920 002a 1B68     		ldr	r3, [r3]
 921 002c 4FF48571 		mov	r1, #266
 922 0030 1846     		mov	r0, r3
 923 0032 FFF7FEFF 		bl	hals_i2c_interrupt_enable
 924 0036 10E0     		b	.L41
 925              	.L40:
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle = NULL;
 926              		.loc 1 408 43
 927 0038 7B68     		ldr	r3, [r7, #4]
 928 003a 0022     		movs	r2, #0
 929 003c 9A60     		str	r2, [r3, #8]
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(smbus_dev->periph, I2C_INT_EV);
 930              		.loc 1 409 9
 931 003e 7B68     		ldr	r3, [r7, #4]
 932 0040 1B68     		ldr	r3, [r3]
 933 0042 40F20911 		movw	r1, #265
 934 0046 1846     		mov	r0, r3
 935 0048 FFF7FEFF 		bl	hals_i2c_interrupt_disable
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(smbus_dev->periph, I2C_INT_BUF);
 936              		.loc 1 410 9
 937 004c 7B68     		ldr	r3, [r7, #4]
 938 004e 1B68     		ldr	r3, [r3]
 939 0050 4FF48571 		mov	r1, #266
 940 0054 1846     		mov	r0, r3
 941 0056 FFF7FEFF 		bl	hals_i2c_interrupt_disable
 942              	.L41:
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* error handle */
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL != p_irq->error_handle) {
 943              		.loc 1 414 21
 944 005a 3B68     		ldr	r3, [r7]
 945 005c 5B68     		ldr	r3, [r3, #4]
 946              		.loc 1 414 7
 947 005e 002B     		cmp	r3, #0
 948 0060 0BD0     		beq	.L42
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.error_handle = p_irq->error_handle;
 949              		.loc 1 415 50
 950 0062 3B68     		ldr	r3, [r7]
 951 0064 5A68     		ldr	r2, [r3, #4]
 952              		.loc 1 415 43
 953 0066 7B68     		ldr	r3, [r7, #4]
 954 0068 DA60     		str	r2, [r3, #12]
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_ERR);
 955              		.loc 1 416 9
 956 006a 7B68     		ldr	r3, [r7, #4]
 957 006c 1B68     		ldr	r3, [r3]
 958 006e 4FF48471 		mov	r1, #264
 959 0072 1846     		mov	r0, r3
 960 0074 FFF7FEFF 		bl	hals_i2c_interrupt_enable
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.error_handle = NULL;
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(smbus_dev->periph, I2C_INT_ERR);
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 961              		.loc 1 421 1
 962 0078 09E0     		b	.L44
 963              	.L42:
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(smbus_dev->periph, I2C_INT_ERR);
 964              		.loc 1 418 43
 965 007a 7B68     		ldr	r3, [r7, #4]
 966 007c 0022     		movs	r2, #0
 967 007e DA60     		str	r2, [r3, #12]
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 968              		.loc 1 419 9
 969 0080 7B68     		ldr	r3, [r7, #4]
 970 0082 1B68     		ldr	r3, [r3]
 971 0084 4FF48471 		mov	r1, #264
 972 0088 1846     		mov	r0, r3
 973 008a FFF7FEFF 		bl	hals_i2c_interrupt_disable
 974              	.L44:
 975              		.loc 1 421 1
 976 008e 00BF     		nop
 977 0090 0837     		adds	r7, r7, #8
 978              		.cfi_def_cfa_offset 8
 979 0092 BD46     		mov	sp, r7
 980              		.cfi_def_cfa_register 13
 981              		@ sp needed
 982 0094 80BD     		pop	{r7, pc}
 983              		.cfi_endproc
 984              	.LFE127:
 986              		.section	.text.hal_smbus_irq_handle_all_reset,"ax",%progbits
 987              		.align	1
 988              		.global	hal_smbus_irq_handle_all_reset
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 992              		.fpu softvfp
 994              	hal_smbus_irq_handle_all_reset:
 995              	.LFB128:
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      reset all user-defined interrupt callback function,
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 which will be registered and called when corresponding interrupt be triggered
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hal_smbus_irq_handle_all_reset(hal_smbus_dev_struct *smbus_dev)
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 996              		.loc 1 433 1
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001 0000 80B4     		push	{r7}
 1002              		.cfi_def_cfa_offset 4
 1003              		.cfi_offset 7, -4
 1004 0002 83B0     		sub	sp, sp, #12
 1005              		.cfi_def_cfa_offset 16
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* check the parameters */
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == smbus_dev) {
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] address is invalid");
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->smbus_irq.event_handle = NULL;
 1009              		.loc 1 441 39
 1010 0008 7B68     		ldr	r3, [r7, #4]
 1011 000a 0022     		movs	r2, #0
 1012 000c 9A60     		str	r2, [r3, #8]
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->smbus_irq.error_handle = NULL;
 1013              		.loc 1 442 39
 1014 000e 7B68     		ldr	r3, [r7, #4]
 1015 0010 0022     		movs	r2, #0
 1016 0012 DA60     		str	r2, [r3, #12]
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1017              		.loc 1 443 1
 1018 0014 00BF     		nop
 1019 0016 0C37     		adds	r7, r7, #12
 1020              		.cfi_def_cfa_offset 4
 1021 0018 BD46     		mov	sp, r7
 1022              		.cfi_def_cfa_register 13
 1023              		@ sp needed
 1024 001a 80BC     		pop	{r7}
 1025              		.cfi_restore 7
 1026              		.cfi_def_cfa_offset 0
 1027 001c 7047     		bx	lr
 1028              		.cfi_endproc
 1029              	.LFE128:
 1031              		.section	.text.hal_smbus_master_transmit_interrupt,"ax",%progbits
 1032              		.align	1
 1033              		.global	hal_smbus_master_transmit_interrupt
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu softvfp
 1039              	hal_smbus_master_transmit_interrupt:
 1040              	.LFB129:
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      SMBUS master transmit in interrupt mode
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_buffer: pointer to txbuffer
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  length: length of data to be sent
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_user_func: call back function for user
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_TIMEOUT, HAL_ERR_BUSY,
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 details refer to gd32f3x0_hal.h
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_master_transmit_interrupt(hal_smbus_dev_struct *smbus_dev, uint8_t *p_buffer, \
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         uint32_t length, hal_smbus_user_cb p_user_func)
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1041              		.loc 1 459 1
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 24
 1044              		@ frame_needed = 1, uses_anonymous_args = 0
 1045 0000 80B5     		push	{r7, lr}
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 86B0     		sub	sp, sp, #24
 1050              		.cfi_def_cfa_offset 32
 1051 0004 00AF     		add	r7, sp, #0
 1052              		.cfi_def_cfa_register 7
 1053 0006 F860     		str	r0, [r7, #12]
 1054 0008 B960     		str	r1, [r7, #8]
 1055 000a 7A60     		str	r2, [r7, #4]
 1056 000c 3B60     		str	r3, [r7]
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     __IO uint32_t timeout_ms = HAL_TIMEOUT_FOREVER;
 1057              		.loc 1 460 19
 1058 000e 4FF0FF33 		mov	r3, #-1
 1059 0012 7B61     		str	r3, [r7, #20]
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((NULL == smbus_dev) || (NULL == p_buffer) || (0 == length)) {
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [smbus_dev] or [p_buffer] or [length] value is invalid");
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is busy */
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_BUSY == smbus_dev->tx_state) {
 1060              		.loc 1 469 41
 1061 0014 FB68     		ldr	r3, [r7, #12]
 1062 0016 93F83430 		ldrb	r3, [r3, #52]
 1063 001a DBB2     		uxtb	r3, r3
 1064              		.loc 1 469 7
 1065 001c 022B     		cmp	r3, #2
 1066 001e 02D1     		bne	.L47
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("smbus tx has already been used, please wait until run_state change to free ");
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1067              		.loc 1 471 16
 1068 0020 6FF00203 		mvn	r3, #2
 1069 0024 53E0     		b	.L48
 1070              	.L47:
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* update the value of SMBUS dev struct */
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->error_state = HAL_SMBUS_ERROR_NONE;
 1071              		.loc 1 475 28
 1072 0026 FB68     		ldr	r3, [r7, #12]
 1073 0028 0022     		movs	r2, #0
 1074 002a 1A63     		str	r2, [r3, #48]
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->txbuffer.buffer = (uint8_t *)p_buffer;
 1075              		.loc 1 476 32
 1076 002c FB68     		ldr	r3, [r7, #12]
 1077 002e BA68     		ldr	r2, [r7, #8]
 1078 0030 1A61     		str	r2, [r3, #16]
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->txbuffer.length = length;
 1079              		.loc 1 477 32
 1080 0032 FB68     		ldr	r3, [r7, #12]
 1081 0034 7A68     		ldr	r2, [r7, #4]
 1082 0036 5A61     		str	r2, [r3, #20]
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->txbuffer.pos = 0;
 1083              		.loc 1 478 29
 1084 0038 FB68     		ldr	r3, [r7, #12]
 1085 003a 0022     		movs	r2, #0
 1086 003c 9A61     		str	r2, [r3, #24]
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is ready */
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_READY == smbus_dev->tx_state) {
 1087              		.loc 1 481 42
 1088 003e FB68     		ldr	r3, [r7, #12]
 1089 0040 93F83430 		ldrb	r3, [r3, #52]
 1090 0044 DBB2     		uxtb	r3, r3
 1091              		.loc 1 481 7
 1092 0046 002B     		cmp	r3, #0
 1093 0048 3FD1     		bne	.L49
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_LOCK(smbus_dev);
 1094              		.loc 1 482 9
 1095 004a FB68     		ldr	r3, [r7, #12]
 1096 004c 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1097 0050 012B     		cmp	r3, #1
 1098 0052 02D1     		bne	.L50
 1099              		.loc 1 482 9 is_stmt 0 discriminator 1
 1100 0054 6FF00103 		mvn	r3, #1
 1101 0058 39E0     		b	.L48
 1102              	.L50:
 1103              		.loc 1 482 9 discriminator 2
 1104 005a FB68     		ldr	r3, [r7, #12]
 1105 005c 0122     		movs	r2, #1
 1106 005e 83F84420 		strb	r2, [r3, #68]
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->tx_state = HAL_SMBUS_STATE_BUSY;
 1107              		.loc 1 483 29 is_stmt 1 discriminator 2
 1108 0062 FB68     		ldr	r3, [r7, #12]
 1109 0064 0222     		movs	r2, #2
 1110 0066 83F83420 		strb	r2, [r3, #52]
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->tx_callback = (void *)p_user_func;
 1111              		.loc 1 484 32 discriminator 2
 1112 006a FB68     		ldr	r3, [r7, #12]
 1113 006c 3A68     		ldr	r2, [r7]
 1114 006e DA63     		str	r2, [r3, #60]
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle = _smbus_master_transmit_interrupt;
 1115              		.loc 1 485 43 discriminator 2
 1116 0070 FB68     		ldr	r3, [r7, #12]
 1117 0072 194A     		ldr	r2, .L52
 1118 0074 9A60     		str	r2, [r3, #8]
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* enable the I2C interrupt */
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_BUF);
 1119              		.loc 1 488 9 discriminator 2
 1120 0076 FB68     		ldr	r3, [r7, #12]
 1121 0078 1B68     		ldr	r3, [r3]
 1122 007a 4FF48571 		mov	r1, #266
 1123 007e 1846     		mov	r0, r3
 1124 0080 FFF7FEFF 		bl	hals_i2c_interrupt_enable
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_EV);
 1125              		.loc 1 489 9 discriminator 2
 1126 0084 FB68     		ldr	r3, [r7, #12]
 1127 0086 1B68     		ldr	r3, [r3]
 1128 0088 40F20911 		movw	r1, #265
 1129 008c 1846     		mov	r0, r3
 1130 008e FFF7FEFF 		bl	hals_i2c_interrupt_enable
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* the master waits until the I2C bus is idle */
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(HAL_ERR_NONE != _smbus_wait_flag_timeout(smbus_dev->periph, I2C_FLAG_I2CBSY, RESET, time
 1131              		.loc 1 492 28 discriminator 2
 1132 0092 FB68     		ldr	r3, [r7, #12]
 1133 0094 1868     		ldr	r0, [r3]
 1134 0096 7B69     		ldr	r3, [r7, #20]
 1135 0098 0022     		movs	r2, #0
 1136 009a 40F20161 		movw	r1, #1537
 1137 009e FFF7FEFF 		bl	_smbus_wait_flag_timeout
 1138 00a2 0346     		mov	r3, r0
 1139              		.loc 1 492 11 discriminator 2
 1140 00a4 002B     		cmp	r3, #0
 1141 00a6 02D0     		beq	.L51
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             HAL_DEBUGW("i2c busy timeout");
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             return HAL_ERR_TIMEOUT;
 1142              		.loc 1 494 20
 1143 00a8 6FF00403 		mvn	r3, #4
 1144 00ac 0FE0     		b	.L48
 1145              	.L51:
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* the master sends a start condition to I2C bus */
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_I2C_START_ON_BUS(smbus_dev->periph);
 1146              		.loc 1 497 9
 1147 00ae FB68     		ldr	r3, [r7, #12]
 1148 00b0 1B68     		ldr	r3, [r3]
 1149 00b2 1B68     		ldr	r3, [r3]
 1150 00b4 FA68     		ldr	r2, [r7, #12]
 1151 00b6 1268     		ldr	r2, [r2]
 1152 00b8 43F48073 		orr	r3, r3, #256
 1153 00bc 1360     		str	r3, [r2]
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_UNLOCK(smbus_dev);
 1154              		.loc 1 498 9
 1155 00be FB68     		ldr	r3, [r7, #12]
 1156 00c0 0022     		movs	r2, #0
 1157 00c2 83F84420 		strb	r2, [r3, #68]
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_NONE;
 1158              		.loc 1 499 16
 1159 00c6 0023     		movs	r3, #0
 1160 00c8 01E0     		b	.L48
 1161              	.L49:
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1162              		.loc 1 501 16
 1163 00ca 6FF00203 		mvn	r3, #2
 1164              	.L48:
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1165              		.loc 1 503 1
 1166 00ce 1846     		mov	r0, r3
 1167 00d0 1837     		adds	r7, r7, #24
 1168              		.cfi_def_cfa_offset 8
 1169 00d2 BD46     		mov	sp, r7
 1170              		.cfi_def_cfa_register 13
 1171              		@ sp needed
 1172 00d4 80BD     		pop	{r7, pc}
 1173              	.L53:
 1174 00d6 00BF     		.align	2
 1175              	.L52:
 1176 00d8 00000000 		.word	_smbus_master_transmit_interrupt
 1177              		.cfi_endproc
 1178              	.LFE129:
 1180              		.section	.text.hal_smbus_master_receive_interrupt,"ax",%progbits
 1181              		.align	1
 1182              		.global	hal_smbus_master_receive_interrupt
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1186              		.fpu softvfp
 1188              	hal_smbus_master_receive_interrupt:
 1189              	.LFB130:
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      SMBUS master receive with interrupt
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_buffer: pointer to rxbuffer
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  length: length of data to be read
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_user_func: call back function for user
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_TIMEOUT, HAL_ERR_BUSY,
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 details refer to gd32f3x0_hal.h
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_master_receive_interrupt(hal_smbus_dev_struct *smbus_dev, uint8_t *p_buffer, \
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         uint32_t length, hal_smbus_user_cb p_user_func)
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1190              		.loc 1 519 1
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 24
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 80B5     		push	{r7, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 86B0     		sub	sp, sp, #24
 1199              		.cfi_def_cfa_offset 32
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 1202 0006 F860     		str	r0, [r7, #12]
 1203 0008 B960     		str	r1, [r7, #8]
 1204 000a 7A60     		str	r2, [r7, #4]
 1205 000c 3B60     		str	r3, [r7]
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     __IO uint32_t timeout_ms = HAL_TIMEOUT_FOREVER;
 1206              		.loc 1 520 19
 1207 000e 4FF0FF33 		mov	r3, #-1
 1208 0012 7B61     		str	r3, [r7, #20]
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((NULL == smbus_dev) || (NULL == p_buffer) || (0 == length)) {
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [smbus_dev] or [p_buffer] or [length] value is invalid");
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is busy */
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_BUSY == smbus_dev->rx_state) {
 1209              		.loc 1 530 41
 1210 0014 FB68     		ldr	r3, [r7, #12]
 1211 0016 93F83530 		ldrb	r3, [r3, #53]
 1212 001a DBB2     		uxtb	r3, r3
 1213              		.loc 1 530 7
 1214 001c 022B     		cmp	r3, #2
 1215 001e 02D1     		bne	.L55
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("smbus tx has already been used, please wait until run_state change to free ");
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1216              		.loc 1 532 16
 1217 0020 6FF00203 		mvn	r3, #2
 1218 0024 6AE0     		b	.L56
 1219              	.L55:
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* update the values of SMBUS dev struct */
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->error_state = HAL_SMBUS_ERROR_NONE;
 1220              		.loc 1 536 28
 1221 0026 FB68     		ldr	r3, [r7, #12]
 1222 0028 0022     		movs	r2, #0
 1223 002a 1A63     		str	r2, [r3, #48]
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rxbuffer.buffer = (uint8_t *)p_buffer;
 1224              		.loc 1 537 32
 1225 002c FB68     		ldr	r3, [r7, #12]
 1226 002e BA68     		ldr	r2, [r7, #8]
 1227 0030 DA61     		str	r2, [r3, #28]
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rxbuffer.length = length;
 1228              		.loc 1 538 32
 1229 0032 FB68     		ldr	r3, [r7, #12]
 1230 0034 7A68     		ldr	r2, [r7, #4]
 1231 0036 1A62     		str	r2, [r3, #32]
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rxbuffer.pos = 0;
 1232              		.loc 1 539 29
 1233 0038 FB68     		ldr	r3, [r7, #12]
 1234 003a 0022     		movs	r2, #0
 1235 003c 5A62     		str	r2, [r3, #36]
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is ready */
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_READY == smbus_dev->rx_state) {
 1236              		.loc 1 542 42
 1237 003e FB68     		ldr	r3, [r7, #12]
 1238 0040 93F83530 		ldrb	r3, [r3, #53]
 1239 0044 DBB2     		uxtb	r3, r3
 1240              		.loc 1 542 7
 1241 0046 002B     		cmp	r3, #0
 1242 0048 56D1     		bne	.L57
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_LOCK(smbus_dev);
 1243              		.loc 1 543 9
 1244 004a FB68     		ldr	r3, [r7, #12]
 1245 004c 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1246 0050 012B     		cmp	r3, #1
 1247 0052 02D1     		bne	.L58
 1248              		.loc 1 543 9 is_stmt 0 discriminator 1
 1249 0054 6FF00103 		mvn	r3, #1
 1250 0058 50E0     		b	.L56
 1251              	.L58:
 1252              		.loc 1 543 9 discriminator 2
 1253 005a FB68     		ldr	r3, [r7, #12]
 1254 005c 0122     		movs	r2, #1
 1255 005e 83F84420 		strb	r2, [r3, #68]
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* wait until I2C bus is idle */
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(HAL_ERR_NONE != _smbus_wait_flag_timeout(smbus_dev->periph, I2C_FLAG_I2CBSY, RESET, time
 1256              		.loc 1 545 28 is_stmt 1 discriminator 2
 1257 0062 FB68     		ldr	r3, [r7, #12]
 1258 0064 1868     		ldr	r0, [r3]
 1259 0066 7B69     		ldr	r3, [r7, #20]
 1260 0068 0022     		movs	r2, #0
 1261 006a 40F20161 		movw	r1, #1537
 1262 006e FFF7FEFF 		bl	_smbus_wait_flag_timeout
 1263 0072 0346     		mov	r3, r0
 1264              		.loc 1 545 11 discriminator 2
 1265 0074 002B     		cmp	r3, #0
 1266 0076 02D0     		beq	.L59
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             HAL_DEBUGW("i2c busy timeout");
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             return HAL_ERR_TIMEOUT;
 1267              		.loc 1 547 20
 1268 0078 6FF00403 		mvn	r3, #4
 1269 007c 3EE0     		b	.L56
 1270              	.L59:
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* update the values of SMBUS dev struct */
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->rx_state = HAL_SMBUS_STATE_BUSY;
 1271              		.loc 1 551 29
 1272 007e FB68     		ldr	r3, [r7, #12]
 1273 0080 0222     		movs	r2, #2
 1274 0082 83F83520 		strb	r2, [r3, #53]
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->rx_callback = (void *)p_user_func;
 1275              		.loc 1 552 32
 1276 0086 FB68     		ldr	r3, [r7, #12]
 1277 0088 3A68     		ldr	r2, [r7]
 1278 008a 9A63     		str	r2, [r3, #56]
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle = _smbus_master_receive_interrupt;
 1279              		.loc 1 553 43
 1280 008c FB68     		ldr	r3, [r7, #12]
 1281 008e 1D4A     		ldr	r2, .L62
 1282 0090 9A60     		str	r2, [r3, #8]
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* enable the I2C interrupt */
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_BUF);
 1283              		.loc 1 556 9
 1284 0092 FB68     		ldr	r3, [r7, #12]
 1285 0094 1B68     		ldr	r3, [r3]
 1286 0096 4FF48571 		mov	r1, #266
 1287 009a 1846     		mov	r0, r3
 1288 009c FFF7FEFF 		bl	hals_i2c_interrupt_enable
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_EV);
 1289              		.loc 1 557 9
 1290 00a0 FB68     		ldr	r3, [r7, #12]
 1291 00a2 1B68     		ldr	r3, [r3]
 1292 00a4 40F20911 		movw	r1, #265
 1293 00a8 1846     		mov	r0, r3
 1294 00aa FFF7FEFF 		bl	hals_i2c_interrupt_enable
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* wait until I2C bus is idle */
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(HAL_ERR_NONE != _smbus_wait_flag_timeout(smbus_dev->periph, I2C_FLAG_I2CBSY, RESET, time
 1295              		.loc 1 560 28
 1296 00ae FB68     		ldr	r3, [r7, #12]
 1297 00b0 1868     		ldr	r0, [r3]
 1298 00b2 7B69     		ldr	r3, [r7, #20]
 1299 00b4 0022     		movs	r2, #0
 1300 00b6 40F20161 		movw	r1, #1537
 1301 00ba FFF7FEFF 		bl	_smbus_wait_flag_timeout
 1302 00be 0346     		mov	r3, r0
 1303              		.loc 1 560 11
 1304 00c0 002B     		cmp	r3, #0
 1305 00c2 02D0     		beq	.L60
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             HAL_DEBUGW("i2c busy timeout");
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             return HAL_ERR_TIMEOUT;
 1306              		.loc 1 562 20
 1307 00c4 6FF00403 		mvn	r3, #4
 1308 00c8 18E0     		b	.L56
 1309              	.L60:
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(smbus_dev->rxbuffer.length == 2) {
 1310              		.loc 1 565 31
 1311 00ca FB68     		ldr	r3, [r7, #12]
 1312 00cc 1B6A     		ldr	r3, [r3, #32]
 1313              		.loc 1 565 11
 1314 00ce 022B     		cmp	r3, #2
 1315 00d0 04D1     		bne	.L61
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* send a NACK for the next data byte which will be received into the shift register */
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_ackpos_config(I2C0, I2C_ACKPOS_NEXT);
 1316              		.loc 1 567 13
 1317 00d2 4FF40061 		mov	r1, #2048
 1318 00d6 0C48     		ldr	r0, .L62+4
 1319 00d8 FFF7FEFF 		bl	hals_i2c_ackpos_config
 1320              	.L61:
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* the master sends a start condition to I2C bus */
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_I2C_START_ON_BUS(smbus_dev->periph);
 1321              		.loc 1 572 9
 1322 00dc FB68     		ldr	r3, [r7, #12]
 1323 00de 1B68     		ldr	r3, [r3]
 1324 00e0 1B68     		ldr	r3, [r3]
 1325 00e2 FA68     		ldr	r2, [r7, #12]
 1326 00e4 1268     		ldr	r2, [r2]
 1327 00e6 43F48073 		orr	r3, r3, #256
 1328 00ea 1360     		str	r3, [r2]
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_UNLOCK(smbus_dev);
 1329              		.loc 1 573 9
 1330 00ec FB68     		ldr	r3, [r7, #12]
 1331 00ee 0022     		movs	r2, #0
 1332 00f0 83F84420 		strb	r2, [r3, #68]
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_NONE;
 1333              		.loc 1 574 16
 1334 00f4 0023     		movs	r3, #0
 1335 00f6 01E0     		b	.L56
 1336              	.L57:
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1337              		.loc 1 576 16
 1338 00f8 6FF00203 		mvn	r3, #2
 1339              	.L56:
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1340              		.loc 1 578 1
 1341 00fc 1846     		mov	r0, r3
 1342 00fe 1837     		adds	r7, r7, #24
 1343              		.cfi_def_cfa_offset 8
 1344 0100 BD46     		mov	sp, r7
 1345              		.cfi_def_cfa_register 13
 1346              		@ sp needed
 1347 0102 80BD     		pop	{r7, pc}
 1348              	.L63:
 1349              		.align	2
 1350              	.L62:
 1351 0104 00000000 		.word	_smbus_master_receive_interrupt
 1352 0108 00540040 		.word	1073763328
 1353              		.cfi_endproc
 1354              	.LFE130:
 1356              		.section	.text.hal_smbus_slave_transmit_interrupt,"ax",%progbits
 1357              		.align	1
 1358              		.global	hal_smbus_slave_transmit_interrupt
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1362              		.fpu softvfp
 1364              	hal_smbus_slave_transmit_interrupt:
 1365              	.LFB131:
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      SMBUS slave transmit in interrupt mode
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_buffer: pointer to txbuffer
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  length: length of data to be sent
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_user_func: call back function for user
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_TIMEOUT, HAL_ERR_BUSY,
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 details refer to gd32f3x0_hal.h
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_slave_transmit_interrupt(hal_smbus_dev_struct *smbus_dev, uint8_t *p_buffer, \
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         uint32_t length, hal_smbus_user_cb p_user_func)
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1366              		.loc 1 594 1
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 24
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 86B0     		sub	sp, sp, #24
 1375              		.cfi_def_cfa_offset 32
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 F860     		str	r0, [r7, #12]
 1379 0008 B960     		str	r1, [r7, #8]
 1380 000a 7A60     		str	r2, [r7, #4]
 1381 000c 3B60     		str	r3, [r7]
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     __IO uint32_t timeout_ms = HAL_TIMEOUT_FOREVER;
 1382              		.loc 1 595 19
 1383 000e 4FF0FF33 		mov	r3, #-1
 1384 0012 7B61     		str	r3, [r7, #20]
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((NULL == smbus_dev) || (NULL == p_buffer) || (0 == length)) {
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [smbus_dev] or [p_buffer] or [length] value is invalid");
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is busy */
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_BUSY == smbus_dev->tx_state) {
 1385              		.loc 1 605 41
 1386 0014 FB68     		ldr	r3, [r7, #12]
 1387 0016 93F83430 		ldrb	r3, [r3, #52]
 1388 001a DBB2     		uxtb	r3, r3
 1389              		.loc 1 605 7
 1390 001c 022B     		cmp	r3, #2
 1391 001e 02D1     		bne	.L65
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("smbus tx has already been used, please wait until run_state change to free ");
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1392              		.loc 1 607 16
 1393 0020 6FF00203 		mvn	r3, #2
 1394 0024 4BE0     		b	.L66
 1395              	.L65:
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* update the values of SMBUS dev struct */
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->error_state = HAL_SMBUS_ERROR_NONE;
 1396              		.loc 1 611 28
 1397 0026 FB68     		ldr	r3, [r7, #12]
 1398 0028 0022     		movs	r2, #0
 1399 002a 1A63     		str	r2, [r3, #48]
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->txbuffer.buffer = (uint8_t *)p_buffer;
 1400              		.loc 1 612 32
 1401 002c FB68     		ldr	r3, [r7, #12]
 1402 002e BA68     		ldr	r2, [r7, #8]
 1403 0030 1A61     		str	r2, [r3, #16]
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->txbuffer.length = length;
 1404              		.loc 1 613 32
 1405 0032 FB68     		ldr	r3, [r7, #12]
 1406 0034 7A68     		ldr	r2, [r7, #4]
 1407 0036 5A61     		str	r2, [r3, #20]
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->txbuffer.pos = 0;
 1408              		.loc 1 614 29
 1409 0038 FB68     		ldr	r3, [r7, #12]
 1410 003a 0022     		movs	r2, #0
 1411 003c 9A61     		str	r2, [r3, #24]
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is ready */
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_READY == smbus_dev->tx_state) {
 1412              		.loc 1 617 42
 1413 003e FB68     		ldr	r3, [r7, #12]
 1414 0040 93F83430 		ldrb	r3, [r3, #52]
 1415 0044 DBB2     		uxtb	r3, r3
 1416              		.loc 1 617 7
 1417 0046 002B     		cmp	r3, #0
 1418 0048 37D1     		bne	.L67
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_LOCK(smbus_dev);
 1419              		.loc 1 618 9
 1420 004a FB68     		ldr	r3, [r7, #12]
 1421 004c 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1422 0050 012B     		cmp	r3, #1
 1423 0052 02D1     		bne	.L68
 1424              		.loc 1 618 9 is_stmt 0 discriminator 1
 1425 0054 6FF00103 		mvn	r3, #1
 1426 0058 31E0     		b	.L66
 1427              	.L68:
 1428              		.loc 1 618 9 discriminator 2
 1429 005a FB68     		ldr	r3, [r7, #12]
 1430 005c 0122     		movs	r2, #1
 1431 005e 83F84420 		strb	r2, [r3, #68]
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(HAL_ERR_NONE != _smbus_wait_flag_timeout(smbus_dev->periph, I2C_FLAG_I2CBSY, RESET, time
 1432              		.loc 1 619 28 is_stmt 1 discriminator 2
 1433 0062 FB68     		ldr	r3, [r7, #12]
 1434 0064 1868     		ldr	r0, [r3]
 1435 0066 7B69     		ldr	r3, [r7, #20]
 1436 0068 0022     		movs	r2, #0
 1437 006a 40F20161 		movw	r1, #1537
 1438 006e FFF7FEFF 		bl	_smbus_wait_flag_timeout
 1439 0072 0346     		mov	r3, r0
 1440              		.loc 1 619 11 discriminator 2
 1441 0074 002B     		cmp	r3, #0
 1442 0076 02D0     		beq	.L69
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             HAL_DEBUGW("i2c busy timeout");
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             return HAL_ERR_TIMEOUT;
 1443              		.loc 1 621 20
 1444 0078 6FF00403 		mvn	r3, #4
 1445 007c 1FE0     		b	.L66
 1446              	.L69:
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* update the values of SMBUS dev struct */
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->tx_state = HAL_SMBUS_STATE_BUSY;
 1447              		.loc 1 625 29
 1448 007e FB68     		ldr	r3, [r7, #12]
 1449 0080 0222     		movs	r2, #2
 1450 0082 83F83420 		strb	r2, [r3, #52]
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->tx_callback = (void *)p_user_func;
 1451              		.loc 1 626 32
 1452 0086 FB68     		ldr	r3, [r7, #12]
 1453 0088 3A68     		ldr	r2, [r7]
 1454 008a DA63     		str	r2, [r3, #60]
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle = _smbus_slave_transmit_interrupt;
 1455              		.loc 1 627 43
 1456 008c FB68     		ldr	r3, [r7, #12]
 1457 008e 0E4A     		ldr	r2, .L70
 1458 0090 9A60     		str	r2, [r3, #8]
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* enable the I2C interrupt */
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_BUF);
 1459              		.loc 1 630 9
 1460 0092 FB68     		ldr	r3, [r7, #12]
 1461 0094 1B68     		ldr	r3, [r3]
 1462 0096 4FF48571 		mov	r1, #266
 1463 009a 1846     		mov	r0, r3
 1464 009c FFF7FEFF 		bl	hals_i2c_interrupt_enable
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_EV);
 1465              		.loc 1 631 9
 1466 00a0 FB68     		ldr	r3, [r7, #12]
 1467 00a2 1B68     		ldr	r3, [r3]
 1468 00a4 40F20911 		movw	r1, #265
 1469 00a8 1846     		mov	r0, r3
 1470 00aa FFF7FEFF 		bl	hals_i2c_interrupt_enable
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_UNLOCK(smbus_dev);
 1471              		.loc 1 633 9
 1472 00ae FB68     		ldr	r3, [r7, #12]
 1473 00b0 0022     		movs	r2, #0
 1474 00b2 83F84420 		strb	r2, [r3, #68]
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_NONE;
 1475              		.loc 1 634 16
 1476 00b6 0023     		movs	r3, #0
 1477 00b8 01E0     		b	.L66
 1478              	.L67:
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1479              		.loc 1 636 16
 1480 00ba 6FF00203 		mvn	r3, #2
 1481              	.L66:
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1482              		.loc 1 638 1
 1483 00be 1846     		mov	r0, r3
 1484 00c0 1837     		adds	r7, r7, #24
 1485              		.cfi_def_cfa_offset 8
 1486 00c2 BD46     		mov	sp, r7
 1487              		.cfi_def_cfa_register 13
 1488              		@ sp needed
 1489 00c4 80BD     		pop	{r7, pc}
 1490              	.L71:
 1491 00c6 00BF     		.align	2
 1492              	.L70:
 1493 00c8 00000000 		.word	_smbus_slave_transmit_interrupt
 1494              		.cfi_endproc
 1495              	.LFE131:
 1497              		.section	.text.hal_smbus_slave_receive_interrupt,"ax",%progbits
 1498              		.align	1
 1499              		.global	hal_smbus_slave_receive_interrupt
 1500              		.syntax unified
 1501              		.thumb
 1502              		.thumb_func
 1503              		.fpu softvfp
 1505              	hal_smbus_slave_receive_interrupt:
 1506              	.LFB132:
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      SMBUS slave receive with interrupt mode
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_buffer: pointer to rxbuffer
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  length: length of data to be read
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  p_user_func: call back function for user
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_TIMEOUT, HAL_ERR_BUSY,
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 details refer to gd32f3x0_hal.h
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_slave_receive_interrupt(hal_smbus_dev_struct *smbus_dev, uint8_t *p_buffer, \
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         uint32_t length, hal_smbus_user_cb p_user_func)
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1507              		.loc 1 654 1
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 24
 1510              		@ frame_needed = 1, uses_anonymous_args = 0
 1511 0000 80B5     		push	{r7, lr}
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 7, -8
 1514              		.cfi_offset 14, -4
 1515 0002 86B0     		sub	sp, sp, #24
 1516              		.cfi_def_cfa_offset 32
 1517 0004 00AF     		add	r7, sp, #0
 1518              		.cfi_def_cfa_register 7
 1519 0006 F860     		str	r0, [r7, #12]
 1520 0008 B960     		str	r1, [r7, #8]
 1521 000a 7A60     		str	r2, [r7, #4]
 1522 000c 3B60     		str	r3, [r7]
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     __IO uint32_t timeout_ms = HAL_TIMEOUT_FOREVER;
 1523              		.loc 1 655 19
 1524 000e 4FF0FF33 		mov	r3, #-1
 1525 0012 7B61     		str	r3, [r7, #20]
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if((NULL == smbus_dev) || (NULL == p_buffer) || (0 == length)) {
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("parameter [smbus_dev] or [p_buffer] or [length] value is invalid");
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is busy */
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_BUSY == smbus_dev->rx_state) {
 1526              		.loc 1 665 41
 1527 0014 FB68     		ldr	r3, [r7, #12]
 1528 0016 93F83530 		ldrb	r3, [r3, #53]
 1529 001a DBB2     		uxtb	r3, r3
 1530              		.loc 1 665 7
 1531 001c 022B     		cmp	r3, #2
 1532 001e 02D1     		bne	.L73
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("smbus tx has already been used, please wait until run_state change to free ");
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1533              		.loc 1 667 16
 1534 0020 6FF00203 		mvn	r3, #2
 1535 0024 4BE0     		b	.L74
 1536              	.L73:
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* update the values of SMBUS dev struct */
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->error_state = HAL_SMBUS_ERROR_NONE;
 1537              		.loc 1 671 28
 1538 0026 FB68     		ldr	r3, [r7, #12]
 1539 0028 0022     		movs	r2, #0
 1540 002a 1A63     		str	r2, [r3, #48]
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rxbuffer.buffer = (uint8_t *)p_buffer;
 1541              		.loc 1 672 32
 1542 002c FB68     		ldr	r3, [r7, #12]
 1543 002e BA68     		ldr	r2, [r7, #8]
 1544 0030 DA61     		str	r2, [r3, #28]
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rxbuffer.length = length;
 1545              		.loc 1 673 32
 1546 0032 FB68     		ldr	r3, [r7, #12]
 1547 0034 7A68     		ldr	r2, [r7, #4]
 1548 0036 1A62     		str	r2, [r3, #32]
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     smbus_dev->rxbuffer.pos = 0;
 1549              		.loc 1 674 29
 1550 0038 FB68     		ldr	r3, [r7, #12]
 1551 003a 0022     		movs	r2, #0
 1552 003c 5A62     		str	r2, [r3, #36]
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* SMBUS state is ready */
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(HAL_SMBUS_STATE_READY == smbus_dev->rx_state) {
 1553              		.loc 1 677 42
 1554 003e FB68     		ldr	r3, [r7, #12]
 1555 0040 93F83530 		ldrb	r3, [r3, #53]
 1556 0044 DBB2     		uxtb	r3, r3
 1557              		.loc 1 677 7
 1558 0046 002B     		cmp	r3, #0
 1559 0048 37D1     		bne	.L75
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_LOCK(smbus_dev);
 1560              		.loc 1 678 9
 1561 004a FB68     		ldr	r3, [r7, #12]
 1562 004c 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1563 0050 012B     		cmp	r3, #1
 1564 0052 02D1     		bne	.L76
 1565              		.loc 1 678 9 is_stmt 0 discriminator 1
 1566 0054 6FF00103 		mvn	r3, #1
 1567 0058 31E0     		b	.L74
 1568              	.L76:
 1569              		.loc 1 678 9 discriminator 2
 1570 005a FB68     		ldr	r3, [r7, #12]
 1571 005c 0122     		movs	r2, #1
 1572 005e 83F84420 		strb	r2, [r3, #68]
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(HAL_ERR_NONE != _smbus_wait_flag_timeout(smbus_dev->periph, I2C_FLAG_I2CBSY, RESET, time
 1573              		.loc 1 679 28 is_stmt 1 discriminator 2
 1574 0062 FB68     		ldr	r3, [r7, #12]
 1575 0064 1868     		ldr	r0, [r3]
 1576 0066 7B69     		ldr	r3, [r7, #20]
 1577 0068 0022     		movs	r2, #0
 1578 006a 40F20161 		movw	r1, #1537
 1579 006e FFF7FEFF 		bl	_smbus_wait_flag_timeout
 1580 0072 0346     		mov	r3, r0
 1581              		.loc 1 679 11 discriminator 2
 1582 0074 002B     		cmp	r3, #0
 1583 0076 02D0     		beq	.L77
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             HAL_DEBUGW("i2c busy timeout");
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             return HAL_ERR_TIMEOUT;
 1584              		.loc 1 681 20
 1585 0078 6FF00403 		mvn	r3, #4
 1586 007c 1FE0     		b	.L74
 1587              	.L77:
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* update the values of SMBUS dev struct */
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->rx_state = HAL_SMBUS_STATE_BUSY;
 1588              		.loc 1 685 29
 1589 007e FB68     		ldr	r3, [r7, #12]
 1590 0080 0222     		movs	r2, #2
 1591 0082 83F83520 		strb	r2, [r3, #53]
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->rx_callback = (void *)p_user_func;
 1592              		.loc 1 686 32
 1593 0086 FB68     		ldr	r3, [r7, #12]
 1594 0088 3A68     		ldr	r2, [r7]
 1595 008a 9A63     		str	r2, [r3, #56]
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         smbus_dev->smbus_irq.event_handle = _smbus_slave_receive_interrupt;
 1596              		.loc 1 687 43
 1597 008c FB68     		ldr	r3, [r7, #12]
 1598 008e 0E4A     		ldr	r2, .L78
 1599 0090 9A60     		str	r2, [r3, #8]
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* enable the I2C interrupt */
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_BUF);
 1600              		.loc 1 690 9
 1601 0092 FB68     		ldr	r3, [r7, #12]
 1602 0094 1B68     		ldr	r3, [r3]
 1603 0096 4FF48571 		mov	r1, #266
 1604 009a 1846     		mov	r0, r3
 1605 009c FFF7FEFF 		bl	hals_i2c_interrupt_enable
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_enable(smbus_dev->periph, I2C_INT_EV);
 1606              		.loc 1 691 9
 1607 00a0 FB68     		ldr	r3, [r7, #12]
 1608 00a2 1B68     		ldr	r3, [r3]
 1609 00a4 40F20911 		movw	r1, #265
 1610 00a8 1846     		mov	r0, r3
 1611 00aa FFF7FEFF 		bl	hals_i2c_interrupt_enable
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_UNLOCK(smbus_dev);
 1612              		.loc 1 693 9
 1613 00ae FB68     		ldr	r3, [r7, #12]
 1614 00b0 0022     		movs	r2, #0
 1615 00b2 83F84420 		strb	r2, [r3, #68]
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_NONE;
 1616              		.loc 1 694 16
 1617 00b6 0023     		movs	r3, #0
 1618 00b8 01E0     		b	.L74
 1619              	.L75:
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_BUSY;
 1620              		.loc 1 696 16
 1621 00ba 6FF00203 		mvn	r3, #2
 1622              	.L74:
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1623              		.loc 1 698 1
 1624 00be 1846     		mov	r0, r3
 1625 00c0 1837     		adds	r7, r7, #24
 1626              		.cfi_def_cfa_offset 8
 1627 00c2 BD46     		mov	sp, r7
 1628              		.cfi_def_cfa_register 13
 1629              		@ sp needed
 1630 00c4 80BD     		pop	{r7, pc}
 1631              	.L79:
 1632 00c6 00BF     		.align	2
 1633              	.L78:
 1634 00c8 00000000 		.word	_smbus_slave_receive_interrupt
 1635              		.cfi_endproc
 1636              	.LFE132:
 1638              		.section	.text.hal_smbus_disable_alert_interrupt,"ax",%progbits
 1639              		.align	1
 1640              		.global	hal_smbus_disable_alert_interrupt
 1641              		.syntax unified
 1642              		.thumb
 1643              		.thumb_func
 1644              		.fpu softvfp
 1646              	hal_smbus_disable_alert_interrupt:
 1647              	.LFB133:
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      Disable the SMBUS alert mode with Interrupt.
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_dev: SMBUS device information structrue
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, details refer to gd32f3x0_hal.h
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** int32_t hal_smbus_disable_alert_interrupt(hal_smbus_dev_struct *smbus_dev)
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1648              		.loc 1 709 1
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 8
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652 0000 80B5     		push	{r7, lr}
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 7, -8
 1655              		.cfi_offset 14, -4
 1656 0002 82B0     		sub	sp, sp, #8
 1657              		.cfi_def_cfa_offset 16
 1658 0004 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 1660 0006 7860     		str	r0, [r7, #4]
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #if (1 == HAL_PARAMETER_CHECK)
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* check the parameters */
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL == smbus_dev) {
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_DEBUGE("pointer [smbus_dev] address is invalid");
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         return HAL_ERR_ADDRESS;
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* Enable SMBus alert */
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_smbus_alert_config(smbus_dev->periph, I2C_SALTSEND_DISABLE);
 1661              		.loc 1 719 5
 1662 0008 7B68     		ldr	r3, [r7, #4]
 1663 000a 1B68     		ldr	r3, [r3]
 1664 000c 0021     		movs	r1, #0
 1665 000e 1846     		mov	r0, r3
 1666 0010 FFF7FEFF 		bl	hals_i2c_smbus_alert_config
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* Disable Alert Interrupt */
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hals_i2c_interrupt_disable(smbus_dev->periph, I2C_INT_ERR);
 1667              		.loc 1 722 5
 1668 0014 7B68     		ldr	r3, [r7, #4]
 1669 0016 1B68     		ldr	r3, [r3]
 1670 0018 4FF48471 		mov	r1, #264
 1671 001c 1846     		mov	r0, r3
 1672 001e FFF7FEFF 		bl	hals_i2c_interrupt_disable
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     return HAL_ERR_NONE;
 1673              		.loc 1 724 12
 1674 0022 0023     		movs	r3, #0
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1675              		.loc 1 725 1
 1676 0024 1846     		mov	r0, r3
 1677 0026 0837     		adds	r7, r7, #8
 1678              		.cfi_def_cfa_offset 8
 1679 0028 BD46     		mov	sp, r7
 1680              		.cfi_def_cfa_register 13
 1681              		@ sp needed
 1682 002a 80BD     		pop	{r7, pc}
 1683              		.cfi_endproc
 1684              	.LFE133:
 1686              		.section	.text.hals_i2c_smbus_type_config,"ax",%progbits
 1687              		.align	1
 1688              		.global	hals_i2c_smbus_type_config
 1689              		.syntax unified
 1690              		.thumb
 1691              		.thumb_func
 1692              		.fpu softvfp
 1694              	hals_i2c_smbus_type_config:
 1695              	.LFB134:
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      select SMBus type
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  i2c_periph: I2Cx(x=0,1)
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  type:
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 only one parameter can be selected which is shown as below:
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_SMBUS_DEVICE: SMBus mode device type
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_SMBUS_HOST: SMBus mode host type
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hals_i2c_smbus_type_config(uint32_t i2c_periph, uint32_t type)
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1696              		.loc 1 738 1
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 8
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
 1701 0000 80B4     		push	{r7}
 1702              		.cfi_def_cfa_offset 4
 1703              		.cfi_offset 7, -4
 1704 0002 83B0     		sub	sp, sp, #12
 1705              		.cfi_def_cfa_offset 16
 1706 0004 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
 1708 0006 7860     		str	r0, [r7, #4]
 1709 0008 3960     		str	r1, [r7]
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(I2C_SMBUS_HOST == type) {
 1710              		.loc 1 739 7
 1711 000a 3B68     		ldr	r3, [r7]
 1712 000c 082B     		cmp	r3, #8
 1713 000e 06D1     		bne	.L83
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         I2C_CTL0(i2c_periph) |= I2C_CTL0_SMBSEL;
 1714              		.loc 1 740 30
 1715 0010 7B68     		ldr	r3, [r7, #4]
 1716 0012 1A68     		ldr	r2, [r3]
 1717 0014 7B68     		ldr	r3, [r7, #4]
 1718 0016 42F00802 		orr	r2, r2, #8
 1719 001a 1A60     		str	r2, [r3]
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         I2C_CTL0(i2c_periph) &= ~(I2C_CTL0_SMBSEL);
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1720              		.loc 1 744 1
 1721 001c 05E0     		b	.L85
 1722              	.L83:
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 1723              		.loc 1 742 30
 1724 001e 7B68     		ldr	r3, [r7, #4]
 1725 0020 1A68     		ldr	r2, [r3]
 1726 0022 7B68     		ldr	r3, [r7, #4]
 1727 0024 22F00802 		bic	r2, r2, #8
 1728 0028 1A60     		str	r2, [r3]
 1729              	.L85:
 1730              		.loc 1 744 1
 1731 002a 00BF     		nop
 1732 002c 0C37     		adds	r7, r7, #12
 1733              		.cfi_def_cfa_offset 4
 1734 002e BD46     		mov	sp, r7
 1735              		.cfi_def_cfa_register 13
 1736              		@ sp needed
 1737 0030 80BC     		pop	{r7}
 1738              		.cfi_restore 7
 1739              		.cfi_def_cfa_offset 0
 1740 0032 7047     		bx	lr
 1741              		.cfi_endproc
 1742              	.LFE134:
 1744              		.section	.text.hals_i2c_smbus_arp_enable,"ax",%progbits
 1745              		.align	1
 1746              		.global	hals_i2c_smbus_arp_enable
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1750              		.fpu softvfp
 1752              	hals_i2c_smbus_arp_enable:
 1753              	.LFB135:
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      enable or disable I2C ARP protocol in SMBus switch
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  i2c_periph: I2Cx(x=0,1)
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbuspara:
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 only one parameter can be selected which is shown as below:
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_ARP_ENABLE: enable ARP
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_ARP_DISABLE: disable ARP
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hals_i2c_smbus_arp_enable(uint32_t i2c_periph, uint32_t arpstate)
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1754              		.loc 1 757 1
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 16
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758              		@ link register save eliminated.
 1759 0000 80B4     		push	{r7}
 1760              		.cfi_def_cfa_offset 4
 1761              		.cfi_offset 7, -4
 1762 0002 85B0     		sub	sp, sp, #20
 1763              		.cfi_def_cfa_offset 24
 1764 0004 00AF     		add	r7, sp, #0
 1765              		.cfi_def_cfa_register 7
 1766 0006 7860     		str	r0, [r7, #4]
 1767 0008 3960     		str	r1, [r7]
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* enable or disable I2C ARP protocol*/
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t ctl = 0U;
 1768              		.loc 1 759 14
 1769 000a 0023     		movs	r3, #0
 1770 000c FB60     		str	r3, [r7, #12]
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl = I2C_CTL0(i2c_periph);
 1771              		.loc 1 761 11
 1772 000e 7B68     		ldr	r3, [r7, #4]
 1773              		.loc 1 761 9
 1774 0010 1B68     		ldr	r3, [r3]
 1775 0012 FB60     		str	r3, [r7, #12]
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl &= ~(I2C_CTL0_ARPEN);
 1776              		.loc 1 762 9
 1777 0014 FB68     		ldr	r3, [r7, #12]
 1778 0016 23F01003 		bic	r3, r3, #16
 1779 001a FB60     		str	r3, [r7, #12]
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl |= arpstate;
 1780              		.loc 1 763 9
 1781 001c FA68     		ldr	r2, [r7, #12]
 1782 001e 3B68     		ldr	r3, [r7]
 1783 0020 1343     		orrs	r3, r3, r2
 1784 0022 FB60     		str	r3, [r7, #12]
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     I2C_CTL0(i2c_periph) = ctl;
 1785              		.loc 1 764 5
 1786 0024 7B68     		ldr	r3, [r7, #4]
 1787              		.loc 1 764 26
 1788 0026 FA68     		ldr	r2, [r7, #12]
 1789 0028 1A60     		str	r2, [r3]
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1790              		.loc 1 765 1
 1791 002a 00BF     		nop
 1792 002c 1437     		adds	r7, r7, #20
 1793              		.cfi_def_cfa_offset 4
 1794 002e BD46     		mov	sp, r7
 1795              		.cfi_def_cfa_register 13
 1796              		@ sp needed
 1797 0030 80BC     		pop	{r7}
 1798              		.cfi_restore 7
 1799              		.cfi_def_cfa_offset 0
 1800 0032 7047     		bx	lr
 1801              		.cfi_endproc
 1802              	.LFE135:
 1804              		.section	.text.hals_i2c_smbus_alert_config,"ax",%progbits
 1805              		.align	1
 1806              		.global	hals_i2c_smbus_alert_config
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu softvfp
 1812              	hals_i2c_smbus_alert_config:
 1813              	.LFB136:
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      configure I2C alert through SMBA pin
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  i2c_periph: I2Cx(x=0,1)
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbuspara:
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 only one parameter can be selected which is shown as below:
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_SALTSEND_ENABLE: issue alert through SMBA pin
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_SALTSEND_DISABLE: not issue alert through SMBA pin
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hals_i2c_smbus_alert_config(uint32_t i2c_periph, uint32_t smbuspara)
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1814              		.loc 1 778 1
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 16
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818              		@ link register save eliminated.
 1819 0000 80B4     		push	{r7}
 1820              		.cfi_def_cfa_offset 4
 1821              		.cfi_offset 7, -4
 1822 0002 85B0     		sub	sp, sp, #20
 1823              		.cfi_def_cfa_offset 24
 1824 0004 00AF     		add	r7, sp, #0
 1825              		.cfi_def_cfa_register 7
 1826 0006 7860     		str	r0, [r7, #4]
 1827 0008 3960     		str	r1, [r7]
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* configure smbus alert through SMBA pin */
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t ctl = 0U;
 1828              		.loc 1 780 14
 1829 000a 0023     		movs	r3, #0
 1830 000c FB60     		str	r3, [r7, #12]
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl = I2C_CTL0(i2c_periph);
 1831              		.loc 1 782 11
 1832 000e 7B68     		ldr	r3, [r7, #4]
 1833              		.loc 1 782 9
 1834 0010 1B68     		ldr	r3, [r3]
 1835 0012 FB60     		str	r3, [r7, #12]
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl &= ~(I2C_CTL0_SALT);
 1836              		.loc 1 783 9
 1837 0014 FB68     		ldr	r3, [r7, #12]
 1838 0016 23F40053 		bic	r3, r3, #8192
 1839 001a FB60     		str	r3, [r7, #12]
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl |= smbuspara;
 1840              		.loc 1 784 9
 1841 001c FA68     		ldr	r2, [r7, #12]
 1842 001e 3B68     		ldr	r3, [r7]
 1843 0020 1343     		orrs	r3, r3, r2
 1844 0022 FB60     		str	r3, [r7, #12]
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     I2C_CTL0(i2c_periph) = ctl;
 1845              		.loc 1 785 5
 1846 0024 7B68     		ldr	r3, [r7, #4]
 1847              		.loc 1 785 26
 1848 0026 FA68     		ldr	r2, [r7, #12]
 1849 0028 1A60     		str	r2, [r3]
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1850              		.loc 1 786 1
 1851 002a 00BF     		nop
 1852 002c 1437     		adds	r7, r7, #20
 1853              		.cfi_def_cfa_offset 4
 1854 002e BD46     		mov	sp, r7
 1855              		.cfi_def_cfa_register 13
 1856              		@ sp needed
 1857 0030 80BC     		pop	{r7}
 1858              		.cfi_restore 7
 1859              		.cfi_def_cfa_offset 0
 1860 0032 7047     		bx	lr
 1861              		.cfi_endproc
 1862              	.LFE136:
 1864              		.section	.text.hals_i2c_pec_config,"ax",%progbits
 1865              		.align	1
 1866              		.global	hals_i2c_pec_config
 1867              		.syntax unified
 1868              		.thumb
 1869              		.thumb_func
 1870              		.fpu softvfp
 1872              	hals_i2c_pec_config:
 1873              	.LFB137:
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      configure I2C PEC calculation
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  i2c_periph: I2Cx(x=0,1)
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  pecstate:
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 only one parameter can be selected which is shown as below:
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_PEC_ENABLE: PEC calculation on
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_PEC_DISABLE: PEC calculation off
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hals_i2c_pec_config(uint32_t i2c_periph, uint32_t pecstate)
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1874              		.loc 1 799 1
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 16
 1877              		@ frame_needed = 1, uses_anonymous_args = 0
 1878              		@ link register save eliminated.
 1879 0000 80B4     		push	{r7}
 1880              		.cfi_def_cfa_offset 4
 1881              		.cfi_offset 7, -4
 1882 0002 85B0     		sub	sp, sp, #20
 1883              		.cfi_def_cfa_offset 24
 1884 0004 00AF     		add	r7, sp, #0
 1885              		.cfi_def_cfa_register 7
 1886 0006 7860     		str	r0, [r7, #4]
 1887 0008 3960     		str	r1, [r7]
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* on/off PEC calculation */
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t ctl = 0U;
 1888              		.loc 1 801 14
 1889 000a 0023     		movs	r3, #0
 1890 000c FB60     		str	r3, [r7, #12]
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl = I2C_CTL0(i2c_periph);
 1891              		.loc 1 803 11
 1892 000e 7B68     		ldr	r3, [r7, #4]
 1893              		.loc 1 803 9
 1894 0010 1B68     		ldr	r3, [r3]
 1895 0012 FB60     		str	r3, [r7, #12]
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl &= ~(I2C_CTL0_PECEN);
 1896              		.loc 1 804 9
 1897 0014 FB68     		ldr	r3, [r7, #12]
 1898 0016 23F02003 		bic	r3, r3, #32
 1899 001a FB60     		str	r3, [r7, #12]
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl |= pecstate;
 1900              		.loc 1 805 9
 1901 001c FA68     		ldr	r2, [r7, #12]
 1902 001e 3B68     		ldr	r3, [r7]
 1903 0020 1343     		orrs	r3, r3, r2
 1904 0022 FB60     		str	r3, [r7, #12]
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     I2C_CTL0(i2c_periph) = ctl;
 1905              		.loc 1 806 5
 1906 0024 7B68     		ldr	r3, [r7, #4]
 1907              		.loc 1 806 26
 1908 0026 FA68     		ldr	r2, [r7, #12]
 1909 0028 1A60     		str	r2, [r3]
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1910              		.loc 1 807 1
 1911 002a 00BF     		nop
 1912 002c 1437     		adds	r7, r7, #20
 1913              		.cfi_def_cfa_offset 4
 1914 002e BD46     		mov	sp, r7
 1915              		.cfi_def_cfa_register 13
 1916              		@ sp needed
 1917 0030 80BC     		pop	{r7}
 1918              		.cfi_restore 7
 1919              		.cfi_def_cfa_offset 0
 1920 0032 7047     		bx	lr
 1921              		.cfi_endproc
 1922              	.LFE137:
 1924              		.section	.text.hals_i2c_pec_transfer_config,"ax",%progbits
 1925              		.align	1
 1926              		.global	hals_i2c_pec_transfer_config
 1927              		.syntax unified
 1928              		.thumb
 1929              		.thumb_func
 1930              		.fpu softvfp
 1932              	hals_i2c_pec_transfer_config:
 1933              	.LFB138:
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      configure whether to transfer PEC value
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  i2c_periph: I2Cx(x=0,1)
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  pecpara:
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 only one parameter can be selected which is shown as below:
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_PECTRANS_ENABLE: transfer PEC value
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****       \arg        I2C_PECTRANS_DISABLE: not transfer PEC value
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** void hals_i2c_pec_transfer_config(uint32_t i2c_periph, uint32_t pecpara)
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1934              		.loc 1 820 1
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 16
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938              		@ link register save eliminated.
 1939 0000 80B4     		push	{r7}
 1940              		.cfi_def_cfa_offset 4
 1941              		.cfi_offset 7, -4
 1942 0002 85B0     		sub	sp, sp, #20
 1943              		.cfi_def_cfa_offset 24
 1944 0004 00AF     		add	r7, sp, #0
 1945              		.cfi_def_cfa_register 7
 1946 0006 7860     		str	r0, [r7, #4]
 1947 0008 3960     		str	r1, [r7]
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* whether to transfer PEC */
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t ctl = 0U;
 1948              		.loc 1 822 14
 1949 000a 0023     		movs	r3, #0
 1950 000c FB60     		str	r3, [r7, #12]
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl = I2C_CTL0(i2c_periph);
 1951              		.loc 1 824 11
 1952 000e 7B68     		ldr	r3, [r7, #4]
 1953              		.loc 1 824 9
 1954 0010 1B68     		ldr	r3, [r3]
 1955 0012 FB60     		str	r3, [r7, #12]
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl &= ~(I2C_CTL0_PECTRANS);
 1956              		.loc 1 825 9
 1957 0014 FB68     		ldr	r3, [r7, #12]
 1958 0016 23F48053 		bic	r3, r3, #4096
 1959 001a FB60     		str	r3, [r7, #12]
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     ctl |= pecpara;
 1960              		.loc 1 826 9
 1961 001c FA68     		ldr	r2, [r7, #12]
 1962 001e 3B68     		ldr	r3, [r7]
 1963 0020 1343     		orrs	r3, r3, r2
 1964 0022 FB60     		str	r3, [r7, #12]
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     I2C_CTL0(i2c_periph) = ctl;
 1965              		.loc 1 827 5
 1966 0024 7B68     		ldr	r3, [r7, #4]
 1967              		.loc 1 827 26
 1968 0026 FA68     		ldr	r2, [r7, #12]
 1969 0028 1A60     		str	r2, [r3]
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 1970              		.loc 1 828 1
 1971 002a 00BF     		nop
 1972 002c 1437     		adds	r7, r7, #20
 1973              		.cfi_def_cfa_offset 4
 1974 002e BD46     		mov	sp, r7
 1975              		.cfi_def_cfa_register 13
 1976              		@ sp needed
 1977 0030 80BC     		pop	{r7}
 1978              		.cfi_restore 7
 1979              		.cfi_def_cfa_offset 0
 1980 0032 7047     		bx	lr
 1981              		.cfi_endproc
 1982              	.LFE138:
 1984              		.section	.text._smbus_wait_flag_timeout,"ax",%progbits
 1985              		.align	1
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1989              		.fpu softvfp
 1991              	_smbus_wait_flag_timeout:
 1992              	.LFB139:
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      wait the flag status until timeout
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus_periph: I2Cx(x=0,1)
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  flag: I2C flags, refer to i2c_flag_enum
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  status: the status of I2C flag to wait
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  timeout_ms: timeout duration
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static int32_t _smbus_wait_flag_timeout(uint32_t smbus_periph, i2c_flag_enum flag, FlagStatus statu
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 1993              		.loc 1 840 1
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 24
 1996              		@ frame_needed = 1, uses_anonymous_args = 0
 1997 0000 80B5     		push	{r7, lr}
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 7, -8
 2000              		.cfi_offset 14, -4
 2001 0002 86B0     		sub	sp, sp, #24
 2002              		.cfi_def_cfa_offset 32
 2003 0004 00AF     		add	r7, sp, #0
 2004              		.cfi_def_cfa_register 7
 2005 0006 F860     		str	r0, [r7, #12]
 2006 0008 7B60     		str	r3, [r7, #4]
 2007 000a 0B46     		mov	r3, r1	@ movhi
 2008 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 2009 000e 1346     		mov	r3, r2
 2010 0010 7B72     		strb	r3, [r7, #9]
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t tick_start = 0;
 2011              		.loc 1 841 14
 2012 0012 0023     		movs	r3, #0
 2013 0014 7B61     		str	r3, [r7, #20]
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     tick_start = hal_sys_basetick_count_get();
 2014              		.loc 1 843 18
 2015 0016 FFF7FEFF 		bl	hal_sys_basetick_count_get
 2016 001a 7861     		str	r0, [r7, #20]
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     /* wait flag status RESET */
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(RESET == status) {
 2017              		.loc 1 845 7
 2018 001c 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2019 001e 002B     		cmp	r3, #0
 2020 0020 25D1     		bne	.L96
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         while(SET == hals_i2c_flag_get(smbus_periph, flag)) {
 2021              		.loc 1 846 14
 2022 0022 0DE0     		b	.L92
 2023              	.L94:
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2024              		.loc 1 847 15
 2025 0024 7B68     		ldr	r3, [r7, #4]
 2026 0026 B3F1FF3F 		cmp	r3, #-1
 2027 002a 09D0     		beq	.L92
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 2028              		.loc 1 848 27
 2029 002c 7968     		ldr	r1, [r7, #4]
 2030 002e 7869     		ldr	r0, [r7, #20]
 2031 0030 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2032 0034 0346     		mov	r3, r0
 2033              		.loc 1 848 19
 2034 0036 012B     		cmp	r3, #1
 2035 0038 02D1     		bne	.L92
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     HAL_DEBUGW("i2c get flag timeout");
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     return HAL_ERR_TIMEOUT;
 2036              		.loc 1 850 28
 2037 003a 6FF00403 		mvn	r3, #4
 2038 003e 1FE0     		b	.L93
 2039              	.L92:
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2040              		.loc 1 846 22
 2041 0040 7B89     		ldrh	r3, [r7, #10]
 2042 0042 1946     		mov	r1, r3
 2043 0044 F868     		ldr	r0, [r7, #12]
 2044 0046 FFF7FEFF 		bl	hals_i2c_flag_get
 2045 004a 0346     		mov	r3, r0
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2046              		.loc 1 846 14
 2047 004c 012B     		cmp	r3, #1
 2048 004e E9D0     		beq	.L94
 2049 0050 15E0     		b	.L95
 2050              	.L97:
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 }
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             }
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else {
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* wait flag status SET */
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         while(RESET == hals_i2c_flag_get(smbus_periph, flag)) {
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2051              		.loc 1 857 15
 2052 0052 7B68     		ldr	r3, [r7, #4]
 2053 0054 B3F1FF3F 		cmp	r3, #-1
 2054 0058 09D0     		beq	.L96
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 2055              		.loc 1 858 27
 2056 005a 7968     		ldr	r1, [r7, #4]
 2057 005c 7869     		ldr	r0, [r7, #20]
 2058 005e FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2059 0062 0346     		mov	r3, r0
 2060              		.loc 1 858 19
 2061 0064 012B     		cmp	r3, #1
 2062 0066 02D1     		bne	.L96
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     HAL_DEBUGW("i2c get flag timeout");
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     return HAL_ERR_TIMEOUT;
 2063              		.loc 1 860 28
 2064 0068 6FF00403 		mvn	r3, #4
 2065 006c 08E0     		b	.L93
 2066              	.L96:
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2067              		.loc 1 856 24
 2068 006e 7B89     		ldrh	r3, [r7, #10]
 2069 0070 1946     		mov	r1, r3
 2070 0072 F868     		ldr	r0, [r7, #12]
 2071 0074 FFF7FEFF 		bl	hals_i2c_flag_get
 2072 0078 0346     		mov	r3, r0
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2073              		.loc 1 856 14
 2074 007a 002B     		cmp	r3, #0
 2075 007c E9D0     		beq	.L97
 2076              	.L95:
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 }
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             }
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     return HAL_ERR_NONE;
 2077              		.loc 1 865 12
 2078 007e 0023     		movs	r3, #0
 2079              	.L93:
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 2080              		.loc 1 866 1
 2081 0080 1846     		mov	r0, r3
 2082 0082 1837     		adds	r7, r7, #24
 2083              		.cfi_def_cfa_offset 8
 2084 0084 BD46     		mov	sp, r7
 2085              		.cfi_def_cfa_register 13
 2086              		@ sp needed
 2087 0086 80BD     		pop	{r7, pc}
 2088              		.cfi_endproc
 2089              	.LFE139:
 2091              		.section	.text._smbus_master_transmit_interrupt,"ax",%progbits
 2092              		.align	1
 2093              		.syntax unified
 2094              		.thumb
 2095              		.thumb_func
 2096              		.fpu softvfp
 2098              	_smbus_master_transmit_interrupt:
 2099              	.LFB140:
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      event handler in SMBUS master transmit mode
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus: SMBUS device information structrue
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_master_transmit_interrupt(void *smbus)
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 2100              		.loc 1 877 1
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 24
 2103              		@ frame_needed = 1, uses_anonymous_args = 0
 2104 0000 80B5     		push	{r7, lr}
 2105              		.cfi_def_cfa_offset 8
 2106              		.cfi_offset 7, -8
 2107              		.cfi_offset 14, -4
 2108 0002 86B0     		sub	sp, sp, #24
 2109              		.cfi_def_cfa_offset 32
 2110 0004 00AF     		add	r7, sp, #0
 2111              		.cfi_def_cfa_register 7
 2112 0006 7860     		str	r0, [r7, #4]
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t length = 0;
 2113              		.loc 1 878 14
 2114 0008 0023     		movs	r3, #0
 2115 000a 7B61     		str	r3, [r7, #20]
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hal_smbus_dev_struct *p_smbus = smbus;
 2116              		.loc 1 880 27
 2117 000c 7B68     		ldr	r3, [r7, #4]
 2118 000e 3B61     		str	r3, [r7, #16]
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->tx_callback;
 2119              		.loc 1 881 58
 2120 0010 3B69     		ldr	r3, [r7, #16]
 2121 0012 DB6B     		ldr	r3, [r3, #60]
 2122              		.loc 1 881 23
 2123 0014 FB60     		str	r3, [r7, #12]
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     length = p_smbus->txbuffer.length;
 2124              		.loc 1 883 12
 2125 0016 3B69     		ldr	r3, [r7, #16]
 2126 0018 5B69     		ldr	r3, [r3, #20]
 2127 001a 7B61     		str	r3, [r7, #20]
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_SBSEND)) {
 2128              		.loc 1 885 8
 2129 001c 3B69     		ldr	r3, [r7, #16]
 2130 001e 1B68     		ldr	r3, [r3]
 2131 0020 3E49     		ldr	r1, .L106
 2132 0022 1846     		mov	r0, r3
 2133 0024 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2134 0028 0346     		mov	r3, r0
 2135              		.loc 1 885 7
 2136 002a 002B     		cmp	r3, #0
 2137 002c 09D0     		beq	.L99
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* send slave address */
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_master_addressing(p_smbus->periph, p_smbus->slave_address, SMBUS_TRANSMITTER);
 2138              		.loc 1 887 9
 2139 002e 3B69     		ldr	r3, [r7, #16]
 2140 0030 1868     		ldr	r0, [r3]
 2141              		.loc 1 887 60
 2142 0032 3B69     		ldr	r3, [r7, #16]
 2143 0034 9B88     		ldrh	r3, [r3, #4]
 2144              		.loc 1 887 9
 2145 0036 6FF00102 		mvn	r2, #1
 2146 003a 1946     		mov	r1, r3
 2147 003c FFF7FEFF 		bl	hals_i2c_master_addressing
 2148 0040 62E0     		b	.L100
 2149              	.L99:
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_ADDSEND)) {
 2150              		.loc 1 889 15
 2151 0042 3B69     		ldr	r3, [r7, #16]
 2152 0044 1B68     		ldr	r3, [r3]
 2153 0046 3649     		ldr	r1, .L106+4
 2154 0048 1846     		mov	r0, r3
 2155 004a FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2156 004e 0346     		mov	r3, r0
 2157              		.loc 1 889 14
 2158 0050 002B     		cmp	r3, #0
 2159 0052 06D0     		beq	.L101
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /*clear ADDSEND bit */
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(p_smbus->periph, I2C_INT_FLAG_ADDSEND);
 2160              		.loc 1 891 9
 2161 0054 3B69     		ldr	r3, [r7, #16]
 2162 0056 1B68     		ldr	r3, [r3]
 2163 0058 3149     		ldr	r1, .L106+4
 2164 005a 1846     		mov	r0, r3
 2165 005c FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 2166 0060 52E0     		b	.L100
 2167              	.L101:
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_TBE)) {
 2168              		.loc 1 892 15
 2169 0062 3B69     		ldr	r3, [r7, #16]
 2170 0064 1B68     		ldr	r3, [r3]
 2171 0066 2F49     		ldr	r1, .L106+8
 2172 0068 1846     		mov	r0, r3
 2173 006a FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2174 006e 0346     		mov	r3, r0
 2175              		.loc 1 892 14
 2176 0070 002B     		cmp	r3, #0
 2177 0072 49D0     		beq	.L100
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->txbuffer.pos < length) {
 2178              		.loc 1 893 29
 2179 0074 3B69     		ldr	r3, [r7, #16]
 2180 0076 9B69     		ldr	r3, [r3, #24]
 2181              		.loc 1 893 11
 2182 0078 7A69     		ldr	r2, [r7, #20]
 2183 007a 9A42     		cmp	r2, r3
 2184 007c 14D9     		bls	.L102
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transmit smbus data */
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_data_transmit(p_smbus->periph, (*p_smbus->txbuffer.buffer & (uint8_t)0xFFU));
 2185              		.loc 1 895 13
 2186 007e 3B69     		ldr	r3, [r7, #16]
 2187 0080 1A68     		ldr	r2, [r3]
 2188              		.loc 1 895 72
 2189 0082 3B69     		ldr	r3, [r7, #16]
 2190 0084 1B69     		ldr	r3, [r3, #16]
 2191              		.loc 1 895 13
 2192 0086 1B78     		ldrb	r3, [r3]
 2193 0088 DBB2     		uxtb	r3, r3
 2194 008a 1946     		mov	r1, r3
 2195 008c 1046     		mov	r0, r2
 2196 008e FFF7FEFF 		bl	hals_i2c_data_transmit
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.buffer++;
 2197              		.loc 1 897 30
 2198 0092 3B69     		ldr	r3, [r7, #16]
 2199 0094 1B69     		ldr	r3, [r3, #16]
 2200              		.loc 1 897 37
 2201 0096 5A1C     		adds	r2, r3, #1
 2202 0098 3B69     		ldr	r3, [r7, #16]
 2203 009a 1A61     		str	r2, [r3, #16]
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.pos++;
 2204              		.loc 1 898 30
 2205 009c 3B69     		ldr	r3, [r7, #16]
 2206 009e 9B69     		ldr	r3, [r3, #24]
 2207              		.loc 1 898 34
 2208 00a0 5A1C     		adds	r2, r3, #1
 2209 00a2 3B69     		ldr	r3, [r7, #16]
 2210 00a4 9A61     		str	r2, [r3, #24]
 2211 00a6 2FE0     		b	.L100
 2212              	.L102:
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else if(p_smbus->txbuffer.pos == length) {
 2213              		.loc 1 900 36
 2214 00a8 3B69     		ldr	r3, [r7, #16]
 2215 00aa 9B69     		ldr	r3, [r3, #24]
 2216              		.loc 1 900 18
 2217 00ac 7A69     		ldr	r2, [r7, #20]
 2218 00ae 9A42     		cmp	r2, r3
 2219 00b0 0DD1     		bne	.L103
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transfer the pec value */
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.pos++;
 2220              		.loc 1 902 30
 2221 00b2 3B69     		ldr	r3, [r7, #16]
 2222 00b4 9B69     		ldr	r3, [r3, #24]
 2223              		.loc 1 902 34
 2224 00b6 5A1C     		adds	r2, r3, #1
 2225 00b8 3B69     		ldr	r3, [r7, #16]
 2226 00ba 9A61     		str	r2, [r3, #24]
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_pec_transfer_config(p_smbus->periph, p_smbus->smbus_pec_transfer);
 2227              		.loc 1 903 13
 2228 00bc 3B69     		ldr	r3, [r7, #16]
 2229 00be 1A68     		ldr	r2, [r3]
 2230 00c0 3B69     		ldr	r3, [r7, #16]
 2231 00c2 9B6A     		ldr	r3, [r3, #40]
 2232 00c4 1946     		mov	r1, r3
 2233 00c6 1046     		mov	r0, r2
 2234 00c8 FFF7FEFF 		bl	hals_i2c_pec_transfer_config
 2235 00cc 1CE0     		b	.L100
 2236              	.L103:
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else {
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* the master sends a stop condition to I2C bus */
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             HAL_I2C_STOP_ON_BUS(p_smbus->periph);
 2237              		.loc 1 907 13
 2238 00ce 3B69     		ldr	r3, [r7, #16]
 2239 00d0 1B68     		ldr	r3, [r3]
 2240 00d2 1B68     		ldr	r3, [r3]
 2241 00d4 3A69     		ldr	r2, [r7, #16]
 2242 00d6 1268     		ldr	r2, [r2]
 2243 00d8 43F40073 		orr	r3, r3, #512
 2244 00dc 1360     		str	r3, [r2]
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* enable the I2C interrupt */
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
 2245              		.loc 1 909 13
 2246 00de 3B69     		ldr	r3, [r7, #16]
 2247 00e0 1B68     		ldr	r3, [r3]
 2248 00e2 40F20911 		movw	r1, #265
 2249 00e6 1846     		mov	r0, r3
 2250 00e8 FFF7FEFF 		bl	hals_i2c_interrupt_disable
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_BUF);
 2251              		.loc 1 910 13
 2252 00ec 3B69     		ldr	r3, [r7, #16]
 2253 00ee 1B68     		ldr	r3, [r3]
 2254 00f0 4FF48571 		mov	r1, #266
 2255 00f4 1846     		mov	r0, r3
 2256 00f6 FFF7FEFF 		bl	hals_i2c_interrupt_disable
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->smbus_irq.event_handle = NULL;
 2257              		.loc 1 911 45
 2258 00fa 3B69     		ldr	r3, [r7, #16]
 2259 00fc 0022     		movs	r2, #0
 2260 00fe 9A60     		str	r2, [r3, #8]
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->tx_state = HAL_SMBUS_STATE_READY;
 2261              		.loc 1 913 31
 2262 0100 3B69     		ldr	r3, [r7, #16]
 2263 0102 0022     		movs	r2, #0
 2264 0104 83F83420 		strb	r2, [r3, #52]
 2265              	.L100:
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(NULL != p_func) {
 2266              		.loc 1 917 7
 2267 0108 FB68     		ldr	r3, [r7, #12]
 2268 010a 002B     		cmp	r3, #0
 2269 010c 02D0     		beq	.L105
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_func(p_smbus);
 2270              		.loc 1 918 9
 2271 010e FB68     		ldr	r3, [r7, #12]
 2272 0110 3869     		ldr	r0, [r7, #16]
 2273 0112 9847     		blx	r3
 2274              	.LVL2:
 2275              	.L105:
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 2276              		.loc 1 921 1
 2277 0114 00BF     		nop
 2278 0116 1837     		adds	r7, r7, #24
 2279              		.cfi_def_cfa_offset 8
 2280 0118 BD46     		mov	sp, r7
 2281              		.cfi_def_cfa_register 13
 2282              		@ sp needed
 2283 011a 80BD     		pop	{r7, pc}
 2284              	.L107:
 2285              		.align	2
 2286              	.L106:
 2287 011c 09010005 		.word	83886345
 2288 0120 09010105 		.word	83951881
 2289 0124 09010705 		.word	84345097
 2290              		.cfi_endproc
 2291              	.LFE140:
 2293              		.section	.text._smbus_slave_transmit_interrupt,"ax",%progbits
 2294              		.align	1
 2295              		.syntax unified
 2296              		.thumb
 2297              		.thumb_func
 2298              		.fpu softvfp
 2300              	_smbus_slave_transmit_interrupt:
 2301              	.LFB141:
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      event handler in SMBUS slave transmit mode
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus: SMBUS device information structrue
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_slave_transmit_interrupt(void *smbus)
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 2302              		.loc 1 932 1
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 16
 2305              		@ frame_needed = 1, uses_anonymous_args = 0
 2306 0000 80B5     		push	{r7, lr}
 2307              		.cfi_def_cfa_offset 8
 2308              		.cfi_offset 7, -8
 2309              		.cfi_offset 14, -4
 2310 0002 84B0     		sub	sp, sp, #16
 2311              		.cfi_def_cfa_offset 24
 2312 0004 00AF     		add	r7, sp, #0
 2313              		.cfi_def_cfa_register 7
 2314 0006 7860     		str	r0, [r7, #4]
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t length = 0;
 2315              		.loc 1 933 14
 2316 0008 0023     		movs	r3, #0
 2317 000a FB60     		str	r3, [r7, #12]
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hal_smbus_dev_struct *p_smbus = smbus;
 2318              		.loc 1 935 27
 2319 000c 7B68     		ldr	r3, [r7, #4]
 2320 000e BB60     		str	r3, [r7, #8]
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     length = p_smbus->txbuffer.length;
 2321              		.loc 1 937 12
 2322 0010 BB68     		ldr	r3, [r7, #8]
 2323 0012 5B69     		ldr	r3, [r3, #20]
 2324 0014 FB60     		str	r3, [r7, #12]
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_ADDSEND)) {
 2325              		.loc 1 939 8
 2326 0016 BB68     		ldr	r3, [r7, #8]
 2327 0018 1B68     		ldr	r3, [r3]
 2328 001a 2F49     		ldr	r1, .L113
 2329 001c 1846     		mov	r0, r3
 2330 001e FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2331 0022 0346     		mov	r3, r0
 2332              		.loc 1 939 7
 2333 0024 002B     		cmp	r3, #0
 2334 0026 06D0     		beq	.L109
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* clear the ADDSEND bit */
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(p_smbus->periph, I2C_INT_FLAG_ADDSEND);
 2335              		.loc 1 941 9
 2336 0028 BB68     		ldr	r3, [r7, #8]
 2337 002a 1B68     		ldr	r3, [r3]
 2338 002c 2A49     		ldr	r1, .L113
 2339 002e 1846     		mov	r0, r3
 2340 0030 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if((hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_TBE)) && \
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****               (!hals_i2c_interrupt_flag_get(I2C1, I2C_INT_FLAG_AERR))) {
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->txbuffer.pos < length) {
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transmit smbus data */
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_data_transmit(p_smbus->periph, (*p_smbus->txbuffer.buffer & (uint8_t)0xFFU));
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.buffer++;
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.pos++;
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else if(p_smbus->txbuffer.pos == length) {
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transfer the pec value */
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_pec_transfer_config(p_smbus->periph, p_smbus->smbus_pec_transfer);
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_BUF);
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->smbus_irq.event_handle = NULL;
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->tx_state = HAL_SMBUS_STATE_READY;
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 2341              		.loc 1 960 1
 2342 0034 4BE0     		b	.L112
 2343              	.L109:
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if((hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_TBE)) && \
 2344              		.loc 1 942 16
 2345 0036 BB68     		ldr	r3, [r7, #8]
 2346 0038 1B68     		ldr	r3, [r3]
 2347 003a 2849     		ldr	r1, .L113+4
 2348 003c 1846     		mov	r0, r3
 2349 003e FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2350 0042 0346     		mov	r3, r0
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if((hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_TBE)) && \
 2351              		.loc 1 942 14
 2352 0044 002B     		cmp	r3, #0
 2353 0046 42D0     		beq	.L112
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->txbuffer.pos < length) {
 2354              		.loc 1 943 17 discriminator 1
 2355 0048 2549     		ldr	r1, .L113+8
 2356 004a 2648     		ldr	r0, .L113+12
 2357 004c FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2358 0050 0346     		mov	r3, r0
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if((hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_TBE)) && \
 2359              		.loc 1 942 80 discriminator 1
 2360 0052 002B     		cmp	r3, #0
 2361 0054 3BD1     		bne	.L112
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transmit smbus data */
 2362              		.loc 1 944 29
 2363 0056 BB68     		ldr	r3, [r7, #8]
 2364 0058 9B69     		ldr	r3, [r3, #24]
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transmit smbus data */
 2365              		.loc 1 944 11
 2366 005a FA68     		ldr	r2, [r7, #12]
 2367 005c 9A42     		cmp	r2, r3
 2368 005e 14D9     		bls	.L111
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2369              		.loc 1 946 13
 2370 0060 BB68     		ldr	r3, [r7, #8]
 2371 0062 1A68     		ldr	r2, [r3]
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2372              		.loc 1 946 72
 2373 0064 BB68     		ldr	r3, [r7, #8]
 2374 0066 1B69     		ldr	r3, [r3, #16]
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2375              		.loc 1 946 13
 2376 0068 1B78     		ldrb	r3, [r3]
 2377 006a DBB2     		uxtb	r3, r3
 2378 006c 1946     		mov	r1, r3
 2379 006e 1046     		mov	r0, r2
 2380 0070 FFF7FEFF 		bl	hals_i2c_data_transmit
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.pos++;
 2381              		.loc 1 948 30
 2382 0074 BB68     		ldr	r3, [r7, #8]
 2383 0076 1B69     		ldr	r3, [r3, #16]
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->txbuffer.pos++;
 2384              		.loc 1 948 37
 2385 0078 5A1C     		adds	r2, r3, #1
 2386 007a BB68     		ldr	r3, [r7, #8]
 2387 007c 1A61     		str	r2, [r3, #16]
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else if(p_smbus->txbuffer.pos == length) {
 2388              		.loc 1 949 30
 2389 007e BB68     		ldr	r3, [r7, #8]
 2390 0080 9B69     		ldr	r3, [r3, #24]
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else if(p_smbus->txbuffer.pos == length) {
 2391              		.loc 1 949 34
 2392 0082 5A1C     		adds	r2, r3, #1
 2393 0084 BB68     		ldr	r3, [r7, #8]
 2394 0086 9A61     		str	r2, [r3, #24]
 2395              		.loc 1 960 1
 2396 0088 21E0     		b	.L112
 2397              	.L111:
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transfer the pec value */
 2398              		.loc 1 950 36
 2399 008a BB68     		ldr	r3, [r7, #8]
 2400 008c 9B69     		ldr	r3, [r3, #24]
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* transfer the pec value */
 2401              		.loc 1 950 18
 2402 008e FA68     		ldr	r2, [r7, #12]
 2403 0090 9A42     		cmp	r2, r3
 2404 0092 1CD1     		bne	.L112
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2405              		.loc 1 952 13
 2406 0094 BB68     		ldr	r3, [r7, #8]
 2407 0096 1A68     		ldr	r2, [r3]
 2408 0098 BB68     		ldr	r3, [r7, #8]
 2409 009a 9B6A     		ldr	r3, [r3, #40]
 2410 009c 1946     		mov	r1, r3
 2411 009e 1046     		mov	r0, r2
 2412 00a0 FFF7FEFF 		bl	hals_i2c_pec_transfer_config
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
 2413              		.loc 1 954 13
 2414 00a4 BB68     		ldr	r3, [r7, #8]
 2415 00a6 1B68     		ldr	r3, [r3]
 2416 00a8 4FF48571 		mov	r1, #266
 2417 00ac 1846     		mov	r0, r3
 2418 00ae FFF7FEFF 		bl	hals_i2c_interrupt_disable
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->smbus_irq.event_handle = NULL;
 2419              		.loc 1 955 13
 2420 00b2 BB68     		ldr	r3, [r7, #8]
 2421 00b4 1B68     		ldr	r3, [r3]
 2422 00b6 40F20911 		movw	r1, #265
 2423 00ba 1846     		mov	r0, r3
 2424 00bc FFF7FEFF 		bl	hals_i2c_interrupt_disable
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->tx_state = HAL_SMBUS_STATE_READY;
 2425              		.loc 1 956 45
 2426 00c0 BB68     		ldr	r3, [r7, #8]
 2427 00c2 0022     		movs	r2, #0
 2428 00c4 9A60     		str	r2, [r3, #8]
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 2429              		.loc 1 957 31
 2430 00c6 BB68     		ldr	r3, [r7, #8]
 2431 00c8 0022     		movs	r2, #0
 2432 00ca 83F83420 		strb	r2, [r3, #52]
 2433              	.L112:
 2434              		.loc 1 960 1
 2435 00ce 00BF     		nop
 2436 00d0 1037     		adds	r7, r7, #16
 2437              		.cfi_def_cfa_offset 8
 2438 00d2 BD46     		mov	sp, r7
 2439              		.cfi_def_cfa_register 13
 2440              		@ sp needed
 2441 00d4 80BD     		pop	{r7, pc}
 2442              	.L114:
 2443 00d6 00BF     		.align	2
 2444              	.L113:
 2445 00d8 09010105 		.word	83951881
 2446 00dc 09010705 		.word	84345097
 2447 00e0 08010A05 		.word	84541704
 2448 00e4 00580040 		.word	1073764352
 2449              		.cfi_endproc
 2450              	.LFE141:
 2452              		.section	.text._smbus_master_receive_interrupt,"ax",%progbits
 2453              		.align	1
 2454              		.syntax unified
 2455              		.thumb
 2456              		.thumb_func
 2457              		.fpu softvfp
 2459              	_smbus_master_receive_interrupt:
 2460              	.LFB142:
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      event handler in SMBUS master receive mode
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus: SMBUS device information structrue
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_master_receive_interrupt(void *smbus)
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 2461              		.loc 1 971 1
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 24
 2464              		@ frame_needed = 1, uses_anonymous_args = 0
 2465 0000 90B5     		push	{r4, r7, lr}
 2466              		.cfi_def_cfa_offset 12
 2467              		.cfi_offset 4, -12
 2468              		.cfi_offset 7, -8
 2469              		.cfi_offset 14, -4
 2470 0002 87B0     		sub	sp, sp, #28
 2471              		.cfi_def_cfa_offset 40
 2472 0004 00AF     		add	r7, sp, #0
 2473              		.cfi_def_cfa_register 7
 2474 0006 7860     		str	r0, [r7, #4]
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t length = 0;
 2475              		.loc 1 972 14
 2476 0008 0023     		movs	r3, #0
 2477 000a 7B61     		str	r3, [r7, #20]
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hal_smbus_dev_struct *p_smbus = smbus;
 2478              		.loc 1 974 27
 2479 000c 7B68     		ldr	r3, [r7, #4]
 2480 000e 3B61     		str	r3, [r7, #16]
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     length = p_smbus->rxbuffer.length;
 2481              		.loc 1 976 12
 2482 0010 3B69     		ldr	r3, [r7, #16]
 2483 0012 1B6A     		ldr	r3, [r3, #32]
 2484 0014 7B61     		str	r3, [r7, #20]
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_SBSEND)) {
 2485              		.loc 1 978 8
 2486 0016 3B69     		ldr	r3, [r7, #16]
 2487 0018 1B68     		ldr	r3, [r3]
 2488 001a 5C49     		ldr	r1, .L126
 2489 001c 1846     		mov	r0, r3
 2490 001e FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2491 0022 0346     		mov	r3, r0
 2492              		.loc 1 978 7
 2493 0024 002B     		cmp	r3, #0
 2494 0026 08D0     		beq	.L116
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* the master sends slave address */
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_master_addressing(p_smbus->periph, p_smbus->slave_address, SMBUS_RECEIVER);
 2495              		.loc 1 980 9
 2496 0028 3B69     		ldr	r3, [r7, #16]
 2497 002a 1868     		ldr	r0, [r3]
 2498              		.loc 1 980 60
 2499 002c 3B69     		ldr	r3, [r7, #16]
 2500 002e 9B88     		ldrh	r3, [r3, #4]
 2501              		.loc 1 980 9
 2502 0030 0122     		movs	r2, #1
 2503 0032 1946     		mov	r1, r3
 2504 0034 FFF7FEFF 		bl	hals_i2c_master_addressing
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_ADDSEND)) {
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if((length == 2) || (length == 1)) {
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* clear the ACKEN before the ADDSEND is cleared, PEC mode do not need */
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(p_smbus->smbus_pec_transfer != SMBUS_PECTRANS_ENABLE) {
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ack_config(p_smbus->periph, I2C_ACK_DISABLE);
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             }
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* clear the ADDSEND bit */
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_flag_clear(p_smbus->periph, I2C_INT_FLAG_ADDSEND);
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else {
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* clear the ADDSEND bit */
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_interrupt_flag_clear(p_smbus->periph, I2C_INT_FLAG_ADDSEND);
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_RBNE)) {
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->rxbuffer.pos < length) {
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(p_smbus->rxbuffer.pos == length - 3) {
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the second last data byte is received into the shift register */
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 while(!hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_BTC));
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* send a NACK for the last data byte, PEC mode do not need */
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 if(p_smbus->smbus_pec_transfer != SMBUS_PECTRANS_ENABLE) {
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     hals_i2c_ack_config(p_smbus->periph, I2C_ACK_DISABLE);
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 }
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             }
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* read a data byte from I2C_DATA*/
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             *p_smbus->rxbuffer.buffer = hals_i2c_data_receive(p_smbus->periph);
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->rxbuffer.buffer++;
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->rxbuffer.pos++;
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(p_smbus->rxbuffer.pos == length) {
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->rx_callback;
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the RBNE bit is set */
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* check the received PEC value */
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_pec_config(p_smbus->periph, p_smbus->smbus_pec_transfer);
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* send a stop condition */
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 HAL_I2C_STOP_ON_BUS(p_smbus->periph);
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ack_config(p_smbus->periph, I2C_ACK_ENABLE);
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ackpos_config(p_smbus->periph, I2C_ACKPOS_CURRENT);
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 p_smbus->rx_state = HAL_SMBUS_STATE_READY;
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 p_smbus->smbus_irq.event_handle = NULL;
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* disable the I2C0 interrupt */
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_BUF);
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 if(NULL != p_func) {
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     p_func(p_smbus);
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 }
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             }
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 2505              		.loc 1 1034 1
 2506 0038 A3E0     		b	.L125
 2507              	.L116:
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_ADDSEND)) {
 2508              		.loc 1 981 15
 2509 003a 3B69     		ldr	r3, [r7, #16]
 2510 003c 1B68     		ldr	r3, [r3]
 2511 003e 5449     		ldr	r1, .L126+4
 2512 0040 1846     		mov	r0, r3
 2513 0042 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2514 0046 0346     		mov	r3, r0
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_ADDSEND)) {
 2515              		.loc 1 981 14
 2516 0048 002B     		cmp	r3, #0
 2517 004a 1ED0     		beq	.L118
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* clear the ACKEN before the ADDSEND is cleared, PEC mode do not need */
 2518              		.loc 1 982 11
 2519 004c 7B69     		ldr	r3, [r7, #20]
 2520 004e 022B     		cmp	r3, #2
 2521 0050 02D0     		beq	.L119
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* clear the ACKEN before the ADDSEND is cleared, PEC mode do not need */
 2522              		.loc 1 982 26 discriminator 1
 2523 0052 7B69     		ldr	r3, [r7, #20]
 2524 0054 012B     		cmp	r3, #1
 2525 0056 11D1     		bne	.L120
 2526              	.L119:
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ack_config(p_smbus->periph, I2C_ACK_DISABLE);
 2527              		.loc 1 984 23
 2528 0058 3B69     		ldr	r3, [r7, #16]
 2529 005a 9B6A     		ldr	r3, [r3, #40]
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ack_config(p_smbus->periph, I2C_ACK_DISABLE);
 2530              		.loc 1 984 15
 2531 005c B3F5805F 		cmp	r3, #4096
 2532 0060 05D0     		beq	.L121
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             }
 2533              		.loc 1 985 17
 2534 0062 3B69     		ldr	r3, [r7, #16]
 2535 0064 1B68     		ldr	r3, [r3]
 2536 0066 0021     		movs	r1, #0
 2537 0068 1846     		mov	r0, r3
 2538 006a FFF7FEFF 		bl	hals_i2c_ack_config
 2539              	.L121:
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         } else {
 2540              		.loc 1 989 13
 2541 006e 3B69     		ldr	r3, [r7, #16]
 2542 0070 1B68     		ldr	r3, [r3]
 2543 0072 4749     		ldr	r1, .L126+4
 2544 0074 1846     		mov	r0, r3
 2545 0076 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 2546              		.loc 1 1034 1
 2547 007a 82E0     		b	.L125
 2548              	.L120:
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 2549              		.loc 1 992 13
 2550 007c 3B69     		ldr	r3, [r7, #16]
 2551 007e 1B68     		ldr	r3, [r3]
 2552 0080 4349     		ldr	r1, .L126+4
 2553 0082 1846     		mov	r0, r3
 2554 0084 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
 2555              		.loc 1 1034 1
 2556 0088 7BE0     		b	.L125
 2557              	.L118:
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->rxbuffer.pos < length) {
 2558              		.loc 1 994 15
 2559 008a 3B69     		ldr	r3, [r7, #16]
 2560 008c 1B68     		ldr	r3, [r3]
 2561 008e 4149     		ldr	r1, .L126+8
 2562 0090 1846     		mov	r0, r3
 2563 0092 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2564 0096 0346     		mov	r3, r0
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->rxbuffer.pos < length) {
 2565              		.loc 1 994 14
 2566 0098 002B     		cmp	r3, #0
 2567 009a 72D0     		beq	.L125
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(p_smbus->rxbuffer.pos == length - 3) {
 2568              		.loc 1 995 29
 2569 009c 3B69     		ldr	r3, [r7, #16]
 2570 009e 5B6A     		ldr	r3, [r3, #36]
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             if(p_smbus->rxbuffer.pos == length - 3) {
 2571              		.loc 1 995 11
 2572 00a0 7A69     		ldr	r2, [r7, #20]
 2573 00a2 9A42     		cmp	r2, r3
 2574 00a4 6DD9     		bls	.L125
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the second last data byte is received into the shift register */
 2575              		.loc 1 996 33
 2576 00a6 3B69     		ldr	r3, [r7, #16]
 2577 00a8 5A6A     		ldr	r2, [r3, #36]
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the second last data byte is received into the shift register */
 2578              		.loc 1 996 48
 2579 00aa 7B69     		ldr	r3, [r7, #20]
 2580 00ac 033B     		subs	r3, r3, #3
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the second last data byte is received into the shift register */
 2581              		.loc 1 996 15
 2582 00ae 9A42     		cmp	r2, r3
 2583 00b0 14D1     		bne	.L123
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* send a NACK for the last data byte, PEC mode do not need */
 2584              		.loc 1 998 22
 2585 00b2 00BF     		nop
 2586              	.L124:
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* send a NACK for the last data byte, PEC mode do not need */
 2587              		.loc 1 998 24 discriminator 1
 2588 00b4 3B69     		ldr	r3, [r7, #16]
 2589 00b6 1B68     		ldr	r3, [r3]
 2590 00b8 3749     		ldr	r1, .L126+12
 2591 00ba 1846     		mov	r0, r3
 2592 00bc FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2593 00c0 0346     		mov	r3, r0
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* send a NACK for the last data byte, PEC mode do not need */
 2594              		.loc 1 998 22 discriminator 1
 2595 00c2 002B     		cmp	r3, #0
 2596 00c4 F6D0     		beq	.L124
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     hals_i2c_ack_config(p_smbus->periph, I2C_ACK_DISABLE);
 2597              		.loc 1 1000 27
 2598 00c6 3B69     		ldr	r3, [r7, #16]
 2599 00c8 9B6A     		ldr	r3, [r3, #40]
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     hals_i2c_ack_config(p_smbus->periph, I2C_ACK_DISABLE);
 2600              		.loc 1 1000 19
 2601 00ca B3F5805F 		cmp	r3, #4096
 2602 00ce 05D0     		beq	.L123
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 }
 2603              		.loc 1 1001 21
 2604 00d0 3B69     		ldr	r3, [r7, #16]
 2605 00d2 1B68     		ldr	r3, [r3]
 2606 00d4 0021     		movs	r1, #0
 2607 00d6 1846     		mov	r0, r3
 2608 00d8 FFF7FEFF 		bl	hals_i2c_ack_config
 2609              	.L123:
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2610              		.loc 1 1005 41
 2611 00dc 3B69     		ldr	r3, [r7, #16]
 2612 00de 1A68     		ldr	r2, [r3]
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2613              		.loc 1 1005 31
 2614 00e0 3B69     		ldr	r3, [r7, #16]
 2615 00e2 DC69     		ldr	r4, [r3, #28]
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2616              		.loc 1 1005 41
 2617 00e4 1046     		mov	r0, r2
 2618 00e6 FFF7FEFF 		bl	hals_i2c_data_receive
 2619 00ea 0346     		mov	r3, r0
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2620              		.loc 1 1005 39
 2621 00ec 2370     		strb	r3, [r4]
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->rxbuffer.pos++;
 2622              		.loc 1 1007 30
 2623 00ee 3B69     		ldr	r3, [r7, #16]
 2624 00f0 DB69     		ldr	r3, [r3, #28]
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_smbus->rxbuffer.pos++;
 2625              		.loc 1 1007 37
 2626 00f2 5A1C     		adds	r2, r3, #1
 2627 00f4 3B69     		ldr	r3, [r7, #16]
 2628 00f6 DA61     		str	r2, [r3, #28]
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2629              		.loc 1 1008 30
 2630 00f8 3B69     		ldr	r3, [r7, #16]
 2631 00fa 5B6A     		ldr	r3, [r3, #36]
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2632              		.loc 1 1008 34
 2633 00fc 5A1C     		adds	r2, r3, #1
 2634 00fe 3B69     		ldr	r3, [r7, #16]
 2635 0100 5A62     		str	r2, [r3, #36]
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->rx_callback;
 2636              		.loc 1 1010 33
 2637 0102 3B69     		ldr	r3, [r7, #16]
 2638 0104 5B6A     		ldr	r3, [r3, #36]
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->rx_callback;
 2639              		.loc 1 1010 15
 2640 0106 7A69     		ldr	r2, [r7, #20]
 2641 0108 9A42     		cmp	r2, r3
 2642 010a 3AD1     		bne	.L125
 2643              	.LBB2:
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the RBNE bit is set */
 2644              		.loc 1 1011 70
 2645 010c 3B69     		ldr	r3, [r7, #16]
 2646 010e 9B6B     		ldr	r3, [r3, #56]
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* wait until the RBNE bit is set */
 2647              		.loc 1 1011 35
 2648 0110 FB60     		str	r3, [r7, #12]
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2649              		.loc 1 1014 17
 2650 0112 3B69     		ldr	r3, [r7, #16]
 2651 0114 1A68     		ldr	r2, [r3]
 2652 0116 3B69     		ldr	r3, [r7, #16]
 2653 0118 9B6A     		ldr	r3, [r3, #40]
 2654 011a 1946     		mov	r1, r3
 2655 011c 1046     		mov	r0, r2
 2656 011e FFF7FEFF 		bl	hals_i2c_pec_config
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ack_config(p_smbus->periph, I2C_ACK_ENABLE);
 2657              		.loc 1 1017 17
 2658 0122 3B69     		ldr	r3, [r7, #16]
 2659 0124 1B68     		ldr	r3, [r3]
 2660 0126 1B68     		ldr	r3, [r3]
 2661 0128 3A69     		ldr	r2, [r7, #16]
 2662 012a 1268     		ldr	r2, [r2]
 2663 012c 43F40073 		orr	r3, r3, #512
 2664 0130 1360     		str	r3, [r2]
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_ackpos_config(p_smbus->periph, I2C_ACKPOS_CURRENT);
 2665              		.loc 1 1018 17
 2666 0132 3B69     		ldr	r3, [r7, #16]
 2667 0134 1B68     		ldr	r3, [r3]
 2668 0136 4FF48061 		mov	r1, #1024
 2669 013a 1846     		mov	r0, r3
 2670 013c FFF7FEFF 		bl	hals_i2c_ack_config
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2671              		.loc 1 1019 17
 2672 0140 3B69     		ldr	r3, [r7, #16]
 2673 0142 1B68     		ldr	r3, [r3]
 2674 0144 0021     		movs	r1, #0
 2675 0146 1846     		mov	r0, r3
 2676 0148 FFF7FEFF 		bl	hals_i2c_ackpos_config
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 p_smbus->smbus_irq.event_handle = NULL;
 2677              		.loc 1 1021 35
 2678 014c 3B69     		ldr	r3, [r7, #16]
 2679 014e 0022     		movs	r2, #0
 2680 0150 83F83520 		strb	r2, [r3, #53]
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 /* disable the I2C0 interrupt */
 2681              		.loc 1 1022 49
 2682 0154 3B69     		ldr	r3, [r7, #16]
 2683 0156 0022     		movs	r2, #0
 2684 0158 9A60     		str	r2, [r3, #8]
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
 2685              		.loc 1 1024 17
 2686 015a 3B69     		ldr	r3, [r7, #16]
 2687 015c 1B68     		ldr	r3, [r3]
 2688 015e 4FF48571 		mov	r1, #266
 2689 0162 1846     		mov	r0, r3
 2690 0164 FFF7FEFF 		bl	hals_i2c_interrupt_disable
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2691              		.loc 1 1025 17
 2692 0168 3B69     		ldr	r3, [r7, #16]
 2693 016a 1B68     		ldr	r3, [r3]
 2694 016c 40F20911 		movw	r1, #265
 2695 0170 1846     		mov	r0, r3
 2696 0172 FFF7FEFF 		bl	hals_i2c_interrupt_disable
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                     p_func(p_smbus);
 2697              		.loc 1 1027 19
 2698 0176 FB68     		ldr	r3, [r7, #12]
 2699 0178 002B     		cmp	r3, #0
 2700 017a 02D0     		beq	.L125
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                 }
 2701              		.loc 1 1028 21
 2702 017c FB68     		ldr	r3, [r7, #12]
 2703 017e 3869     		ldr	r0, [r7, #16]
 2704 0180 9847     		blx	r3
 2705              	.LVL3:
 2706              	.L125:
 2707              	.LBE2:
 2708              		.loc 1 1034 1
 2709 0182 00BF     		nop
 2710 0184 1C37     		adds	r7, r7, #28
 2711              		.cfi_def_cfa_offset 12
 2712 0186 BD46     		mov	sp, r7
 2713              		.cfi_def_cfa_register 13
 2714              		@ sp needed
 2715 0188 90BD     		pop	{r4, r7, pc}
 2716              	.L127:
 2717 018a 00BF     		.align	2
 2718              	.L126:
 2719 018c 09010005 		.word	83886345
 2720 0190 09010105 		.word	83951881
 2721 0194 09010605 		.word	84279561
 2722 0198 09010205 		.word	84017417
 2723              		.cfi_endproc
 2724              	.LFE142:
 2726              		.section	.text._smbus_slave_receive_interrupt,"ax",%progbits
 2727              		.align	1
 2728              		.syntax unified
 2729              		.thumb
 2730              		.thumb_func
 2731              		.fpu softvfp
 2733              	_smbus_slave_receive_interrupt:
 2734              	.LFB143:
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** /*!
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \brief      event handler in SMBUS slave receive mode
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[in]  smbus: SMBUS device information structrue
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****                   the structure parameters altering is automatically configured by core
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \param[out] none
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     \retval     none
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** */
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** static void _smbus_slave_receive_interrupt(void *smbus)
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** {
 2735              		.loc 1 1045 1
 2736              		.cfi_startproc
 2737              		@ args = 0, pretend = 0, frame = 24
 2738              		@ frame_needed = 1, uses_anonymous_args = 0
 2739 0000 90B5     		push	{r4, r7, lr}
 2740              		.cfi_def_cfa_offset 12
 2741              		.cfi_offset 4, -12
 2742              		.cfi_offset 7, -8
 2743              		.cfi_offset 14, -4
 2744 0002 87B0     		sub	sp, sp, #28
 2745              		.cfi_def_cfa_offset 40
 2746 0004 00AF     		add	r7, sp, #0
 2747              		.cfi_def_cfa_register 7
 2748 0006 7860     		str	r0, [r7, #4]
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     uint32_t length = 0;
 2749              		.loc 1 1046 14
 2750 0008 0023     		movs	r3, #0
 2751 000a 7B61     		str	r3, [r7, #20]
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     hal_smbus_dev_struct *p_smbus = smbus;
 2752              		.loc 1 1047 27
 2753 000c 7B68     		ldr	r3, [r7, #4]
 2754 000e 3B61     		str	r3, [r7, #16]
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     length = p_smbus->txbuffer.length;
 2755              		.loc 1 1049 12
 2756 0010 3B69     		ldr	r3, [r7, #16]
 2757 0012 5B69     		ldr	r3, [r3, #20]
 2758 0014 7B61     		str	r3, [r7, #20]
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_ADDSEND)) {
 2759              		.loc 1 1051 8
 2760 0016 3B69     		ldr	r3, [r7, #16]
 2761 0018 1B68     		ldr	r3, [r3]
 2762 001a 3549     		ldr	r1, .L133
 2763 001c 1846     		mov	r0, r3
 2764 001e FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2765 0022 0346     		mov	r3, r0
 2766              		.loc 1 1051 7
 2767 0024 002B     		cmp	r3, #0
 2768 0026 06D0     		beq	.L129
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* clear the ADDSEND bit */
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_flag_clear(p_smbus->periph, I2C_INT_FLAG_ADDSEND);
 2769              		.loc 1 1053 9
 2770 0028 3B69     		ldr	r3, [r7, #16]
 2771 002a 1B68     		ldr	r3, [r3]
 2772 002c 3049     		ldr	r1, .L133
 2773 002e 1846     		mov	r0, r3
 2774 0030 FFF7FEFF 		bl	hals_i2c_interrupt_flag_clear
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_RBNE)) {
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* if reception data register is not empty ,I2Cx will read a data from I2C_DATA */
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         *p_smbus->rxbuffer.buffer = hals_i2c_data_receive(p_smbus->periph);
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.buffer++;
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.pos++;
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(p_smbus->rxbuffer.pos == length) {
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* check the received PEC value */
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             hals_i2c_pec_transfer_config(p_smbus->periph, p_smbus->smbus_pec_transfer);
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_STPDET)) {
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->rx_callback;
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* clear the STPDET bit */
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         HAL_I2C_ENABLE(p_smbus->periph);
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->smbus_irq.event_handle = NULL;
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rx_state = HAL_SMBUS_STATE_READY;
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* disable I2Cx interrupt */
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_BUF);
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         if(NULL != p_func) {
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_func(p_smbus);
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     }
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** }
 2775              		.loc 1 1080 1
 2776 0034 58E0     		b	.L132
 2777              	.L129:
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_RBNE)) {
 2778              		.loc 1 1054 15
 2779 0036 3B69     		ldr	r3, [r7, #16]
 2780 0038 1B68     		ldr	r3, [r3]
 2781 003a 2E49     		ldr	r1, .L133+4
 2782 003c 1846     		mov	r0, r3
 2783 003e FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2784 0042 0346     		mov	r3, r0
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****     } else if(hals_i2c_interrupt_flag_get(p_smbus->periph, I2C_INT_FLAG_RBNE)) {
 2785              		.loc 1 1054 14
 2786 0044 002B     		cmp	r3, #0
 2787 0046 20D0     		beq	.L131
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.buffer++;
 2788              		.loc 1 1056 37
 2789 0048 3B69     		ldr	r3, [r7, #16]
 2790 004a 1A68     		ldr	r2, [r3]
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.buffer++;
 2791              		.loc 1 1056 27
 2792 004c 3B69     		ldr	r3, [r7, #16]
 2793 004e DC69     		ldr	r4, [r3, #28]
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.buffer++;
 2794              		.loc 1 1056 37
 2795 0050 1046     		mov	r0, r2
 2796 0052 FFF7FEFF 		bl	hals_i2c_data_receive
 2797 0056 0346     		mov	r3, r0
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.buffer++;
 2798              		.loc 1 1056 35
 2799 0058 2370     		strb	r3, [r4]
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.pos++;
 2800              		.loc 1 1057 26
 2801 005a 3B69     		ldr	r3, [r7, #16]
 2802 005c DB69     		ldr	r3, [r3, #28]
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rxbuffer.pos++;
 2803              		.loc 1 1057 33
 2804 005e 5A1C     		adds	r2, r3, #1
 2805 0060 3B69     		ldr	r3, [r7, #16]
 2806 0062 DA61     		str	r2, [r3, #28]
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2807              		.loc 1 1058 26
 2808 0064 3B69     		ldr	r3, [r7, #16]
 2809 0066 5B6A     		ldr	r3, [r3, #36]
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2810              		.loc 1 1058 30
 2811 0068 5A1C     		adds	r2, r3, #1
 2812 006a 3B69     		ldr	r3, [r7, #16]
 2813 006c 5A62     		str	r2, [r3, #36]
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* check the received PEC value */
 2814              		.loc 1 1060 29
 2815 006e 3B69     		ldr	r3, [r7, #16]
 2816 0070 5B6A     		ldr	r3, [r3, #36]
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             /* check the received PEC value */
 2817              		.loc 1 1060 11
 2818 0072 7A69     		ldr	r2, [r7, #20]
 2819 0074 9A42     		cmp	r2, r3
 2820 0076 37D1     		bne	.L132
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 2821              		.loc 1 1062 13
 2822 0078 3B69     		ldr	r3, [r7, #16]
 2823 007a 1A68     		ldr	r2, [r3]
 2824 007c 3B69     		ldr	r3, [r7, #16]
 2825 007e 9B6A     		ldr	r3, [r3, #40]
 2826 0080 1946     		mov	r1, r3
 2827 0082 1046     		mov	r0, r2
 2828 0084 FFF7FEFF 		bl	hals_i2c_pec_transfer_config
 2829              		.loc 1 1080 1
 2830 0088 2EE0     		b	.L132
 2831              	.L131:
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->rx_callback;
 2832              		.loc 1 1064 15
 2833 008a 3B69     		ldr	r3, [r7, #16]
 2834 008c 1B68     		ldr	r3, [r3]
 2835 008e 1A49     		ldr	r1, .L133+8
 2836 0090 1846     		mov	r0, r3
 2837 0092 FFF7FEFF 		bl	hals_i2c_interrupt_flag_get
 2838 0096 0346     		mov	r3, r0
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hal_smbus_user_cb p_func = (hal_smbus_user_cb)p_smbus->rx_callback;
 2839              		.loc 1 1064 14
 2840 0098 002B     		cmp	r3, #0
 2841 009a 25D0     		beq	.L132
 2842              	.LBB3:
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* clear the STPDET bit */
 2843              		.loc 1 1065 62
 2844 009c 3B69     		ldr	r3, [r7, #16]
 2845 009e 9B6B     		ldr	r3, [r3, #56]
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         /* clear the STPDET bit */
 2846              		.loc 1 1065 27
 2847 00a0 FB60     		str	r3, [r7, #12]
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2848              		.loc 1 1067 9
 2849 00a2 3B69     		ldr	r3, [r7, #16]
 2850 00a4 1B68     		ldr	r3, [r3]
 2851 00a6 1B68     		ldr	r3, [r3]
 2852 00a8 3A69     		ldr	r2, [r7, #16]
 2853 00aa 1268     		ldr	r2, [r2]
 2854 00ac 43F00103 		orr	r3, r3, #1
 2855 00b0 1360     		str	r3, [r2]
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         p_smbus->rx_state = HAL_SMBUS_STATE_READY;
 2856              		.loc 1 1069 41
 2857 00b2 3B69     		ldr	r3, [r7, #16]
 2858 00b4 0022     		movs	r2, #0
 2859 00b6 9A60     		str	r2, [r3, #8]
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2860              		.loc 1 1070 27
 2861 00b8 3B69     		ldr	r3, [r7, #16]
 2862 00ba 0022     		movs	r2, #0
 2863 00bc 83F83520 		strb	r2, [r3, #53]
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         hals_i2c_interrupt_disable(p_smbus->periph, I2C_INT_EV);
 2864              		.loc 1 1073 9
 2865 00c0 3B69     		ldr	r3, [r7, #16]
 2866 00c2 1B68     		ldr	r3, [r3]
 2867 00c4 4FF48571 		mov	r1, #266
 2868 00c8 1846     		mov	r0, r3
 2869 00ca FFF7FEFF 		bl	hals_i2c_interrupt_disable
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c **** 
 2870              		.loc 1 1074 9
 2871 00ce 3B69     		ldr	r3, [r7, #16]
 2872 00d0 1B68     		ldr	r3, [r3]
 2873 00d2 40F20911 		movw	r1, #265
 2874 00d6 1846     		mov	r0, r3
 2875 00d8 FFF7FEFF 		bl	hals_i2c_interrupt_disable
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****             p_func(p_smbus);
 2876              		.loc 1 1076 11
 2877 00dc FB68     		ldr	r3, [r7, #12]
 2878 00de 002B     		cmp	r3, #0
 2879 00e0 02D0     		beq	.L132
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_smbus.c ****         }
 2880              		.loc 1 1077 13
 2881 00e2 FB68     		ldr	r3, [r7, #12]
 2882 00e4 3869     		ldr	r0, [r7, #16]
 2883 00e6 9847     		blx	r3
 2884              	.LVL4:
 2885              	.L132:
 2886              	.LBE3:
 2887              		.loc 1 1080 1
 2888 00e8 00BF     		nop
 2889 00ea 1C37     		adds	r7, r7, #28
 2890              		.cfi_def_cfa_offset 12
 2891 00ec BD46     		mov	sp, r7
 2892              		.cfi_def_cfa_register 13
 2893              		@ sp needed
 2894 00ee 90BD     		pop	{r4, r7, pc}
 2895              	.L134:
 2896              		.align	2
 2897              	.L133:
 2898 00f0 09010105 		.word	83951881
 2899 00f4 09010605 		.word	84279561
 2900 00f8 09010405 		.word	84148489
 2901              		.cfi_endproc
 2902              	.LFE143:
 2904              		.text
 2905              	.Letext0:
 2906              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 2907              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 2908              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 2909              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 2910              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 2911              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 2912              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 2913              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 2914              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 2915              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 2916              		.file 12 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 2917              		.file 13 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 2918              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_i2c.h"
 2919              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_smbus.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_smbus.c
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:16     .text.hal_smbus_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:24     .text.hal_smbus_struct_init:00000000 hal_smbus_struct_init
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:193    .text.hal_smbus_struct_init:000000e0 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:198    .text.hal_smbus_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:205    .text.hal_smbus_deinit:00000000 hal_smbus_deinit
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:277    .text.hal_smbus_deinit:00000064 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:283    .text.hal_smbus_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:290    .text.hal_smbus_init:00000000 hal_smbus_init
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1694   .text.hals_i2c_smbus_type_config:00000000 hals_i2c_smbus_type_config
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1872   .text.hals_i2c_pec_config:00000000 hals_i2c_pec_config
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1752   .text.hals_i2c_smbus_arp_enable:00000000 hals_i2c_smbus_arp_enable
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:428    .text.hal_smbus_enable_alert_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:435    .text.hal_smbus_enable_alert_interrupt:00000000 hal_smbus_enable_alert_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1812   .text.hals_i2c_smbus_alert_config:00000000 hals_i2c_smbus_alert_config
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:482    .text.hal_smbus_event_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:489    .text.hal_smbus_event_irq:00000000 hal_smbus_event_irq
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:530    .text.hal_smbus_error_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:537    .text.hal_smbus_error_irq:00000000 hal_smbus_error_irq
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:776    .text.hal_smbus_error_irq:00000180 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:787    .text.hal_smbus_start:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:794    .text.hal_smbus_start:00000000 hal_smbus_start
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:832    .text.hal_smbus_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:839    .text.hal_smbus_stop:00000000 hal_smbus_stop
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:877    .text.hal_smbus_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:884    .text.hal_smbus_irq_handle_set:00000000 hal_smbus_irq_handle_set
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:987    .text.hal_smbus_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:994    .text.hal_smbus_irq_handle_all_reset:00000000 hal_smbus_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1032   .text.hal_smbus_master_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1039   .text.hal_smbus_master_transmit_interrupt:00000000 hal_smbus_master_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1991   .text._smbus_wait_flag_timeout:00000000 _smbus_wait_flag_timeout
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1176   .text.hal_smbus_master_transmit_interrupt:000000d8 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2098   .text._smbus_master_transmit_interrupt:00000000 _smbus_master_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1181   .text.hal_smbus_master_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1188   .text.hal_smbus_master_receive_interrupt:00000000 hal_smbus_master_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1351   .text.hal_smbus_master_receive_interrupt:00000104 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2459   .text._smbus_master_receive_interrupt:00000000 _smbus_master_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1357   .text.hal_smbus_slave_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1364   .text.hal_smbus_slave_transmit_interrupt:00000000 hal_smbus_slave_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1493   .text.hal_smbus_slave_transmit_interrupt:000000c8 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2300   .text._smbus_slave_transmit_interrupt:00000000 _smbus_slave_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1498   .text.hal_smbus_slave_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1505   .text.hal_smbus_slave_receive_interrupt:00000000 hal_smbus_slave_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1634   .text.hal_smbus_slave_receive_interrupt:000000c8 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2733   .text._smbus_slave_receive_interrupt:00000000 _smbus_slave_receive_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1639   .text.hal_smbus_disable_alert_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1646   .text.hal_smbus_disable_alert_interrupt:00000000 hal_smbus_disable_alert_interrupt
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1687   .text.hals_i2c_smbus_type_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1745   .text.hals_i2c_smbus_arp_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1805   .text.hals_i2c_smbus_alert_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1865   .text.hals_i2c_pec_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1925   .text.hals_i2c_pec_transfer_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1932   .text.hals_i2c_pec_transfer_config:00000000 hals_i2c_pec_transfer_config
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:1985   .text._smbus_wait_flag_timeout:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2092   .text._smbus_master_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2287   .text._smbus_master_transmit_interrupt:0000011c $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2294   .text._smbus_slave_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2445   .text._smbus_slave_transmit_interrupt:000000d8 $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2453   .text._smbus_master_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2719   .text._smbus_master_receive_interrupt:0000018c $d
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2727   .text._smbus_slave_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\ccwg9LU5.s:2898   .text._smbus_slave_receive_interrupt:000000f0 $d
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hal_rcu_periph_reset_enable
hal_rcu_periph_reset_disable
hals_i2c_clock_config
hals_i2c_mode_addr_config
hals_i2c_dualaddr_enable
hals_i2c_dualaddr_disable
hals_i2c_stretch_scl_low_config
hals_i2c_slave_response_to_gcall_config
hals_i2c_ack_config
hals_i2c_flag_clear
hals_i2c_interrupt_enable
hals_i2c_interrupt_flag_get
hals_i2c_interrupt_flag_clear
hals_i2c_interrupt_disable
hals_i2c_ackpos_config
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
hals_i2c_flag_get
hals_i2c_master_addressing
hals_i2c_data_transmit
hals_i2c_data_receive
