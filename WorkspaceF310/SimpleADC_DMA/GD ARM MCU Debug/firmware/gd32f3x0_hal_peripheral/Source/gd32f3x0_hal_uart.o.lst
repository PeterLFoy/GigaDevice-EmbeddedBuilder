   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hal_uart_struct_init,"ax",%progbits
  16              		.align	1
  17              		.global	hal_uart_struct_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hal_uart_struct_init:
  25              	.LFB119:
  26              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \file    gd32f3x0_hal_uart.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief   UART driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static uint16_t _uart_data_bit_mask_get(hal_uart_dev_struct *uart);
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static FlagStatus _uart_error_flag_get(hal_uart_dev_struct *uart);
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_transmit_complete_interrupt(void *uart);
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_transmit_interrupt(void *uart);
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_receive_interrupt(void *uart);
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_transmit_dma(void *dma);
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_receive_dma(void *dma);
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_dma_error(void *dma);
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      initialize the uart structure with the default values
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 note: this function must be called after the structure is created
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  hal_struct_type: type of uart structure for initialization
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        HAL_UART_INIT_STRUCT: initialization structure
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        HAL_UART_DEV_STRUCT: device information structure
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        HAL_UART_USER_CALLBCAK_STRUCT: user callback structure
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        HAL_UART_IRQ_INIT_STRUCT: interrupt callback initialization structure
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_struct: structure pointer
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hal_uart_struct_init(hal_uart_struct_type_enum hal_struct_type, void *p_struct)
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
  27              		.loc 1 59 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 3960     		str	r1, [r7]
  41 000a FB71     		strb	r3, [r7, #7]
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == p_struct) {
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [*p_struct] value is invalid");
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return;
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     switch(hal_struct_type) {
  42              		.loc 1 67 5
  43 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  44 000e 032B     		cmp	r3, #3
  45 0010 00F2EB80 		bhi	.L9
  46 0014 01A2     		adr	r2, .L4
  47 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  48 001a 00BF     		.p2align 2
  49              	.L4:
  50 001c 2D000000 		.word	.L7+1
  51 0020 E9000000 		.word	.L6+1
  52 0024 9F010000 		.word	.L5+1
  53 0028 AD010000 		.word	.L3+1
  54              		.p2align 1
  55              	.L7:
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case HAL_UART_INIT_STRUCT:
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* initialize uart initialization structure with the default values */
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->work_mode = UART_WORK_MODE_ASYN;
  56              		.loc 1 70 55
  57 002c 3B68     		ldr	r3, [r7]
  58 002e 0022     		movs	r2, #0
  59 0030 1A70     		strb	r2, [r3]
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->baudrate = 115200U;
  60              		.loc 1 71 54
  61 0032 3B68     		ldr	r3, [r7]
  62 0034 4FF4E132 		mov	r2, #115200
  63 0038 5A60     		str	r2, [r3, #4]
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->parity = UART_PARITY_NONE;
  64              		.loc 1 72 52
  65 003a 3B68     		ldr	r3, [r7]
  66 003c 0022     		movs	r2, #0
  67 003e 9A60     		str	r2, [r3, #8]
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->word_length = UART_WORD_LENGTH_8BIT;
  68              		.loc 1 73 57
  69 0040 3B68     		ldr	r3, [r7]
  70 0042 0022     		movs	r2, #0
  71 0044 DA60     		str	r2, [r3, #12]
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->stop_bit = UART_STOP_BIT_1;
  72              		.loc 1 74 54
  73 0046 3B68     		ldr	r3, [r7]
  74 0048 0022     		movs	r2, #0
  75 004a 1A61     		str	r2, [r3, #16]
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->direction = UART_DIRECTION_RX_TX;
  76              		.loc 1 75 55
  77 004c 3B68     		ldr	r3, [r7]
  78 004e 0C22     		movs	r2, #12
  79 0050 5A61     		str	r2, [r3, #20]
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->over_sample = UART_OVER_SAMPLE_16;
  80              		.loc 1 76 57
  81 0052 3B68     		ldr	r3, [r7]
  82 0054 0022     		movs	r2, #0
  83 0056 9A61     		str	r2, [r3, #24]
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->sample_method = UART_THREE_SAMPLE_BIT;
  84              		.loc 1 77 59
  85 0058 3B68     		ldr	r3, [r7]
  86 005a 0022     		movs	r2, #0
  87 005c DA61     		str	r2, [r3, #28]
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->hardware_flow = UART_HARDWARE_FLOW_NONE;
  88              		.loc 1 78 59
  89 005e 3B68     		ldr	r3, [r7]
  90 0060 0022     		movs	r2, #0
  91 0062 1A62     		str	r2, [r3, #32]
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->rx_fifo_en = DISABLE;
  92              		.loc 1 79 56
  93 0064 3B68     		ldr	r3, [r7]
  94 0066 0022     		movs	r2, #0
  95 0068 83F82420 		strb	r2, [r3, #36]
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->timeout_enable = DISABLE;
  96              		.loc 1 80 60
  97 006c 3B68     		ldr	r3, [r7]
  98 006e 0022     		movs	r2, #0
  99 0070 83F82520 		strb	r2, [r3, #37]
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->timeout_value = 0U;
 100              		.loc 1 81 59
 101 0074 3B68     		ldr	r3, [r7]
 102 0076 0022     		movs	r2, #0
 103 0078 9A62     		str	r2, [r3, #40]
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->first_bit_msb     = DISABLE;
 104              		.loc 1 82 63
 105 007a 3B68     		ldr	r3, [r7]
 106 007c 0022     		movs	r2, #0
 107 007e 83F82C20 		strb	r2, [r3, #44]
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->tx_rx_swap        = DISABLE;
 108              		.loc 1 83 63
 109 0082 3B68     		ldr	r3, [r7]
 110 0084 0022     		movs	r2, #0
 111 0086 83F82D20 		strb	r2, [r3, #45]
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->rx_level_invert   = DISABLE;
 112              		.loc 1 84 63
 113 008a 3B68     		ldr	r3, [r7]
 114 008c 0022     		movs	r2, #0
 115 008e 83F82E20 		strb	r2, [r3, #46]
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->tx_level_invert   = DISABLE;
 116              		.loc 1 85 63
 117 0092 3B68     		ldr	r3, [r7]
 118 0094 0022     		movs	r2, #0
 119 0096 83F82F20 		strb	r2, [r3, #47]
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->data_bit_invert   = DISABLE;
 120              		.loc 1 86 63
 121 009a 3B68     		ldr	r3, [r7]
 122 009c 0022     		movs	r2, #0
 123 009e 83F83020 		strb	r2, [r3, #48]
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->overrun_disable   = DISABLE;
 124              		.loc 1 87 63
 125 00a2 3B68     		ldr	r3, [r7]
 126 00a4 0022     		movs	r2, #0
 127 00a6 83F83120 		strb	r2, [r3, #49]
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->rx_error_dma_stop = DISABLE;
 128              		.loc 1 88 63
 129 00aa 3B68     		ldr	r3, [r7]
 130 00ac 0022     		movs	r2, #0
 131 00ae 83F83220 		strb	r2, [r3, #50]
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->break_frame_length = UART_LIN_BREAK_DETECTION_10BIT;
 132              		.loc 1 89 64
 133 00b2 3B68     		ldr	r3, [r7]
 134 00b4 0022     		movs	r2, #0
 135 00b6 5A63     		str	r2, [r3, #52]
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->rs485_mode = DISABLE;
 136              		.loc 1 90 56
 137 00b8 3B68     		ldr	r3, [r7]
 138 00ba 0022     		movs	r2, #0
 139 00bc 83F83820 		strb	r2, [r3, #56]
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->de_polarity = UART_RS485_DE_POLARITY_HIGH;
 140              		.loc 1 91 57
 141 00c0 3B68     		ldr	r3, [r7]
 142 00c2 0022     		movs	r2, #0
 143 00c4 DA63     		str	r2, [r3, #60]
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->de_assertion_time = 0U;
 144              		.loc 1 92 63
 145 00c6 3B68     		ldr	r3, [r7]
 146 00c8 0022     		movs	r2, #0
 147 00ca 1A64     		str	r2, [r3, #64]
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->de_deassertion_time = 0U;
 148              		.loc 1 93 65
 149 00cc 3B68     		ldr	r3, [r7]
 150 00ce 0022     		movs	r2, #0
 151 00d0 5A64     		str	r2, [r3, #68]
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->wakeup_mode = UART_MULTIPROCESSOR_WAKEUP_IDLE;
 152              		.loc 1 94 57
 153 00d2 3B68     		ldr	r3, [r7]
 154 00d4 0022     		movs	r2, #0
 155 00d6 9A64     		str	r2, [r3, #72]
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->address = 0U;
 156              		.loc 1 95 53
 157 00d8 3B68     		ldr	r3, [r7]
 158 00da 0022     		movs	r2, #0
 159 00dc 83F84C20 		strb	r2, [r3, #76]
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_init_struct *)p_struct)->addr_length = UART_MULTIPROCESSOR_ADDRESS_4BIT;
 160              		.loc 1 96 57
 161 00e0 3B68     		ldr	r3, [r7]
 162 00e2 0022     		movs	r2, #0
 163 00e4 1A65     		str	r2, [r3, #80]
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 164              		.loc 1 97 9
 165 00e6 81E0     		b	.L8
 166              	.L6:
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case HAL_UART_DEV_STRUCT:
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* initialize uart device information structure with the default values */
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->periph = 0U;
 167              		.loc 1 101 51
 168 00e8 3B68     		ldr	r3, [r7]
 169 00ea 0022     		movs	r2, #0
 170 00ec 1A60     		str	r2, [r3]
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.receive_complete_handle = NULL;
 171              		.loc 1 102 77
 172 00ee 3B68     		ldr	r3, [r7]
 173 00f0 0022     		movs	r2, #0
 174 00f2 5A60     		str	r2, [r3, #4]
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.receive_timeout_handle = NULL;
 175              		.loc 1 103 76
 176 00f4 3B68     		ldr	r3, [r7]
 177 00f6 0022     		movs	r2, #0
 178 00f8 9A60     		str	r2, [r3, #8]
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.transmit_ready_handle = NULL;
 179              		.loc 1 104 75
 180 00fa 3B68     		ldr	r3, [r7]
 181 00fc 0022     		movs	r2, #0
 182 00fe DA60     		str	r2, [r3, #12]
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.transmit_complete_handle = NULL;
 183              		.loc 1 105 78
 184 0100 3B68     		ldr	r3, [r7]
 185 0102 0022     		movs	r2, #0
 186 0104 1A61     		str	r2, [r3, #16]
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.error_handle = NULL;
 187              		.loc 1 106 66
 188 0106 3B68     		ldr	r3, [r7]
 189 0108 0022     		movs	r2, #0
 190 010a 5A61     		str	r2, [r3, #20]
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.wakeup_handle = NULL;
 191              		.loc 1 107 67
 192 010c 3B68     		ldr	r3, [r7]
 193 010e 0022     		movs	r2, #0
 194 0110 9A61     		str	r2, [r3, #24]
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.idle_line_detected_handle = NULL;
 195              		.loc 1 108 79
 196 0112 3B68     		ldr	r3, [r7]
 197 0114 0022     		movs	r2, #0
 198 0116 DA61     		str	r2, [r3, #28]
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.address_match_handle = NULL;
 199              		.loc 1 109 74
 200 0118 3B68     		ldr	r3, [r7]
 201 011a 0022     		movs	r2, #0
 202 011c 1A62     		str	r2, [r3, #32]
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.lin_break_detected_handle = NULL;
 203              		.loc 1 110 79
 204 011e 3B68     		ldr	r3, [r7]
 205 0120 0022     		movs	r2, #0
 206 0122 5A62     		str	r2, [r3, #36]
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->uart_irq.cts_change_handle = NULL;
 207              		.loc 1 111 71
 208 0124 3B68     		ldr	r3, [r7]
 209 0126 0022     		movs	r2, #0
 210 0128 9A62     		str	r2, [r3, #40]
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->p_dma_rx = NULL;
 211              		.loc 1 112 53
 212 012a 3B68     		ldr	r3, [r7]
 213 012c 0022     		movs	r2, #0
 214 012e DA62     		str	r2, [r3, #44]
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->p_dma_tx = NULL;
 215              		.loc 1 113 53
 216 0130 3B68     		ldr	r3, [r7]
 217 0132 0022     		movs	r2, #0
 218 0134 1A63     		str	r2, [r3, #48]
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->txbuffer.buffer = NULL;
 219              		.loc 1 114 60
 220 0136 3B68     		ldr	r3, [r7]
 221 0138 0022     		movs	r2, #0
 222 013a 5A63     		str	r2, [r3, #52]
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->txbuffer.length = 0U;
 223              		.loc 1 115 60
 224 013c 3B68     		ldr	r3, [r7]
 225 013e 0022     		movs	r2, #0
 226 0140 9A63     		str	r2, [r3, #56]
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->txbuffer.pos = 0U;
 227              		.loc 1 116 57
 228 0142 3B68     		ldr	r3, [r7]
 229 0144 0022     		movs	r2, #0
 230 0146 DA63     		str	r2, [r3, #60]
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->rxbuffer.buffer = NULL;
 231              		.loc 1 117 60
 232 0148 3B68     		ldr	r3, [r7]
 233 014a 0022     		movs	r2, #0
 234 014c 1A64     		str	r2, [r3, #64]
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->rxbuffer.length = 0U;
 235              		.loc 1 118 60
 236 014e 3B68     		ldr	r3, [r7]
 237 0150 0022     		movs	r2, #0
 238 0152 5A64     		str	r2, [r3, #68]
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->rxbuffer.pos = 0U;
 239              		.loc 1 119 57
 240 0154 3B68     		ldr	r3, [r7]
 241 0156 0022     		movs	r2, #0
 242 0158 9A64     		str	r2, [r3, #72]
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->data_bit_mask = 0U;
 243              		.loc 1 120 58
 244 015a 3B68     		ldr	r3, [r7]
 245 015c 0022     		movs	r2, #0
 246 015e A3F84C20 		strh	r2, [r3, #76]	@ movhi
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->last_error = HAL_UART_ERROR_NONE;
 247              		.loc 1 121 55
 248 0162 3B68     		ldr	r3, [r7]
 249 0164 0022     		movs	r2, #0
 250 0166 A3F84E20 		strh	r2, [r3, #78]	@ movhi
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->error_state = HAL_UART_ERROR_NONE;
 251              		.loc 1 122 56
 252 016a 3B68     		ldr	r3, [r7]
 253 016c 0022     		movs	r2, #0
 254 016e A3F85020 		strh	r2, [r3, #80]	@ movhi
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->tx_state = UART_STATE_FREE;
 255              		.loc 1 123 53
 256 0172 3B68     		ldr	r3, [r7]
 257 0174 0022     		movs	r2, #0
 258 0176 83F85220 		strb	r2, [r3, #82]
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->rx_state = UART_STATE_FREE;
 259              		.loc 1 124 53
 260 017a 3B68     		ldr	r3, [r7]
 261 017c 0022     		movs	r2, #0
 262 017e 83F85320 		strb	r2, [r3, #83]
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->rx_callback = NULL;
 263              		.loc 1 125 56
 264 0182 3B68     		ldr	r3, [r7]
 265 0184 0022     		movs	r2, #0
 266 0186 5A65     		str	r2, [r3, #84]
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->tx_callback = NULL;
 267              		.loc 1 126 56
 268 0188 3B68     		ldr	r3, [r7]
 269 018a 0022     		movs	r2, #0
 270 018c 9A65     		str	r2, [r3, #88]
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->mutex = HAL_MUTEX_UNLOCKED;
 271              		.loc 1 127 50
 272 018e 3B68     		ldr	r3, [r7]
 273 0190 0022     		movs	r2, #0
 274 0192 83F85C20 		strb	r2, [r3, #92]
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_dev_struct *)p_struct)->priv = NULL;
 275              		.loc 1 128 49
 276 0196 3B68     		ldr	r3, [r7]
 277 0198 0022     		movs	r2, #0
 278 019a 1A66     		str	r2, [r3, #96]
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 279              		.loc 1 129 9
 280 019c 26E0     		b	.L8
 281              	.L5:
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case HAL_UART_USER_CALLBCAK_STRUCT:
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* initialize user callback structure with the default values */
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_user_callback_struct *)p_struct)->complete_func = NULL;
 282              		.loc 1 133 68
 283 019e 3B68     		ldr	r3, [r7]
 284 01a0 0022     		movs	r2, #0
 285 01a2 1A60     		str	r2, [r3]
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_user_callback_struct *)p_struct)->error_func = NULL;
 286              		.loc 1 134 65
 287 01a4 3B68     		ldr	r3, [r7]
 288 01a6 0022     		movs	r2, #0
 289 01a8 5A60     		str	r2, [r3, #4]
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 290              		.loc 1 135 9
 291 01aa 1FE0     		b	.L8
 292              	.L3:
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case HAL_UART_IRQ_INIT_STRUCT:
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* initialize interrupt callback structure with the default values */
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->address_match_handle = NULL;
 293              		.loc 1 139 65
 294 01ac 3B68     		ldr	r3, [r7]
 295 01ae 0022     		movs	r2, #0
 296 01b0 DA61     		str	r2, [r3, #28]
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->cts_change_handle = NULL;
 297              		.loc 1 140 62
 298 01b2 3B68     		ldr	r3, [r7]
 299 01b4 0022     		movs	r2, #0
 300 01b6 5A62     		str	r2, [r3, #36]
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->error_handle = NULL;
 301              		.loc 1 141 57
 302 01b8 3B68     		ldr	r3, [r7]
 303 01ba 0022     		movs	r2, #0
 304 01bc 1A61     		str	r2, [r3, #16]
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->idle_line_detected_handle = NULL;
 305              		.loc 1 142 70
 306 01be 3B68     		ldr	r3, [r7]
 307 01c0 0022     		movs	r2, #0
 308 01c2 9A61     		str	r2, [r3, #24]
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->lin_break_detected_handle = NULL;
 309              		.loc 1 143 70
 310 01c4 3B68     		ldr	r3, [r7]
 311 01c6 0022     		movs	r2, #0
 312 01c8 1A62     		str	r2, [r3, #32]
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->receive_complete_handle = NULL;
 313              		.loc 1 144 68
 314 01ca 3B68     		ldr	r3, [r7]
 315 01cc 0022     		movs	r2, #0
 316 01ce 1A60     		str	r2, [r3]
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->receive_timeout_handle = NULL;
 317              		.loc 1 145 67
 318 01d0 3B68     		ldr	r3, [r7]
 319 01d2 0022     		movs	r2, #0
 320 01d4 5A60     		str	r2, [r3, #4]
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->transmit_complete_handle = NULL;
 321              		.loc 1 146 69
 322 01d6 3B68     		ldr	r3, [r7]
 323 01d8 0022     		movs	r2, #0
 324 01da DA60     		str	r2, [r3, #12]
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->transmit_ready_handle = NULL;
 325              		.loc 1 147 66
 326 01dc 3B68     		ldr	r3, [r7]
 327 01de 0022     		movs	r2, #0
 328 01e0 9A60     		str	r2, [r3, #8]
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         ((hal_uart_irq_struct *)p_struct)->wakeup_handle = NULL;
 329              		.loc 1 148 58
 330 01e2 3B68     		ldr	r3, [r7]
 331 01e4 0022     		movs	r2, #0
 332 01e6 5A61     		str	r2, [r3, #20]
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 333              		.loc 1 149 9
 334 01e8 00E0     		b	.L8
 335              	.L9:
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     default:
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGW("parameter [hal_struct_type] value is undefine");
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 336              		.loc 1 152 9
 337 01ea 00BF     		nop
 338              	.L8:
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 339              		.loc 1 154 1
 340 01ec 00BF     		nop
 341 01ee 0C37     		adds	r7, r7, #12
 342              		.cfi_def_cfa_offset 4
 343 01f0 BD46     		mov	sp, r7
 344              		.cfi_def_cfa_register 13
 345              		@ sp needed
 346 01f2 80BC     		pop	{r7}
 347              		.cfi_restore 7
 348              		.cfi_def_cfa_offset 0
 349 01f4 7047     		bx	lr
 350              		.cfi_endproc
 351              	.LFE119:
 353              		.section	.text.hal_uart_deinit,"ax",%progbits
 354              		.align	1
 355              		.global	hal_uart_deinit
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu softvfp
 361              	hal_uart_deinit:
 362              	.LFB120:
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      deinitialize the uart
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hal_uart_deinit(hal_uart_dev_struct *uart)
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 363              		.loc 1 165 1
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 16
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367 0000 80B5     		push	{r7, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 84B0     		sub	sp, sp, #16
 372              		.cfi_def_cfa_offset 24
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 375 0006 7860     		str	r0, [r7, #4]
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint32_t periph;
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     periph = uart->periph;
 376              		.loc 1 168 12
 377 0008 7B68     		ldr	r3, [r7, #4]
 378 000a 1B68     		ldr	r3, [r3]
 379 000c FB60     		str	r3, [r7, #12]
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((USART0 == periph) || (USART1 == periph)) {
 380              		.loc 1 169 7
 381 000e FB68     		ldr	r3, [r7, #12]
 382 0010 0A4A     		ldr	r2, .L14
 383 0012 9342     		cmp	r3, r2
 384 0014 03D0     		beq	.L11
 385              		.loc 1 169 27 discriminator 1
 386 0016 FB68     		ldr	r3, [r7, #12]
 387 0018 094A     		ldr	r2, .L14+4
 388 001a 9342     		cmp	r3, r2
 389 001c 09D1     		bne	.L13
 390              	.L11:
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* deinitialize the periph and the device information sturcture */
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_deinit(periph);
 391              		.loc 1 171 9
 392 001e F868     		ldr	r0, [r7, #12]
 393 0020 FFF7FEFF 		bl	hals_uart_deinit
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hal_uart_struct_init(HAL_UART_DEV_STRUCT, uart);
 394              		.loc 1 172 9
 395 0024 7968     		ldr	r1, [r7, #4]
 396 0026 0120     		movs	r0, #1
 397 0028 FFF7FEFF 		bl	hal_uart_struct_init
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->periph = periph;
 398              		.loc 1 173 22
 399 002c 7B68     		ldr	r3, [r7, #4]
 400 002e FA68     		ldr	r2, [r7, #12]
 401 0030 1A60     		str	r2, [r3]
 402              	.L13:
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart->periph] value is invalid");
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 403              		.loc 1 177 1
 404 0032 00BF     		nop
 405 0034 1037     		adds	r7, r7, #16
 406              		.cfi_def_cfa_offset 8
 407 0036 BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0038 80BD     		pop	{r7, pc}
 411              	.L15:
 412 003a 00BF     		.align	2
 413              	.L14:
 414 003c 00380140 		.word	1073821696
 415 0040 00440040 		.word	1073759232
 416              		.cfi_endproc
 417              	.LFE120:
 419              		.section	.text.hal_uart_init,"ax",%progbits
 420              		.align	1
 421              		.global	hal_uart_init
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	hal_uart_init:
 428              	.LFB121:
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      initialize uart
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  periph: specify which UART is initialized
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_init: the initialization data needed to initialize uart
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   work_mode: UART_WORK_MODE_ASYN, UART_WORK_MODE_SINGLE_WIRE, UART_WORK_MODE_MULTIP
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                              UART_WORK_MODE_LIN
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   baudrate: communication baudrate
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   parity: UART_PARITY_NONE, UART_PARITY_EVEN, UART_PARITY_ODD
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   word_length: UART_WORD_LENGTH_8BIT, UART_WORD_LENGTH_9BIT
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   stop_bit: UART_STOP_BIT_1, UART_STOP_BIT_0_5, UART_STOP_BIT_2, UART_STOP_BIT_1_5
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   over_sample: UART_OVER_SAMPLE_8, UART_OVER_SAMPLE_16
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   sample_method: UART_THREE_SAMPLE_BIT, UART_ONE_SAMPLE_BIT
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   direction: UART_DIRECTION_RX_TX, UART_DIRECTION_RX_ONLY, UART_DIRECTION_TX_ONLY
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   hardware_flow: UART_HARDWARE_FLOW_NONE, UART_HARDWARE_FLOW_RTS_ONLY, UART_HARDWAR
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                 UART_HARDWARE_FLOW_RTS_CTS
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   rx_fifo_en：DISABLE, ENABLE
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   timeout_enable: DISABLE, ENABLE
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   timeout_value: 0 - (2^24-1)
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   first_bit_msb: DISABLE, ENABLE
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   tx_rx_swap: DISABLE, ENABLE
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   rx_level_invert: DISABLE, ENABLE
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   tx_level_invert: DISABLE, ENABLE
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   data_bit_invert: DISABLE, ENABLE
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   overrun_disable: DISABLE, ENABLE
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   rx_error_dma_stop: DISABLE, ENABLE
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   lin_mode: (USART0 only)
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     break_frame_length: UART_LIN_BREAK_DETECTION_10BIT, UART_LIN_BREAK_DETECTION_11
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   rs485_mode:
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     rs485_mode: DISABLE, ENABLE
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     de_polarity: UART_RS485_DE_POLARITY_HIGH, UART_RS485_DE_POLARITY_LOW
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     de_assertion_time: 0 - 31
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     de_deassertion_time: 0 - 31
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   multiprocessor_mode:
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     wakeup_mode: UART_MULTIPROCESSOR_WAKEUP_IDLE, UART_MULTIPROCESSOR_WAKEUP_ADDRES
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     address: 0 - 15(4-bit address detection), 0 - 255(full-bit address detection)
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     addr_length: UART_MULTIPROCESSOR_ADDRESS_4BIT, UART_MULTIPROCESSOR_ADDRESS_FULL
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL details refer to gd32f3x0_ha
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_init(hal_uart_dev_struct *uart, uint32_t periph, hal_uart_init_struct *p_init)
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 429              		.loc 1 222 1
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 24
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433 0000 80B5     		push	{r7, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 86B0     		sub	sp, sp, #24
 438              		.cfi_def_cfa_offset 32
 439 0004 00AF     		add	r7, sp, #0
 440              		.cfi_def_cfa_register 7
 441 0006 F860     		str	r0, [r7, #12]
 442 0008 B960     		str	r1, [r7, #8]
 443 000a 7A60     		str	r2, [r7, #4]
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint32_t reg_temp;
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check uart pointer and p_init address */
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_init)) {
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("pointer [uart] or [p_init] address is invalid");
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check periph parameter */
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((USART0 != periph) && (USART1 != periph)) {
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [periph] value is invalid");
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_VAL;
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check periph value from uart device struct */
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(0 != uart->periph) {
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGI("periph value from uart device struct has been rewrite");
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 444              		.loc 1 245 5
 445 000c FB68     		ldr	r3, [r7, #12]
 446 000e 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 447 0012 012B     		cmp	r3, #1
 448 0014 02D1     		bne	.L17
 449              		.loc 1 245 5 is_stmt 0 discriminator 1
 450 0016 6FF00103 		mvn	r3, #1
 451 001a B6E1     		b	.L18
 452              	.L17:
 453              		.loc 1 245 5 discriminator 2
 454 001c FB68     		ldr	r3, [r7, #12]
 455 001e 0122     		movs	r2, #1
 456 0020 83F85C20 		strb	r2, [r3, #92]
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->periph    = periph;
 457              		.loc 1 247 21 is_stmt 1 discriminator 2
 458 0024 FB68     		ldr	r3, [r7, #12]
 459 0026 BA68     		ldr	r2, [r7, #8]
 460 0028 1A60     		str	r2, [r3]
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable uart */
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_disable(periph);
 461              		.loc 1 250 5 discriminator 2
 462 002a B868     		ldr	r0, [r7, #8]
 463 002c FFF7FEFF 		bl	hals_uart_disable
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure CTL0 register */
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp = USART_CTL0(periph);
 464              		.loc 1 253 16 discriminator 2
 465 0030 BB68     		ldr	r3, [r7, #8]
 466              		.loc 1 253 14 discriminator 2
 467 0032 1B68     		ldr	r3, [r3]
 468 0034 7B61     		str	r3, [r7, #20]
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp &= ~(USART_CTL0_PM | USART_CTL0_PCEN | USART_CTL0_WL | USART_CTL0_OVSMOD | USART_CTL0_
 469              		.loc 1 254 14 discriminator 2
 470 0036 7B69     		ldr	r3, [r7, #20]
 471 0038 23F41643 		bic	r3, r3, #38400
 472 003c 23F00C03 		bic	r3, r3, #12
 473 0040 7B61     		str	r3, [r7, #20]
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp |= (p_init->direction | p_init->over_sample | p_init->parity | p_init->word_length);
 474              		.loc 1 255 24 discriminator 2
 475 0042 7B68     		ldr	r3, [r7, #4]
 476 0044 5A69     		ldr	r2, [r3, #20]
 477              		.loc 1 255 44 discriminator 2
 478 0046 7B68     		ldr	r3, [r7, #4]
 479 0048 9B69     		ldr	r3, [r3, #24]
 480              		.loc 1 255 36 discriminator 2
 481 004a 1A43     		orrs	r2, r2, r3
 482              		.loc 1 255 66 discriminator 2
 483 004c 7B68     		ldr	r3, [r7, #4]
 484 004e 9B68     		ldr	r3, [r3, #8]
 485              		.loc 1 255 58 discriminator 2
 486 0050 1A43     		orrs	r2, r2, r3
 487              		.loc 1 255 83 discriminator 2
 488 0052 7B68     		ldr	r3, [r7, #4]
 489 0054 DB68     		ldr	r3, [r3, #12]
 490              		.loc 1 255 75 discriminator 2
 491 0056 1343     		orrs	r3, r3, r2
 492              		.loc 1 255 14 discriminator 2
 493 0058 7A69     		ldr	r2, [r7, #20]
 494 005a 1343     		orrs	r3, r3, r2
 495 005c 7B61     		str	r3, [r7, #20]
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(periph) = reg_temp;
 496              		.loc 1 256 5 discriminator 2
 497 005e BB68     		ldr	r3, [r7, #8]
 498              		.loc 1 256 24 discriminator 2
 499 0060 7A69     		ldr	r2, [r7, #20]
 500 0062 1A60     		str	r2, [r3]
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure CTL1 register */
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp = USART_CTL1(periph);
 501              		.loc 1 259 16 discriminator 2
 502 0064 BB68     		ldr	r3, [r7, #8]
 503 0066 0433     		adds	r3, r3, #4
 504              		.loc 1 259 14 discriminator 2
 505 0068 1B68     		ldr	r3, [r3]
 506 006a 7B61     		str	r3, [r7, #20]
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp &= ~(USART_CTL1_STB);
 507              		.loc 1 260 14 discriminator 2
 508 006c 7B69     		ldr	r3, [r7, #20]
 509 006e 23F44053 		bic	r3, r3, #12288
 510 0072 7B61     		str	r3, [r7, #20]
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp |= (p_init->stop_bit);
 511              		.loc 1 261 24 discriminator 2
 512 0074 7B68     		ldr	r3, [r7, #4]
 513 0076 1B69     		ldr	r3, [r3, #16]
 514              		.loc 1 261 14 discriminator 2
 515 0078 7A69     		ldr	r2, [r7, #20]
 516 007a 1343     		orrs	r3, r3, r2
 517 007c 7B61     		str	r3, [r7, #20]
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(periph) = reg_temp;
 518              		.loc 1 262 5 discriminator 2
 519 007e BB68     		ldr	r3, [r7, #8]
 520 0080 0433     		adds	r3, r3, #4
 521 0082 1A46     		mov	r2, r3
 522              		.loc 1 262 24 discriminator 2
 523 0084 7B69     		ldr	r3, [r7, #20]
 524 0086 1360     		str	r3, [r2]
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure timeout enable */
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->timeout_enable) {
 525              		.loc 1 265 24 discriminator 2
 526 0088 7B68     		ldr	r3, [r7, #4]
 527 008a 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 528              		.loc 1 265 7 discriminator 2
 529 008e 012B     		cmp	r3, #1
 530 0090 08D1     		bne	.L19
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) |= USART_CTL1_RTEN;
 531              		.loc 1 266 28
 532 0092 BB68     		ldr	r3, [r7, #8]
 533 0094 0433     		adds	r3, r3, #4
 534 0096 1B68     		ldr	r3, [r3]
 535 0098 BA68     		ldr	r2, [r7, #8]
 536 009a 0432     		adds	r2, r2, #4
 537 009c 43F40003 		orr	r3, r3, #8388608
 538 00a0 1360     		str	r3, [r2]
 539 00a2 07E0     		b	.L20
 540              	.L19:
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) &= ~(USART_CTL1_RTEN);
 541              		.loc 1 268 28
 542 00a4 BB68     		ldr	r3, [r7, #8]
 543 00a6 0433     		adds	r3, r3, #4
 544 00a8 1B68     		ldr	r3, [r3]
 545 00aa BA68     		ldr	r2, [r7, #8]
 546 00ac 0432     		adds	r2, r2, #4
 547 00ae 23F40003 		bic	r3, r3, #8388608
 548 00b2 1360     		str	r3, [r2]
 549              	.L20:
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the data bit invert function */
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->data_bit_invert) {
 550              		.loc 1 271 24
 551 00b4 7B68     		ldr	r3, [r7, #4]
 552 00b6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 553              		.loc 1 271 7
 554 00ba 012B     		cmp	r3, #1
 555 00bc 08D1     		bne	.L21
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) |= USART_CTL1_DINV;
 556              		.loc 1 272 28
 557 00be BB68     		ldr	r3, [r7, #8]
 558 00c0 0433     		adds	r3, r3, #4
 559 00c2 1B68     		ldr	r3, [r3]
 560 00c4 BA68     		ldr	r2, [r7, #8]
 561 00c6 0432     		adds	r2, r2, #4
 562 00c8 43F48023 		orr	r3, r3, #262144
 563 00cc 1360     		str	r3, [r2]
 564 00ce 07E0     		b	.L22
 565              	.L21:
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) &= ~(USART_CTL1_DINV);
 566              		.loc 1 274 28
 567 00d0 BB68     		ldr	r3, [r7, #8]
 568 00d2 0433     		adds	r3, r3, #4
 569 00d4 1B68     		ldr	r3, [r3]
 570 00d6 BA68     		ldr	r2, [r7, #8]
 571 00d8 0432     		adds	r2, r2, #4
 572 00da 23F48023 		bic	r3, r3, #262144
 573 00de 1360     		str	r3, [r2]
 574              	.L22:
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the rx level invert function */
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->rx_level_invert) {
 575              		.loc 1 277 24
 576 00e0 7B68     		ldr	r3, [r7, #4]
 577 00e2 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 578              		.loc 1 277 7
 579 00e6 012B     		cmp	r3, #1
 580 00e8 08D1     		bne	.L23
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) |= USART_CTL1_RINV;
 581              		.loc 1 278 28
 582 00ea BB68     		ldr	r3, [r7, #8]
 583 00ec 0433     		adds	r3, r3, #4
 584 00ee 1B68     		ldr	r3, [r3]
 585 00f0 BA68     		ldr	r2, [r7, #8]
 586 00f2 0432     		adds	r2, r2, #4
 587 00f4 43F48033 		orr	r3, r3, #65536
 588 00f8 1360     		str	r3, [r2]
 589 00fa 07E0     		b	.L24
 590              	.L23:
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) &= ~(USART_CTL1_RINV);
 591              		.loc 1 280 28
 592 00fc BB68     		ldr	r3, [r7, #8]
 593 00fe 0433     		adds	r3, r3, #4
 594 0100 1B68     		ldr	r3, [r3]
 595 0102 BA68     		ldr	r2, [r7, #8]
 596 0104 0432     		adds	r2, r2, #4
 597 0106 23F48033 		bic	r3, r3, #65536
 598 010a 1360     		str	r3, [r2]
 599              	.L24:
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the tx level invert function */
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->tx_level_invert) {
 600              		.loc 1 283 24
 601 010c 7B68     		ldr	r3, [r7, #4]
 602 010e 93F82F30 		ldrb	r3, [r3, #47]	@ zero_extendqisi2
 603              		.loc 1 283 7
 604 0112 012B     		cmp	r3, #1
 605 0114 08D1     		bne	.L25
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) |= USART_CTL1_TINV;
 606              		.loc 1 284 28
 607 0116 BB68     		ldr	r3, [r7, #8]
 608 0118 0433     		adds	r3, r3, #4
 609 011a 1B68     		ldr	r3, [r3]
 610 011c BA68     		ldr	r2, [r7, #8]
 611 011e 0432     		adds	r2, r2, #4
 612 0120 43F40033 		orr	r3, r3, #131072
 613 0124 1360     		str	r3, [r2]
 614 0126 07E0     		b	.L26
 615              	.L25:
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) &= ~(USART_CTL1_TINV);
 616              		.loc 1 286 28
 617 0128 BB68     		ldr	r3, [r7, #8]
 618 012a 0433     		adds	r3, r3, #4
 619 012c 1B68     		ldr	r3, [r3]
 620 012e BA68     		ldr	r2, [r7, #8]
 621 0130 0432     		adds	r2, r2, #4
 622 0132 23F40033 		bic	r3, r3, #131072
 623 0136 1360     		str	r3, [r2]
 624              	.L26:
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the tx rx swap function */
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->tx_rx_swap) {
 625              		.loc 1 289 24
 626 0138 7B68     		ldr	r3, [r7, #4]
 627 013a 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 628              		.loc 1 289 7
 629 013e 012B     		cmp	r3, #1
 630 0140 08D1     		bne	.L27
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) |= USART_CTL1_STRP;
 631              		.loc 1 290 28
 632 0142 BB68     		ldr	r3, [r7, #8]
 633 0144 0433     		adds	r3, r3, #4
 634 0146 1B68     		ldr	r3, [r3]
 635 0148 BA68     		ldr	r2, [r7, #8]
 636 014a 0432     		adds	r2, r2, #4
 637 014c 43F40043 		orr	r3, r3, #32768
 638 0150 1360     		str	r3, [r2]
 639 0152 07E0     		b	.L28
 640              	.L27:
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) &= ~(USART_CTL1_STRP);
 641              		.loc 1 292 28
 642 0154 BB68     		ldr	r3, [r7, #8]
 643 0156 0433     		adds	r3, r3, #4
 644 0158 1B68     		ldr	r3, [r3]
 645 015a BA68     		ldr	r2, [r7, #8]
 646 015c 0432     		adds	r2, r2, #4
 647 015e 23F40043 		bic	r3, r3, #32768
 648 0162 1360     		str	r3, [r2]
 649              	.L28:
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the first bit MSB function */
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->first_bit_msb) {
 650              		.loc 1 295 24
 651 0164 7B68     		ldr	r3, [r7, #4]
 652 0166 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 653              		.loc 1 295 7
 654 016a 012B     		cmp	r3, #1
 655 016c 08D1     		bne	.L29
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) |= USART_CTL1_MSBF;
 656              		.loc 1 296 28
 657 016e BB68     		ldr	r3, [r7, #8]
 658 0170 0433     		adds	r3, r3, #4
 659 0172 1B68     		ldr	r3, [r3]
 660 0174 BA68     		ldr	r2, [r7, #8]
 661 0176 0432     		adds	r2, r2, #4
 662 0178 43F40023 		orr	r3, r3, #524288
 663 017c 1360     		str	r3, [r2]
 664 017e 07E0     		b	.L30
 665              	.L29:
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(periph) &= ~(USART_CTL1_MSBF);
 666              		.loc 1 298 28
 667 0180 BB68     		ldr	r3, [r7, #8]
 668 0182 0433     		adds	r3, r3, #4
 669 0184 1B68     		ldr	r3, [r3]
 670 0186 BA68     		ldr	r2, [r7, #8]
 671 0188 0432     		adds	r2, r2, #4
 672 018a 23F40023 		bic	r3, r3, #524288
 673 018e 1360     		str	r3, [r2]
 674              	.L30:
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure CTL2 register */
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp = USART_CTL2(periph);
 675              		.loc 1 302 16
 676 0190 BB68     		ldr	r3, [r7, #8]
 677 0192 0833     		adds	r3, r3, #8
 678              		.loc 1 302 14
 679 0194 1B68     		ldr	r3, [r3]
 680 0196 7B61     		str	r3, [r7, #20]
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp &= ~(USART_CTL2_CTSEN | USART_CTL2_RTSEN | USART_CTL2_OSB);
 681              		.loc 1 303 14
 682 0198 7B69     		ldr	r3, [r7, #20]
 683 019a 23F43063 		bic	r3, r3, #2816
 684 019e 7B61     		str	r3, [r7, #20]
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp |= (p_init->hardware_flow | p_init->sample_method);
 685              		.loc 1 304 24
 686 01a0 7B68     		ldr	r3, [r7, #4]
 687 01a2 1A6A     		ldr	r2, [r3, #32]
 688              		.loc 1 304 48
 689 01a4 7B68     		ldr	r3, [r7, #4]
 690 01a6 DB69     		ldr	r3, [r3, #28]
 691              		.loc 1 304 40
 692 01a8 1343     		orrs	r3, r3, r2
 693              		.loc 1 304 14
 694 01aa 7A69     		ldr	r2, [r7, #20]
 695 01ac 1343     		orrs	r3, r3, r2
 696 01ae 7B61     		str	r3, [r7, #20]
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(periph) = reg_temp;
 697              		.loc 1 305 5
 698 01b0 BB68     		ldr	r3, [r7, #8]
 699 01b2 0833     		adds	r3, r3, #8
 700 01b4 1A46     		mov	r2, r3
 701              		.loc 1 305 24
 702 01b6 7B69     		ldr	r3, [r7, #20]
 703 01b8 1360     		str	r3, [r2]
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the overrun function */
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->overrun_disable) {
 704              		.loc 1 307 24
 705 01ba 7B68     		ldr	r3, [r7, #4]
 706 01bc 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 707              		.loc 1 307 7
 708 01c0 012B     		cmp	r3, #1
 709 01c2 08D1     		bne	.L31
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL2(periph) |= USART_CTL2_OVRD;
 710              		.loc 1 308 28
 711 01c4 BB68     		ldr	r3, [r7, #8]
 712 01c6 0833     		adds	r3, r3, #8
 713 01c8 1B68     		ldr	r3, [r3]
 714 01ca BA68     		ldr	r2, [r7, #8]
 715 01cc 0832     		adds	r2, r2, #8
 716 01ce 43F48053 		orr	r3, r3, #4096
 717 01d2 1360     		str	r3, [r2]
 718 01d4 07E0     		b	.L32
 719              	.L31:
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL2(periph) &= ~(USART_CTL2_OVRD);
 720              		.loc 1 310 28
 721 01d6 BB68     		ldr	r3, [r7, #8]
 722 01d8 0833     		adds	r3, r3, #8
 723 01da 1B68     		ldr	r3, [r3]
 724 01dc BA68     		ldr	r2, [r7, #8]
 725 01de 0832     		adds	r2, r2, #8
 726 01e0 23F48053 		bic	r3, r3, #4096
 727 01e4 1360     		str	r3, [r2]
 728              	.L32:
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the rx error DMA stop function */
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->rx_error_dma_stop) {
 729              		.loc 1 313 24
 730 01e6 7B68     		ldr	r3, [r7, #4]
 731 01e8 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 732              		.loc 1 313 7
 733 01ec 012B     		cmp	r3, #1
 734 01ee 08D1     		bne	.L33
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL2(periph) |= USART_CTL2_DDRE;
 735              		.loc 1 314 28
 736 01f0 BB68     		ldr	r3, [r7, #8]
 737 01f2 0833     		adds	r3, r3, #8
 738 01f4 1B68     		ldr	r3, [r3]
 739 01f6 BA68     		ldr	r2, [r7, #8]
 740 01f8 0832     		adds	r2, r2, #8
 741 01fa 43F40053 		orr	r3, r3, #8192
 742 01fe 1360     		str	r3, [r2]
 743 0200 07E0     		b	.L34
 744              	.L33:
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL2(periph) &= ~(USART_CTL2_DDRE);
 745              		.loc 1 316 28
 746 0202 BB68     		ldr	r3, [r7, #8]
 747 0204 0833     		adds	r3, r3, #8
 748 0206 1B68     		ldr	r3, [r3]
 749 0208 BA68     		ldr	r2, [r7, #8]
 750 020a 0832     		adds	r2, r2, #8
 751 020c 23F40053 		bic	r3, r3, #8192
 752 0210 1360     		str	r3, [r2]
 753              	.L34:
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure RT register */
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp = USART_RT(periph);
 754              		.loc 1 320 16
 755 0212 BB68     		ldr	r3, [r7, #8]
 756 0214 1433     		adds	r3, r3, #20
 757              		.loc 1 320 14
 758 0216 1B68     		ldr	r3, [r3]
 759 0218 7B61     		str	r3, [r7, #20]
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     reg_temp &= ~USART_RT_RT;
 760              		.loc 1 321 14
 761 021a 7B69     		ldr	r3, [r7, #20]
 762 021c 03F07F43 		and	r3, r3, #-16777216
 763 0220 7B61     		str	r3, [r7, #20]
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->timeout_enable) {
 764              		.loc 1 322 24
 765 0222 7B68     		ldr	r3, [r7, #4]
 766 0224 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 767              		.loc 1 322 7
 768 0228 012B     		cmp	r3, #1
 769 022a 04D1     		bne	.L35
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         reg_temp |= p_init->timeout_value;
 770              		.loc 1 323 27
 771 022c 7B68     		ldr	r3, [r7, #4]
 772 022e 9B6A     		ldr	r3, [r3, #40]
 773              		.loc 1 323 18
 774 0230 7A69     		ldr	r2, [r7, #20]
 775 0232 1343     		orrs	r3, r3, r2
 776 0234 7B61     		str	r3, [r7, #20]
 777              	.L35:
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_RT(periph) = reg_temp;
 778              		.loc 1 325 5
 779 0236 BB68     		ldr	r3, [r7, #8]
 780 0238 1433     		adds	r3, r3, #20
 781 023a 1A46     		mov	r2, r3
 782              		.loc 1 325 22
 783 023c 7B69     		ldr	r3, [r7, #20]
 784 023e 1360     		str	r3, [r2]
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure RFCS register */
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->rx_fifo_en) {
 785              		.loc 1 328 24
 786 0240 7B68     		ldr	r3, [r7, #4]
 787 0242 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 788              		.loc 1 328 7
 789 0246 012B     		cmp	r3, #1
 790 0248 08D1     		bne	.L36
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_RFCS(periph) |= USART_RFCS_RFEN;
 791              		.loc 1 329 28
 792 024a BB68     		ldr	r3, [r7, #8]
 793 024c D033     		adds	r3, r3, #208
 794 024e 1B68     		ldr	r3, [r3]
 795 0250 BA68     		ldr	r2, [r7, #8]
 796 0252 D032     		adds	r2, r2, #208
 797 0254 43F48073 		orr	r3, r3, #256
 798 0258 1360     		str	r3, [r2]
 799 025a 07E0     		b	.L37
 800              	.L36:
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_RFCS(periph) &= ~USART_RFCS_RFEN;
 801              		.loc 1 331 28
 802 025c BB68     		ldr	r3, [r7, #8]
 803 025e D033     		adds	r3, r3, #208
 804 0260 1B68     		ldr	r3, [r3]
 805 0262 BA68     		ldr	r2, [r7, #8]
 806 0264 D032     		adds	r2, r2, #208
 807 0266 23F48073 		bic	r3, r3, #256
 808 026a 1360     		str	r3, [r2]
 809              	.L37:
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure baudrate */
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_baudrate_set(periph, p_init->baudrate);
 810              		.loc 1 335 5
 811 026c 7B68     		ldr	r3, [r7, #4]
 812 026e 5B68     		ldr	r3, [r3, #4]
 813 0270 1946     		mov	r1, r3
 814 0272 B868     		ldr	r0, [r7, #8]
 815 0274 FFF7FEFF 		bl	hals_uart_baudrate_set
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* get the data bit mask */
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->data_bit_mask = _uart_data_bit_mask_get(uart);
 816              		.loc 1 338 27
 817 0278 F868     		ldr	r0, [r7, #12]
 818 027a FFF7FEFF 		bl	_uart_data_bit_mask_get
 819 027e 0346     		mov	r3, r0
 820 0280 1A46     		mov	r2, r3
 821              		.loc 1 338 25
 822 0282 FB68     		ldr	r3, [r7, #12]
 823 0284 A3F84C20 		strh	r2, [r3, #76]	@ movhi
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable the SMARTCARD mode, Half-Duplex mode, IRDA mode, LIN mode and clock */
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_smartcard_mode_disable(periph);
 824              		.loc 1 341 5
 825 0288 B868     		ldr	r0, [r7, #8]
 826 028a FFF7FEFF 		bl	hals_smartcard_mode_disable
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_halfduplex_disable(periph);
 827              		.loc 1 342 5
 828 028e B868     		ldr	r0, [r7, #8]
 829 0290 FFF7FEFF 		bl	hals_uart_halfduplex_disable
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_irda_mode_disable(periph);
 830              		.loc 1 343 5
 831 0294 B868     		ldr	r0, [r7, #8]
 832 0296 FFF7FEFF 		bl	hals_irda_mode_disable
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_usrt_clock_disable(periph);
 833              		.loc 1 344 5
 834 029a B868     		ldr	r0, [r7, #8]
 835 029c FFF7FEFF 		bl	hals_usrt_clock_disable
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_lin_mode_disable(periph);
 836              		.loc 1 345 5
 837 02a0 B868     		ldr	r0, [r7, #8]
 838 02a2 FFF7FEFF 		bl	hals_uart_lin_mode_disable
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_WORK_MODE_ASYN != p_init->work_mode) {
 839              		.loc 1 347 37
 840 02a6 7B68     		ldr	r3, [r7, #4]
 841 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 842              		.loc 1 347 7
 843 02aa 002B     		cmp	r3, #0
 844 02ac 32D0     		beq	.L44
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         switch(p_init->work_mode) {
 845              		.loc 1 348 22
 846 02ae 7B68     		ldr	r3, [r7, #4]
 847 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 848              		.loc 1 348 9
 849 02b2 032B     		cmp	r3, #3
 850 02b4 20D0     		beq	.L39
 851 02b6 032B     		cmp	r3, #3
 852 02b8 2EDC     		bgt	.L45
 853 02ba 012B     		cmp	r3, #1
 854 02bc 26D0     		beq	.L41
 855 02be 022B     		cmp	r3, #2
 856 02c0 2AD1     		bne	.L45
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         case UART_WORK_MODE_MULTIPROCESSCOR:
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* multiprocessor mode configure */
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_mute_mode_wakeup_config(periph, p_init->wakeup_mode);
 857              		.loc 1 351 13
 858 02c2 7B68     		ldr	r3, [r7, #4]
 859 02c4 9B6C     		ldr	r3, [r3, #72]
 860 02c6 1946     		mov	r1, r3
 861 02c8 B868     		ldr	r0, [r7, #8]
 862 02ca FFF7FEFF 		bl	hals_uart_mute_mode_wakeup_config
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(UART_MULTIPROCESSOR_WAKEUP_IDLE != p_init->wakeup_mode) {
 863              		.loc 1 352 57
 864 02ce 7B68     		ldr	r3, [r7, #4]
 865 02d0 9B6C     		ldr	r3, [r3, #72]
 866              		.loc 1 352 15
 867 02d2 002B     		cmp	r3, #0
 868 02d4 0CD0     		beq	.L42
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 hals_uart_address_detection_mode_config(periph, p_init->addr_length);
 869              		.loc 1 353 17
 870 02d6 7B68     		ldr	r3, [r7, #4]
 871 02d8 1B6D     		ldr	r3, [r3, #80]
 872 02da 1946     		mov	r1, r3
 873 02dc B868     		ldr	r0, [r7, #8]
 874 02de FFF7FEFF 		bl	hals_uart_address_detection_mode_config
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 hals_uart_address_config(periph, p_init->address);
 875              		.loc 1 354 17
 876 02e2 7B68     		ldr	r3, [r7, #4]
 877 02e4 93F84C30 		ldrb	r3, [r3, #76]	@ zero_extendqisi2
 878 02e8 1946     		mov	r1, r3
 879 02ea B868     		ldr	r0, [r7, #8]
 880 02ec FFF7FEFF 		bl	hals_uart_address_config
 881              	.L42:
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* enable mute mode */
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_mute_mode_enable(periph);
 882              		.loc 1 357 13
 883 02f0 B868     		ldr	r0, [r7, #8]
 884 02f2 FFF7FEFF 		bl	hals_uart_mute_mode_enable
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             break;
 885              		.loc 1 358 13
 886 02f6 10E0     		b	.L38
 887              	.L39:
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         case UART_WORK_MODE_LIN:
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* LIN mode configure */
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_lin_break_detection_length_config(periph, p_init->break_frame_length);
 888              		.loc 1 361 13
 889 02f8 7B68     		ldr	r3, [r7, #4]
 890 02fa 5B6B     		ldr	r3, [r3, #52]
 891 02fc 1946     		mov	r1, r3
 892 02fe B868     		ldr	r0, [r7, #8]
 893 0300 FFF7FEFF 		bl	hals_uart_lin_break_detection_length_config
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_lin_mode_enable(periph);
 894              		.loc 1 362 13
 895 0304 B868     		ldr	r0, [r7, #8]
 896 0306 FFF7FEFF 		bl	hals_uart_lin_mode_enable
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             break;
 897              		.loc 1 363 13
 898 030a 06E0     		b	.L38
 899              	.L41:
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         case UART_WORK_MODE_SINGLE_WIRE:
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* enable single wire(half-duplex) mode */
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_halfduplex_enable(periph);
 900              		.loc 1 367 13
 901 030c B868     		ldr	r0, [r7, #8]
 902 030e FFF7FEFF 		bl	hals_uart_halfduplex_enable
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             break;
 903              		.loc 1 368 13
 904 0312 02E0     		b	.L38
 905              	.L44:
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         default:
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             break;
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 906              		.loc 1 372 5
 907 0314 00BF     		nop
 908 0316 00E0     		b	.L38
 909              	.L45:
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 910              		.loc 1 370 13
 911 0318 00BF     		nop
 912              	.L38:
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(ENABLE == p_init->rs485_mode) {
 913              		.loc 1 374 24
 914 031a 7B68     		ldr	r3, [r7, #4]
 915 031c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 916              		.loc 1 374 7
 917 0320 012B     		cmp	r3, #1
 918 0322 20D1     		bne	.L43
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_init->de_assertion_time &= BITS(0, 4);
 919              		.loc 1 375 35
 920 0324 7B68     		ldr	r3, [r7, #4]
 921 0326 1B6C     		ldr	r3, [r3, #64]
 922 0328 03F01F02 		and	r2, r3, #31
 923 032c 7B68     		ldr	r3, [r7, #4]
 924 032e 1A64     		str	r2, [r3, #64]
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_init->de_deassertion_time &= BITS(0, 4);
 925              		.loc 1 376 37
 926 0330 7B68     		ldr	r3, [r7, #4]
 927 0332 5B6C     		ldr	r3, [r3, #68]
 928 0334 03F01F02 		and	r2, r3, #31
 929 0338 7B68     		ldr	r3, [r7, #4]
 930 033a 5A64     		str	r2, [r3, #68]
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* RS485 mode configure */
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_driver_assertime_config(periph, p_init->de_assertion_time);
 931              		.loc 1 379 9
 932 033c 7B68     		ldr	r3, [r7, #4]
 933 033e 1B6C     		ldr	r3, [r3, #64]
 934 0340 1946     		mov	r1, r3
 935 0342 B868     		ldr	r0, [r7, #8]
 936 0344 FFF7FEFF 		bl	hals_uart_driver_assertime_config
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_driver_deassertime_config(periph, p_init->de_deassertion_time);
 937              		.loc 1 380 9
 938 0348 7B68     		ldr	r3, [r7, #4]
 939 034a 5B6C     		ldr	r3, [r3, #68]
 940 034c 1946     		mov	r1, r3
 941 034e B868     		ldr	r0, [r7, #8]
 942 0350 FFF7FEFF 		bl	hals_uart_driver_deassertime_config
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_depolarity_config(periph, p_init->de_polarity);
 943              		.loc 1 381 9
 944 0354 7B68     		ldr	r3, [r7, #4]
 945 0356 DB6B     		ldr	r3, [r3, #60]
 946 0358 1946     		mov	r1, r3
 947 035a B868     		ldr	r0, [r7, #8]
 948 035c FFF7FEFF 		bl	hals_uart_depolarity_config
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* enable RS485 driver */
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_rs485_driver_enable(periph);
 949              		.loc 1 383 9
 950 0360 B868     		ldr	r0, [r7, #8]
 951 0362 FFF7FEFF 		bl	hals_uart_rs485_driver_enable
 952              	.L43:
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* reset the Rx and Tx state */
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_state = UART_STATE_FREE;
 953              		.loc 1 387 20
 954 0366 FB68     		ldr	r3, [r7, #12]
 955 0368 0022     		movs	r2, #0
 956 036a 83F85220 		strb	r2, [r3, #82]
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_state = UART_STATE_FREE;
 957              		.loc 1 388 20
 958 036e FB68     		ldr	r3, [r7, #12]
 959 0370 0022     		movs	r2, #0
 960 0372 83F85320 		strb	r2, [r3, #83]
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* enable usart */
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_enable(uart->periph);
 961              		.loc 1 391 5
 962 0376 FB68     		ldr	r3, [r7, #12]
 963 0378 1B68     		ldr	r3, [r3]
 964 037a 1846     		mov	r0, r3
 965 037c FFF7FEFF 		bl	hals_uart_enable
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 966              		.loc 1 394 5
 967 0380 FB68     		ldr	r3, [r7, #12]
 968 0382 0022     		movs	r2, #0
 969 0384 83F85C20 		strb	r2, [r3, #92]
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 970              		.loc 1 396 12
 971 0388 0023     		movs	r3, #0
 972              	.L18:
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 973              		.loc 1 397 1
 974 038a 1846     		mov	r0, r3
 975 038c 1837     		adds	r7, r7, #24
 976              		.cfi_def_cfa_offset 8
 977 038e BD46     		mov	sp, r7
 978              		.cfi_def_cfa_register 13
 979              		@ sp needed
 980 0390 80BD     		pop	{r7, pc}
 981              		.cfi_endproc
 982              	.LFE121:
 984              		.section	.text.hal_uart_irq,"ax",%progbits
 985              		.align	1
 986              		.global	hal_uart_irq
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu softvfp
 992              	hal_uart_irq:
 993              	.LFB122:
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      uart interrupt handler content function,which is merely used in uart_handler
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hal_uart_irq(hal_uart_dev_struct *uart)
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 994              		.loc 1 408 1
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 0006 7860     		str	r0, [r7, #4]
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET == _uart_error_flag_get(uart)) {
 1007              		.loc 1 409 17
 1008 0008 7868     		ldr	r0, [r7, #4]
 1009 000a FFF7FEFF 		bl	_uart_error_flag_get
 1010 000e 0346     		mov	r3, r0
 1011              		.loc 1 409 7
 1012 0010 002B     		cmp	r3, #0
 1013 0012 2CD1     		bne	.L47
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether UART is in receiver mode or not */
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_RBNE)) {
 1014              		.loc 1 411 21
 1015 0014 7B68     		ldr	r3, [r7, #4]
 1016 0016 1B68     		ldr	r3, [r3]
 1017 0018 6749     		ldr	r1, .L72
 1018 001a 1846     		mov	r0, r3
 1019 001c FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1020 0020 0346     		mov	r3, r0
 1021              		.loc 1 411 11
 1022 0022 002B     		cmp	r3, #0
 1023 0024 09D0     		beq	.L48
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(NULL != uart->uart_irq.receive_complete_handle) {
 1024              		.loc 1 412 38
 1025 0026 7B68     		ldr	r3, [r7, #4]
 1026 0028 5B68     		ldr	r3, [r3, #4]
 1027              		.loc 1 412 15
 1028 002a 002B     		cmp	r3, #0
 1029 002c 00F07781 		beq	.L67
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 uart->uart_irq.receive_complete_handle(uart);
 1030              		.loc 1 413 31
 1031 0030 7B68     		ldr	r3, [r7, #4]
 1032 0032 5B68     		ldr	r3, [r3, #4]
 1033              		.loc 1 413 17
 1034 0034 7868     		ldr	r0, [r7, #4]
 1035 0036 9847     		blx	r3
 1036              	.LVL0:
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             return;
 1037              		.loc 1 415 13
 1038 0038 71E1     		b	.L67
 1039              	.L48:
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether UART is in receiver timeout or not */
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_RT)) {
 1040              		.loc 1 418 21
 1041 003a 7B68     		ldr	r3, [r7, #4]
 1042 003c 1B68     		ldr	r3, [r3]
 1043 003e 5F49     		ldr	r1, .L72+4
 1044 0040 1846     		mov	r0, r3
 1045 0042 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1046 0046 0346     		mov	r3, r0
 1047              		.loc 1 418 11
 1048 0048 002B     		cmp	r3, #0
 1049 004a 00F0C380 		beq	.L51
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_RT);
 1050              		.loc 1 419 13
 1051 004e 7B68     		ldr	r3, [r7, #4]
 1052 0050 1B68     		ldr	r3, [r3]
 1053 0052 5A49     		ldr	r1, .L72+4
 1054 0054 1846     		mov	r0, r3
 1055 0056 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(NULL != uart->uart_irq.receive_timeout_handle) {
 1056              		.loc 1 420 38
 1057 005a 7B68     		ldr	r3, [r7, #4]
 1058 005c 9B68     		ldr	r3, [r3, #8]
 1059              		.loc 1 420 15
 1060 005e 002B     		cmp	r3, #0
 1061 0060 00F05F81 		beq	.L68
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 uart->uart_irq.receive_timeout_handle(uart);
 1062              		.loc 1 421 31
 1063 0064 7B68     		ldr	r3, [r7, #4]
 1064 0066 9B68     		ldr	r3, [r3, #8]
 1065              		.loc 1 421 17
 1066 0068 7868     		ldr	r0, [r7, #4]
 1067 006a 9847     		blx	r3
 1068              	.LVL1:
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             return;
 1069              		.loc 1 423 13
 1070 006c 59E1     		b	.L68
 1071              	.L47:
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether the PERR flag is set or not */
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_PERR)) {
 1072              		.loc 1 427 21
 1073 006e 7B68     		ldr	r3, [r7, #4]
 1074 0070 1B68     		ldr	r3, [r3]
 1075 0072 5349     		ldr	r1, .L72+8
 1076 0074 1846     		mov	r0, r3
 1077 0076 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1078 007a 0346     		mov	r3, r0
 1079              		.loc 1 427 11
 1080 007c 002B     		cmp	r3, #0
 1081 007e 13D0     		beq	.L53
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_PERR);
 1082              		.loc 1 428 13
 1083 0080 7B68     		ldr	r3, [r7, #4]
 1084 0082 1B68     		ldr	r3, [r3]
 1085 0084 4E49     		ldr	r1, .L72+8
 1086 0086 1846     		mov	r0, r3
 1087 0088 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->error_state |= HAL_UART_ERROR_PERR;
 1088              		.loc 1 429 31
 1089 008c 7B68     		ldr	r3, [r7, #4]
 1090 008e B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 1091 0092 9BB2     		uxth	r3, r3
 1092 0094 43F00103 		orr	r3, r3, #1
 1093 0098 9AB2     		uxth	r2, r3
 1094 009a 7B68     		ldr	r3, [r7, #4]
 1095 009c A3F85020 		strh	r2, [r3, #80]	@ movhi
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->last_error = HAL_UART_ERROR_PERR;
 1096              		.loc 1 430 30
 1097 00a0 7B68     		ldr	r3, [r7, #4]
 1098 00a2 0122     		movs	r2, #1
 1099 00a4 A3F84E20 		strh	r2, [r3, #78]	@ movhi
 1100              	.L53:
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether the NERR flag is set or not */
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_ERR_NERR)) {
 1101              		.loc 1 434 21
 1102 00a8 7B68     		ldr	r3, [r7, #4]
 1103 00aa 1B68     		ldr	r3, [r3]
 1104 00ac 4549     		ldr	r1, .L72+12
 1105 00ae 1846     		mov	r0, r3
 1106 00b0 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1107 00b4 0346     		mov	r3, r0
 1108              		.loc 1 434 11
 1109 00b6 002B     		cmp	r3, #0
 1110 00b8 13D0     		beq	.L54
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_ERR_NERR);
 1111              		.loc 1 435 13
 1112 00ba 7B68     		ldr	r3, [r7, #4]
 1113 00bc 1B68     		ldr	r3, [r3]
 1114 00be 4149     		ldr	r1, .L72+12
 1115 00c0 1846     		mov	r0, r3
 1116 00c2 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->error_state |= HAL_UART_ERROR_NERR;
 1117              		.loc 1 436 31
 1118 00c6 7B68     		ldr	r3, [r7, #4]
 1119 00c8 B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 1120 00cc 9BB2     		uxth	r3, r3
 1121 00ce 43F00203 		orr	r3, r3, #2
 1122 00d2 9AB2     		uxth	r2, r3
 1123 00d4 7B68     		ldr	r3, [r7, #4]
 1124 00d6 A3F85020 		strh	r2, [r3, #80]	@ movhi
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->last_error = HAL_UART_ERROR_NERR;
 1125              		.loc 1 437 30
 1126 00da 7B68     		ldr	r3, [r7, #4]
 1127 00dc 0222     		movs	r2, #2
 1128 00de A3F84E20 		strh	r2, [r3, #78]	@ movhi
 1129              	.L54:
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether the FERR flag is set or not */
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_ERR_FERR)) {
 1130              		.loc 1 441 21
 1131 00e2 7B68     		ldr	r3, [r7, #4]
 1132 00e4 1B68     		ldr	r3, [r3]
 1133 00e6 3849     		ldr	r1, .L72+16
 1134 00e8 1846     		mov	r0, r3
 1135 00ea FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1136 00ee 0346     		mov	r3, r0
 1137              		.loc 1 441 11
 1138 00f0 002B     		cmp	r3, #0
 1139 00f2 13D0     		beq	.L55
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_ERR_FERR);
 1140              		.loc 1 442 13
 1141 00f4 7B68     		ldr	r3, [r7, #4]
 1142 00f6 1B68     		ldr	r3, [r3]
 1143 00f8 3349     		ldr	r1, .L72+16
 1144 00fa 1846     		mov	r0, r3
 1145 00fc FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->error_state |= HAL_UART_ERROR_FERR;
 1146              		.loc 1 443 31
 1147 0100 7B68     		ldr	r3, [r7, #4]
 1148 0102 B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 1149 0106 9BB2     		uxth	r3, r3
 1150 0108 43F00403 		orr	r3, r3, #4
 1151 010c 9AB2     		uxth	r2, r3
 1152 010e 7B68     		ldr	r3, [r7, #4]
 1153 0110 A3F85020 		strh	r2, [r3, #80]	@ movhi
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->last_error = HAL_UART_ERROR_FERR;
 1154              		.loc 1 444 30
 1155 0114 7B68     		ldr	r3, [r7, #4]
 1156 0116 0422     		movs	r2, #4
 1157 0118 A3F84E20 		strh	r2, [r3, #78]	@ movhi
 1158              	.L55:
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether the ERR ORERR is set or not */
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_ERR_ORERR)) {
 1159              		.loc 1 448 21
 1160 011c 7B68     		ldr	r3, [r7, #4]
 1161 011e 1B68     		ldr	r3, [r3]
 1162 0120 2A49     		ldr	r1, .L72+20
 1163 0122 1846     		mov	r0, r3
 1164 0124 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1165 0128 0346     		mov	r3, r0
 1166              		.loc 1 448 11
 1167 012a 002B     		cmp	r3, #0
 1168 012c 13D0     		beq	.L56
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_ERR_ORERR);
 1169              		.loc 1 449 13
 1170 012e 7B68     		ldr	r3, [r7, #4]
 1171 0130 1B68     		ldr	r3, [r3]
 1172 0132 2649     		ldr	r1, .L72+20
 1173 0134 1846     		mov	r0, r3
 1174 0136 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->error_state |= HAL_UART_ERROR_ORERR;
 1175              		.loc 1 450 31
 1176 013a 7B68     		ldr	r3, [r7, #4]
 1177 013c B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 1178 0140 9BB2     		uxth	r3, r3
 1179 0142 43F00803 		orr	r3, r3, #8
 1180 0146 9AB2     		uxth	r2, r3
 1181 0148 7B68     		ldr	r3, [r7, #4]
 1182 014a A3F85020 		strh	r2, [r3, #80]	@ movhi
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->last_error = HAL_UART_ERROR_ORERR;
 1183              		.loc 1 451 30
 1184 014e 7B68     		ldr	r3, [r7, #4]
 1185 0150 0822     		movs	r2, #8
 1186 0152 A3F84E20 		strh	r2, [r3, #78]	@ movhi
 1187              	.L56:
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether RBNE ORERR is set or not */
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_RBNE_ORERR)) {
 1188              		.loc 1 455 21
 1189 0156 7B68     		ldr	r3, [r7, #4]
 1190 0158 1B68     		ldr	r3, [r3]
 1191 015a 1D49     		ldr	r1, .L72+24
 1192 015c 1846     		mov	r0, r3
 1193 015e FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1194 0162 0346     		mov	r3, r0
 1195              		.loc 1 455 11
 1196 0164 002B     		cmp	r3, #0
 1197 0166 13D0     		beq	.L57
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_RBNE_ORERR);
 1198              		.loc 1 456 13
 1199 0168 7B68     		ldr	r3, [r7, #4]
 1200 016a 1B68     		ldr	r3, [r3]
 1201 016c 1849     		ldr	r1, .L72+24
 1202 016e 1846     		mov	r0, r3
 1203 0170 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->error_state |= HAL_UART_ERROR_ORERR;
 1204              		.loc 1 457 31
 1205 0174 7B68     		ldr	r3, [r7, #4]
 1206 0176 B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 1207 017a 9BB2     		uxth	r3, r3
 1208 017c 43F00803 		orr	r3, r3, #8
 1209 0180 9AB2     		uxth	r2, r3
 1210 0182 7B68     		ldr	r3, [r7, #4]
 1211 0184 A3F85020 		strh	r2, [r3, #80]	@ movhi
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->last_error = HAL_UART_ERROR_ORERR;
 1212              		.loc 1 458 30
 1213 0188 7B68     		ldr	r3, [r7, #4]
 1214 018a 0822     		movs	r2, #8
 1215 018c A3F84E20 		strh	r2, [r3, #78]	@ movhi
 1216              	.L57:
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether error state is none or not */
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(HAL_UART_ERROR_NONE != uart->error_state) {
 1217              		.loc 1 462 39
 1218 0190 7B68     		ldr	r3, [r7, #4]
 1219 0192 B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 1220 0196 9BB2     		uxth	r3, r3
 1221              		.loc 1 462 11
 1222 0198 002B     		cmp	r3, #0
 1223 019a 1BD0     		beq	.L51
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(uart->uart_irq.error_handle != NULL) {
 1224              		.loc 1 463 30
 1225 019c 7B68     		ldr	r3, [r7, #4]
 1226 019e 5B69     		ldr	r3, [r3, #20]
 1227              		.loc 1 463 15
 1228 01a0 002B     		cmp	r3, #0
 1229 01a2 00F0C080 		beq	.L69
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 uart->uart_irq.error_handle(uart);
 1230              		.loc 1 464 31
 1231 01a6 7B68     		ldr	r3, [r7, #4]
 1232 01a8 5B69     		ldr	r3, [r3, #20]
 1233              		.loc 1 464 17
 1234 01aa 7868     		ldr	r0, [r7, #4]
 1235 01ac 9847     		blx	r3
 1236              	.LVL2:
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 uart->error_state = HAL_UART_ERROR_NONE;
 1237              		.loc 1 465 35
 1238 01ae 7B68     		ldr	r3, [r7, #4]
 1239 01b0 0022     		movs	r2, #0
 1240 01b2 A3F85020 		strh	r2, [r3, #80]	@ movhi
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             return;
 1241              		.loc 1 467 13
 1242 01b6 B6E0     		b	.L69
 1243              	.L73:
 1244              		.align	2
 1245              	.L72:
 1246 01b8 05000507 		.word	117768197
 1247 01bc 1A000B07 		.word	118161434
 1248 01c0 08000007 		.word	117440520
 1249 01c4 00020207 		.word	117572096
 1250 01c8 00020107 		.word	117506560
 1251 01cc 00020307 		.word	117637632
 1252 01d0 05000307 		.word	117637125
 1253              	.L51:
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* multi-processor mode interrupt handle */
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_IDLE)) {
 1254              		.loc 1 472 17
 1255 01d4 7B68     		ldr	r3, [r7, #4]
 1256 01d6 1B68     		ldr	r3, [r3]
 1257 01d8 5749     		ldr	r1, .L74
 1258 01da 1846     		mov	r0, r3
 1259 01dc FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1260 01e0 0346     		mov	r3, r0
 1261              		.loc 1 472 7
 1262 01e2 002B     		cmp	r3, #0
 1263 01e4 0DD0     		beq	.L59
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_IDLE);
 1264              		.loc 1 473 9
 1265 01e6 7B68     		ldr	r3, [r7, #4]
 1266 01e8 1B68     		ldr	r3, [r3]
 1267 01ea 5349     		ldr	r1, .L74
 1268 01ec 1846     		mov	r0, r3
 1269 01ee FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.idle_line_detected_handle) {
 1270              		.loc 1 474 34
 1271 01f2 7B68     		ldr	r3, [r7, #4]
 1272 01f4 DB69     		ldr	r3, [r3, #28]
 1273              		.loc 1 474 11
 1274 01f6 002B     		cmp	r3, #0
 1275 01f8 03D0     		beq	.L59
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.idle_line_detected_handle(uart);
 1276              		.loc 1 475 27
 1277 01fa 7B68     		ldr	r3, [r7, #4]
 1278 01fc DB69     		ldr	r3, [r3, #28]
 1279              		.loc 1 475 13
 1280 01fe 7868     		ldr	r0, [r7, #4]
 1281 0200 9847     		blx	r3
 1282              	.LVL3:
 1283              	.L59:
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* address match interrput handle */
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_AM)) {
 1284              		.loc 1 480 17
 1285 0202 7B68     		ldr	r3, [r7, #4]
 1286 0204 1B68     		ldr	r3, [r3]
 1287 0206 4D49     		ldr	r1, .L74+4
 1288 0208 1846     		mov	r0, r3
 1289 020a FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1290 020e 0346     		mov	r3, r0
 1291              		.loc 1 480 7
 1292 0210 002B     		cmp	r3, #0
 1293 0212 0DD0     		beq	.L60
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_AM);
 1294              		.loc 1 481 9
 1295 0214 7B68     		ldr	r3, [r7, #4]
 1296 0216 1B68     		ldr	r3, [r3]
 1297 0218 4849     		ldr	r1, .L74+4
 1298 021a 1846     		mov	r0, r3
 1299 021c FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.address_match_handle) {
 1300              		.loc 1 482 34
 1301 0220 7B68     		ldr	r3, [r7, #4]
 1302 0222 1B6A     		ldr	r3, [r3, #32]
 1303              		.loc 1 482 11
 1304 0224 002B     		cmp	r3, #0
 1305 0226 03D0     		beq	.L60
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.address_match_handle(uart);
 1306              		.loc 1 483 27
 1307 0228 7B68     		ldr	r3, [r7, #4]
 1308 022a 1B6A     		ldr	r3, [r3, #32]
 1309              		.loc 1 483 13
 1310 022c 7868     		ldr	r0, [r7, #4]
 1311 022e 9847     		blx	r3
 1312              	.LVL4:
 1313              	.L60:
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* LIN mode interrupt handle */
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_LBD)) {
 1314              		.loc 1 488 17
 1315 0230 7B68     		ldr	r3, [r7, #4]
 1316 0232 1B68     		ldr	r3, [r3]
 1317 0234 4249     		ldr	r1, .L74+8
 1318 0236 1846     		mov	r0, r3
 1319 0238 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1320 023c 0346     		mov	r3, r0
 1321              		.loc 1 488 7
 1322 023e 002B     		cmp	r3, #0
 1323 0240 0DD0     		beq	.L61
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_LBD);
 1324              		.loc 1 489 9
 1325 0242 7B68     		ldr	r3, [r7, #4]
 1326 0244 1B68     		ldr	r3, [r3]
 1327 0246 3E49     		ldr	r1, .L74+8
 1328 0248 1846     		mov	r0, r3
 1329 024a FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.lin_break_detected_handle) {
 1330              		.loc 1 490 34
 1331 024e 7B68     		ldr	r3, [r7, #4]
 1332 0250 5B6A     		ldr	r3, [r3, #36]
 1333              		.loc 1 490 11
 1334 0252 002B     		cmp	r3, #0
 1335 0254 03D0     		beq	.L61
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.lin_break_detected_handle(uart);
 1336              		.loc 1 491 27
 1337 0256 7B68     		ldr	r3, [r7, #4]
 1338 0258 5B6A     		ldr	r3, [r3, #36]
 1339              		.loc 1 491 13
 1340 025a 7868     		ldr	r0, [r7, #4]
 1341 025c 9847     		blx	r3
 1342              	.LVL5:
 1343              	.L61:
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* wakeup from deepsleep mode interrupt handle */
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_WU)) {
 1344              		.loc 1 496 17
 1345 025e 7B68     		ldr	r3, [r7, #4]
 1346 0260 1B68     		ldr	r3, [r3]
 1347 0262 3849     		ldr	r1, .L74+12
 1348 0264 1846     		mov	r0, r3
 1349 0266 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1350 026a 0346     		mov	r3, r0
 1351              		.loc 1 496 7
 1352 026c 002B     		cmp	r3, #0
 1353 026e 15D0     		beq	.L62
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_WU);
 1354              		.loc 1 497 9
 1355 0270 7B68     		ldr	r3, [r7, #4]
 1356 0272 1B68     		ldr	r3, [r3]
 1357 0274 3349     		ldr	r1, .L74+12
 1358 0276 1846     		mov	r0, r3
 1359 0278 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->rx_state = UART_STATE_FREE;
 1360              		.loc 1 498 24
 1361 027c 7B68     		ldr	r3, [r7, #4]
 1362 027e 0022     		movs	r2, #0
 1363 0280 83F85320 		strb	r2, [r3, #83]
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->tx_state = UART_STATE_FREE;
 1364              		.loc 1 499 24
 1365 0284 7B68     		ldr	r3, [r7, #4]
 1366 0286 0022     		movs	r2, #0
 1367 0288 83F85220 		strb	r2, [r3, #82]
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.wakeup_handle) {
 1368              		.loc 1 500 34
 1369 028c 7B68     		ldr	r3, [r7, #4]
 1370 028e 9B69     		ldr	r3, [r3, #24]
 1371              		.loc 1 500 11
 1372 0290 002B     		cmp	r3, #0
 1373 0292 03D0     		beq	.L62
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.wakeup_handle(uart);
 1374              		.loc 1 501 27
 1375 0294 7B68     		ldr	r3, [r7, #4]
 1376 0296 9B69     		ldr	r3, [r3, #24]
 1377              		.loc 1 501 13
 1378 0298 7868     		ldr	r0, [r7, #4]
 1379 029a 9847     		blx	r3
 1380              	.LVL6:
 1381              	.L62:
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* hardware flow mode interrupt handle */
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_CTS)) {
 1382              		.loc 1 506 17
 1383 029c 7B68     		ldr	r3, [r7, #4]
 1384 029e 1B68     		ldr	r3, [r3]
 1385 02a0 2949     		ldr	r1, .L74+16
 1386 02a2 1846     		mov	r0, r3
 1387 02a4 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1388 02a8 0346     		mov	r3, r0
 1389              		.loc 1 506 7
 1390 02aa 002B     		cmp	r3, #0
 1391 02ac 0DD0     		beq	.L63
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_CTS);
 1392              		.loc 1 507 9
 1393 02ae 7B68     		ldr	r3, [r7, #4]
 1394 02b0 1B68     		ldr	r3, [r3]
 1395 02b2 2549     		ldr	r1, .L74+16
 1396 02b4 1846     		mov	r0, r3
 1397 02b6 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.cts_change_handle) {
 1398              		.loc 1 508 34
 1399 02ba 7B68     		ldr	r3, [r7, #4]
 1400 02bc 9B6A     		ldr	r3, [r3, #40]
 1401              		.loc 1 508 11
 1402 02be 002B     		cmp	r3, #0
 1403 02c0 03D0     		beq	.L63
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.cts_change_handle(uart);
 1404              		.loc 1 509 27
 1405 02c2 7B68     		ldr	r3, [r7, #4]
 1406 02c4 9B6A     		ldr	r3, [r3, #40]
 1407              		.loc 1 509 13
 1408 02c6 7868     		ldr	r0, [r7, #4]
 1409 02c8 9847     		blx	r3
 1410              	.LVL7:
 1411              	.L63:
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* transmitter buffer empty interrupt handle */
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_TBE)) {
 1412              		.loc 1 514 17
 1413 02ca 7B68     		ldr	r3, [r7, #4]
 1414 02cc 1B68     		ldr	r3, [r3]
 1415 02ce 1F49     		ldr	r1, .L74+20
 1416 02d0 1846     		mov	r0, r3
 1417 02d2 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1418 02d6 0346     		mov	r3, r0
 1419              		.loc 1 514 7
 1420 02d8 002B     		cmp	r3, #0
 1421 02da 08D0     		beq	.L64
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.transmit_ready_handle) {
 1422              		.loc 1 515 34
 1423 02dc 7B68     		ldr	r3, [r7, #4]
 1424 02de DB68     		ldr	r3, [r3, #12]
 1425              		.loc 1 515 11
 1426 02e0 002B     		cmp	r3, #0
 1427 02e2 22D0     		beq	.L70
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.transmit_ready_handle(uart);
 1428              		.loc 1 516 27
 1429 02e4 7B68     		ldr	r3, [r7, #4]
 1430 02e6 DB68     		ldr	r3, [r3, #12]
 1431              		.loc 1 516 13
 1432 02e8 7868     		ldr	r0, [r7, #4]
 1433 02ea 9847     		blx	r3
 1434              	.LVL8:
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return;
 1435              		.loc 1 518 9
 1436 02ec 1DE0     		b	.L70
 1437              	.L64:
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* transmission complete interrupt handle */
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != hals_uart_interrupt_flag_get(uart->periph, USART_INT_FLAG_TC)) {
 1438              		.loc 1 522 17
 1439 02ee 7B68     		ldr	r3, [r7, #4]
 1440 02f0 1B68     		ldr	r3, [r3]
 1441 02f2 1749     		ldr	r1, .L74+24
 1442 02f4 1846     		mov	r0, r3
 1443 02f6 FFF7FEFF 		bl	hals_uart_interrupt_flag_get
 1444 02fa 0346     		mov	r3, r0
 1445              		.loc 1 522 7
 1446 02fc 002B     		cmp	r3, #0
 1447 02fe 17D0     		beq	.L46
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_TC);
 1448              		.loc 1 523 9
 1449 0300 7B68     		ldr	r3, [r7, #4]
 1450 0302 1B68     		ldr	r3, [r3]
 1451 0304 1249     		ldr	r1, .L74+24
 1452 0306 1846     		mov	r0, r3
 1453 0308 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != uart->uart_irq.transmit_complete_handle) {
 1454              		.loc 1 524 34
 1455 030c 7B68     		ldr	r3, [r7, #4]
 1456 030e 1B69     		ldr	r3, [r3, #16]
 1457              		.loc 1 524 11
 1458 0310 002B     		cmp	r3, #0
 1459 0312 0CD0     		beq	.L71
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->uart_irq.transmit_complete_handle(uart);
 1460              		.loc 1 525 27
 1461 0314 7B68     		ldr	r3, [r7, #4]
 1462 0316 1B69     		ldr	r3, [r3, #16]
 1463              		.loc 1 525 13
 1464 0318 7868     		ldr	r0, [r7, #4]
 1465 031a 9847     		blx	r3
 1466              	.LVL9:
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return;
 1467              		.loc 1 527 9
 1468 031c 07E0     		b	.L71
 1469              	.L67:
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 1470              		.loc 1 415 13
 1471 031e 00BF     		nop
 1472 0320 06E0     		b	.L46
 1473              	.L68:
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 1474              		.loc 1 423 13
 1475 0322 00BF     		nop
 1476 0324 04E0     		b	.L46
 1477              	.L69:
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 1478              		.loc 1 467 13
 1479 0326 00BF     		nop
 1480 0328 02E0     		b	.L46
 1481              	.L70:
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 1482              		.loc 1 518 9
 1483 032a 00BF     		nop
 1484 032c 00E0     		b	.L46
 1485              	.L71:
 1486              		.loc 1 527 9
 1487 032e 00BF     		nop
 1488              	.L46:
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 1489              		.loc 1 529 1
 1490 0330 0837     		adds	r7, r7, #8
 1491              		.cfi_def_cfa_offset 8
 1492 0332 BD46     		mov	sp, r7
 1493              		.cfi_def_cfa_register 13
 1494              		@ sp needed
 1495 0334 80BD     		pop	{r7, pc}
 1496              	.L75:
 1497 0336 00BF     		.align	2
 1498              	.L74:
 1499 0338 04000407 		.word	117702660
 1500 033c 0E001107 		.word	118554638
 1501 0340 06010807 		.word	117965062
 1502 0344 16021407 		.word	118751766
 1503 0348 0A020907 		.word	118030858
 1504 034c 07000707 		.word	117899271
 1505 0350 06000607 		.word	117833734
 1506              		.cfi_endproc
 1507              	.LFE122:
 1509              		.section	.text.hal_uart_irq_handle_set,"ax",%progbits
 1510              		.align	1
 1511              		.global	hal_uart_irq_handle_set
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu softvfp
 1517              	hal_uart_irq_handle_set:
 1518              	.LFB123:
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      set user-defined interrupt callback function,
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 which will be registered and called when corresponding interrupt be triggered
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structrue
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   the structure parameters altering is automatically configured by core
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_irq: point to uart interrupt callback functions structure
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                   The structure member can be assigned as following parameters:
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        hal_irq_handle_cb function pointer: the function is user-defined,
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the corresponding callback mechanism is in use, and enable corresponding interr
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        NULL: The corresponding callback mechanism is out of use, and
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     disable corresponding interrupt
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hal_uart_irq_handle_set(hal_uart_dev_struct *uart, hal_uart_irq_struct *p_irq)
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 1519              		.loc 1 547 1
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 8
 1522              		@ frame_needed = 1, uses_anonymous_args = 0
 1523 0000 80B5     		push	{r7, lr}
 1524              		.cfi_def_cfa_offset 8
 1525              		.cfi_offset 7, -8
 1526              		.cfi_offset 14, -4
 1527 0002 82B0     		sub	sp, sp, #8
 1528              		.cfi_def_cfa_offset 16
 1529 0004 00AF     		add	r7, sp, #0
 1530              		.cfi_def_cfa_register 7
 1531 0006 7860     		str	r0, [r7, #4]
 1532 0008 3960     		str	r1, [r7]
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined address match interrupt callback */
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->address_match_handle) {
 1533              		.loc 1 549 21
 1534 000a 3B68     		ldr	r3, [r7]
 1535 000c DB69     		ldr	r3, [r3, #28]
 1536              		.loc 1 549 7
 1537 000e 002B     		cmp	r3, #0
 1538 0010 0AD0     		beq	.L77
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.address_match_handle = p_irq->address_match_handle;
 1539              		.loc 1 550 52
 1540 0012 3B68     		ldr	r3, [r7]
 1541 0014 DA69     		ldr	r2, [r3, #28]
 1542              		.loc 1 550 45
 1543 0016 7B68     		ldr	r3, [r7, #4]
 1544 0018 1A62     		str	r2, [r3, #32]
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_AM);
 1545              		.loc 1 551 9
 1546 001a 7B68     		ldr	r3, [r7, #4]
 1547 001c 1B68     		ldr	r3, [r3]
 1548 001e 0E21     		movs	r1, #14
 1549 0020 1846     		mov	r0, r3
 1550 0022 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1551 0026 08E0     		b	.L78
 1552              	.L77:
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.address_match_handle = NULL;
 1553              		.loc 1 553 45
 1554 0028 7B68     		ldr	r3, [r7, #4]
 1555 002a 0022     		movs	r2, #0
 1556 002c 1A62     		str	r2, [r3, #32]
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_AM);
 1557              		.loc 1 554 9
 1558 002e 7B68     		ldr	r3, [r7, #4]
 1559 0030 1B68     		ldr	r3, [r3]
 1560 0032 0E21     		movs	r1, #14
 1561 0034 1846     		mov	r0, r3
 1562 0036 FFF7FEFF 		bl	hals_uart_interrupt_disable
 1563              	.L78:
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined CTS change interrupt callback */
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->cts_change_handle) {
 1564              		.loc 1 558 21
 1565 003a 3B68     		ldr	r3, [r7]
 1566 003c 5B6A     		ldr	r3, [r3, #36]
 1567              		.loc 1 558 7
 1568 003e 002B     		cmp	r3, #0
 1569 0040 0BD0     		beq	.L79
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.cts_change_handle = p_irq->cts_change_handle;
 1570              		.loc 1 559 49
 1571 0042 3B68     		ldr	r3, [r7]
 1572 0044 5A6A     		ldr	r2, [r3, #36]
 1573              		.loc 1 559 42
 1574 0046 7B68     		ldr	r3, [r7, #4]
 1575 0048 9A62     		str	r2, [r3, #40]
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_CTS);
 1576              		.loc 1 560 9
 1577 004a 7B68     		ldr	r3, [r7, #4]
 1578 004c 1B68     		ldr	r3, [r3]
 1579 004e 40F20A21 		movw	r1, #522
 1580 0052 1846     		mov	r0, r3
 1581 0054 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1582 0058 09E0     		b	.L80
 1583              	.L79:
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.cts_change_handle = NULL;
 1584              		.loc 1 562 42
 1585 005a 7B68     		ldr	r3, [r7, #4]
 1586 005c 0022     		movs	r2, #0
 1587 005e 9A62     		str	r2, [r3, #40]
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_CTS);
 1588              		.loc 1 563 9
 1589 0060 7B68     		ldr	r3, [r7, #4]
 1590 0062 1B68     		ldr	r3, [r3]
 1591 0064 40F20A21 		movw	r1, #522
 1592 0068 1846     		mov	r0, r3
 1593 006a FFF7FEFF 		bl	hals_uart_interrupt_disable
 1594              	.L80:
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined error interrupt callback */
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->error_handle) {
 1595              		.loc 1 567 21
 1596 006e 3B68     		ldr	r3, [r7]
 1597 0070 1B69     		ldr	r3, [r3, #16]
 1598              		.loc 1 567 7
 1599 0072 002B     		cmp	r3, #0
 1600 0074 11D0     		beq	.L81
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.error_handle = p_irq->error_handle;
 1601              		.loc 1 568 44
 1602 0076 3B68     		ldr	r3, [r7]
 1603 0078 1A69     		ldr	r2, [r3, #16]
 1604              		.loc 1 568 37
 1605 007a 7B68     		ldr	r3, [r7, #4]
 1606 007c 5A61     		str	r2, [r3, #20]
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_ERR);
 1607              		.loc 1 569 9
 1608 007e 7B68     		ldr	r3, [r7, #4]
 1609 0080 1B68     		ldr	r3, [r3]
 1610 0082 4FF40071 		mov	r1, #512
 1611 0086 1846     		mov	r0, r3
 1612 0088 FFF7FEFF 		bl	hals_uart_interrupt_enable
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_PERR);
 1613              		.loc 1 570 9
 1614 008c 7B68     		ldr	r3, [r7, #4]
 1615 008e 1B68     		ldr	r3, [r3]
 1616 0090 0821     		movs	r1, #8
 1617 0092 1846     		mov	r0, r3
 1618 0094 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1619 0098 0FE0     		b	.L82
 1620              	.L81:
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.error_handle = NULL;
 1621              		.loc 1 572 37
 1622 009a 7B68     		ldr	r3, [r7, #4]
 1623 009c 0022     		movs	r2, #0
 1624 009e 5A61     		str	r2, [r3, #20]
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_ERR);
 1625              		.loc 1 573 9
 1626 00a0 7B68     		ldr	r3, [r7, #4]
 1627 00a2 1B68     		ldr	r3, [r3]
 1628 00a4 4FF40071 		mov	r1, #512
 1629 00a8 1846     		mov	r0, r3
 1630 00aa FFF7FEFF 		bl	hals_uart_interrupt_disable
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_PERR);
 1631              		.loc 1 574 9
 1632 00ae 7B68     		ldr	r3, [r7, #4]
 1633 00b0 1B68     		ldr	r3, [r3]
 1634 00b2 0821     		movs	r1, #8
 1635 00b4 1846     		mov	r0, r3
 1636 00b6 FFF7FEFF 		bl	hals_uart_interrupt_disable
 1637              	.L82:
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined idle line detected interrupt callback */
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->idle_line_detected_handle) {
 1638              		.loc 1 578 21
 1639 00ba 3B68     		ldr	r3, [r7]
 1640 00bc 9B69     		ldr	r3, [r3, #24]
 1641              		.loc 1 578 7
 1642 00be 002B     		cmp	r3, #0
 1643 00c0 0AD0     		beq	.L83
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.idle_line_detected_handle = p_irq->idle_line_detected_handle;
 1644              		.loc 1 579 57
 1645 00c2 3B68     		ldr	r3, [r7]
 1646 00c4 9A69     		ldr	r2, [r3, #24]
 1647              		.loc 1 579 50
 1648 00c6 7B68     		ldr	r3, [r7, #4]
 1649 00c8 DA61     		str	r2, [r3, #28]
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_IDLE);
 1650              		.loc 1 580 9
 1651 00ca 7B68     		ldr	r3, [r7, #4]
 1652 00cc 1B68     		ldr	r3, [r3]
 1653 00ce 0421     		movs	r1, #4
 1654 00d0 1846     		mov	r0, r3
 1655 00d2 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1656 00d6 08E0     		b	.L84
 1657              	.L83:
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.idle_line_detected_handle = NULL;
 1658              		.loc 1 582 50
 1659 00d8 7B68     		ldr	r3, [r7, #4]
 1660 00da 0022     		movs	r2, #0
 1661 00dc DA61     		str	r2, [r3, #28]
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_IDLE);
 1662              		.loc 1 583 9
 1663 00de 7B68     		ldr	r3, [r7, #4]
 1664 00e0 1B68     		ldr	r3, [r3]
 1665 00e2 0421     		movs	r1, #4
 1666 00e4 1846     		mov	r0, r3
 1667 00e6 FFF7FEFF 		bl	hals_uart_interrupt_disable
 1668              	.L84:
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined LIN break detected interrupt callback */
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->lin_break_detected_handle) {
 1669              		.loc 1 587 21
 1670 00ea 3B68     		ldr	r3, [r7]
 1671 00ec 1B6A     		ldr	r3, [r3, #32]
 1672              		.loc 1 587 7
 1673 00ee 002B     		cmp	r3, #0
 1674 00f0 0BD0     		beq	.L85
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.lin_break_detected_handle = p_irq->lin_break_detected_handle;
 1675              		.loc 1 588 57
 1676 00f2 3B68     		ldr	r3, [r7]
 1677 00f4 1A6A     		ldr	r2, [r3, #32]
 1678              		.loc 1 588 50
 1679 00f6 7B68     		ldr	r3, [r7, #4]
 1680 00f8 5A62     		str	r2, [r3, #36]
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_LBD);
 1681              		.loc 1 589 9
 1682 00fa 7B68     		ldr	r3, [r7, #4]
 1683 00fc 1B68     		ldr	r3, [r3]
 1684 00fe 4FF48371 		mov	r1, #262
 1685 0102 1846     		mov	r0, r3
 1686 0104 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1687 0108 09E0     		b	.L86
 1688              	.L85:
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.lin_break_detected_handle = NULL;
 1689              		.loc 1 591 50
 1690 010a 7B68     		ldr	r3, [r7, #4]
 1691 010c 0022     		movs	r2, #0
 1692 010e 5A62     		str	r2, [r3, #36]
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_LBD);
 1693              		.loc 1 592 9
 1694 0110 7B68     		ldr	r3, [r7, #4]
 1695 0112 1B68     		ldr	r3, [r3]
 1696 0114 4FF48371 		mov	r1, #262
 1697 0118 1846     		mov	r0, r3
 1698 011a FFF7FEFF 		bl	hals_uart_interrupt_disable
 1699              	.L86:
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined receive complete interrupt callback */
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->receive_complete_handle) {
 1700              		.loc 1 596 21
 1701 011e 3B68     		ldr	r3, [r7]
 1702 0120 1B68     		ldr	r3, [r3]
 1703              		.loc 1 596 7
 1704 0122 002B     		cmp	r3, #0
 1705 0124 0AD0     		beq	.L87
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.receive_complete_handle = p_irq->receive_complete_handle;
 1706              		.loc 1 597 55
 1707 0126 3B68     		ldr	r3, [r7]
 1708 0128 1A68     		ldr	r2, [r3]
 1709              		.loc 1 597 48
 1710 012a 7B68     		ldr	r3, [r7, #4]
 1711 012c 5A60     		str	r2, [r3, #4]
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_RBNE);
 1712              		.loc 1 598 9
 1713 012e 7B68     		ldr	r3, [r7, #4]
 1714 0130 1B68     		ldr	r3, [r3]
 1715 0132 0521     		movs	r1, #5
 1716 0134 1846     		mov	r0, r3
 1717 0136 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1718 013a 08E0     		b	.L88
 1719              	.L87:
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.receive_complete_handle = NULL;
 1720              		.loc 1 600 48
 1721 013c 7B68     		ldr	r3, [r7, #4]
 1722 013e 0022     		movs	r2, #0
 1723 0140 5A60     		str	r2, [r3, #4]
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_RBNE);
 1724              		.loc 1 601 9
 1725 0142 7B68     		ldr	r3, [r7, #4]
 1726 0144 1B68     		ldr	r3, [r3]
 1727 0146 0521     		movs	r1, #5
 1728 0148 1846     		mov	r0, r3
 1729 014a FFF7FEFF 		bl	hals_uart_interrupt_disable
 1730              	.L88:
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined receive timeout interrupt callback */
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->receive_timeout_handle) {
 1731              		.loc 1 605 21
 1732 014e 3B68     		ldr	r3, [r7]
 1733 0150 5B68     		ldr	r3, [r3, #4]
 1734              		.loc 1 605 7
 1735 0152 002B     		cmp	r3, #0
 1736 0154 0AD0     		beq	.L89
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.receive_timeout_handle = p_irq->receive_timeout_handle;
 1737              		.loc 1 606 54
 1738 0156 3B68     		ldr	r3, [r7]
 1739 0158 5A68     		ldr	r2, [r3, #4]
 1740              		.loc 1 606 47
 1741 015a 7B68     		ldr	r3, [r7, #4]
 1742 015c 9A60     		str	r2, [r3, #8]
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_RT);
 1743              		.loc 1 607 9
 1744 015e 7B68     		ldr	r3, [r7, #4]
 1745 0160 1B68     		ldr	r3, [r3]
 1746 0162 1A21     		movs	r1, #26
 1747 0164 1846     		mov	r0, r3
 1748 0166 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1749 016a 08E0     		b	.L90
 1750              	.L89:
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.receive_timeout_handle = NULL;
 1751              		.loc 1 609 47
 1752 016c 7B68     		ldr	r3, [r7, #4]
 1753 016e 0022     		movs	r2, #0
 1754 0170 9A60     		str	r2, [r3, #8]
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_RT);
 1755              		.loc 1 610 9
 1756 0172 7B68     		ldr	r3, [r7, #4]
 1757 0174 1B68     		ldr	r3, [r3]
 1758 0176 1A21     		movs	r1, #26
 1759 0178 1846     		mov	r0, r3
 1760 017a FFF7FEFF 		bl	hals_uart_interrupt_disable
 1761              	.L90:
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined transmit complete interrupt callback */
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->transmit_complete_handle) {
 1762              		.loc 1 614 21
 1763 017e 3B68     		ldr	r3, [r7]
 1764 0180 DB68     		ldr	r3, [r3, #12]
 1765              		.loc 1 614 7
 1766 0182 002B     		cmp	r3, #0
 1767 0184 0AD0     		beq	.L91
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.transmit_complete_handle = p_irq->transmit_complete_handle;
 1768              		.loc 1 615 56
 1769 0186 3B68     		ldr	r3, [r7]
 1770 0188 DA68     		ldr	r2, [r3, #12]
 1771              		.loc 1 615 49
 1772 018a 7B68     		ldr	r3, [r7, #4]
 1773 018c 1A61     		str	r2, [r3, #16]
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_TC);
 1774              		.loc 1 616 9
 1775 018e 7B68     		ldr	r3, [r7, #4]
 1776 0190 1B68     		ldr	r3, [r3]
 1777 0192 0621     		movs	r1, #6
 1778 0194 1846     		mov	r0, r3
 1779 0196 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1780 019a 08E0     		b	.L92
 1781              	.L91:
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.transmit_complete_handle = NULL;
 1782              		.loc 1 618 49
 1783 019c 7B68     		ldr	r3, [r7, #4]
 1784 019e 0022     		movs	r2, #0
 1785 01a0 1A61     		str	r2, [r3, #16]
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_TC);
 1786              		.loc 1 619 9
 1787 01a2 7B68     		ldr	r3, [r7, #4]
 1788 01a4 1B68     		ldr	r3, [r3]
 1789 01a6 0621     		movs	r1, #6
 1790 01a8 1846     		mov	r0, r3
 1791 01aa FFF7FEFF 		bl	hals_uart_interrupt_disable
 1792              	.L92:
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined transmit ready interrupt callback */
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->transmit_ready_handle) {
 1793              		.loc 1 623 21
 1794 01ae 3B68     		ldr	r3, [r7]
 1795 01b0 9B68     		ldr	r3, [r3, #8]
 1796              		.loc 1 623 7
 1797 01b2 002B     		cmp	r3, #0
 1798 01b4 0AD0     		beq	.L93
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.transmit_ready_handle = p_irq->transmit_ready_handle;
 1799              		.loc 1 624 53
 1800 01b6 3B68     		ldr	r3, [r7]
 1801 01b8 9A68     		ldr	r2, [r3, #8]
 1802              		.loc 1 624 46
 1803 01ba 7B68     		ldr	r3, [r7, #4]
 1804 01bc DA60     		str	r2, [r3, #12]
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_TBE);
 1805              		.loc 1 625 9
 1806 01be 7B68     		ldr	r3, [r7, #4]
 1807 01c0 1B68     		ldr	r3, [r3]
 1808 01c2 0721     		movs	r1, #7
 1809 01c4 1846     		mov	r0, r3
 1810 01c6 FFF7FEFF 		bl	hals_uart_interrupt_enable
 1811 01ca 08E0     		b	.L94
 1812              	.L93:
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.transmit_ready_handle = NULL;
 1813              		.loc 1 627 46
 1814 01cc 7B68     		ldr	r3, [r7, #4]
 1815 01ce 0022     		movs	r2, #0
 1816 01d0 DA60     		str	r2, [r3, #12]
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_TBE);
 1817              		.loc 1 628 9
 1818 01d2 7B68     		ldr	r3, [r7, #4]
 1819 01d4 1B68     		ldr	r3, [r3]
 1820 01d6 0721     		movs	r1, #7
 1821 01d8 1846     		mov	r0, r3
 1822 01da FFF7FEFF 		bl	hals_uart_interrupt_disable
 1823              	.L94:
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* set user-defined wakeup interrupt callback */
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_irq->wakeup_handle) {
 1824              		.loc 1 632 21
 1825 01de 3B68     		ldr	r3, [r7]
 1826 01e0 5B69     		ldr	r3, [r3, #20]
 1827              		.loc 1 632 7
 1828 01e2 002B     		cmp	r3, #0
 1829 01e4 0BD0     		beq	.L95
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.wakeup_handle = p_irq->wakeup_handle;
 1830              		.loc 1 633 45
 1831 01e6 3B68     		ldr	r3, [r7]
 1832 01e8 5A69     		ldr	r2, [r3, #20]
 1833              		.loc 1 633 38
 1834 01ea 7B68     		ldr	r3, [r7, #4]
 1835 01ec 9A61     		str	r2, [r3, #24]
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_WU);
 1836              		.loc 1 634 9
 1837 01ee 7B68     		ldr	r3, [r7, #4]
 1838 01f0 1B68     		ldr	r3, [r3]
 1839 01f2 40F21621 		movw	r1, #534
 1840 01f6 1846     		mov	r0, r3
 1841 01f8 FFF7FEFF 		bl	hals_uart_interrupt_enable
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.wakeup_handle = NULL;
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_WU);
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 1842              		.loc 1 639 1
 1843 01fc 09E0     		b	.L97
 1844              	.L95:
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_WU);
 1845              		.loc 1 636 38
 1846 01fe 7B68     		ldr	r3, [r7, #4]
 1847 0200 0022     		movs	r2, #0
 1848 0202 9A61     		str	r2, [r3, #24]
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 1849              		.loc 1 637 9
 1850 0204 7B68     		ldr	r3, [r7, #4]
 1851 0206 1B68     		ldr	r3, [r3]
 1852 0208 40F21621 		movw	r1, #534
 1853 020c 1846     		mov	r0, r3
 1854 020e FFF7FEFF 		bl	hals_uart_interrupt_disable
 1855              	.L97:
 1856              		.loc 1 639 1
 1857 0212 00BF     		nop
 1858 0214 0837     		adds	r7, r7, #8
 1859              		.cfi_def_cfa_offset 8
 1860 0216 BD46     		mov	sp, r7
 1861              		.cfi_def_cfa_register 13
 1862              		@ sp needed
 1863 0218 80BD     		pop	{r7, pc}
 1864              		.cfi_endproc
 1865              	.LFE123:
 1867              		.section	.text.hal_uart_irq_handle_all_reset,"ax",%progbits
 1868              		.align	1
 1869              		.global	hal_uart_irq_handle_all_reset
 1870              		.syntax unified
 1871              		.thumb
 1872              		.thumb_func
 1873              		.fpu softvfp
 1875              	hal_uart_irq_handle_all_reset:
 1876              	.LFB124:
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      reset all user-defined interrupt callback function,
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 which will be registered and called when corresponding interrupt be triggered
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hal_uart_irq_handle_all_reset(hal_uart_dev_struct *uart)
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 1877              		.loc 1 651 1
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 8
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881              		@ link register save eliminated.
 1882 0000 80B4     		push	{r7}
 1883              		.cfi_def_cfa_offset 4
 1884              		.cfi_offset 7, -4
 1885 0002 83B0     		sub	sp, sp, #12
 1886              		.cfi_def_cfa_offset 16
 1887 0004 00AF     		add	r7, sp, #0
 1888              		.cfi_def_cfa_register 7
 1889 0006 7860     		str	r0, [r7, #4]
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure interrupt callback function to NULL */
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.address_match_handle         = NULL;
 1890              		.loc 1 653 49
 1891 0008 7B68     		ldr	r3, [r7, #4]
 1892 000a 0022     		movs	r2, #0
 1893 000c 1A62     		str	r2, [r3, #32]
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.cts_change_handle            = NULL;
 1894              		.loc 1 654 49
 1895 000e 7B68     		ldr	r3, [r7, #4]
 1896 0010 0022     		movs	r2, #0
 1897 0012 9A62     		str	r2, [r3, #40]
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.error_handle                 = NULL;
 1898              		.loc 1 655 49
 1899 0014 7B68     		ldr	r3, [r7, #4]
 1900 0016 0022     		movs	r2, #0
 1901 0018 5A61     		str	r2, [r3, #20]
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.idle_line_detected_handle    = NULL;
 1902              		.loc 1 656 49
 1903 001a 7B68     		ldr	r3, [r7, #4]
 1904 001c 0022     		movs	r2, #0
 1905 001e DA61     		str	r2, [r3, #28]
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.lin_break_detected_handle    = NULL;
 1906              		.loc 1 657 49
 1907 0020 7B68     		ldr	r3, [r7, #4]
 1908 0022 0022     		movs	r2, #0
 1909 0024 5A62     		str	r2, [r3, #36]
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.receive_complete_handle      = NULL;
 1910              		.loc 1 658 49
 1911 0026 7B68     		ldr	r3, [r7, #4]
 1912 0028 0022     		movs	r2, #0
 1913 002a 5A60     		str	r2, [r3, #4]
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.receive_timeout_handle      = NULL;
 1914              		.loc 1 659 48
 1915 002c 7B68     		ldr	r3, [r7, #4]
 1916 002e 0022     		movs	r2, #0
 1917 0030 9A60     		str	r2, [r3, #8]
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.transmit_complete_handle     = NULL;
 1918              		.loc 1 660 49
 1919 0032 7B68     		ldr	r3, [r7, #4]
 1920 0034 0022     		movs	r2, #0
 1921 0036 1A61     		str	r2, [r3, #16]
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.transmit_ready_handle        = NULL;
 1922              		.loc 1 661 49
 1923 0038 7B68     		ldr	r3, [r7, #4]
 1924 003a 0022     		movs	r2, #0
 1925 003c DA60     		str	r2, [r3, #12]
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.wakeup_handle                = NULL;
 1926              		.loc 1 662 49
 1927 003e 7B68     		ldr	r3, [r7, #4]
 1928 0040 0022     		movs	r2, #0
 1929 0042 9A61     		str	r2, [r3, #24]
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 1930              		.loc 1 663 1
 1931 0044 00BF     		nop
 1932 0046 0C37     		adds	r7, r7, #12
 1933              		.cfi_def_cfa_offset 4
 1934 0048 BD46     		mov	sp, r7
 1935              		.cfi_def_cfa_register 13
 1936              		@ sp needed
 1937 004a 80BC     		pop	{r7}
 1938              		.cfi_restore 7
 1939              		.cfi_def_cfa_offset 0
 1940 004c 7047     		bx	lr
 1941              		.cfi_endproc
 1942              	.LFE124:
 1944              		.section	.text.hal_uart_transmit_poll,"ax",%progbits
 1945              		.align	1
 1946              		.global	hal_uart_transmit_poll
 1947              		.syntax unified
 1948              		.thumb
 1949              		.thumb_func
 1950              		.fpu softvfp
 1952              	hal_uart_transmit_poll:
 1953              	.LFB125:
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      transmit amounts of data, poll transmit process and completed status
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is blocking
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_buffer: pointer to data buffer
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  length: number of data to be transmitted
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  timeout_ms: timeout duration
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY, HAL_ERR_TIMEO
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_transmit_poll(hal_uart_dev_struct *uart, uint8_t *p_buffer, uint32_t length, uint3
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 1954              		.loc 1 678 1
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 24
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958 0000 80B5     		push	{r7, lr}
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 7, -8
 1961              		.cfi_offset 14, -4
 1962 0002 86B0     		sub	sp, sp, #24
 1963              		.cfi_def_cfa_offset 32
 1964 0004 00AF     		add	r7, sp, #0
 1965              		.cfi_def_cfa_register 7
 1966 0006 F860     		str	r0, [r7, #12]
 1967 0008 B960     		str	r1, [r7, #8]
 1968 000a 7A60     		str	r2, [r7, #4]
 1969 000c 3B60     		str	r3, [r7]
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint8_t data_length;
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint32_t tick_start;
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameters */
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_buffer) || (0U == length)) {
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] or [p_buffer] or [length] value is invalid");
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the tx_state wheher is busy or not */
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->tx_state) {
 1970              		.loc 1 691 31
 1971 000e FB68     		ldr	r3, [r7, #12]
 1972 0010 93F85230 		ldrb	r3, [r3, #82]
 1973 0014 DBB2     		uxtb	r3, r3
 1974              		.loc 1 691 7
 1975 0016 012B     		cmp	r3, #1
 1976 0018 02D1     		bne	.L100
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart tx has already been used, please wait until run_state change to free ");
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_BUSY;
 1977              		.loc 1 693 16
 1978 001a 6FF00203 		mvn	r3, #2
 1979 001e ACE0     		b	.L101
 1980              	.L100:
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 1981              		.loc 1 697 5
 1982 0020 FB68     		ldr	r3, [r7, #12]
 1983 0022 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 1984 0026 012B     		cmp	r3, #1
 1985 0028 02D1     		bne	.L102
 1986              		.loc 1 697 5 is_stmt 0 discriminator 1
 1987 002a 6FF00103 		mvn	r3, #1
 1988 002e A4E0     		b	.L101
 1989              	.L102:
 1990              		.loc 1 697 5 discriminator 2
 1991 0030 FB68     		ldr	r3, [r7, #12]
 1992 0032 0122     		movs	r2, #1
 1993 0034 83F85C20 		strb	r2, [r3, #92]
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* initialize transmit parameters */
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->error_state       = HAL_UART_ERROR_NONE;
 1994              		.loc 1 700 29 is_stmt 1 discriminator 2
 1995 0038 FB68     		ldr	r3, [r7, #12]
 1996 003a 0022     		movs	r2, #0
 1997 003c A3F85020 		strh	r2, [r3, #80]	@ movhi
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.buffer   = (uint8_t *)p_buffer;
 1998              		.loc 1 701 29 discriminator 2
 1999 0040 FB68     		ldr	r3, [r7, #12]
 2000 0042 BA68     		ldr	r2, [r7, #8]
 2001 0044 5A63     		str	r2, [r3, #52]
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.length   = length;
 2002              		.loc 1 702 29 discriminator 2
 2003 0046 FB68     		ldr	r3, [r7, #12]
 2004 0048 7A68     		ldr	r2, [r7, #4]
 2005 004a 9A63     		str	r2, [r3, #56]
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.pos      = 0U;
 2006              		.loc 1 703 29 discriminator 2
 2007 004c FB68     		ldr	r3, [r7, #12]
 2008 004e 0022     		movs	r2, #0
 2009 0050 DA63     		str	r2, [r3, #60]
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_state          = UART_STATE_BUSY;
 2010              		.loc 1 704 29 discriminator 2
 2011 0052 FB68     		ldr	r3, [r7, #12]
 2012 0054 0122     		movs	r2, #1
 2013 0056 83F85220 		strb	r2, [r3, #82]
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* calculate the data length */
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     data_length = 1U;
 2014              		.loc 1 707 17 discriminator 2
 2015 005a 0123     		movs	r3, #1
 2016 005c FB75     		strb	r3, [r7, #23]
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != (USART_CTL0(uart->periph) & USART_CTL0_WL)) {
 2017              		.loc 1 708 18 discriminator 2
 2018 005e FB68     		ldr	r3, [r7, #12]
 2019 0060 1B68     		ldr	r3, [r3]
 2020 0062 1B68     		ldr	r3, [r3]
 2021              		.loc 1 708 43 discriminator 2
 2022 0064 03F48053 		and	r3, r3, #4096
 2023              		.loc 1 708 7 discriminator 2
 2024 0068 002B     		cmp	r3, #0
 2025 006a 08D0     		beq	.L103
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET == (USART_CTL0(uart->periph) & USART_CTL0_PCEN)) {
 2026              		.loc 1 709 22
 2027 006c FB68     		ldr	r3, [r7, #12]
 2028 006e 1B68     		ldr	r3, [r3]
 2029 0070 1B68     		ldr	r3, [r3]
 2030              		.loc 1 709 47
 2031 0072 03F48063 		and	r3, r3, #1024
 2032              		.loc 1 709 11
 2033 0076 002B     		cmp	r3, #0
 2034 0078 01D1     		bne	.L103
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             data_length = 2U;
 2035              		.loc 1 710 25
 2036 007a 0223     		movs	r3, #2
 2037 007c FB75     		strb	r3, [r7, #23]
 2038              	.L103:
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure timeout */
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     tick_start = hal_sys_basetick_count_get();
 2039              		.loc 1 715 18
 2040 007e FFF7FEFF 		bl	hal_sys_basetick_count_get
 2041 0082 3861     		str	r0, [r7, #16]
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     while(uart->txbuffer.pos < uart->txbuffer.length) {
 2042              		.loc 1 717 10
 2043 0084 49E0     		b	.L104
 2044              	.L106:
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for transmit buffer empty */
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         while(RESET == hals_uart_flag_get(uart->periph, USART_FLAG_TBE)) {
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2045              		.loc 1 720 15
 2046 0086 3B68     		ldr	r3, [r7]
 2047 0088 B3F1FF3F 		cmp	r3, #-1
 2048 008c 11D0     		beq	.L105
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 2049              		.loc 1 721 27
 2050 008e 3968     		ldr	r1, [r7]
 2051 0090 3869     		ldr	r0, [r7, #16]
 2052 0092 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2053 0096 0346     		mov	r3, r0
 2054              		.loc 1 721 19
 2055 0098 012B     		cmp	r3, #1
 2056 009a 0AD1     		bne	.L105
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     HAL_DEBUGW("uart transmit timeout");
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     /* reset the state */
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     uart->rx_state = UART_STATE_FREE;
 2057              		.loc 1 724 36
 2058 009c FB68     		ldr	r3, [r7, #12]
 2059 009e 0022     		movs	r2, #0
 2060 00a0 83F85320 		strb	r2, [r3, #83]
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     /* unlock uart */
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     HAL_UNLOCK(uart);
 2061              		.loc 1 726 21
 2062 00a4 FB68     		ldr	r3, [r7, #12]
 2063 00a6 0022     		movs	r2, #0
 2064 00a8 83F85C20 		strb	r2, [r3, #92]
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     return HAL_ERR_TIMEOUT;
 2065              		.loc 1 727 28
 2066 00ac 6FF00403 		mvn	r3, #4
 2067 00b0 63E0     		b	.L101
 2068              	.L105:
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2069              		.loc 1 719 24
 2070 00b2 FB68     		ldr	r3, [r7, #12]
 2071 00b4 1B68     		ldr	r3, [r3]
 2072 00b6 40F20771 		movw	r1, #1799
 2073 00ba 1846     		mov	r0, r3
 2074 00bc FFF7FEFF 		bl	hals_uart_flag_get
 2075 00c0 0346     		mov	r3, r0
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2076              		.loc 1 719 14
 2077 00c2 002B     		cmp	r3, #0
 2078 00c4 DFD0     		beq	.L106
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 }
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* send data: in case of 9bit&no parity, uint16_t data will be transmitted */
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(2U == data_length) {
 2079              		.loc 1 733 11
 2080 00c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2081 00c8 022B     		cmp	r3, #2
 2082 00ca 11D1     		bne	.L107
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_data_transmit(uart->periph, (*(uint16_t *)uart->txbuffer.buffer & (uint16_t)0
 2083              		.loc 1 734 13
 2084 00cc FB68     		ldr	r3, [r7, #12]
 2085 00ce 1A68     		ldr	r2, [r3]
 2086              		.loc 1 734 79
 2087 00d0 FB68     		ldr	r3, [r7, #12]
 2088 00d2 5B6B     		ldr	r3, [r3, #52]
 2089              		.loc 1 734 52
 2090 00d4 1B88     		ldrh	r3, [r3]
 2091              		.loc 1 734 13
 2092 00d6 C3F30803 		ubfx	r3, r3, #0, #9
 2093 00da 9BB2     		uxth	r3, r3
 2094 00dc 1946     		mov	r1, r3
 2095 00de 1046     		mov	r0, r2
 2096 00e0 FFF7FEFF 		bl	hals_uart_data_transmit
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->txbuffer.buffer += 2;
 2097              		.loc 1 735 35
 2098 00e4 FB68     		ldr	r3, [r7, #12]
 2099 00e6 5B6B     		ldr	r3, [r3, #52]
 2100 00e8 9A1C     		adds	r2, r3, #2
 2101 00ea FB68     		ldr	r3, [r7, #12]
 2102 00ec 5A63     		str	r2, [r3, #52]
 2103 00ee 0FE0     		b	.L108
 2104              	.L107:
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         } else {
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_data_transmit(uart->periph, (*uart->txbuffer.buffer & (uint8_t)0xFFU));
 2105              		.loc 1 737 13
 2106 00f0 FB68     		ldr	r3, [r7, #12]
 2107 00f2 1A68     		ldr	r2, [r3]
 2108              		.loc 1 737 67
 2109 00f4 FB68     		ldr	r3, [r7, #12]
 2110 00f6 5B6B     		ldr	r3, [r3, #52]
 2111              		.loc 1 737 52
 2112 00f8 1B78     		ldrb	r3, [r3]
 2113 00fa DBB2     		uxtb	r3, r3
 2114              		.loc 1 737 13
 2115 00fc 9BB2     		uxth	r3, r3
 2116 00fe 1946     		mov	r1, r3
 2117 0100 1046     		mov	r0, r2
 2118 0102 FFF7FEFF 		bl	hals_uart_data_transmit
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->txbuffer.buffer++;
 2119              		.loc 1 738 27
 2120 0106 FB68     		ldr	r3, [r7, #12]
 2121 0108 5B6B     		ldr	r3, [r3, #52]
 2122              		.loc 1 738 34
 2123 010a 5A1C     		adds	r2, r3, #1
 2124 010c FB68     		ldr	r3, [r7, #12]
 2125 010e 5A63     		str	r2, [r3, #52]
 2126              	.L108:
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* change the transmit pointer */
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->txbuffer.pos++;
 2127              		.loc 1 741 23
 2128 0110 FB68     		ldr	r3, [r7, #12]
 2129 0112 DB6B     		ldr	r3, [r3, #60]
 2130              		.loc 1 741 27
 2131 0114 5A1C     		adds	r2, r3, #1
 2132 0116 FB68     		ldr	r3, [r7, #12]
 2133 0118 DA63     		str	r2, [r3, #60]
 2134              	.L104:
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for transmit buffer empty */
 2135              		.loc 1 717 25
 2136 011a FB68     		ldr	r3, [r7, #12]
 2137 011c DA6B     		ldr	r2, [r3, #60]
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for transmit buffer empty */
 2138              		.loc 1 717 46
 2139 011e FB68     		ldr	r3, [r7, #12]
 2140 0120 9B6B     		ldr	r3, [r3, #56]
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for transmit buffer empty */
 2141              		.loc 1 717 10
 2142 0122 9A42     		cmp	r2, r3
 2143 0124 C5D3     		bcc	.L105
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* wait for transmit complete */
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     while(RESET == hals_uart_flag_get(uart->periph, USART_FLAG_TC)) {
 2144              		.loc 1 745 10
 2145 0126 15E0     		b	.L110
 2146              	.L111:
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2147              		.loc 1 746 11
 2148 0128 3B68     		ldr	r3, [r7]
 2149 012a B3F1FF3F 		cmp	r3, #-1
 2150 012e 11D0     		beq	.L110
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 2151              		.loc 1 747 23
 2152 0130 3968     		ldr	r1, [r7]
 2153 0132 3869     		ldr	r0, [r7, #16]
 2154 0134 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2155 0138 0346     		mov	r3, r0
 2156              		.loc 1 747 15
 2157 013a 012B     		cmp	r3, #1
 2158 013c 0AD1     		bne	.L110
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 HAL_DEBUGW("uart transmit timeout");
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 /* reset the state */
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 uart->rx_state = UART_STATE_FREE;
 2159              		.loc 1 750 32
 2160 013e FB68     		ldr	r3, [r7, #12]
 2161 0140 0022     		movs	r2, #0
 2162 0142 83F85320 		strb	r2, [r3, #83]
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 /* unlock uart */
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 HAL_UNLOCK(uart);
 2163              		.loc 1 752 17
 2164 0146 FB68     		ldr	r3, [r7, #12]
 2165 0148 0022     		movs	r2, #0
 2166 014a 83F85C20 		strb	r2, [r3, #92]
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 return HAL_ERR_TIMEOUT;
 2167              		.loc 1 753 24
 2168 014e 6FF00403 		mvn	r3, #4
 2169 0152 12E0     		b	.L101
 2170              	.L110:
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2171              		.loc 1 745 20
 2172 0154 FB68     		ldr	r3, [r7, #12]
 2173 0156 1B68     		ldr	r3, [r3]
 2174 0158 40F20671 		movw	r1, #1798
 2175 015c 1846     		mov	r0, r3
 2176 015e FFF7FEFF 		bl	hals_uart_flag_get
 2177 0162 0346     		mov	r3, r0
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2178              		.loc 1 745 10
 2179 0164 002B     		cmp	r3, #0
 2180 0166 DFD0     		beq	.L111
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* change the Tx state to free */
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_state = UART_STATE_FREE;
 2181              		.loc 1 759 20
 2182 0168 FB68     		ldr	r3, [r7, #12]
 2183 016a 0022     		movs	r2, #0
 2184 016c 83F85220 		strb	r2, [r3, #82]
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 2185              		.loc 1 762 5
 2186 0170 FB68     		ldr	r3, [r7, #12]
 2187 0172 0022     		movs	r2, #0
 2188 0174 83F85C20 		strb	r2, [r3, #92]
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 2189              		.loc 1 764 12
 2190 0178 0023     		movs	r3, #0
 2191              	.L101:
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 2192              		.loc 1 765 1
 2193 017a 1846     		mov	r0, r3
 2194 017c 1837     		adds	r7, r7, #24
 2195              		.cfi_def_cfa_offset 8
 2196 017e BD46     		mov	sp, r7
 2197              		.cfi_def_cfa_register 13
 2198              		@ sp needed
 2199 0180 80BD     		pop	{r7, pc}
 2200              		.cfi_endproc
 2201              	.LFE125:
 2203              		.section	.text.hal_uart_receive_poll,"ax",%progbits
 2204              		.align	1
 2205              		.global	hal_uart_receive_poll
 2206              		.syntax unified
 2207              		.thumb
 2208              		.thumb_func
 2209              		.fpu softvfp
 2211              	hal_uart_receive_poll:
 2212              	.LFB126:
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      receive amounts of data, poll receive process and completed status
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is blocking
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_buffer: pointer to data buffer
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  length: number of data to be received
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  timeout_ms: timeout duration
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY, HAL_ERR_TIMEO
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_receive_poll(hal_uart_dev_struct *uart, uint8_t *p_buffer, uint32_t length, uint32
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 2213              		.loc 1 780 1
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 24
 2216              		@ frame_needed = 1, uses_anonymous_args = 0
 2217 0000 80B5     		push	{r7, lr}
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 86B0     		sub	sp, sp, #24
 2222              		.cfi_def_cfa_offset 32
 2223 0004 00AF     		add	r7, sp, #0
 2224              		.cfi_def_cfa_register 7
 2225 0006 F860     		str	r0, [r7, #12]
 2226 0008 B960     		str	r1, [r7, #8]
 2227 000a 7A60     		str	r2, [r7, #4]
 2228 000c 3B60     		str	r3, [r7]
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint8_t data_length;
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint32_t tick_start;
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameters */
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_buffer) || (0U == length)) {
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] or [p_buffer] or [length] value is invalid");
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the rx_state wheher is busy or not */
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->rx_state) {
 2229              		.loc 1 793 31
 2230 000e FB68     		ldr	r3, [r7, #12]
 2231 0010 93F85330 		ldrb	r3, [r3, #83]
 2232 0014 DBB2     		uxtb	r3, r3
 2233              		.loc 1 793 7
 2234 0016 012B     		cmp	r3, #1
 2235 0018 02D1     		bne	.L113
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart rx has already been used, please wait until run_state change to free ");
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_BUSY;
 2236              		.loc 1 795 16
 2237 001a 6FF00203 		mvn	r3, #2
 2238 001e 9BE0     		b	.L114
 2239              	.L113:
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 2240              		.loc 1 799 5
 2241 0020 FB68     		ldr	r3, [r7, #12]
 2242 0022 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2243 0026 012B     		cmp	r3, #1
 2244 0028 02D1     		bne	.L115
 2245              		.loc 1 799 5 is_stmt 0 discriminator 1
 2246 002a 6FF00103 		mvn	r3, #1
 2247 002e 93E0     		b	.L114
 2248              	.L115:
 2249              		.loc 1 799 5 discriminator 2
 2250 0030 FB68     		ldr	r3, [r7, #12]
 2251 0032 0122     		movs	r2, #1
 2252 0034 83F85C20 		strb	r2, [r3, #92]
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->error_state       = HAL_UART_ERROR_NONE;
 2253              		.loc 1 801 29 is_stmt 1 discriminator 2
 2254 0038 FB68     		ldr	r3, [r7, #12]
 2255 003a 0022     		movs	r2, #0
 2256 003c A3F85020 		strh	r2, [r3, #80]	@ movhi
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_state          = UART_STATE_BUSY;
 2257              		.loc 1 802 29 discriminator 2
 2258 0040 FB68     		ldr	r3, [r7, #12]
 2259 0042 0122     		movs	r2, #1
 2260 0044 83F85320 		strb	r2, [r3, #83]
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* initialize receive parameters */
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.buffer   = (uint8_t *)p_buffer;
 2261              		.loc 1 805 29 discriminator 2
 2262 0048 FB68     		ldr	r3, [r7, #12]
 2263 004a BA68     		ldr	r2, [r7, #8]
 2264 004c 1A64     		str	r2, [r3, #64]
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.length   = length;
 2265              		.loc 1 806 29 discriminator 2
 2266 004e FB68     		ldr	r3, [r7, #12]
 2267 0050 7A68     		ldr	r2, [r7, #4]
 2268 0052 5A64     		str	r2, [r3, #68]
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.pos      = 0U;
 2269              		.loc 1 807 29 discriminator 2
 2270 0054 FB68     		ldr	r3, [r7, #12]
 2271 0056 0022     		movs	r2, #0
 2272 0058 9A64     		str	r2, [r3, #72]
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->data_bit_mask     = _uart_data_bit_mask_get(uart);
 2273              		.loc 1 808 31 discriminator 2
 2274 005a F868     		ldr	r0, [r7, #12]
 2275 005c FFF7FEFF 		bl	_uart_data_bit_mask_get
 2276 0060 0346     		mov	r3, r0
 2277 0062 1A46     		mov	r2, r3
 2278              		.loc 1 808 29 discriminator 2
 2279 0064 FB68     		ldr	r3, [r7, #12]
 2280 0066 A3F84C20 		strh	r2, [r3, #76]	@ movhi
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* calculate the data length */
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     data_length = 1U;
 2281              		.loc 1 811 17 discriminator 2
 2282 006a 0123     		movs	r3, #1
 2283 006c FB75     		strb	r3, [r7, #23]
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != (USART_CTL0(uart->periph) & USART_CTL0_WL)) {
 2284              		.loc 1 812 18 discriminator 2
 2285 006e FB68     		ldr	r3, [r7, #12]
 2286 0070 1B68     		ldr	r3, [r3]
 2287 0072 1B68     		ldr	r3, [r3]
 2288              		.loc 1 812 43 discriminator 2
 2289 0074 03F48053 		and	r3, r3, #4096
 2290              		.loc 1 812 7 discriminator 2
 2291 0078 002B     		cmp	r3, #0
 2292 007a 08D0     		beq	.L116
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET == (USART_CTL0(uart->periph) & USART_CTL0_PCEN)) {
 2293              		.loc 1 813 22
 2294 007c FB68     		ldr	r3, [r7, #12]
 2295 007e 1B68     		ldr	r3, [r3]
 2296 0080 1B68     		ldr	r3, [r3]
 2297              		.loc 1 813 47
 2298 0082 03F48063 		and	r3, r3, #1024
 2299              		.loc 1 813 11
 2300 0086 002B     		cmp	r3, #0
 2301 0088 01D1     		bne	.L116
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             data_length = 2U;
 2302              		.loc 1 814 25
 2303 008a 0223     		movs	r3, #2
 2304 008c FB75     		strb	r3, [r7, #23]
 2305              	.L116:
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure timeout */
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     tick_start = hal_sys_basetick_count_get();
 2306              		.loc 1 819 18
 2307 008e FFF7FEFF 		bl	hal_sys_basetick_count_get
 2308 0092 3861     		str	r0, [r7, #16]
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     while(uart->rxbuffer.pos < uart->rxbuffer.length) {
 2309              		.loc 1 821 10
 2310 0094 51E0     		b	.L117
 2311              	.L119:
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for read data buffer not empty */
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         while(RESET == hals_uart_flag_get(uart->periph, USART_FLAG_RBNE)) {
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2312              		.loc 1 824 15
 2313 0096 3B68     		ldr	r3, [r7]
 2314 0098 B3F1FF3F 		cmp	r3, #-1
 2315 009c 11D0     		beq	.L118
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 if(SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) {
 2316              		.loc 1 825 27
 2317 009e 3968     		ldr	r1, [r7]
 2318 00a0 3869     		ldr	r0, [r7, #16]
 2319 00a2 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2320 00a6 0346     		mov	r3, r0
 2321              		.loc 1 825 19
 2322 00a8 012B     		cmp	r3, #1
 2323 00aa 0AD1     		bne	.L118
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     HAL_DEBUGW("uart receive timeout");
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     /* reset the state */
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     uart->rx_state = UART_STATE_FREE;
 2324              		.loc 1 828 36
 2325 00ac FB68     		ldr	r3, [r7, #12]
 2326 00ae 0022     		movs	r2, #0
 2327 00b0 83F85320 		strb	r2, [r3, #83]
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     /* unlock uart */
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     HAL_UNLOCK(uart);
 2328              		.loc 1 830 21
 2329 00b4 FB68     		ldr	r3, [r7, #12]
 2330 00b6 0022     		movs	r2, #0
 2331 00b8 83F85C20 		strb	r2, [r3, #92]
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     return HAL_ERR_TIMEOUT;
 2332              		.loc 1 831 28
 2333 00bc 6FF00403 		mvn	r3, #4
 2334 00c0 4AE0     		b	.L114
 2335              	.L118:
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2336              		.loc 1 823 24
 2337 00c2 FB68     		ldr	r3, [r7, #12]
 2338 00c4 1B68     		ldr	r3, [r3]
 2339 00c6 40F20571 		movw	r1, #1797
 2340 00ca 1846     		mov	r0, r3
 2341 00cc FFF7FEFF 		bl	hals_uart_flag_get
 2342 00d0 0346     		mov	r3, r0
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             if(HAL_TIMEOUT_FOREVER != timeout_ms) {
 2343              		.loc 1 823 14
 2344 00d2 002B     		cmp	r3, #0
 2345 00d4 DFD0     		beq	.L119
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 }
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             }
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* read data: in case of 9bit&no parity, uint16_t data will be receive */
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(2U == data_length) {
 2346              		.loc 1 837 11
 2347 00d6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2348 00d8 022B     		cmp	r3, #2
 2349 00da 14D1     		bne	.L120
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             *(uint16_t *)uart->rxbuffer.buffer = (hals_uart_data_receive(uart->periph) & uart->data
 2350              		.loc 1 838 51
 2351 00dc FB68     		ldr	r3, [r7, #12]
 2352 00de 1B68     		ldr	r3, [r3]
 2353 00e0 1846     		mov	r0, r3
 2354 00e2 FFF7FEFF 		bl	hals_uart_data_receive
 2355 00e6 0346     		mov	r3, r0
 2356 00e8 1946     		mov	r1, r3
 2357              		.loc 1 838 94
 2358 00ea FB68     		ldr	r3, [r7, #12]
 2359 00ec B3F84C20 		ldrh	r2, [r3, #76]
 2360              		.loc 1 838 40
 2361 00f0 FB68     		ldr	r3, [r7, #12]
 2362 00f2 1B6C     		ldr	r3, [r3, #64]
 2363              		.loc 1 838 48
 2364 00f4 0A40     		ands	r2, r2, r1
 2365 00f6 92B2     		uxth	r2, r2
 2366 00f8 1A80     		strh	r2, [r3]	@ movhi
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->rxbuffer.buffer += 2;
 2367              		.loc 1 839 35
 2368 00fa FB68     		ldr	r3, [r7, #12]
 2369 00fc 1B6C     		ldr	r3, [r3, #64]
 2370 00fe 9A1C     		adds	r2, r3, #2
 2371 0100 FB68     		ldr	r3, [r7, #12]
 2372 0102 1A64     		str	r2, [r3, #64]
 2373 0104 14E0     		b	.L121
 2374              	.L120:
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         } else {
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             *uart->rxbuffer.buffer = (uint8_t)(hals_uart_data_receive(uart->periph) & uart->data_bi
 2375              		.loc 1 841 48
 2376 0106 FB68     		ldr	r3, [r7, #12]
 2377 0108 1B68     		ldr	r3, [r3]
 2378 010a 1846     		mov	r0, r3
 2379 010c FFF7FEFF 		bl	hals_uart_data_receive
 2380 0110 0346     		mov	r3, r0
 2381              		.loc 1 841 38
 2382 0112 D9B2     		uxtb	r1, r3
 2383              		.loc 1 841 91
 2384 0114 FB68     		ldr	r3, [r7, #12]
 2385 0116 B3F84C30 		ldrh	r3, [r3, #76]
 2386              		.loc 1 841 38
 2387 011a DAB2     		uxtb	r2, r3
 2388              		.loc 1 841 28
 2389 011c FB68     		ldr	r3, [r7, #12]
 2390 011e 1B6C     		ldr	r3, [r3, #64]
 2391              		.loc 1 841 38
 2392 0120 0A40     		ands	r2, r2, r1
 2393 0122 D2B2     		uxtb	r2, r2
 2394              		.loc 1 841 36
 2395 0124 1A70     		strb	r2, [r3]
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             uart->rxbuffer.buffer++;
 2396              		.loc 1 842 27
 2397 0126 FB68     		ldr	r3, [r7, #12]
 2398 0128 1B6C     		ldr	r3, [r3, #64]
 2399              		.loc 1 842 34
 2400 012a 5A1C     		adds	r2, r3, #1
 2401 012c FB68     		ldr	r3, [r7, #12]
 2402 012e 1A64     		str	r2, [r3, #64]
 2403              	.L121:
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->rxbuffer.pos++;
 2404              		.loc 1 844 23
 2405 0130 FB68     		ldr	r3, [r7, #12]
 2406 0132 9B6C     		ldr	r3, [r3, #72]
 2407              		.loc 1 844 27
 2408 0134 5A1C     		adds	r2, r3, #1
 2409 0136 FB68     		ldr	r3, [r7, #12]
 2410 0138 9A64     		str	r2, [r3, #72]
 2411              	.L117:
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for read data buffer not empty */
 2412              		.loc 1 821 25
 2413 013a FB68     		ldr	r3, [r7, #12]
 2414 013c 9A6C     		ldr	r2, [r3, #72]
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for read data buffer not empty */
 2415              		.loc 1 821 46
 2416 013e FB68     		ldr	r3, [r7, #12]
 2417 0140 5B6C     		ldr	r3, [r3, #68]
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* wait for read data buffer not empty */
 2418              		.loc 1 821 10
 2419 0142 9A42     		cmp	r2, r3
 2420 0144 BDD3     		bcc	.L118
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* change the Rx state to free */
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_state = UART_STATE_FREE;
 2421              		.loc 1 848 20
 2422 0146 FB68     		ldr	r3, [r7, #12]
 2423 0148 0022     		movs	r2, #0
 2424 014a 83F85320 		strb	r2, [r3, #83]
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 2425              		.loc 1 851 5
 2426 014e FB68     		ldr	r3, [r7, #12]
 2427 0150 0022     		movs	r2, #0
 2428 0152 83F85C20 		strb	r2, [r3, #92]
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 2429              		.loc 1 853 12
 2430 0156 0023     		movs	r3, #0
 2431              	.L114:
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 2432              		.loc 1 854 1
 2433 0158 1846     		mov	r0, r3
 2434 015a 1837     		adds	r7, r7, #24
 2435              		.cfi_def_cfa_offset 8
 2436 015c BD46     		mov	sp, r7
 2437              		.cfi_def_cfa_register 13
 2438              		@ sp needed
 2439 015e 80BD     		pop	{r7, pc}
 2440              		.cfi_endproc
 2441              	.LFE126:
 2443              		.section	.text.hal_uart_transmit_interrupt,"ax",%progbits
 2444              		.align	1
 2445              		.global	hal_uart_transmit_interrupt
 2446              		.syntax unified
 2447              		.thumb
 2448              		.thumb_func
 2449              		.fpu softvfp
 2451              	hal_uart_transmit_interrupt:
 2452              	.LFB127:
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      transmit amounts of data by interrupt method
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is non-blocking
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_buffer: pointer to data buffer
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  length: number of data to be transmitted
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_user_func: user callback function
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_transmit_interrupt(hal_uart_dev_struct *uart, uint8_t *p_buffer, uint32_t length,
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                     hal_uart_user_cb p_user_func)
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 2453              		.loc 1 870 1
 2454              		.cfi_startproc
 2455              		@ args = 0, pretend = 0, frame = 16
 2456              		@ frame_needed = 1, uses_anonymous_args = 0
 2457 0000 80B5     		push	{r7, lr}
 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 7, -8
 2460              		.cfi_offset 14, -4
 2461 0002 84B0     		sub	sp, sp, #16
 2462              		.cfi_def_cfa_offset 24
 2463 0004 00AF     		add	r7, sp, #0
 2464              		.cfi_def_cfa_register 7
 2465 0006 F860     		str	r0, [r7, #12]
 2466 0008 B960     		str	r1, [r7, #8]
 2467 000a 7A60     		str	r2, [r7, #4]
 2468 000c 3B60     		str	r3, [r7]
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameters */
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_buffer) || (0U == length)) {
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] or [p_buffer] or [length] value is invalid");
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the tx_state wheher is busy or not */
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->tx_state) {
 2469              		.loc 1 880 31
 2470 000e FB68     		ldr	r3, [r7, #12]
 2471 0010 93F85230 		ldrb	r3, [r3, #82]
 2472 0014 DBB2     		uxtb	r3, r3
 2473              		.loc 1 880 7
 2474 0016 012B     		cmp	r3, #1
 2475 0018 02D1     		bne	.L124
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart tx has already been used, please wait until run_state change to free ");
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_BUSY;
 2476              		.loc 1 882 16
 2477 001a 6FF00203 		mvn	r3, #2
 2478 001e 36E0     		b	.L125
 2479              	.L124:
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 2480              		.loc 1 886 5
 2481 0020 FB68     		ldr	r3, [r7, #12]
 2482 0022 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2483 0026 012B     		cmp	r3, #1
 2484 0028 02D1     		bne	.L126
 2485              		.loc 1 886 5 is_stmt 0 discriminator 1
 2486 002a 6FF00103 		mvn	r3, #1
 2487 002e 2EE0     		b	.L125
 2488              	.L126:
 2489              		.loc 1 886 5 discriminator 2
 2490 0030 FB68     		ldr	r3, [r7, #12]
 2491 0032 0122     		movs	r2, #1
 2492 0034 83F85C20 		strb	r2, [r3, #92]
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_state          = UART_STATE_BUSY;
 2493              		.loc 1 888 29 is_stmt 1 discriminator 2
 2494 0038 FB68     		ldr	r3, [r7, #12]
 2495 003a 0122     		movs	r2, #1
 2496 003c 83F85220 		strb	r2, [r3, #82]
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->error_state       = HAL_UART_ERROR_NONE;
 2497              		.loc 1 889 29 discriminator 2
 2498 0040 FB68     		ldr	r3, [r7, #12]
 2499 0042 0022     		movs	r2, #0
 2500 0044 A3F85020 		strh	r2, [r3, #80]	@ movhi
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* initialize transmit parameters */
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.buffer   = (uint8_t *)p_buffer;
 2501              		.loc 1 892 29 discriminator 2
 2502 0048 FB68     		ldr	r3, [r7, #12]
 2503 004a BA68     		ldr	r2, [r7, #8]
 2504 004c 5A63     		str	r2, [r3, #52]
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.length   = length;
 2505              		.loc 1 893 29 discriminator 2
 2506 004e FB68     		ldr	r3, [r7, #12]
 2507 0050 7A68     		ldr	r2, [r7, #4]
 2508 0052 9A63     		str	r2, [r3, #56]
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.pos      = 0U;
 2509              		.loc 1 894 29 discriminator 2
 2510 0054 FB68     		ldr	r3, [r7, #12]
 2511 0056 0022     		movs	r2, #0
 2512 0058 DA63     		str	r2, [r3, #60]
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_callback       = (void *)p_user_func;
 2513              		.loc 1 895 29 discriminator 2
 2514 005a FB68     		ldr	r3, [r7, #12]
 2515 005c 3A68     		ldr	r2, [r7]
 2516 005e 9A65     		str	r2, [r3, #88]
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure the transmit ready and complete callback as the function implemented */
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.transmit_ready_handle    = _uart_transmit_interrupt;
 2517              		.loc 1 898 45 discriminator 2
 2518 0060 FB68     		ldr	r3, [r7, #12]
 2519 0062 0D4A     		ldr	r2, .L127
 2520 0064 DA60     		str	r2, [r3, #12]
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.transmit_complete_handle = _uart_transmit_complete_interrupt;
 2521              		.loc 1 899 45 discriminator 2
 2522 0066 FB68     		ldr	r3, [r7, #12]
 2523 0068 0C4A     		ldr	r2, .L127+4
 2524 006a 1A61     		str	r2, [r3, #16]
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear UART TC interrupt flag */
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_TC);
 2525              		.loc 1 902 5 discriminator 2
 2526 006c FB68     		ldr	r3, [r7, #12]
 2527 006e 1B68     		ldr	r3, [r3]
 2528 0070 0B49     		ldr	r1, .L127+8
 2529 0072 1846     		mov	r0, r3
 2530 0074 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* enable the TBE interrupt */
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_enable(uart->periph, USART_INT_TBE);
 2531              		.loc 1 905 5 discriminator 2
 2532 0078 FB68     		ldr	r3, [r7, #12]
 2533 007a 1B68     		ldr	r3, [r3]
 2534 007c 0721     		movs	r1, #7
 2535 007e 1846     		mov	r0, r3
 2536 0080 FFF7FEFF 		bl	hals_uart_interrupt_enable
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 2537              		.loc 1 908 5 discriminator 2
 2538 0084 FB68     		ldr	r3, [r7, #12]
 2539 0086 0022     		movs	r2, #0
 2540 0088 83F85C20 		strb	r2, [r3, #92]
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 2541              		.loc 1 910 12 discriminator 2
 2542 008c 0023     		movs	r3, #0
 2543              	.L125:
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 2544              		.loc 1 911 1
 2545 008e 1846     		mov	r0, r3
 2546 0090 1037     		adds	r7, r7, #16
 2547              		.cfi_def_cfa_offset 8
 2548 0092 BD46     		mov	sp, r7
 2549              		.cfi_def_cfa_register 13
 2550              		@ sp needed
 2551 0094 80BD     		pop	{r7, pc}
 2552              	.L128:
 2553 0096 00BF     		.align	2
 2554              	.L127:
 2555 0098 00000000 		.word	_uart_transmit_interrupt
 2556 009c 00000000 		.word	_uart_transmit_complete_interrupt
 2557 00a0 06000607 		.word	117833734
 2558              		.cfi_endproc
 2559              	.LFE127:
 2561              		.section	.text.hal_uart_receive_interrupt,"ax",%progbits
 2562              		.align	1
 2563              		.global	hal_uart_receive_interrupt
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2567              		.fpu softvfp
 2569              	hal_uart_receive_interrupt:
 2570              	.LFB128:
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      receive amounts of data by interrupt method
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is non-blocking
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_buffer: pointer to data buffer
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  length: number of data to be received
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_user_func: user callback function
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_receive_interrupt(hal_uart_dev_struct *uart, uint8_t *p_buffer, uint32_t length,
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                    hal_uart_user_cb p_user_func)
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 2571              		.loc 1 927 1
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 16
 2574              		@ frame_needed = 1, uses_anonymous_args = 0
 2575 0000 80B5     		push	{r7, lr}
 2576              		.cfi_def_cfa_offset 8
 2577              		.cfi_offset 7, -8
 2578              		.cfi_offset 14, -4
 2579 0002 84B0     		sub	sp, sp, #16
 2580              		.cfi_def_cfa_offset 24
 2581 0004 00AF     		add	r7, sp, #0
 2582              		.cfi_def_cfa_register 7
 2583 0006 F860     		str	r0, [r7, #12]
 2584 0008 B960     		str	r1, [r7, #8]
 2585 000a 7A60     		str	r2, [r7, #4]
 2586 000c 3B60     		str	r3, [r7]
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameters */
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_buffer) || (0U == length)) {
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] or [p_buffer] or [length] value is invalid");
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the rx_state wheher is busy or not */
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->rx_state) {
 2587              		.loc 1 937 31
 2588 000e FB68     		ldr	r3, [r7, #12]
 2589 0010 93F85330 		ldrb	r3, [r3, #83]
 2590 0014 DBB2     		uxtb	r3, r3
 2591              		.loc 1 937 7
 2592 0016 012B     		cmp	r3, #1
 2593 0018 02D1     		bne	.L130
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart rx has already been used, please wait until run_state change to free ");
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_BUSY;
 2594              		.loc 1 939 16
 2595 001a 6FF00203 		mvn	r3, #2
 2596 001e 42E0     		b	.L131
 2597              	.L130:
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 2598              		.loc 1 943 5
 2599 0020 FB68     		ldr	r3, [r7, #12]
 2600 0022 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2601 0026 012B     		cmp	r3, #1
 2602 0028 02D1     		bne	.L132
 2603              		.loc 1 943 5 is_stmt 0 discriminator 1
 2604 002a 6FF00103 		mvn	r3, #1
 2605 002e 3AE0     		b	.L131
 2606              	.L132:
 2607              		.loc 1 943 5 discriminator 2
 2608 0030 FB68     		ldr	r3, [r7, #12]
 2609 0032 0122     		movs	r2, #1
 2610 0034 83F85C20 		strb	r2, [r3, #92]
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_state = UART_STATE_BUSY;
 2611              		.loc 1 945 20 is_stmt 1 discriminator 2
 2612 0038 FB68     		ldr	r3, [r7, #12]
 2613 003a 0122     		movs	r2, #1
 2614 003c 83F85320 		strb	r2, [r3, #83]
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->error_state = HAL_UART_ERROR_NONE;
 2615              		.loc 1 946 23 discriminator 2
 2616 0040 FB68     		ldr	r3, [r7, #12]
 2617 0042 0022     		movs	r2, #0
 2618 0044 A3F85020 		strh	r2, [r3, #80]	@ movhi
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* initialize receive parameters */
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.buffer   = (uint8_t *)p_buffer;
 2619              		.loc 1 949 29 discriminator 2
 2620 0048 FB68     		ldr	r3, [r7, #12]
 2621 004a BA68     		ldr	r2, [r7, #8]
 2622 004c 1A64     		str	r2, [r3, #64]
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.length   = length;
 2623              		.loc 1 950 29 discriminator 2
 2624 004e FB68     		ldr	r3, [r7, #12]
 2625 0050 7A68     		ldr	r2, [r7, #4]
 2626 0052 5A64     		str	r2, [r3, #68]
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.pos      = 0U;
 2627              		.loc 1 951 29 discriminator 2
 2628 0054 FB68     		ldr	r3, [r7, #12]
 2629 0056 0022     		movs	r2, #0
 2630 0058 9A64     		str	r2, [r3, #72]
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->data_bit_mask     = _uart_data_bit_mask_get(uart);
 2631              		.loc 1 952 31 discriminator 2
 2632 005a F868     		ldr	r0, [r7, #12]
 2633 005c FFF7FEFF 		bl	_uart_data_bit_mask_get
 2634 0060 0346     		mov	r3, r0
 2635 0062 1A46     		mov	r2, r3
 2636              		.loc 1 952 29 discriminator 2
 2637 0064 FB68     		ldr	r3, [r7, #12]
 2638 0066 A3F84C20 		strh	r2, [r3, #76]	@ movhi
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_callback       = (void *)p_user_func;
 2639              		.loc 1 953 29 discriminator 2
 2640 006a FB68     		ldr	r3, [r7, #12]
 2641 006c 3A68     		ldr	r2, [r7]
 2642 006e 5A65     		str	r2, [r3, #84]
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure rx interrupt hander */
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.receive_complete_handle = _uart_receive_interrupt;
 2643              		.loc 1 956 44 discriminator 2
 2644 0070 FB68     		ldr	r3, [r7, #12]
 2645 0072 0F4A     		ldr	r2, .L133
 2646 0074 5A60     		str	r2, [r3, #4]
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* enable PERR, ERR, RBNE interrupt */
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_enable(uart->periph, USART_INT_PERR);
 2647              		.loc 1 959 5 discriminator 2
 2648 0076 FB68     		ldr	r3, [r7, #12]
 2649 0078 1B68     		ldr	r3, [r3]
 2650 007a 0821     		movs	r1, #8
 2651 007c 1846     		mov	r0, r3
 2652 007e FFF7FEFF 		bl	hals_uart_interrupt_enable
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_enable(uart->periph, USART_INT_ERR);
 2653              		.loc 1 960 5 discriminator 2
 2654 0082 FB68     		ldr	r3, [r7, #12]
 2655 0084 1B68     		ldr	r3, [r3]
 2656 0086 4FF40071 		mov	r1, #512
 2657 008a 1846     		mov	r0, r3
 2658 008c FFF7FEFF 		bl	hals_uart_interrupt_enable
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_enable(uart->periph, USART_INT_RBNE);
 2659              		.loc 1 961 5 discriminator 2
 2660 0090 FB68     		ldr	r3, [r7, #12]
 2661 0092 1B68     		ldr	r3, [r3]
 2662 0094 0521     		movs	r1, #5
 2663 0096 1846     		mov	r0, r3
 2664 0098 FFF7FEFF 		bl	hals_uart_interrupt_enable
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 2665              		.loc 1 964 5 discriminator 2
 2666 009c FB68     		ldr	r3, [r7, #12]
 2667 009e 0022     		movs	r2, #0
 2668 00a0 83F85C20 		strb	r2, [r3, #92]
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 2669              		.loc 1 966 12 discriminator 2
 2670 00a4 0023     		movs	r3, #0
 2671              	.L131:
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 2672              		.loc 1 967 1
 2673 00a6 1846     		mov	r0, r3
 2674 00a8 1037     		adds	r7, r7, #16
 2675              		.cfi_def_cfa_offset 8
 2676 00aa BD46     		mov	sp, r7
 2677              		.cfi_def_cfa_register 13
 2678              		@ sp needed
 2679 00ac 80BD     		pop	{r7, pc}
 2680              	.L134:
 2681 00ae 00BF     		.align	2
 2682              	.L133:
 2683 00b0 00000000 		.word	_uart_receive_interrupt
 2684              		.cfi_endproc
 2685              	.LFE128:
 2687              		.section	.text.hal_uart_transmit_dma,"ax",%progbits
 2688              		.align	1
 2689              		.global	hal_uart_transmit_dma
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2693              		.fpu softvfp
 2695              	hal_uart_transmit_dma:
 2696              	.LFB129:
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      transmit amounts of data by dma method
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is non-blocking
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_buffer: pointer to data buffer
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  length: number of data to be transmitted
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_func: pointer to callback function
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_transmit_dma(hal_uart_dev_struct *uart, uint8_t *p_buffer, uint16_t length, hal_ua
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 2697              		.loc 1 982 1
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 32
 2700              		@ frame_needed = 1, uses_anonymous_args = 0
 2701 0000 90B5     		push	{r4, r7, lr}
 2702              		.cfi_def_cfa_offset 12
 2703              		.cfi_offset 4, -12
 2704              		.cfi_offset 7, -8
 2705              		.cfi_offset 14, -4
 2706 0002 8BB0     		sub	sp, sp, #44
 2707              		.cfi_def_cfa_offset 56
 2708 0004 02AF     		add	r7, sp, #8
 2709              		.cfi_def_cfa 7, 48
 2710 0006 F860     		str	r0, [r7, #12]
 2711 0008 B960     		str	r1, [r7, #8]
 2712 000a 3B60     		str	r3, [r7]
 2713 000c 1346     		mov	r3, r2	@ movhi
 2714 000e FB80     		strh	r3, [r7, #6]	@ movhi
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_irq_struct dma_irq;
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameters */
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_buffer) || (0U == length)) {
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] or [p_buffer] or [length] value is invalid");
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameter */
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == uart->p_dma_tx) {
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart->p_dma_tx] value is invalid");
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the tx_state wheher is busy or not */
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->tx_state) {
 2715              		.loc 1 1000 31
 2716 0010 FB68     		ldr	r3, [r7, #12]
 2717 0012 93F85230 		ldrb	r3, [r3, #82]
 2718 0016 DBB2     		uxtb	r3, r3
 2719              		.loc 1 1000 7
 2720 0018 012B     		cmp	r3, #1
 2721 001a 02D1     		bne	.L136
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart tx has already been used, please wait until run_state change to free ");
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_BUSY;
 2722              		.loc 1 1002 16
 2723 001c 6FF00203 		mvn	r3, #2
 2724 0020 76E0     		b	.L144
 2725              	.L136:
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 2726              		.loc 1 1006 5
 2727 0022 FB68     		ldr	r3, [r7, #12]
 2728 0024 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2729 0028 012B     		cmp	r3, #1
 2730 002a 02D1     		bne	.L138
 2731              		.loc 1 1006 5 is_stmt 0 discriminator 1
 2732 002c 6FF00103 		mvn	r3, #1
 2733 0030 6EE0     		b	.L144
 2734              	.L138:
 2735              		.loc 1 1006 5 discriminator 2
 2736 0032 FB68     		ldr	r3, [r7, #12]
 2737 0034 0122     		movs	r2, #1
 2738 0036 83F85C20 		strb	r2, [r3, #92]
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_state = UART_STATE_BUSY;
 2739              		.loc 1 1008 20 is_stmt 1 discriminator 2
 2740 003a FB68     		ldr	r3, [r7, #12]
 2741 003c 0122     		movs	r2, #1
 2742 003e 83F85220 		strb	r2, [r3, #82]
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->error_state = HAL_UART_ERROR_NONE;
 2743              		.loc 1 1009 23 discriminator 2
 2744 0042 FB68     		ldr	r3, [r7, #12]
 2745 0044 0022     		movs	r2, #0
 2746 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* initialize transmit parameters */
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.buffer   = (uint8_t *)p_buffer;
 2747              		.loc 1 1012 29 discriminator 2
 2748 004a FB68     		ldr	r3, [r7, #12]
 2749 004c BA68     		ldr	r2, [r7, #8]
 2750 004e 5A63     		str	r2, [r3, #52]
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.length   = length;
 2751              		.loc 1 1013 29 discriminator 2
 2752 0050 FA88     		ldrh	r2, [r7, #6]
 2753 0052 FB68     		ldr	r3, [r7, #12]
 2754 0054 9A63     		str	r2, [r3, #56]
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.pos      = 0U;
 2755              		.loc 1 1014 29 discriminator 2
 2756 0056 FB68     		ldr	r3, [r7, #12]
 2757 0058 0022     		movs	r2, #0
 2758 005a DA63     		str	r2, [r3, #60]
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_func) {
 2759              		.loc 1 1016 7 discriminator 2
 2760 005c 3B68     		ldr	r3, [r7]
 2761 005e 002B     		cmp	r3, #0
 2762 0060 08D0     		beq	.L139
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->tx_callback = (void *)p_func->complete_func;
 2763              		.loc 1 1017 43
 2764 0062 3B68     		ldr	r3, [r7]
 2765 0064 1A68     		ldr	r2, [r3]
 2766              		.loc 1 1017 27
 2767 0066 FB68     		ldr	r3, [r7, #12]
 2768 0068 9A65     		str	r2, [r3, #88]
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 2769              		.loc 1 1018 64
 2770 006a 3B68     		ldr	r3, [r7]
 2771 006c 5A68     		ldr	r2, [r3, #4]
 2772              		.loc 1 1018 37
 2773 006e FB68     		ldr	r3, [r7, #12]
 2774 0070 5A61     		str	r2, [r3, #20]
 2775 0072 05E0     		b	.L140
 2776              	.L139:
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->tx_callback = NULL;
 2777              		.loc 1 1020 27
 2778 0074 FB68     		ldr	r3, [r7, #12]
 2779 0076 0022     		movs	r2, #0
 2780 0078 9A65     		str	r2, [r3, #88]
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.error_handle = NULL;
 2781              		.loc 1 1021 37
 2782 007a FB68     		ldr	r3, [r7, #12]
 2783 007c 0022     		movs	r2, #0
 2784 007e 5A61     		str	r2, [r3, #20]
 2785              	.L140:
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->uart_irq.transmit_complete_handle = _uart_transmit_complete_interrupt;
 2786              		.loc 1 1023 45
 2787 0080 FB68     		ldr	r3, [r7, #12]
 2788 0082 254A     		ldr	r2, .L145
 2789 0084 1A61     		str	r2, [r3, #16]
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure DMA interrupt callback function */
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     dma_irq.full_finish_handle  = _uart_transmit_dma;
 2790              		.loc 1 1026 33
 2791 0086 254B     		ldr	r3, .L145+4
 2792 0088 FB61     		str	r3, [r7, #28]
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     dma_irq.error_handle        = _uart_dma_error;
 2793              		.loc 1 1027 33
 2794 008a 254B     		ldr	r3, .L145+8
 2795 008c 7B61     		str	r3, [r7, #20]
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != uart->p_dma_tx->dma_irq.half_finish_handle) {
 2796              		.loc 1 1028 20
 2797 008e FB68     		ldr	r3, [r7, #12]
 2798 0090 1B6B     		ldr	r3, [r3, #48]
 2799              		.loc 1 1028 39
 2800 0092 9B68     		ldr	r3, [r3, #8]
 2801              		.loc 1 1028 7
 2802 0094 002B     		cmp	r3, #0
 2803 0096 04D0     		beq	.L141
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         dma_irq.half_finish_handle = uart->p_dma_tx->dma_irq.half_finish_handle;
 2804              		.loc 1 1029 42
 2805 0098 FB68     		ldr	r3, [r7, #12]
 2806 009a 1B6B     		ldr	r3, [r3, #48]
 2807              		.loc 1 1029 61
 2808 009c 9B68     		ldr	r3, [r3, #8]
 2809              		.loc 1 1029 36
 2810 009e BB61     		str	r3, [r7, #24]
 2811 00a0 01E0     		b	.L142
 2812              	.L141:
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         dma_irq.half_finish_handle = NULL;
 2813              		.loc 1 1031 36
 2814 00a2 0023     		movs	r3, #0
 2815 00a4 BB61     		str	r3, [r7, #24]
 2816              	.L142:
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* start DMA interrupt mode transfer */
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(uart->p_dma_tx, (uint32_t)uart->txbuffer.buffer,
 2817              		.loc 1 1035 24
 2818 00a6 FB68     		ldr	r3, [r7, #12]
 2819 00a8 186B     		ldr	r0, [r3, #48]
 2820              		.loc 1 1035 88
 2821 00aa FB68     		ldr	r3, [r7, #12]
 2822 00ac 5B6B     		ldr	r3, [r3, #52]
 2823              		.loc 1 1035 24
 2824 00ae 1C46     		mov	r4, r3
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)&USART_TDATA(uart->periph), uart->txbuffer.length, &dma_irq)) {
 2825              		.loc 1 1036 24
 2826 00b0 FB68     		ldr	r3, [r7, #12]
 2827 00b2 1B68     		ldr	r3, [r3]
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)&USART_TDATA(uart->periph), uart->txbuffer.length, &dma_irq)) {
 2828              		.loc 1 1035 24
 2829 00b4 03F12802 		add	r2, r3, #40
 2830              		.loc 1 1036 65
 2831 00b8 FB68     		ldr	r3, [r7, #12]
 2832 00ba 9B6B     		ldr	r3, [r3, #56]
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)&USART_TDATA(uart->periph), uart->txbuffer.length, &dma_irq)) {
 2833              		.loc 1 1035 24
 2834 00bc 99B2     		uxth	r1, r3
 2835 00be 07F11403 		add	r3, r7, #20
 2836 00c2 0093     		str	r3, [sp]
 2837 00c4 0B46     		mov	r3, r1
 2838 00c6 2146     		mov	r1, r4
 2839 00c8 FFF7FEFF 		bl	hal_dma_start_interrupt
 2840 00cc 0346     		mov	r3, r0
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)&USART_TDATA(uart->periph), uart->txbuffer.length, &dma_irq)) {
 2841              		.loc 1 1035 7
 2842 00ce 002B     		cmp	r3, #0
 2843 00d0 0DD0     		beq	.L143
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->tx_state = UART_STATE_FREE;
 2844              		.loc 1 1037 24
 2845 00d2 FB68     		ldr	r3, [r7, #12]
 2846 00d4 0022     		movs	r2, #0
 2847 00d6 83F85220 		strb	r2, [r3, #82]
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->error_state = HAL_UART_ERROR_DMATX;
 2848              		.loc 1 1038 27
 2849 00da FB68     		ldr	r3, [r7, #12]
 2850 00dc 1022     		movs	r2, #16
 2851 00de A3F85020 		strh	r2, [r3, #80]	@ movhi
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* unlock uart */
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_UNLOCK(uart);
 2852              		.loc 1 1040 9
 2853 00e2 FB68     		ldr	r3, [r7, #12]
 2854 00e4 0022     		movs	r2, #0
 2855 00e6 83F85C20 		strb	r2, [r3, #92]
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_NONE;
 2856              		.loc 1 1042 16
 2857 00ea 0023     		movs	r3, #0
 2858 00ec 10E0     		b	.L144
 2859              	.L143:
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear UART TC interrupt flag */
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_TC);
 2860              		.loc 1 1046 5
 2861 00ee FB68     		ldr	r3, [r7, #12]
 2862 00f0 1B68     		ldr	r3, [r3]
 2863 00f2 0C49     		ldr	r1, .L145+12
 2864 00f4 1846     		mov	r0, r3
 2865 00f6 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* DMA enable for transmission */
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_dma_transmit_config(uart->periph, USART_TRANSMIT_DMA_ENABLE);
 2866              		.loc 1 1049 5
 2867 00fa FB68     		ldr	r3, [r7, #12]
 2868 00fc 1B68     		ldr	r3, [r3]
 2869 00fe 8021     		movs	r1, #128
 2870 0100 1846     		mov	r0, r3
 2871 0102 FFF7FEFF 		bl	hals_uart_dma_transmit_config
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 2872              		.loc 1 1052 5
 2873 0106 FB68     		ldr	r3, [r7, #12]
 2874 0108 0022     		movs	r2, #0
 2875 010a 83F85C20 		strb	r2, [r3, #92]
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 2876              		.loc 1 1054 12
 2877 010e 0023     		movs	r3, #0
 2878              	.L144:
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 2879              		.loc 1 1055 1 discriminator 1
 2880 0110 1846     		mov	r0, r3
 2881 0112 2437     		adds	r7, r7, #36
 2882              		.cfi_def_cfa_offset 12
 2883 0114 BD46     		mov	sp, r7
 2884              		.cfi_def_cfa_register 13
 2885              		@ sp needed
 2886 0116 90BD     		pop	{r4, r7, pc}
 2887              	.L146:
 2888              		.align	2
 2889              	.L145:
 2890 0118 00000000 		.word	_uart_transmit_complete_interrupt
 2891 011c 00000000 		.word	_uart_transmit_dma
 2892 0120 00000000 		.word	_uart_dma_error
 2893 0124 06000607 		.word	117833734
 2894              		.cfi_endproc
 2895              	.LFE129:
 2897              		.section	.text.hal_uart_receive_dma,"ax",%progbits
 2898              		.align	1
 2899              		.global	hal_uart_receive_dma
 2900              		.syntax unified
 2901              		.thumb
 2902              		.thumb_func
 2903              		.fpu softvfp
 2905              	hal_uart_receive_dma:
 2906              	.LFB130:
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      receive amounts of data by dma method
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is non-blocking
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_buffer: pointer to data buffer
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  length: number of data to be received
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  p_func: pointer to callback function
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS, HAL_ERR_VAL, HAL_ERR_BUSY details refer 
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_receive_dma(hal_uart_dev_struct *uart, uint8_t *p_buffer, uint16_t length, hal_uar
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 2907              		.loc 1 1070 1
 2908              		.cfi_startproc
 2909              		@ args = 0, pretend = 0, frame = 32
 2910              		@ frame_needed = 1, uses_anonymous_args = 0
 2911 0000 90B5     		push	{r4, r7, lr}
 2912              		.cfi_def_cfa_offset 12
 2913              		.cfi_offset 4, -12
 2914              		.cfi_offset 7, -8
 2915              		.cfi_offset 14, -4
 2916 0002 8BB0     		sub	sp, sp, #44
 2917              		.cfi_def_cfa_offset 56
 2918 0004 02AF     		add	r7, sp, #8
 2919              		.cfi_def_cfa 7, 48
 2920 0006 F860     		str	r0, [r7, #12]
 2921 0008 B960     		str	r1, [r7, #8]
 2922 000a 3B60     		str	r3, [r7]
 2923 000c 1346     		mov	r3, r2	@ movhi
 2924 000e FB80     		strh	r3, [r7, #6]	@ movhi
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_irq_struct dma_irq;
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameters */
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if((NULL == uart) || (NULL == p_buffer) || (0U == length)) {
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] or [p_buffer] or [length] value is invalid");
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameter */
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == uart->p_dma_rx) {
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart->p_dma_rx] value is invalid");
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the rx_state wheher is busy or not */
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->rx_state) {
 2925              		.loc 1 1088 31
 2926 0010 FB68     		ldr	r3, [r7, #12]
 2927 0012 93F85330 		ldrb	r3, [r3, #83]
 2928 0016 DBB2     		uxtb	r3, r3
 2929              		.loc 1 1088 7
 2930 0018 012B     		cmp	r3, #1
 2931 001a 02D1     		bne	.L148
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart rx has already been used, please wait until run_state change to free ");
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_BUSY;
 2932              		.loc 1 1090 16
 2933 001c 6FF00203 		mvn	r3, #2
 2934 0020 80E0     		b	.L156
 2935              	.L148:
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 2936              		.loc 1 1094 5
 2937 0022 FB68     		ldr	r3, [r7, #12]
 2938 0024 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 2939 0028 012B     		cmp	r3, #1
 2940 002a 02D1     		bne	.L150
 2941              		.loc 1 1094 5 is_stmt 0 discriminator 1
 2942 002c 6FF00103 		mvn	r3, #1
 2943 0030 78E0     		b	.L156
 2944              	.L150:
 2945              		.loc 1 1094 5 discriminator 2
 2946 0032 FB68     		ldr	r3, [r7, #12]
 2947 0034 0122     		movs	r2, #1
 2948 0036 83F85C20 		strb	r2, [r3, #92]
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_state      = UART_STATE_BUSY;
 2949              		.loc 1 1096 25 is_stmt 1 discriminator 2
 2950 003a FB68     		ldr	r3, [r7, #12]
 2951 003c 0122     		movs	r2, #1
 2952 003e 83F85320 		strb	r2, [r3, #83]
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->error_state   = HAL_UART_ERROR_NONE;
 2953              		.loc 1 1097 25 discriminator 2
 2954 0042 FB68     		ldr	r3, [r7, #12]
 2955 0044 0022     		movs	r2, #0
 2956 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* initialize receive parameters */
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.buffer   = (uint8_t *)p_buffer;
 2957              		.loc 1 1100 29 discriminator 2
 2958 004a FB68     		ldr	r3, [r7, #12]
 2959 004c BA68     		ldr	r2, [r7, #8]
 2960 004e 1A64     		str	r2, [r3, #64]
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.length   = length;
 2961              		.loc 1 1101 29 discriminator 2
 2962 0050 FA88     		ldrh	r2, [r7, #6]
 2963 0052 FB68     		ldr	r3, [r7, #12]
 2964 0054 5A64     		str	r2, [r3, #68]
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.pos      = 0U;
 2965              		.loc 1 1102 29 discriminator 2
 2966 0056 FB68     		ldr	r3, [r7, #12]
 2967 0058 0022     		movs	r2, #0
 2968 005a 9A64     		str	r2, [r3, #72]
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->data_bit_mask     = _uart_data_bit_mask_get(uart);
 2969              		.loc 1 1103 31 discriminator 2
 2970 005c F868     		ldr	r0, [r7, #12]
 2971 005e FFF7FEFF 		bl	_uart_data_bit_mask_get
 2972 0062 0346     		mov	r3, r0
 2973 0064 1A46     		mov	r2, r3
 2974              		.loc 1 1103 29 discriminator 2
 2975 0066 FB68     		ldr	r3, [r7, #12]
 2976 0068 A3F84C20 		strh	r2, [r3, #76]	@ movhi
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_func) {
 2977              		.loc 1 1105 7 discriminator 2
 2978 006c 3B68     		ldr	r3, [r7]
 2979 006e 002B     		cmp	r3, #0
 2980 0070 08D0     		beq	.L151
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->rx_callback = (void *)p_func->complete_func;
 2981              		.loc 1 1106 43
 2982 0072 3B68     		ldr	r3, [r7]
 2983 0074 1A68     		ldr	r2, [r3]
 2984              		.loc 1 1106 27
 2985 0076 FB68     		ldr	r3, [r7, #12]
 2986 0078 5A65     		str	r2, [r3, #84]
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.error_handle = (hal_irq_handle_cb)p_func->error_func;
 2987              		.loc 1 1107 64
 2988 007a 3B68     		ldr	r3, [r7]
 2989 007c 5A68     		ldr	r2, [r3, #4]
 2990              		.loc 1 1107 37
 2991 007e FB68     		ldr	r3, [r7, #12]
 2992 0080 5A61     		str	r2, [r3, #20]
 2993 0082 05E0     		b	.L152
 2994              	.L151:
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->rx_callback = NULL;
 2995              		.loc 1 1109 27
 2996 0084 FB68     		ldr	r3, [r7, #12]
 2997 0086 0022     		movs	r2, #0
 2998 0088 5A65     		str	r2, [r3, #84]
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->uart_irq.error_handle = NULL;
 2999              		.loc 1 1110 37
 3000 008a FB68     		ldr	r3, [r7, #12]
 3001 008c 0022     		movs	r2, #0
 3002 008e 5A61     		str	r2, [r3, #20]
 3003              	.L152:
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure DMA interrupt interrupt callback function */
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     dma_irq.full_finish_handle  = _uart_receive_dma;
 3004              		.loc 1 1114 33
 3005 0090 264B     		ldr	r3, .L157
 3006 0092 FB61     		str	r3, [r7, #28]
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     dma_irq.error_handle        = _uart_dma_error;
 3007              		.loc 1 1115 33
 3008 0094 264B     		ldr	r3, .L157+4
 3009 0096 7B61     		str	r3, [r7, #20]
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != uart->p_dma_rx->dma_irq.half_finish_handle) {
 3010              		.loc 1 1116 20
 3011 0098 FB68     		ldr	r3, [r7, #12]
 3012 009a DB6A     		ldr	r3, [r3, #44]
 3013              		.loc 1 1116 39
 3014 009c 9B68     		ldr	r3, [r3, #8]
 3015              		.loc 1 1116 7
 3016 009e 002B     		cmp	r3, #0
 3017 00a0 04D0     		beq	.L153
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         dma_irq.half_finish_handle = uart->p_dma_rx->dma_irq.half_finish_handle;
 3018              		.loc 1 1117 42
 3019 00a2 FB68     		ldr	r3, [r7, #12]
 3020 00a4 DB6A     		ldr	r3, [r3, #44]
 3021              		.loc 1 1117 61
 3022 00a6 9B68     		ldr	r3, [r3, #8]
 3023              		.loc 1 1117 36
 3024 00a8 BB61     		str	r3, [r7, #24]
 3025 00aa 01E0     		b	.L154
 3026              	.L153:
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         dma_irq.half_finish_handle = NULL;
 3027              		.loc 1 1119 36
 3028 00ac 0023     		movs	r3, #0
 3029 00ae BB61     		str	r3, [r7, #24]
 3030              	.L154:
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* start DMA interrupt mode transfer */
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(HAL_ERR_NONE != hal_dma_start_interrupt(uart->p_dma_rx, (uint32_t)&USART_RDATA(uart->periph)
 3031              		.loc 1 1123 24
 3032 00b0 FB68     		ldr	r3, [r7, #12]
 3033 00b2 D86A     		ldr	r0, [r3, #44]
 3034              		.loc 1 1123 75
 3035 00b4 FB68     		ldr	r3, [r7, #12]
 3036 00b6 1B68     		ldr	r3, [r3]
 3037              		.loc 1 1123 24
 3038 00b8 03F12401 		add	r1, r3, #36
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)uart->rxbuffer.buffer, length, &dma_irq)) {
 3039              		.loc 1 1124 37
 3040 00bc FB68     		ldr	r3, [r7, #12]
 3041 00be 1B6C     		ldr	r3, [r3, #64]
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)uart->rxbuffer.buffer, length, &dma_irq)) {
 3042              		.loc 1 1123 24
 3043 00c0 1C46     		mov	r4, r3
 3044 00c2 FA88     		ldrh	r2, [r7, #6]
 3045 00c4 07F11403 		add	r3, r7, #20
 3046 00c8 0093     		str	r3, [sp]
 3047 00ca 1346     		mov	r3, r2
 3048 00cc 2246     		mov	r2, r4
 3049 00ce FFF7FEFF 		bl	hal_dma_start_interrupt
 3050 00d2 0346     		mov	r3, r0
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             (uint32_t)uart->rxbuffer.buffer, length, &dma_irq)) {
 3051              		.loc 1 1123 7
 3052 00d4 002B     		cmp	r3, #0
 3053 00d6 0DD0     		beq	.L155
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->tx_state = UART_STATE_FREE;
 3054              		.loc 1 1125 24
 3055 00d8 FB68     		ldr	r3, [r7, #12]
 3056 00da 0022     		movs	r2, #0
 3057 00dc 83F85220 		strb	r2, [r3, #82]
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uart->error_state = HAL_UART_ERROR_DMARX;
 3058              		.loc 1 1126 27
 3059 00e0 FB68     		ldr	r3, [r7, #12]
 3060 00e2 2022     		movs	r2, #32
 3061 00e4 A3F85020 		strh	r2, [r3, #80]	@ movhi
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* unlock uart */
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_UNLOCK(uart);
 3062              		.loc 1 1128 9
 3063 00e8 FB68     		ldr	r3, [r7, #12]
 3064 00ea 0022     		movs	r2, #0
 3065 00ec 83F85C20 		strb	r2, [r3, #92]
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_NONE;
 3066              		.loc 1 1130 16
 3067 00f0 0023     		movs	r3, #0
 3068 00f2 17E0     		b	.L156
 3069              	.L155:
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* enable the usart parity error and error interrupt: (frame error, noise error, overrun error)
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_enable(uart->periph, USART_INT_PERR);
 3070              		.loc 1 1134 5
 3071 00f4 FB68     		ldr	r3, [r7, #12]
 3072 00f6 1B68     		ldr	r3, [r3]
 3073 00f8 0821     		movs	r1, #8
 3074 00fa 1846     		mov	r0, r3
 3075 00fc FFF7FEFF 		bl	hals_uart_interrupt_enable
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_enable(uart->periph, USART_INT_ERR);
 3076              		.loc 1 1135 5
 3077 0100 FB68     		ldr	r3, [r7, #12]
 3078 0102 1B68     		ldr	r3, [r3]
 3079 0104 4FF40071 		mov	r1, #512
 3080 0108 1846     		mov	r0, r3
 3081 010a FFF7FEFF 		bl	hals_uart_interrupt_enable
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* DMA enable for reception */
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_dma_receive_config(uart->periph, USART_RECEIVE_DMA_ENABLE);
 3082              		.loc 1 1138 5
 3083 010e FB68     		ldr	r3, [r7, #12]
 3084 0110 1B68     		ldr	r3, [r3]
 3085 0112 4021     		movs	r1, #64
 3086 0114 1846     		mov	r0, r3
 3087 0116 FFF7FEFF 		bl	hals_uart_dma_receive_config
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 3088              		.loc 1 1141 5
 3089 011a FB68     		ldr	r3, [r7, #12]
 3090 011c 0022     		movs	r2, #0
 3091 011e 83F85C20 		strb	r2, [r3, #92]
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 3092              		.loc 1 1143 12
 3093 0122 0023     		movs	r3, #0
 3094              	.L156:
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3095              		.loc 1 1144 1 discriminator 1
 3096 0124 1846     		mov	r0, r3
 3097 0126 2437     		adds	r7, r7, #36
 3098              		.cfi_def_cfa_offset 12
 3099 0128 BD46     		mov	sp, r7
 3100              		.cfi_def_cfa_register 13
 3101              		@ sp needed
 3102 012a 90BD     		pop	{r4, r7, pc}
 3103              	.L158:
 3104              		.align	2
 3105              	.L157:
 3106 012c 00000000 		.word	_uart_receive_dma
 3107 0130 00000000 		.word	_uart_dma_error
 3108              		.cfi_endproc
 3109              	.LFE130:
 3111              		.section	.text.hal_uart_dma_pause,"ax",%progbits
 3112              		.align	1
 3113              		.global	hal_uart_dma_pause
 3114              		.syntax unified
 3115              		.thumb
 3116              		.thumb_func
 3117              		.fpu softvfp
 3119              	hal_uart_dma_pause:
 3120              	.LFB131:
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      pause uart DMA transfer during transmission process
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_dma_pause(hal_uart_dev_struct *uart)
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3121              		.loc 1 1155 1
 3122              		.cfi_startproc
 3123              		@ args = 0, pretend = 0, frame = 8
 3124              		@ frame_needed = 1, uses_anonymous_args = 0
 3125 0000 80B5     		push	{r7, lr}
 3126              		.cfi_def_cfa_offset 8
 3127              		.cfi_offset 7, -8
 3128              		.cfi_offset 14, -4
 3129 0002 82B0     		sub	sp, sp, #8
 3130              		.cfi_def_cfa_offset 16
 3131 0004 00AF     		add	r7, sp, #0
 3132              		.cfi_def_cfa_register 7
 3133 0006 7860     		str	r0, [r7, #4]
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameter */
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == uart) {
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] value is invalid");
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 3134              		.loc 1 1165 5
 3135 0008 7B68     		ldr	r3, [r7, #4]
 3136 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3137 000e 012B     		cmp	r3, #1
 3138 0010 02D1     		bne	.L160
 3139              		.loc 1 1165 5 is_stmt 0 discriminator 1
 3140 0012 6FF00103 		mvn	r3, #1
 3141 0016 2DE0     		b	.L161
 3142              	.L160:
 3143              		.loc 1 1165 5 discriminator 2
 3144 0018 7B68     		ldr	r3, [r7, #4]
 3145 001a 0122     		movs	r2, #1
 3146 001c 83F85C20 		strb	r2, [r3, #92]
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the tx_state wheher is busy or not */
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->tx_state) {
 3147              		.loc 1 1168 31 is_stmt 1 discriminator 2
 3148 0020 7B68     		ldr	r3, [r7, #4]
 3149 0022 93F85230 		ldrb	r3, [r3, #82]
 3150 0026 DBB2     		uxtb	r3, r3
 3151              		.loc 1 1168 7 discriminator 2
 3152 0028 012B     		cmp	r3, #1
 3153 002a 05D1     		bne	.L162
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable DMA transimt */
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_transmit_config(uart->periph, USART_TRANSMIT_DMA_DISABLE);
 3154              		.loc 1 1170 9
 3155 002c 7B68     		ldr	r3, [r7, #4]
 3156 002e 1B68     		ldr	r3, [r3]
 3157 0030 0021     		movs	r1, #0
 3158 0032 1846     		mov	r0, r3
 3159 0034 FFF7FEFF 		bl	hals_uart_dma_transmit_config
 3160              	.L162:
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the rx_state wheher is busy or not */
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->rx_state) {
 3161              		.loc 1 1174 31
 3162 0038 7B68     		ldr	r3, [r7, #4]
 3163 003a 93F85330 		ldrb	r3, [r3, #83]
 3164 003e DBB2     		uxtb	r3, r3
 3165              		.loc 1 1174 7
 3166 0040 012B     		cmp	r3, #1
 3167 0042 12D1     		bne	.L163
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable the PERR and ERR interrupt */
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_PERR);
 3168              		.loc 1 1176 9
 3169 0044 7B68     		ldr	r3, [r7, #4]
 3170 0046 1B68     		ldr	r3, [r3]
 3171 0048 0821     		movs	r1, #8
 3172 004a 1846     		mov	r0, r3
 3173 004c FFF7FEFF 		bl	hals_uart_interrupt_disable
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(uart->periph, USART_INT_ERR);
 3174              		.loc 1 1177 9
 3175 0050 7B68     		ldr	r3, [r7, #4]
 3176 0052 1B68     		ldr	r3, [r3]
 3177 0054 4FF40071 		mov	r1, #512
 3178 0058 1846     		mov	r0, r3
 3179 005a FFF7FEFF 		bl	hals_uart_interrupt_disable
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable DMA receive */
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_receive_config(uart->periph, USART_RECEIVE_DMA_DISABLE);
 3180              		.loc 1 1180 9
 3181 005e 7B68     		ldr	r3, [r7, #4]
 3182 0060 1B68     		ldr	r3, [r3]
 3183 0062 0021     		movs	r1, #0
 3184 0064 1846     		mov	r0, r3
 3185 0066 FFF7FEFF 		bl	hals_uart_dma_receive_config
 3186              	.L163:
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
1184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 3187              		.loc 1 1184 5
 3188 006a 7B68     		ldr	r3, [r7, #4]
 3189 006c 0022     		movs	r2, #0
 3190 006e 83F85C20 		strb	r2, [r3, #92]
1185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 3191              		.loc 1 1186 12
 3192 0072 0023     		movs	r3, #0
 3193              	.L161:
1187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3194              		.loc 1 1187 1
 3195 0074 1846     		mov	r0, r3
 3196 0076 0837     		adds	r7, r7, #8
 3197              		.cfi_def_cfa_offset 8
 3198 0078 BD46     		mov	sp, r7
 3199              		.cfi_def_cfa_register 13
 3200              		@ sp needed
 3201 007a 80BD     		pop	{r7, pc}
 3202              		.cfi_endproc
 3203              	.LFE131:
 3205              		.section	.text.hal_uart_dma_resume,"ax",%progbits
 3206              		.align	1
 3207              		.global	hal_uart_dma_resume
 3208              		.syntax unified
 3209              		.thumb
 3210              		.thumb_func
 3211              		.fpu softvfp
 3213              	hal_uart_dma_resume:
 3214              	.LFB132:
1188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      resume uart DMA transfer during transmission process
1191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
1194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_dma_resume(hal_uart_dev_struct *uart)
1198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3215              		.loc 1 1198 1
 3216              		.cfi_startproc
 3217              		@ args = 0, pretend = 0, frame = 8
 3218              		@ frame_needed = 1, uses_anonymous_args = 0
 3219 0000 80B5     		push	{r7, lr}
 3220              		.cfi_def_cfa_offset 8
 3221              		.cfi_offset 7, -8
 3222              		.cfi_offset 14, -4
 3223 0002 82B0     		sub	sp, sp, #8
 3224              		.cfi_def_cfa_offset 16
 3225 0004 00AF     		add	r7, sp, #0
 3226              		.cfi_def_cfa_register 7
 3227 0006 7860     		str	r0, [r7, #4]
1199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
1200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameter */
1201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == uart) {
1202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] value is invalid");
1203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
1204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 3228              		.loc 1 1208 5
 3229 0008 7B68     		ldr	r3, [r7, #4]
 3230 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3231 000e 012B     		cmp	r3, #1
 3232 0010 02D1     		bne	.L165
 3233              		.loc 1 1208 5 is_stmt 0 discriminator 1
 3234 0012 6FF00103 		mvn	r3, #1
 3235 0016 2DE0     		b	.L166
 3236              	.L165:
 3237              		.loc 1 1208 5 discriminator 2
 3238 0018 7B68     		ldr	r3, [r7, #4]
 3239 001a 0122     		movs	r2, #1
 3240 001c 83F85C20 		strb	r2, [r3, #92]
1209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the tx_state wheher is busy or not */
1211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->tx_state) {
 3241              		.loc 1 1211 31 is_stmt 1 discriminator 2
 3242 0020 7B68     		ldr	r3, [r7, #4]
 3243 0022 93F85230 		ldrb	r3, [r3, #82]
 3244 0026 DBB2     		uxtb	r3, r3
 3245              		.loc 1 1211 7 discriminator 2
 3246 0028 012B     		cmp	r3, #1
 3247 002a 05D1     		bne	.L167
1212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* enable DMA transimt */
1213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_transmit_config(uart->periph, USART_TRANSMIT_DMA_ENABLE);
 3248              		.loc 1 1213 9
 3249 002c 7B68     		ldr	r3, [r7, #4]
 3250 002e 1B68     		ldr	r3, [r3]
 3251 0030 8021     		movs	r1, #128
 3252 0032 1846     		mov	r0, r3
 3253 0034 FFF7FEFF 		bl	hals_uart_dma_transmit_config
 3254              	.L167:
1214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the rx_state wheher is busy or not */
1217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == uart->rx_state) {
 3255              		.loc 1 1217 31
 3256 0038 7B68     		ldr	r3, [r7, #4]
 3257 003a 93F85330 		ldrb	r3, [r3, #83]
 3258 003e DBB2     		uxtb	r3, r3
 3259              		.loc 1 1217 7
 3260 0040 012B     		cmp	r3, #1
 3261 0042 12D1     		bne	.L168
1218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* enable the PERR and ERR interrupt */
1219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_PERR);
 3262              		.loc 1 1219 9
 3263 0044 7B68     		ldr	r3, [r7, #4]
 3264 0046 1B68     		ldr	r3, [r3]
 3265 0048 0821     		movs	r1, #8
 3266 004a 1846     		mov	r0, r3
 3267 004c FFF7FEFF 		bl	hals_uart_interrupt_enable
1220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(uart->periph, USART_INT_ERR);
 3268              		.loc 1 1220 9
 3269 0050 7B68     		ldr	r3, [r7, #4]
 3270 0052 1B68     		ldr	r3, [r3]
 3271 0054 4FF40071 		mov	r1, #512
 3272 0058 1846     		mov	r0, r3
 3273 005a FFF7FEFF 		bl	hals_uart_interrupt_enable
1221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* enable DMA receive */
1223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_receive_config(uart->periph, USART_RECEIVE_DMA_ENABLE);
 3274              		.loc 1 1223 9
 3275 005e 7B68     		ldr	r3, [r7, #4]
 3276 0060 1B68     		ldr	r3, [r3]
 3277 0062 4021     		movs	r1, #64
 3278 0064 1846     		mov	r0, r3
 3279 0066 FFF7FEFF 		bl	hals_uart_dma_receive_config
 3280              	.L168:
1224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
1227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 3281              		.loc 1 1227 5
 3282 006a 7B68     		ldr	r3, [r7, #4]
 3283 006c 0022     		movs	r2, #0
 3284 006e 83F85C20 		strb	r2, [r3, #92]
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 3285              		.loc 1 1229 12
 3286 0072 0023     		movs	r3, #0
 3287              	.L166:
1230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3288              		.loc 1 1230 1
 3289 0074 1846     		mov	r0, r3
 3290 0076 0837     		adds	r7, r7, #8
 3291              		.cfi_def_cfa_offset 8
 3292 0078 BD46     		mov	sp, r7
 3293              		.cfi_def_cfa_register 13
 3294              		@ sp needed
 3295 007a 80BD     		pop	{r7, pc}
 3296              		.cfi_endproc
 3297              	.LFE132:
 3299              		.section	.text.hal_uart_transmit_stop,"ax",%progbits
 3300              		.align	1
 3301              		.global	hal_uart_transmit_stop
 3302              		.syntax unified
 3303              		.thumb
 3304              		.thumb_func
 3305              		.fpu softvfp
 3307              	hal_uart_transmit_stop:
 3308              	.LFB133:
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      stop uart transmit transfer
1234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is blocking
1235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
1236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
1238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_transmit_stop(hal_uart_dev_struct *uart)
1242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3309              		.loc 1 1242 1
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 8
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 80B5     		push	{r7, lr}
 3314              		.cfi_def_cfa_offset 8
 3315              		.cfi_offset 7, -8
 3316              		.cfi_offset 14, -4
 3317 0002 82B0     		sub	sp, sp, #8
 3318              		.cfi_def_cfa_offset 16
 3319 0004 00AF     		add	r7, sp, #0
 3320              		.cfi_def_cfa_register 7
 3321 0006 7860     		str	r0, [r7, #4]
1243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
1244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameter */
1245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == uart) {
1246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] value is invalid");
1247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
1248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 3322              		.loc 1 1252 5
 3323 0008 7B68     		ldr	r3, [r7, #4]
 3324 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3325 000e 012B     		cmp	r3, #1
 3326 0010 02D1     		bne	.L170
 3327              		.loc 1 1252 5 is_stmt 0 discriminator 1
 3328 0012 6FF00103 		mvn	r3, #1
 3329 0016 26E0     		b	.L171
 3330              	.L170:
 3331              		.loc 1 1252 5 discriminator 2
 3332 0018 7B68     		ldr	r3, [r7, #4]
 3333 001a 0122     		movs	r2, #1
 3334 001c 83F85C20 		strb	r2, [r3, #92]
1253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable the TBE and TC interrupt */
1255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_disable(uart->periph, USART_INT_TBE);
 3335              		.loc 1 1255 5 is_stmt 1 discriminator 2
 3336 0020 7B68     		ldr	r3, [r7, #4]
 3337 0022 1B68     		ldr	r3, [r3]
 3338 0024 0721     		movs	r1, #7
 3339 0026 1846     		mov	r0, r3
 3340 0028 FFF7FEFF 		bl	hals_uart_interrupt_disable
1256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_disable(uart->periph, USART_INT_TC);
 3341              		.loc 1 1256 5 discriminator 2
 3342 002c 7B68     		ldr	r3, [r7, #4]
 3343 002e 1B68     		ldr	r3, [r3]
 3344 0030 0621     		movs	r1, #6
 3345 0032 1846     		mov	r0, r3
 3346 0034 FFF7FEFF 		bl	hals_uart_interrupt_disable
1257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable DMA transimt and stop DMA */
1259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_dma_transmit_config(uart->periph, USART_TRANSMIT_DMA_DISABLE);
 3347              		.loc 1 1259 5 discriminator 2
 3348 0038 7B68     		ldr	r3, [r7, #4]
 3349 003a 1B68     		ldr	r3, [r3]
 3350 003c 0021     		movs	r1, #0
 3351 003e 1846     		mov	r0, r3
 3352 0040 FFF7FEFF 		bl	hals_uart_dma_transmit_config
1260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_stop(uart->p_dma_tx);
 3353              		.loc 1 1260 5 discriminator 2
 3354 0044 7B68     		ldr	r3, [r7, #4]
 3355 0046 1B6B     		ldr	r3, [r3, #48]
 3356 0048 1846     		mov	r0, r3
 3357 004a FFF7FEFF 		bl	hal_dma_stop
1261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* reset the position and state */
1263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->txbuffer.pos = 0;
 3358              		.loc 1 1263 24 discriminator 2
 3359 004e 7B68     		ldr	r3, [r7, #4]
 3360 0050 0022     		movs	r2, #0
 3361 0052 DA63     		str	r2, [r3, #60]
1264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->tx_state = UART_STATE_FREE;
 3362              		.loc 1 1264 20 discriminator 2
 3363 0054 7B68     		ldr	r3, [r7, #4]
 3364 0056 0022     		movs	r2, #0
 3365 0058 83F85220 		strb	r2, [r3, #82]
1265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
1267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 3366              		.loc 1 1267 5 discriminator 2
 3367 005c 7B68     		ldr	r3, [r7, #4]
 3368 005e 0022     		movs	r2, #0
 3369 0060 83F85C20 		strb	r2, [r3, #92]
1268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 3370              		.loc 1 1269 12 discriminator 2
 3371 0064 0023     		movs	r3, #0
 3372              	.L171:
1270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3373              		.loc 1 1270 1
 3374 0066 1846     		mov	r0, r3
 3375 0068 0837     		adds	r7, r7, #8
 3376              		.cfi_def_cfa_offset 8
 3377 006a BD46     		mov	sp, r7
 3378              		.cfi_def_cfa_register 13
 3379              		@ sp needed
 3380 006c 80BD     		pop	{r7, pc}
 3381              		.cfi_endproc
 3382              	.LFE133:
 3384              		.section	.text.hal_uart_receive_stop,"ax",%progbits
 3385              		.align	1
 3386              		.global	hal_uart_receive_stop
 3387              		.syntax unified
 3388              		.thumb
 3389              		.thumb_func
 3390              		.fpu softvfp
 3392              	hal_uart_receive_stop:
 3393              	.LFB134:
1271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      stop uart receive transfer
1274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 the function is blocking
1275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
1276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
1277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
1278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     error code: HAL_ERR_NONE, HAL_ERR_ADDRESS details refer to gd32f3x0_hal.h
1280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** int32_t hal_uart_receive_stop(hal_uart_dev_struct *uart)
1282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3394              		.loc 1 1282 1
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 8
 3397              		@ frame_needed = 1, uses_anonymous_args = 0
 3398 0000 80B5     		push	{r7, lr}
 3399              		.cfi_def_cfa_offset 8
 3400              		.cfi_offset 7, -8
 3401              		.cfi_offset 14, -4
 3402 0002 82B0     		sub	sp, sp, #8
 3403              		.cfi_def_cfa_offset 16
 3404 0004 00AF     		add	r7, sp, #0
 3405              		.cfi_def_cfa_register 7
 3406 0006 7860     		str	r0, [r7, #4]
1283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #if (1 == HAL_PARAMETER_CHECK)
1284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* check the parameter */
1285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL == uart) {
1286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("parameter [uart] value is invalid");
1287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return HAL_ERR_ADDRESS;
1288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
1290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* lock uart */
1292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_LOCK(uart);
 3407              		.loc 1 1292 5
 3408 0008 7B68     		ldr	r3, [r7, #4]
 3409 000a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3410 000e 012B     		cmp	r3, #1
 3411 0010 02D1     		bne	.L173
 3412              		.loc 1 1292 5 is_stmt 0 discriminator 1
 3413 0012 6FF00103 		mvn	r3, #1
 3414 0016 45E0     		b	.L174
 3415              	.L173:
 3416              		.loc 1 1292 5 discriminator 2
 3417 0018 7B68     		ldr	r3, [r7, #4]
 3418 001a 0122     		movs	r2, #1
 3419 001c 83F85C20 		strb	r2, [r3, #92]
1293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable the RBNE, PERR and ERR interrupt */
1295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_disable(uart->periph, USART_INT_RBNE);
 3420              		.loc 1 1295 5 is_stmt 1 discriminator 2
 3421 0020 7B68     		ldr	r3, [r7, #4]
 3422 0022 1B68     		ldr	r3, [r3]
 3423 0024 0521     		movs	r1, #5
 3424 0026 1846     		mov	r0, r3
 3425 0028 FFF7FEFF 		bl	hals_uart_interrupt_disable
1296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_disable(uart->periph, USART_INT_PERR);
 3426              		.loc 1 1296 5 discriminator 2
 3427 002c 7B68     		ldr	r3, [r7, #4]
 3428 002e 1B68     		ldr	r3, [r3]
 3429 0030 0821     		movs	r1, #8
 3430 0032 1846     		mov	r0, r3
 3431 0034 FFF7FEFF 		bl	hals_uart_interrupt_disable
1297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_disable(uart->periph, USART_INT_ERR);
 3432              		.loc 1 1297 5 discriminator 2
 3433 0038 7B68     		ldr	r3, [r7, #4]
 3434 003a 1B68     		ldr	r3, [r3]
 3435 003c 4FF40071 		mov	r1, #512
 3436 0040 1846     		mov	r0, r3
 3437 0042 FFF7FEFF 		bl	hals_uart_interrupt_disable
1298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable DMA receive and stop DMA */
1300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_dma_receive_config(uart->periph, USART_RECEIVE_DMA_DISABLE);
 3438              		.loc 1 1300 5 discriminator 2
 3439 0046 7B68     		ldr	r3, [r7, #4]
 3440 0048 1B68     		ldr	r3, [r3]
 3441 004a 0021     		movs	r1, #0
 3442 004c 1846     		mov	r0, r3
 3443 004e FFF7FEFF 		bl	hals_uart_dma_receive_config
1301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_stop(uart->p_dma_rx);
 3444              		.loc 1 1301 5 discriminator 2
 3445 0052 7B68     		ldr	r3, [r7, #4]
 3446 0054 DB6A     		ldr	r3, [r3, #44]
 3447 0056 1846     		mov	r0, r3
 3448 0058 FFF7FEFF 		bl	hal_dma_stop
1302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* reset the position and state */
1304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rxbuffer.pos = 0;
 3449              		.loc 1 1304 24 discriminator 2
 3450 005c 7B68     		ldr	r3, [r7, #4]
 3451 005e 0022     		movs	r2, #0
 3452 0060 9A64     		str	r2, [r3, #72]
1305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uart->rx_state = UART_STATE_FREE;
 3453              		.loc 1 1305 20 discriminator 2
 3454 0062 7B68     		ldr	r3, [r7, #4]
 3455 0064 0022     		movs	r2, #0
 3456 0066 83F85320 		strb	r2, [r3, #83]
1306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear interrupt error flags */
1308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_PERR);
 3457              		.loc 1 1308 5 discriminator 2
 3458 006a 7B68     		ldr	r3, [r7, #4]
 3459 006c 1B68     		ldr	r3, [r3]
 3460 006e 0F49     		ldr	r1, .L175
 3461 0070 1846     		mov	r0, r3
 3462 0072 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
1309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_ERR_FERR);
 3463              		.loc 1 1309 5 discriminator 2
 3464 0076 7B68     		ldr	r3, [r7, #4]
 3465 0078 1B68     		ldr	r3, [r3]
 3466 007a 0D49     		ldr	r1, .L175+4
 3467 007c 1846     		mov	r0, r3
 3468 007e FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
1310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_ERR_NERR);
 3469              		.loc 1 1310 5 discriminator 2
 3470 0082 7B68     		ldr	r3, [r7, #4]
 3471 0084 1B68     		ldr	r3, [r3]
 3472 0086 0B49     		ldr	r1, .L175+8
 3473 0088 1846     		mov	r0, r3
 3474 008a FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
1311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_flag_clear(uart->periph, USART_INT_FLAG_ERR_ORERR);
 3475              		.loc 1 1311 5 discriminator 2
 3476 008e 7B68     		ldr	r3, [r7, #4]
 3477 0090 1B68     		ldr	r3, [r3]
 3478 0092 0949     		ldr	r1, .L175+12
 3479 0094 1846     		mov	r0, r3
 3480 0096 FFF7FEFF 		bl	hals_uart_interrupt_flag_clear
1312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* unlock uart */
1314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     HAL_UNLOCK(uart);
 3481              		.loc 1 1314 5 discriminator 2
 3482 009a 7B68     		ldr	r3, [r7, #4]
 3483 009c 0022     		movs	r2, #0
 3484 009e 83F85C20 		strb	r2, [r3, #92]
1315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return HAL_ERR_NONE;
 3485              		.loc 1 1316 12 discriminator 2
 3486 00a2 0023     		movs	r3, #0
 3487              	.L174:
1317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3488              		.loc 1 1317 1
 3489 00a4 1846     		mov	r0, r3
 3490 00a6 0837     		adds	r7, r7, #8
 3491              		.cfi_def_cfa_offset 8
 3492 00a8 BD46     		mov	sp, r7
 3493              		.cfi_def_cfa_register 13
 3494              		@ sp needed
 3495 00aa 80BD     		pop	{r7, pc}
 3496              	.L176:
 3497              		.align	2
 3498              	.L175:
 3499 00ac 08000007 		.word	117440520
 3500 00b0 00020107 		.word	117506560
 3501 00b4 00020207 		.word	117572096
 3502 00b8 00020307 		.word	117637632
 3503              		.cfi_endproc
 3504              	.LFE134:
 3506              		.section	.text.hals_uart_deinit,"ax",%progbits
 3507              		.align	1
 3508              		.global	hals_uart_deinit
 3509              		.syntax unified
 3510              		.thumb
 3511              		.thumb_func
 3512              		.fpu softvfp
 3514              	hals_uart_deinit:
 3515              	.LFB135:
1318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      reset UART
1321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_deinit(uint32_t uart_periph)
1326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3516              		.loc 1 1326 1
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 8
 3519              		@ frame_needed = 1, uses_anonymous_args = 0
 3520 0000 80B5     		push	{r7, lr}
 3521              		.cfi_def_cfa_offset 8
 3522              		.cfi_offset 7, -8
 3523              		.cfi_offset 14, -4
 3524 0002 82B0     		sub	sp, sp, #8
 3525              		.cfi_def_cfa_offset 16
 3526 0004 00AF     		add	r7, sp, #0
 3527              		.cfi_def_cfa_register 7
 3528 0006 7860     		str	r0, [r7, #4]
1327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     switch(uart_periph) {
 3529              		.loc 1 1327 5
 3530 0008 7B68     		ldr	r3, [r7, #4]
 3531 000a 0F4A     		ldr	r2, .L182
 3532 000c 9342     		cmp	r3, r2
 3533 000e 0CD0     		beq	.L178
 3534 0010 7B68     		ldr	r3, [r7, #4]
 3535 0012 0E4A     		ldr	r2, .L182+4
 3536 0014 9342     		cmp	r3, r2
 3537 0016 11D1     		bne	.L181
1328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART0:
1329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* reset USART0 */
1330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hal_rcu_periph_reset_enable(RCU_USART0RST);
 3538              		.loc 1 1330 9
 3539 0018 40F20E30 		movw	r0, #782
 3540 001c FFF7FEFF 		bl	hal_rcu_periph_reset_enable
1331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hal_rcu_periph_reset_disable(RCU_USART0RST);
 3541              		.loc 1 1331 9
 3542 0020 40F20E30 		movw	r0, #782
 3543 0024 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
1332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 3544              		.loc 1 1332 9
 3545 0028 09E0     		b	.L180
 3546              	.L178:
1333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART1:
1334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* reset USART1 */
1335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hal_rcu_periph_reset_enable(RCU_USART1RST);
 3547              		.loc 1 1335 9
 3548 002a 40F21140 		movw	r0, #1041
 3549 002e FFF7FEFF 		bl	hal_rcu_periph_reset_enable
1336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hal_rcu_periph_reset_disable(RCU_USART1RST);
 3550              		.loc 1 1336 9
 3551 0032 40F21140 		movw	r0, #1041
 3552 0036 FFF7FEFF 		bl	hal_rcu_periph_reset_disable
1337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 3553              		.loc 1 1337 9
 3554 003a 00E0     		b	.L180
 3555              	.L181:
1338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     default:
1339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 3556              		.loc 1 1339 9
 3557 003c 00BF     		nop
 3558              	.L180:
1340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3559              		.loc 1 1341 1
 3560 003e 00BF     		nop
 3561 0040 0837     		adds	r7, r7, #8
 3562              		.cfi_def_cfa_offset 8
 3563 0042 BD46     		mov	sp, r7
 3564              		.cfi_def_cfa_register 13
 3565              		@ sp needed
 3566 0044 80BD     		pop	{r7, pc}
 3567              	.L183:
 3568 0046 00BF     		.align	2
 3569              	.L182:
 3570 0048 00440040 		.word	1073759232
 3571 004c 00380140 		.word	1073821696
 3572              		.cfi_endproc
 3573              	.LFE135:
 3575              		.section	.text.hals_uart_baudrate_set,"ax",%progbits
 3576              		.align	1
 3577              		.global	hals_uart_baudrate_set
 3578              		.syntax unified
 3579              		.thumb
 3580              		.thumb_func
 3581              		.fpu softvfp
 3583              	hals_uart_baudrate_set:
 3584              	.LFB136:
1342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART baud rate value
1345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  baudval: baud rate value
1347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_baudrate_set(uint32_t uart_periph, uint32_t baudval)
1351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3585              		.loc 1 1351 1
 3586              		.cfi_startproc
 3587              		@ args = 0, pretend = 0, frame = 24
 3588              		@ frame_needed = 1, uses_anonymous_args = 0
 3589 0000 80B5     		push	{r7, lr}
 3590              		.cfi_def_cfa_offset 8
 3591              		.cfi_offset 7, -8
 3592              		.cfi_offset 14, -4
 3593 0002 86B0     		sub	sp, sp, #24
 3594              		.cfi_def_cfa_offset 32
 3595 0004 00AF     		add	r7, sp, #0
 3596              		.cfi_def_cfa_register 7
 3597 0006 7860     		str	r0, [r7, #4]
 3598 0008 3960     		str	r1, [r7]
1352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint32_t uclk = 0U, intdiv = 0U, fradiv = 0U, udiv = 0U;
 3599              		.loc 1 1352 14
 3600 000a 0023     		movs	r3, #0
 3601 000c 7B61     		str	r3, [r7, #20]
 3602              		.loc 1 1352 25
 3603 000e 0023     		movs	r3, #0
 3604 0010 3B61     		str	r3, [r7, #16]
 3605              		.loc 1 1352 38
 3606 0012 0023     		movs	r3, #0
 3607 0014 FB60     		str	r3, [r7, #12]
 3608              		.loc 1 1352 51
 3609 0016 0023     		movs	r3, #0
 3610 0018 BB60     		str	r3, [r7, #8]
1353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     switch(uart_periph) {
 3611              		.loc 1 1353 5
 3612 001a 7B68     		ldr	r3, [r7, #4]
 3613 001c 294A     		ldr	r2, .L192
 3614 001e 9342     		cmp	r3, r2
 3615 0020 08D0     		beq	.L185
 3616 0022 7B68     		ldr	r3, [r7, #4]
 3617 0024 284A     		ldr	r2, .L192+4
 3618 0026 9342     		cmp	r3, r2
 3619 0028 09D1     		bne	.L190
1354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* get clock frequency */
1355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART0:
1356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* get USART0 clock */
1357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uclk = hals_rcu_clock_freq_get(CK_USART);
 3620              		.loc 1 1357 16
 3621 002a 0620     		movs	r0, #6
 3622 002c FFF7FEFF 		bl	hals_rcu_clock_freq_get
 3623 0030 7861     		str	r0, [r7, #20]
1358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 3624              		.loc 1 1358 9
 3625 0032 05E0     		b	.L187
 3626              	.L185:
1359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART1:
1360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* get USART1 clock */
1361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         uclk = hals_rcu_clock_freq_get(CK_APB1);
 3627              		.loc 1 1361 16
 3628 0034 0220     		movs	r0, #2
 3629 0036 FFF7FEFF 		bl	hals_rcu_clock_freq_get
 3630 003a 7861     		str	r0, [r7, #20]
1362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 3631              		.loc 1 1362 9
 3632 003c 00E0     		b	.L187
 3633              	.L190:
1363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     default:
1364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 3634              		.loc 1 1364 9
 3635 003e 00BF     		nop
 3636              	.L187:
1365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(USART_CTL0(uart_periph) & USART_CTL0_OVSMOD) {
 3637              		.loc 1 1366 8
 3638 0040 7B68     		ldr	r3, [r7, #4]
 3639 0042 1B68     		ldr	r3, [r3]
 3640              		.loc 1 1366 32
 3641 0044 03F40043 		and	r3, r3, #32768
 3642              		.loc 1 1366 7
 3643 0048 002B     		cmp	r3, #0
 3644 004a 1CD0     		beq	.L188
1367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* oversampling by 8, configure the value of USART_BAUD */
1368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         udiv = ((2U * uclk) + (baudval / 2U)) / baudval;
 3645              		.loc 1 1368 21
 3646 004c 7B69     		ldr	r3, [r7, #20]
 3647 004e 5A00     		lsls	r2, r3, #1
 3648              		.loc 1 1368 40
 3649 0050 3B68     		ldr	r3, [r7]
 3650 0052 5B08     		lsrs	r3, r3, #1
 3651              		.loc 1 1368 29
 3652 0054 1A44     		add	r2, r2, r3
 3653              		.loc 1 1368 14
 3654 0056 3B68     		ldr	r3, [r7]
 3655 0058 B2FBF3F3 		udiv	r3, r2, r3
 3656 005c BB60     		str	r3, [r7, #8]
1369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         intdiv = udiv & 0x0000fff0U;
 3657              		.loc 1 1369 16
 3658 005e BA68     		ldr	r2, [r7, #8]
 3659 0060 4FF6F073 		movw	r3, #65520
 3660 0064 1340     		ands	r3, r3, r2
 3661 0066 3B61     		str	r3, [r7, #16]
1370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         fradiv = (udiv >> 1U) & 0x00000007U;
 3662              		.loc 1 1370 24
 3663 0068 BB68     		ldr	r3, [r7, #8]
 3664 006a 5B08     		lsrs	r3, r3, #1
 3665              		.loc 1 1370 16
 3666 006c 03F00703 		and	r3, r3, #7
 3667 0070 FB60     		str	r3, [r7, #12]
1371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_BAUD(uart_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 3668              		.loc 1 1371 86
 3669 0072 3A69     		ldr	r2, [r7, #16]
 3670 0074 FB68     		ldr	r3, [r7, #12]
 3671 0076 42EA0301 		orr	r1, r2, r3
 3672              		.loc 1 1371 9
 3673 007a 7B68     		ldr	r3, [r7, #4]
 3674 007c 0C33     		adds	r3, r3, #12
 3675 007e 1A46     		mov	r2, r3
 3676              		.loc 1 1371 76
 3677 0080 8BB2     		uxth	r3, r1
 3678              		.loc 1 1371 33
 3679 0082 1360     		str	r3, [r2]
1372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
1373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* oversampling by 16, configure the value of USART_BAUD */
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         udiv = (uclk + (baudval / 2U)) / baudval;
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         intdiv = udiv & 0x0000fff0U;
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         fradiv = udiv & 0x0000000fU;
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_BAUD(uart_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
1378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3680              		.loc 1 1379 1
 3681 0084 19E0     		b	.L191
 3682              	.L188:
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         intdiv = udiv & 0x0000fff0U;
 3683              		.loc 1 1374 33
 3684 0086 3B68     		ldr	r3, [r7]
 3685 0088 5A08     		lsrs	r2, r3, #1
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         intdiv = udiv & 0x0000fff0U;
 3686              		.loc 1 1374 22
 3687 008a 7B69     		ldr	r3, [r7, #20]
 3688 008c 1A44     		add	r2, r2, r3
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         intdiv = udiv & 0x0000fff0U;
 3689              		.loc 1 1374 14
 3690 008e 3B68     		ldr	r3, [r7]
 3691 0090 B2FBF3F3 		udiv	r3, r2, r3
 3692 0094 BB60     		str	r3, [r7, #8]
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         fradiv = udiv & 0x0000000fU;
 3693              		.loc 1 1375 16
 3694 0096 BA68     		ldr	r2, [r7, #8]
 3695 0098 4FF6F073 		movw	r3, #65520
 3696 009c 1340     		ands	r3, r3, r2
 3697 009e 3B61     		str	r3, [r7, #16]
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_BAUD(uart_periph) = ((USART_BAUD_FRADIV | USART_BAUD_INTDIV) & (intdiv | fradiv));
 3698              		.loc 1 1376 16
 3699 00a0 BB68     		ldr	r3, [r7, #8]
 3700 00a2 03F00F03 		and	r3, r3, #15
 3701 00a6 FB60     		str	r3, [r7, #12]
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 3702              		.loc 1 1377 86
 3703 00a8 3A69     		ldr	r2, [r7, #16]
 3704 00aa FB68     		ldr	r3, [r7, #12]
 3705 00ac 42EA0301 		orr	r1, r2, r3
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 3706              		.loc 1 1377 9
 3707 00b0 7B68     		ldr	r3, [r7, #4]
 3708 00b2 0C33     		adds	r3, r3, #12
 3709 00b4 1A46     		mov	r2, r3
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 3710              		.loc 1 1377 76
 3711 00b6 8BB2     		uxth	r3, r1
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 3712              		.loc 1 1377 33
 3713 00b8 1360     		str	r3, [r2]
 3714              	.L191:
 3715              		.loc 1 1379 1
 3716 00ba 00BF     		nop
 3717 00bc 1837     		adds	r7, r7, #24
 3718              		.cfi_def_cfa_offset 8
 3719 00be BD46     		mov	sp, r7
 3720              		.cfi_def_cfa_register 13
 3721              		@ sp needed
 3722 00c0 80BD     		pop	{r7, pc}
 3723              	.L193:
 3724 00c2 00BF     		.align	2
 3725              	.L192:
 3726 00c4 00440040 		.word	1073759232
 3727 00c8 00380140 		.word	1073821696
 3728              		.cfi_endproc
 3729              	.LFE136:
 3731              		.section	.text.hals_uart_parity_config,"ax",%progbits
 3732              		.align	1
 3733              		.global	hals_uart_parity_config
 3734              		.syntax unified
 3735              		.thumb
 3736              		.thumb_func
 3737              		.fpu softvfp
 3739              	hals_uart_parity_config:
 3740              	.LFB137:
1380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART parity
1383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  paritycfg: UART parity configure
1385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_PM_NONE: no parity
1387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_PM_ODD: odd parity
1388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_PM_EVEN: even parity
1389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_parity_config(uint32_t uart_periph, uint32_t paritycfg)
1393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3741              		.loc 1 1393 1
 3742              		.cfi_startproc
 3743              		@ args = 0, pretend = 0, frame = 8
 3744              		@ frame_needed = 1, uses_anonymous_args = 0
 3745              		@ link register save eliminated.
 3746 0000 80B4     		push	{r7}
 3747              		.cfi_def_cfa_offset 4
 3748              		.cfi_offset 7, -4
 3749 0002 83B0     		sub	sp, sp, #12
 3750              		.cfi_def_cfa_offset 16
 3751 0004 00AF     		add	r7, sp, #0
 3752              		.cfi_def_cfa_register 7
 3753 0006 7860     		str	r0, [r7, #4]
 3754 0008 3960     		str	r1, [r7]
1394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 3755              		.loc 1 1395 29
 3756 000a 7B68     		ldr	r3, [r7, #4]
 3757 000c 1A68     		ldr	r2, [r3]
 3758 000e 7B68     		ldr	r3, [r7, #4]
 3759 0010 22F00102 		bic	r2, r2, #1
 3760 0014 1A60     		str	r2, [r3]
1396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear USART_CTL0 PM,PCEN bits */
1397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_PM | USART_CTL0_PCEN);
 3761              		.loc 1 1397 29
 3762 0016 7B68     		ldr	r3, [r7, #4]
 3763 0018 1A68     		ldr	r2, [r3]
 3764 001a 7B68     		ldr	r3, [r7, #4]
 3765 001c 22F4C062 		bic	r2, r2, #1536
 3766 0020 1A60     		str	r2, [r3]
1398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure UART parity mode */
1399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= paritycfg;
 3767              		.loc 1 1399 29
 3768 0022 7B68     		ldr	r3, [r7, #4]
 3769 0024 1968     		ldr	r1, [r3]
 3770 0026 7B68     		ldr	r3, [r7, #4]
 3771 0028 3A68     		ldr	r2, [r7]
 3772 002a 0A43     		orrs	r2, r2, r1
 3773 002c 1A60     		str	r2, [r3]
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3774              		.loc 1 1400 1
 3775 002e 00BF     		nop
 3776 0030 0C37     		adds	r7, r7, #12
 3777              		.cfi_def_cfa_offset 4
 3778 0032 BD46     		mov	sp, r7
 3779              		.cfi_def_cfa_register 13
 3780              		@ sp needed
 3781 0034 80BC     		pop	{r7}
 3782              		.cfi_restore 7
 3783              		.cfi_def_cfa_offset 0
 3784 0036 7047     		bx	lr
 3785              		.cfi_endproc
 3786              	.LFE137:
 3788              		.section	.text.hals_uart_word_length_set,"ax",%progbits
 3789              		.align	1
 3790              		.global	hals_uart_word_length_set
 3791              		.syntax unified
 3792              		.thumb
 3793              		.thumb_func
 3794              		.fpu softvfp
 3796              	hals_uart_word_length_set:
 3797              	.LFB138:
1401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART word length
1404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  wlen: UART word length configure
1406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WL_8BIT: 8 bits
1408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WL_9BIT: 9 bits
1409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_word_length_set(uint32_t uart_periph, uint32_t wlen)
1413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3798              		.loc 1 1413 1
 3799              		.cfi_startproc
 3800              		@ args = 0, pretend = 0, frame = 8
 3801              		@ frame_needed = 1, uses_anonymous_args = 0
 3802              		@ link register save eliminated.
 3803 0000 80B4     		push	{r7}
 3804              		.cfi_def_cfa_offset 4
 3805              		.cfi_offset 7, -4
 3806 0002 83B0     		sub	sp, sp, #12
 3807              		.cfi_def_cfa_offset 16
 3808 0004 00AF     		add	r7, sp, #0
 3809              		.cfi_def_cfa_register 7
 3810 0006 7860     		str	r0, [r7, #4]
 3811 0008 3960     		str	r1, [r7]
1414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 3812              		.loc 1 1415 29
 3813 000a 7B68     		ldr	r3, [r7, #4]
 3814 000c 1A68     		ldr	r2, [r3]
 3815 000e 7B68     		ldr	r3, [r7, #4]
 3816 0010 22F00102 		bic	r2, r2, #1
 3817 0014 1A60     		str	r2, [r3]
1416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear USART_CTL0 WL bit */
1417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~USART_CTL0_WL;
 3818              		.loc 1 1417 29
 3819 0016 7B68     		ldr	r3, [r7, #4]
 3820 0018 1A68     		ldr	r2, [r3]
 3821 001a 7B68     		ldr	r3, [r7, #4]
 3822 001c 22F48052 		bic	r2, r2, #4096
 3823 0020 1A60     		str	r2, [r3]
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure UART word length */
1419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= wlen;
 3824              		.loc 1 1419 29
 3825 0022 7B68     		ldr	r3, [r7, #4]
 3826 0024 1968     		ldr	r1, [r3]
 3827 0026 7B68     		ldr	r3, [r7, #4]
 3828 0028 3A68     		ldr	r2, [r7]
 3829 002a 0A43     		orrs	r2, r2, r1
 3830 002c 1A60     		str	r2, [r3]
1420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3831              		.loc 1 1420 1
 3832 002e 00BF     		nop
 3833 0030 0C37     		adds	r7, r7, #12
 3834              		.cfi_def_cfa_offset 4
 3835 0032 BD46     		mov	sp, r7
 3836              		.cfi_def_cfa_register 13
 3837              		@ sp needed
 3838 0034 80BC     		pop	{r7}
 3839              		.cfi_restore 7
 3840              		.cfi_def_cfa_offset 0
 3841 0036 7047     		bx	lr
 3842              		.cfi_endproc
 3843              	.LFE138:
 3845              		.section	.text.hals_uart_stop_bit_set,"ax",%progbits
 3846              		.align	1
 3847              		.global	hals_uart_stop_bit_set
 3848              		.syntax unified
 3849              		.thumb
 3850              		.thumb_func
 3851              		.fpu softvfp
 3853              	hals_uart_stop_bit_set:
 3854              	.LFB139:
1421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART stop bit length
1424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  stblen: UART stop bit configure
1426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_STB_1BIT: 1 bit
1428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_STB_0_5BIT: 0.5bit
1429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_STB_2BIT: 2 bits
1430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_STB_1_5BIT: 1.5bit
1431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_stop_bit_set(uint32_t uart_periph, uint32_t stblen)
1435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3855              		.loc 1 1435 1
 3856              		.cfi_startproc
 3857              		@ args = 0, pretend = 0, frame = 8
 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859              		@ link register save eliminated.
 3860 0000 80B4     		push	{r7}
 3861              		.cfi_def_cfa_offset 4
 3862              		.cfi_offset 7, -4
 3863 0002 83B0     		sub	sp, sp, #12
 3864              		.cfi_def_cfa_offset 16
 3865 0004 00AF     		add	r7, sp, #0
 3866              		.cfi_def_cfa_register 7
 3867 0006 7860     		str	r0, [r7, #4]
 3868 0008 3960     		str	r1, [r7]
1436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 3869              		.loc 1 1437 29
 3870 000a 7B68     		ldr	r3, [r7, #4]
 3871 000c 1A68     		ldr	r2, [r3]
 3872 000e 7B68     		ldr	r3, [r7, #4]
 3873 0010 22F00102 		bic	r2, r2, #1
 3874 0014 1A60     		str	r2, [r3]
1438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear USART_CTL1 STB bits */
1439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~USART_CTL1_STB;
 3875              		.loc 1 1439 29
 3876 0016 7B68     		ldr	r3, [r7, #4]
 3877 0018 0433     		adds	r3, r3, #4
 3878 001a 1B68     		ldr	r3, [r3]
 3879 001c 7A68     		ldr	r2, [r7, #4]
 3880 001e 0432     		adds	r2, r2, #4
 3881 0020 23F44053 		bic	r3, r3, #12288
 3882 0024 1360     		str	r3, [r2]
1440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= stblen;
 3883              		.loc 1 1440 29
 3884 0026 7B68     		ldr	r3, [r7, #4]
 3885 0028 0433     		adds	r3, r3, #4
 3886 002a 1A68     		ldr	r2, [r3]
 3887 002c 7B68     		ldr	r3, [r7, #4]
 3888 002e 0433     		adds	r3, r3, #4
 3889 0030 1946     		mov	r1, r3
 3890 0032 3B68     		ldr	r3, [r7]
 3891 0034 1343     		orrs	r3, r3, r2
 3892 0036 0B60     		str	r3, [r1]
1441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3893              		.loc 1 1441 1
 3894 0038 00BF     		nop
 3895 003a 0C37     		adds	r7, r7, #12
 3896              		.cfi_def_cfa_offset 4
 3897 003c BD46     		mov	sp, r7
 3898              		.cfi_def_cfa_register 13
 3899              		@ sp needed
 3900 003e 80BC     		pop	{r7}
 3901              		.cfi_restore 7
 3902              		.cfi_def_cfa_offset 0
 3903 0040 7047     		bx	lr
 3904              		.cfi_endproc
 3905              	.LFE139:
 3907              		.section	.text.hals_uart_enable,"ax",%progbits
 3908              		.align	1
 3909              		.global	hals_uart_enable
 3910              		.syntax unified
 3911              		.thumb
 3912              		.thumb_func
 3913              		.fpu softvfp
 3915              	hals_uart_enable:
 3916              	.LFB140:
1442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable UART
1445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_enable(uint32_t uart_periph)
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3917              		.loc 1 1450 1
 3918              		.cfi_startproc
 3919              		@ args = 0, pretend = 0, frame = 8
 3920              		@ frame_needed = 1, uses_anonymous_args = 0
 3921              		@ link register save eliminated.
 3922 0000 80B4     		push	{r7}
 3923              		.cfi_def_cfa_offset 4
 3924              		.cfi_offset 7, -4
 3925 0002 83B0     		sub	sp, sp, #12
 3926              		.cfi_def_cfa_offset 16
 3927 0004 00AF     		add	r7, sp, #0
 3928              		.cfi_def_cfa_register 7
 3929 0006 7860     		str	r0, [r7, #4]
1451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= USART_CTL0_UEN;
 3930              		.loc 1 1451 29
 3931 0008 7B68     		ldr	r3, [r7, #4]
 3932 000a 1A68     		ldr	r2, [r3]
 3933 000c 7B68     		ldr	r3, [r7, #4]
 3934 000e 42F00102 		orr	r2, r2, #1
 3935 0012 1A60     		str	r2, [r3]
1452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3936              		.loc 1 1452 1
 3937 0014 00BF     		nop
 3938 0016 0C37     		adds	r7, r7, #12
 3939              		.cfi_def_cfa_offset 4
 3940 0018 BD46     		mov	sp, r7
 3941              		.cfi_def_cfa_register 13
 3942              		@ sp needed
 3943 001a 80BC     		pop	{r7}
 3944              		.cfi_restore 7
 3945              		.cfi_def_cfa_offset 0
 3946 001c 7047     		bx	lr
 3947              		.cfi_endproc
 3948              	.LFE140:
 3950              		.section	.text.hals_uart_disable,"ax",%progbits
 3951              		.align	1
 3952              		.global	hals_uart_disable
 3953              		.syntax unified
 3954              		.thumb
 3955              		.thumb_func
 3956              		.fpu softvfp
 3958              	hals_uart_disable:
 3959              	.LFB141:
1453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable UART
1456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_disable(uint32_t uart_periph)
1461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 3960              		.loc 1 1461 1
 3961              		.cfi_startproc
 3962              		@ args = 0, pretend = 0, frame = 8
 3963              		@ frame_needed = 1, uses_anonymous_args = 0
 3964              		@ link register save eliminated.
 3965 0000 80B4     		push	{r7}
 3966              		.cfi_def_cfa_offset 4
 3967              		.cfi_offset 7, -4
 3968 0002 83B0     		sub	sp, sp, #12
 3969              		.cfi_def_cfa_offset 16
 3970 0004 00AF     		add	r7, sp, #0
 3971              		.cfi_def_cfa_register 7
 3972 0006 7860     		str	r0, [r7, #4]
1462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 3973              		.loc 1 1462 29
 3974 0008 7B68     		ldr	r3, [r7, #4]
 3975 000a 1A68     		ldr	r2, [r3]
 3976 000c 7B68     		ldr	r3, [r7, #4]
 3977 000e 22F00102 		bic	r2, r2, #1
 3978 0012 1A60     		str	r2, [r3]
1463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 3979              		.loc 1 1463 1
 3980 0014 00BF     		nop
 3981 0016 0C37     		adds	r7, r7, #12
 3982              		.cfi_def_cfa_offset 4
 3983 0018 BD46     		mov	sp, r7
 3984              		.cfi_def_cfa_register 13
 3985              		@ sp needed
 3986 001a 80BC     		pop	{r7}
 3987              		.cfi_restore 7
 3988              		.cfi_def_cfa_offset 0
 3989 001c 7047     		bx	lr
 3990              		.cfi_endproc
 3991              	.LFE141:
 3993              		.section	.text.hals_uart_transmit_config,"ax",%progbits
 3994              		.align	1
 3995              		.global	hals_uart_transmit_config
 3996              		.syntax unified
 3997              		.thumb
 3998              		.thumb_func
 3999              		.fpu softvfp
 4001              	hals_uart_transmit_config:
 4002              	.LFB142:
1464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART transmitter
1467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  txconfig: enable or disable UART transmitter
1469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_TRANSMIT_ENABLE: enable UART transmission
1471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_TRANSMIT_DISABLE: enable UART transmission
1472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_transmit_config(uint32_t uart_periph, uint32_t txconfig)
1476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4003              		.loc 1 1476 1
 4004              		.cfi_startproc
 4005              		@ args = 0, pretend = 0, frame = 8
 4006              		@ frame_needed = 1, uses_anonymous_args = 0
 4007              		@ link register save eliminated.
 4008 0000 80B4     		push	{r7}
 4009              		.cfi_def_cfa_offset 4
 4010              		.cfi_offset 7, -4
 4011 0002 83B0     		sub	sp, sp, #12
 4012              		.cfi_def_cfa_offset 16
 4013 0004 00AF     		add	r7, sp, #0
 4014              		.cfi_def_cfa_register 7
 4015 0006 7860     		str	r0, [r7, #4]
 4016 0008 3960     		str	r1, [r7]
1477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~USART_CTL0_TEN;
 4017              		.loc 1 1477 29
 4018 000a 7B68     		ldr	r3, [r7, #4]
 4019 000c 1A68     		ldr	r2, [r3]
 4020 000e 7B68     		ldr	r3, [r7, #4]
 4021 0010 22F00802 		bic	r2, r2, #8
 4022 0014 1A60     		str	r2, [r3]
1478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure transfer mode */
1479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= txconfig;
 4023              		.loc 1 1479 29
 4024 0016 7B68     		ldr	r3, [r7, #4]
 4025 0018 1968     		ldr	r1, [r3]
 4026 001a 7B68     		ldr	r3, [r7, #4]
 4027 001c 3A68     		ldr	r2, [r7]
 4028 001e 0A43     		orrs	r2, r2, r1
 4029 0020 1A60     		str	r2, [r3]
1480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4030              		.loc 1 1480 1
 4031 0022 00BF     		nop
 4032 0024 0C37     		adds	r7, r7, #12
 4033              		.cfi_def_cfa_offset 4
 4034 0026 BD46     		mov	sp, r7
 4035              		.cfi_def_cfa_register 13
 4036              		@ sp needed
 4037 0028 80BC     		pop	{r7}
 4038              		.cfi_restore 7
 4039              		.cfi_def_cfa_offset 0
 4040 002a 7047     		bx	lr
 4041              		.cfi_endproc
 4042              	.LFE142:
 4044              		.section	.text.hals_uart_receive_config,"ax",%progbits
 4045              		.align	1
 4046              		.global	hals_uart_receive_config
 4047              		.syntax unified
 4048              		.thumb
 4049              		.thumb_func
 4050              		.fpu softvfp
 4052              	hals_uart_receive_config:
 4053              	.LFB143:
1481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART receiver
1484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  rxconfig: enable or disable UART receiver
1486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RECEIVE_ENABLE: enable UART reception
1488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RECEIVE_DISABLE: disable UART reception
1489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_receive_config(uint32_t uart_periph, uint32_t rxconfig)
1493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4054              		.loc 1 1493 1
 4055              		.cfi_startproc
 4056              		@ args = 0, pretend = 0, frame = 8
 4057              		@ frame_needed = 1, uses_anonymous_args = 0
 4058              		@ link register save eliminated.
 4059 0000 80B4     		push	{r7}
 4060              		.cfi_def_cfa_offset 4
 4061              		.cfi_offset 7, -4
 4062 0002 83B0     		sub	sp, sp, #12
 4063              		.cfi_def_cfa_offset 16
 4064 0004 00AF     		add	r7, sp, #0
 4065              		.cfi_def_cfa_register 7
 4066 0006 7860     		str	r0, [r7, #4]
 4067 0008 3960     		str	r1, [r7]
1494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~USART_CTL0_REN;
 4068              		.loc 1 1494 29
 4069 000a 7B68     		ldr	r3, [r7, #4]
 4070 000c 1A68     		ldr	r2, [r3]
 4071 000e 7B68     		ldr	r3, [r7, #4]
 4072 0010 22F00402 		bic	r2, r2, #4
 4073 0014 1A60     		str	r2, [r3]
1495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure receiver mode */
1496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= rxconfig;
 4074              		.loc 1 1496 29
 4075 0016 7B68     		ldr	r3, [r7, #4]
 4076 0018 1968     		ldr	r1, [r3]
 4077 001a 7B68     		ldr	r3, [r7, #4]
 4078 001c 3A68     		ldr	r2, [r7]
 4079 001e 0A43     		orrs	r2, r2, r1
 4080 0020 1A60     		str	r2, [r3]
1497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4081              		.loc 1 1497 1
 4082 0022 00BF     		nop
 4083 0024 0C37     		adds	r7, r7, #12
 4084              		.cfi_def_cfa_offset 4
 4085 0026 BD46     		mov	sp, r7
 4086              		.cfi_def_cfa_register 13
 4087              		@ sp needed
 4088 0028 80BC     		pop	{r7}
 4089              		.cfi_restore 7
 4090              		.cfi_def_cfa_offset 0
 4091 002a 7047     		bx	lr
 4092              		.cfi_endproc
 4093              	.LFE143:
 4095              		.section	.text.hals_uart_data_first_config,"ax",%progbits
 4096              		.align	1
 4097              		.global	hals_uart_data_first_config
 4098              		.syntax unified
 4099              		.thumb
 4100              		.thumb_func
 4101              		.fpu softvfp
 4103              	hals_uart_data_first_config:
 4104              	.LFB144:
1498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      data is transmitted/received with the LSB/MSB first
1501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  msbf: LSB/MSB
1503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_MSBF_LSB: LSB first
1505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_MSBF_MSB: MSB first
1506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_data_first_config(uint32_t uart_periph, uint32_t msbf)
1510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4105              		.loc 1 1510 1
 4106              		.cfi_startproc
 4107              		@ args = 0, pretend = 0, frame = 8
 4108              		@ frame_needed = 1, uses_anonymous_args = 0
 4109              		@ link register save eliminated.
 4110 0000 80B4     		push	{r7}
 4111              		.cfi_def_cfa_offset 4
 4112              		.cfi_offset 7, -4
 4113 0002 83B0     		sub	sp, sp, #12
 4114              		.cfi_def_cfa_offset 16
 4115 0004 00AF     		add	r7, sp, #0
 4116              		.cfi_def_cfa_register 7
 4117 0006 7860     		str	r0, [r7, #4]
 4118 0008 3960     		str	r1, [r7]
1511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4119              		.loc 1 1511 29
 4120 000a 7B68     		ldr	r3, [r7, #4]
 4121 000c 1A68     		ldr	r2, [r3]
 4122 000e 7B68     		ldr	r3, [r7, #4]
 4123 0010 22F00102 		bic	r2, r2, #1
 4124 0014 1A60     		str	r2, [r3]
1512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* configure LSB or MSB first */
1513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~(USART_CTL1_MSBF);
 4125              		.loc 1 1513 29
 4126 0016 7B68     		ldr	r3, [r7, #4]
 4127 0018 0433     		adds	r3, r3, #4
 4128 001a 1B68     		ldr	r3, [r3]
 4129 001c 7A68     		ldr	r2, [r7, #4]
 4130 001e 0432     		adds	r2, r2, #4
 4131 0020 23F40023 		bic	r3, r3, #524288
 4132 0024 1360     		str	r3, [r2]
1514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= msbf;
 4133              		.loc 1 1514 29
 4134 0026 7B68     		ldr	r3, [r7, #4]
 4135 0028 0433     		adds	r3, r3, #4
 4136 002a 1A68     		ldr	r2, [r3]
 4137 002c 7B68     		ldr	r3, [r7, #4]
 4138 002e 0433     		adds	r3, r3, #4
 4139 0030 1946     		mov	r1, r3
 4140 0032 3B68     		ldr	r3, [r7]
 4141 0034 1343     		orrs	r3, r3, r2
 4142 0036 0B60     		str	r3, [r1]
1515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4143              		.loc 1 1515 1
 4144 0038 00BF     		nop
 4145 003a 0C37     		adds	r7, r7, #12
 4146              		.cfi_def_cfa_offset 4
 4147 003c BD46     		mov	sp, r7
 4148              		.cfi_def_cfa_register 13
 4149              		@ sp needed
 4150 003e 80BC     		pop	{r7}
 4151              		.cfi_restore 7
 4152              		.cfi_def_cfa_offset 0
 4153 0040 7047     		bx	lr
 4154              		.cfi_endproc
 4155              	.LFE144:
 4157              		.section	.text.hals_uart_invert_config,"ax",%progbits
 4158              		.align	1
 4159              		.global	hals_uart_invert_config
 4160              		.syntax unified
 4161              		.thumb
 4162              		.thumb_func
 4163              		.fpu softvfp
 4165              	hals_uart_invert_config:
 4166              	.LFB145:
1516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART inversion
1519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  invertpara: refer to usart_invert_enum
1521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_DINV_ENABLE: data bit level inversion
1523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_DINV_DISABLE: data bit level not inversion
1524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_TXPIN_ENABLE: TX pin level inversion
1525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_TXPIN_DISABLE: TX pin level not inversion
1526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RXPIN_ENABLE: RX pin level inversion
1527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RXPIN_DISABLE: RX pin level not inversion
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_SWAP_ENABLE: swap TX/RX pins
1529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_SWAP_DISABLE: not swap TX/RX pins
1530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_invert_config(uint32_t uart_periph, usart_invert_enum invertpara)
1534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4167              		.loc 1 1534 1
 4168              		.cfi_startproc
 4169              		@ args = 0, pretend = 0, frame = 8
 4170              		@ frame_needed = 1, uses_anonymous_args = 0
 4171              		@ link register save eliminated.
 4172 0000 80B4     		push	{r7}
 4173              		.cfi_def_cfa_offset 4
 4174              		.cfi_offset 7, -4
 4175 0002 83B0     		sub	sp, sp, #12
 4176              		.cfi_def_cfa_offset 16
 4177 0004 00AF     		add	r7, sp, #0
 4178              		.cfi_def_cfa_register 7
 4179 0006 7860     		str	r0, [r7, #4]
 4180 0008 0B46     		mov	r3, r1
 4181 000a FB70     		strb	r3, [r7, #3]
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4182              		.loc 1 1535 29
 4183 000c 7B68     		ldr	r3, [r7, #4]
 4184 000e 1A68     		ldr	r2, [r3]
 4185 0010 7B68     		ldr	r3, [r7, #4]
 4186 0012 22F00102 		bic	r2, r2, #1
 4187 0016 1A60     		str	r2, [r3]
1536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* inverted or not the specified signal */
1537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     switch(invertpara) {
 4188              		.loc 1 1537 5
 4189 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4190 001a 072B     		cmp	r3, #7
 4191 001c 5AD8     		bhi	.L214
 4192 001e 01A2     		adr	r2, .L205
 4193 0020 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4194              		.p2align 2
 4195              	.L205:
 4196 0024 45000000 		.word	.L212+1
 4197 0028 57000000 		.word	.L211+1
 4198 002c 69000000 		.word	.L210+1
 4199 0030 7B000000 		.word	.L209+1
 4200 0034 8D000000 		.word	.L208+1
 4201 0038 9F000000 		.word	.L207+1
 4202 003c B1000000 		.word	.L206+1
 4203 0040 C3000000 		.word	.L204+1
 4204              		.p2align 1
 4205              	.L212:
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_DINV_ENABLE:
1539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) |= USART_CTL1_DINV;
 4206              		.loc 1 1539 33
 4207 0044 7B68     		ldr	r3, [r7, #4]
 4208 0046 0433     		adds	r3, r3, #4
 4209 0048 1B68     		ldr	r3, [r3]
 4210 004a 7A68     		ldr	r2, [r7, #4]
 4211 004c 0432     		adds	r2, r2, #4
 4212 004e 43F48023 		orr	r3, r3, #262144
 4213 0052 1360     		str	r3, [r2]
1540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4214              		.loc 1 1540 9
 4215 0054 3FE0     		b	.L213
 4216              	.L211:
1541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_DINV_DISABLE:
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) &= ~(USART_CTL1_DINV);
 4217              		.loc 1 1542 33
 4218 0056 7B68     		ldr	r3, [r7, #4]
 4219 0058 0433     		adds	r3, r3, #4
 4220 005a 1B68     		ldr	r3, [r3]
 4221 005c 7A68     		ldr	r2, [r7, #4]
 4222 005e 0432     		adds	r2, r2, #4
 4223 0060 23F48023 		bic	r3, r3, #262144
 4224 0064 1360     		str	r3, [r2]
1543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4225              		.loc 1 1543 9
 4226 0066 36E0     		b	.L213
 4227              	.L210:
1544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_TXPIN_ENABLE:
1545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) |= USART_CTL1_TINV;
 4228              		.loc 1 1545 33
 4229 0068 7B68     		ldr	r3, [r7, #4]
 4230 006a 0433     		adds	r3, r3, #4
 4231 006c 1B68     		ldr	r3, [r3]
 4232 006e 7A68     		ldr	r2, [r7, #4]
 4233 0070 0432     		adds	r2, r2, #4
 4234 0072 43F40033 		orr	r3, r3, #131072
 4235 0076 1360     		str	r3, [r2]
1546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4236              		.loc 1 1546 9
 4237 0078 2DE0     		b	.L213
 4238              	.L209:
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_TXPIN_DISABLE:
1548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) &= ~(USART_CTL1_TINV);
 4239              		.loc 1 1548 33
 4240 007a 7B68     		ldr	r3, [r7, #4]
 4241 007c 0433     		adds	r3, r3, #4
 4242 007e 1B68     		ldr	r3, [r3]
 4243 0080 7A68     		ldr	r2, [r7, #4]
 4244 0082 0432     		adds	r2, r2, #4
 4245 0084 23F40033 		bic	r3, r3, #131072
 4246 0088 1360     		str	r3, [r2]
1549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4247              		.loc 1 1549 9
 4248 008a 24E0     		b	.L213
 4249              	.L208:
1550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_RXPIN_ENABLE:
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) |= USART_CTL1_RINV;
 4250              		.loc 1 1551 33
 4251 008c 7B68     		ldr	r3, [r7, #4]
 4252 008e 0433     		adds	r3, r3, #4
 4253 0090 1B68     		ldr	r3, [r3]
 4254 0092 7A68     		ldr	r2, [r7, #4]
 4255 0094 0432     		adds	r2, r2, #4
 4256 0096 43F48033 		orr	r3, r3, #65536
 4257 009a 1360     		str	r3, [r2]
1552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4258              		.loc 1 1552 9
 4259 009c 1BE0     		b	.L213
 4260              	.L207:
1553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_RXPIN_DISABLE:
1554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) &= ~(USART_CTL1_RINV);
 4261              		.loc 1 1554 33
 4262 009e 7B68     		ldr	r3, [r7, #4]
 4263 00a0 0433     		adds	r3, r3, #4
 4264 00a2 1B68     		ldr	r3, [r3]
 4265 00a4 7A68     		ldr	r2, [r7, #4]
 4266 00a6 0432     		adds	r2, r2, #4
 4267 00a8 23F48033 		bic	r3, r3, #65536
 4268 00ac 1360     		str	r3, [r2]
1555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4269              		.loc 1 1555 9
 4270 00ae 12E0     		b	.L213
 4271              	.L206:
1556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_SWAP_ENABLE:
1557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) |= USART_CTL1_STRP;
 4272              		.loc 1 1557 33
 4273 00b0 7B68     		ldr	r3, [r7, #4]
 4274 00b2 0433     		adds	r3, r3, #4
 4275 00b4 1B68     		ldr	r3, [r3]
 4276 00b6 7A68     		ldr	r2, [r7, #4]
 4277 00b8 0432     		adds	r2, r2, #4
 4278 00ba 43F40043 		orr	r3, r3, #32768
 4279 00be 1360     		str	r3, [r2]
1558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4280              		.loc 1 1558 9
 4281 00c0 09E0     		b	.L213
 4282              	.L204:
1559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     case USART_SWAP_DISABLE:
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_CTL1(uart_periph) &= ~(USART_CTL1_STRP);
 4283              		.loc 1 1560 33
 4284 00c2 7B68     		ldr	r3, [r7, #4]
 4285 00c4 0433     		adds	r3, r3, #4
 4286 00c6 1B68     		ldr	r3, [r3]
 4287 00c8 7A68     		ldr	r2, [r7, #4]
 4288 00ca 0432     		adds	r2, r2, #4
 4289 00cc 23F40043 		bic	r3, r3, #32768
 4290 00d0 1360     		str	r3, [r2]
1561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4291              		.loc 1 1561 9
 4292 00d2 00E0     		b	.L213
 4293              	.L214:
1562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     default:
1563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         break;
 4294              		.loc 1 1563 9
 4295 00d4 00BF     		nop
 4296              	.L213:
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
1565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4297              		.loc 1 1565 1
 4298 00d6 00BF     		nop
 4299 00d8 0C37     		adds	r7, r7, #12
 4300              		.cfi_def_cfa_offset 4
 4301 00da BD46     		mov	sp, r7
 4302              		.cfi_def_cfa_register 13
 4303              		@ sp needed
 4304 00dc 80BC     		pop	{r7}
 4305              		.cfi_restore 7
 4306              		.cfi_def_cfa_offset 0
 4307 00de 7047     		bx	lr
 4308              		.cfi_endproc
 4309              	.LFE145:
 4311              		.section	.text.hals_uart_overrun_enable,"ax",%progbits
 4312              		.align	1
 4313              		.global	hals_uart_overrun_enable
 4314              		.syntax unified
 4315              		.thumb
 4316              		.thumb_func
 4317              		.fpu softvfp
 4319              	hals_uart_overrun_enable:
 4320              	.LFB146:
1566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable the UART overrun function
1569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_overrun_enable(uint32_t uart_periph)
1574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4321              		.loc 1 1574 1
 4322              		.cfi_startproc
 4323              		@ args = 0, pretend = 0, frame = 8
 4324              		@ frame_needed = 1, uses_anonymous_args = 0
 4325              		@ link register save eliminated.
 4326 0000 80B4     		push	{r7}
 4327              		.cfi_def_cfa_offset 4
 4328              		.cfi_offset 7, -4
 4329 0002 83B0     		sub	sp, sp, #12
 4330              		.cfi_def_cfa_offset 16
 4331 0004 00AF     		add	r7, sp, #0
 4332              		.cfi_def_cfa_register 7
 4333 0006 7860     		str	r0, [r7, #4]
1575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4334              		.loc 1 1575 29
 4335 0008 7B68     		ldr	r3, [r7, #4]
 4336 000a 1A68     		ldr	r2, [r3]
 4337 000c 7B68     		ldr	r3, [r7, #4]
 4338 000e 22F00102 		bic	r2, r2, #1
 4339 0012 1A60     		str	r2, [r3]
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* enable overrun function */
1577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_OVRD);
 4340              		.loc 1 1577 29
 4341 0014 7B68     		ldr	r3, [r7, #4]
 4342 0016 0833     		adds	r3, r3, #8
 4343 0018 1B68     		ldr	r3, [r3]
 4344 001a 7A68     		ldr	r2, [r7, #4]
 4345 001c 0832     		adds	r2, r2, #8
 4346 001e 23F48053 		bic	r3, r3, #4096
 4347 0022 1360     		str	r3, [r2]
1578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4348              		.loc 1 1578 1
 4349 0024 00BF     		nop
 4350 0026 0C37     		adds	r7, r7, #12
 4351              		.cfi_def_cfa_offset 4
 4352 0028 BD46     		mov	sp, r7
 4353              		.cfi_def_cfa_register 13
 4354              		@ sp needed
 4355 002a 80BC     		pop	{r7}
 4356              		.cfi_restore 7
 4357              		.cfi_def_cfa_offset 0
 4358 002c 7047     		bx	lr
 4359              		.cfi_endproc
 4360              	.LFE146:
 4362              		.section	.text.hals_uart_overrun_disable,"ax",%progbits
 4363              		.align	1
 4364              		.global	hals_uart_overrun_disable
 4365              		.syntax unified
 4366              		.thumb
 4367              		.thumb_func
 4368              		.fpu softvfp
 4370              	hals_uart_overrun_disable:
 4371              	.LFB147:
1579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable the UART overrun function
1582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_overrun_disable(uint32_t uart_periph)
1587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4372              		.loc 1 1587 1
 4373              		.cfi_startproc
 4374              		@ args = 0, pretend = 0, frame = 8
 4375              		@ frame_needed = 1, uses_anonymous_args = 0
 4376              		@ link register save eliminated.
 4377 0000 80B4     		push	{r7}
 4378              		.cfi_def_cfa_offset 4
 4379              		.cfi_offset 7, -4
 4380 0002 83B0     		sub	sp, sp, #12
 4381              		.cfi_def_cfa_offset 16
 4382 0004 00AF     		add	r7, sp, #0
 4383              		.cfi_def_cfa_register 7
 4384 0006 7860     		str	r0, [r7, #4]
1588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4385              		.loc 1 1588 29
 4386 0008 7B68     		ldr	r3, [r7, #4]
 4387 000a 1A68     		ldr	r2, [r3]
 4388 000c 7B68     		ldr	r3, [r7, #4]
 4389 000e 22F00102 		bic	r2, r2, #1
 4390 0012 1A60     		str	r2, [r3]
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable overrun function */
1590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= USART_CTL2_OVRD;
 4391              		.loc 1 1590 29
 4392 0014 7B68     		ldr	r3, [r7, #4]
 4393 0016 0833     		adds	r3, r3, #8
 4394 0018 1B68     		ldr	r3, [r3]
 4395 001a 7A68     		ldr	r2, [r7, #4]
 4396 001c 0832     		adds	r2, r2, #8
 4397 001e 43F48053 		orr	r3, r3, #4096
 4398 0022 1360     		str	r3, [r2]
1591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4399              		.loc 1 1591 1
 4400 0024 00BF     		nop
 4401 0026 0C37     		adds	r7, r7, #12
 4402              		.cfi_def_cfa_offset 4
 4403 0028 BD46     		mov	sp, r7
 4404              		.cfi_def_cfa_register 13
 4405              		@ sp needed
 4406 002a 80BC     		pop	{r7}
 4407              		.cfi_restore 7
 4408              		.cfi_def_cfa_offset 0
 4409 002c 7047     		bx	lr
 4410              		.cfi_endproc
 4411              	.LFE147:
 4413              		.section	.text.hals_uart_oversample_config,"ax",%progbits
 4414              		.align	1
 4415              		.global	hals_uart_oversample_config
 4416              		.syntax unified
 4417              		.thumb
 4418              		.thumb_func
 4419              		.fpu softvfp
 4421              	hals_uart_oversample_config:
 4422              	.LFB148:
1592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure the UART oversample mode
1595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  oversamp: oversample value
1597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_OVSMOD_8: oversampling by 8
1599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_OVSMOD_16: oversampling by 16
1600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_oversample_config(uint32_t uart_periph, uint32_t oversamp)
1604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4423              		.loc 1 1604 1
 4424              		.cfi_startproc
 4425              		@ args = 0, pretend = 0, frame = 8
 4426              		@ frame_needed = 1, uses_anonymous_args = 0
 4427              		@ link register save eliminated.
 4428 0000 80B4     		push	{r7}
 4429              		.cfi_def_cfa_offset 4
 4430              		.cfi_offset 7, -4
 4431 0002 83B0     		sub	sp, sp, #12
 4432              		.cfi_def_cfa_offset 16
 4433 0004 00AF     		add	r7, sp, #0
 4434              		.cfi_def_cfa_register 7
 4435 0006 7860     		str	r0, [r7, #4]
 4436 0008 3960     		str	r1, [r7]
1605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4437              		.loc 1 1606 29
 4438 000a 7B68     		ldr	r3, [r7, #4]
 4439 000c 1A68     		ldr	r2, [r3]
 4440 000e 7B68     		ldr	r3, [r7, #4]
 4441 0010 22F00102 		bic	r2, r2, #1
 4442 0014 1A60     		str	r2, [r3]
1607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* clear OVSMOD bit */
1608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_OVSMOD);
 4443              		.loc 1 1608 29
 4444 0016 7B68     		ldr	r3, [r7, #4]
 4445 0018 1A68     		ldr	r2, [r3]
 4446 001a 7B68     		ldr	r3, [r7, #4]
 4447 001c 22F40042 		bic	r2, r2, #32768
 4448 0020 1A60     		str	r2, [r3]
1609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= oversamp;
 4449              		.loc 1 1609 29
 4450 0022 7B68     		ldr	r3, [r7, #4]
 4451 0024 1968     		ldr	r1, [r3]
 4452 0026 7B68     		ldr	r3, [r7, #4]
 4453 0028 3A68     		ldr	r2, [r7]
 4454 002a 0A43     		orrs	r2, r2, r1
 4455 002c 1A60     		str	r2, [r3]
1610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4456              		.loc 1 1610 1
 4457 002e 00BF     		nop
 4458 0030 0C37     		adds	r7, r7, #12
 4459              		.cfi_def_cfa_offset 4
 4460 0032 BD46     		mov	sp, r7
 4461              		.cfi_def_cfa_register 13
 4462              		@ sp needed
 4463 0034 80BC     		pop	{r7}
 4464              		.cfi_restore 7
 4465              		.cfi_def_cfa_offset 0
 4466 0036 7047     		bx	lr
 4467              		.cfi_endproc
 4468              	.LFE148:
 4470              		.section	.text.hals_uart_sample_bit_config,"ax",%progbits
 4471              		.align	1
 4472              		.global	hals_uart_sample_bit_config
 4473              		.syntax unified
 4474              		.thumb
 4475              		.thumb_func
 4476              		.fpu softvfp
 4478              	hals_uart_sample_bit_config:
 4479              	.LFB149:
1611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure the sample bit method
1614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  osb: sample bit
1616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_OSB_1BIT: 1 bit
1618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_OSB_3BIT: 3 bits
1619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_sample_bit_config(uint32_t uart_periph, uint32_t osb)
1623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4480              		.loc 1 1623 1
 4481              		.cfi_startproc
 4482              		@ args = 0, pretend = 0, frame = 8
 4483              		@ frame_needed = 1, uses_anonymous_args = 0
 4484              		@ link register save eliminated.
 4485 0000 80B4     		push	{r7}
 4486              		.cfi_def_cfa_offset 4
 4487              		.cfi_offset 7, -4
 4488 0002 83B0     		sub	sp, sp, #12
 4489              		.cfi_def_cfa_offset 16
 4490 0004 00AF     		add	r7, sp, #0
 4491              		.cfi_def_cfa_register 7
 4492 0006 7860     		str	r0, [r7, #4]
 4493 0008 3960     		str	r1, [r7]
1624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4494              		.loc 1 1625 29
 4495 000a 7B68     		ldr	r3, [r7, #4]
 4496 000c 1A68     		ldr	r2, [r3]
 4497 000e 7B68     		ldr	r3, [r7, #4]
 4498 0010 22F00102 		bic	r2, r2, #1
 4499 0014 1A60     		str	r2, [r3]
1626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_OSB);
 4500              		.loc 1 1627 29
 4501 0016 7B68     		ldr	r3, [r7, #4]
 4502 0018 0833     		adds	r3, r3, #8
 4503 001a 1B68     		ldr	r3, [r3]
 4504 001c 7A68     		ldr	r2, [r7, #4]
 4505 001e 0832     		adds	r2, r2, #8
 4506 0020 23F40063 		bic	r3, r3, #2048
 4507 0024 1360     		str	r3, [r2]
1628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= osb;
 4508              		.loc 1 1628 29
 4509 0026 7B68     		ldr	r3, [r7, #4]
 4510 0028 0833     		adds	r3, r3, #8
 4511 002a 1A68     		ldr	r2, [r3]
 4512 002c 7B68     		ldr	r3, [r7, #4]
 4513 002e 0833     		adds	r3, r3, #8
 4514 0030 1946     		mov	r1, r3
 4515 0032 3B68     		ldr	r3, [r7]
 4516 0034 1343     		orrs	r3, r3, r2
 4517 0036 0B60     		str	r3, [r1]
1629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4518              		.loc 1 1629 1
 4519 0038 00BF     		nop
 4520 003a 0C37     		adds	r7, r7, #12
 4521              		.cfi_def_cfa_offset 4
 4522 003c BD46     		mov	sp, r7
 4523              		.cfi_def_cfa_register 13
 4524              		@ sp needed
 4525 003e 80BC     		pop	{r7}
 4526              		.cfi_restore 7
 4527              		.cfi_def_cfa_offset 0
 4528 0040 7047     		bx	lr
 4529              		.cfi_endproc
 4530              	.LFE149:
 4532              		.section	.text.hals_uart_receiver_timeout_enable,"ax",%progbits
 4533              		.align	1
 4534              		.global	hals_uart_receiver_timeout_enable
 4535              		.syntax unified
 4536              		.thumb
 4537              		.thumb_func
 4538              		.fpu softvfp
 4540              	hals_uart_receiver_timeout_enable:
 4541              	.LFB150:
1630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable receiver timeout
1633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
1634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_receiver_timeout_enable(uint32_t uart_periph)
1638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4542              		.loc 1 1638 1
 4543              		.cfi_startproc
 4544              		@ args = 0, pretend = 0, frame = 8
 4545              		@ frame_needed = 1, uses_anonymous_args = 0
 4546              		@ link register save eliminated.
 4547 0000 80B4     		push	{r7}
 4548              		.cfi_def_cfa_offset 4
 4549              		.cfi_offset 7, -4
 4550 0002 83B0     		sub	sp, sp, #12
 4551              		.cfi_def_cfa_offset 16
 4552 0004 00AF     		add	r7, sp, #0
 4553              		.cfi_def_cfa_register 7
 4554 0006 7860     		str	r0, [r7, #4]
1639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= USART_CTL1_RTEN;
 4555              		.loc 1 1639 29
 4556 0008 7B68     		ldr	r3, [r7, #4]
 4557 000a 0433     		adds	r3, r3, #4
 4558 000c 1B68     		ldr	r3, [r3]
 4559 000e 7A68     		ldr	r2, [r7, #4]
 4560 0010 0432     		adds	r2, r2, #4
 4561 0012 43F40003 		orr	r3, r3, #8388608
 4562 0016 1360     		str	r3, [r2]
1640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4563              		.loc 1 1640 1
 4564 0018 00BF     		nop
 4565 001a 0C37     		adds	r7, r7, #12
 4566              		.cfi_def_cfa_offset 4
 4567 001c BD46     		mov	sp, r7
 4568              		.cfi_def_cfa_register 13
 4569              		@ sp needed
 4570 001e 80BC     		pop	{r7}
 4571              		.cfi_restore 7
 4572              		.cfi_def_cfa_offset 0
 4573 0020 7047     		bx	lr
 4574              		.cfi_endproc
 4575              	.LFE150:
 4577              		.section	.text.hals_uart_receiver_timeout_disable,"ax",%progbits
 4578              		.align	1
 4579              		.global	hals_uart_receiver_timeout_disable
 4580              		.syntax unified
 4581              		.thumb
 4582              		.thumb_func
 4583              		.fpu softvfp
 4585              	hals_uart_receiver_timeout_disable:
 4586              	.LFB151:
1641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable receiver timeout
1644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
1645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_receiver_timeout_disable(uint32_t uart_periph)
1649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4587              		.loc 1 1649 1
 4588              		.cfi_startproc
 4589              		@ args = 0, pretend = 0, frame = 8
 4590              		@ frame_needed = 1, uses_anonymous_args = 0
 4591              		@ link register save eliminated.
 4592 0000 80B4     		push	{r7}
 4593              		.cfi_def_cfa_offset 4
 4594              		.cfi_offset 7, -4
 4595 0002 83B0     		sub	sp, sp, #12
 4596              		.cfi_def_cfa_offset 16
 4597 0004 00AF     		add	r7, sp, #0
 4598              		.cfi_def_cfa_register 7
 4599 0006 7860     		str	r0, [r7, #4]
1650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~(USART_CTL1_RTEN);
 4600              		.loc 1 1650 29
 4601 0008 7B68     		ldr	r3, [r7, #4]
 4602 000a 0433     		adds	r3, r3, #4
 4603 000c 1B68     		ldr	r3, [r3]
 4604 000e 7A68     		ldr	r2, [r7, #4]
 4605 0010 0432     		adds	r2, r2, #4
 4606 0012 23F40003 		bic	r3, r3, #8388608
 4607 0016 1360     		str	r3, [r2]
1651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4608              		.loc 1 1651 1
 4609 0018 00BF     		nop
 4610 001a 0C37     		adds	r7, r7, #12
 4611              		.cfi_def_cfa_offset 4
 4612 001c BD46     		mov	sp, r7
 4613              		.cfi_def_cfa_register 13
 4614              		@ sp needed
 4615 001e 80BC     		pop	{r7}
 4616              		.cfi_restore 7
 4617              		.cfi_def_cfa_offset 0
 4618 0020 7047     		bx	lr
 4619              		.cfi_endproc
 4620              	.LFE151:
 4622              		.section	.text.hals_uart_receiver_timeout_threshold_config,"ax",%progbits
 4623              		.align	1
 4624              		.global	hals_uart_receiver_timeout_threshold_config
 4625              		.syntax unified
 4626              		.thumb
 4627              		.thumb_func
 4628              		.fpu softvfp
 4630              	hals_uart_receiver_timeout_threshold_config:
 4631              	.LFB152:
1652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure receiver timeout threshold
1655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
1656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  rtimeout: 0x00000000-0x00FFFFFF, receiver timeout value in terms of number of baud 
1657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_receiver_timeout_threshold_config(uint32_t uart_periph, uint32_t rtimeout)
1661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4632              		.loc 1 1661 1
 4633              		.cfi_startproc
 4634              		@ args = 0, pretend = 0, frame = 8
 4635              		@ frame_needed = 1, uses_anonymous_args = 0
 4636              		@ link register save eliminated.
 4637 0000 80B4     		push	{r7}
 4638              		.cfi_def_cfa_offset 4
 4639              		.cfi_offset 7, -4
 4640 0002 83B0     		sub	sp, sp, #12
 4641              		.cfi_def_cfa_offset 16
 4642 0004 00AF     		add	r7, sp, #0
 4643              		.cfi_def_cfa_register 7
 4644 0006 7860     		str	r0, [r7, #4]
 4645 0008 3960     		str	r1, [r7]
1662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_RT(uart_periph) &= ~(USART_RT_RT);
 4646              		.loc 1 1662 27
 4647 000a 7B68     		ldr	r3, [r7, #4]
 4648 000c 1433     		adds	r3, r3, #20
 4649 000e 1B68     		ldr	r3, [r3]
 4650 0010 7A68     		ldr	r2, [r7, #4]
 4651 0012 1432     		adds	r2, r2, #20
 4652 0014 03F07F43 		and	r3, r3, #-16777216
 4653 0018 1360     		str	r3, [r2]
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_RT(uart_periph) |= rtimeout;
 4654              		.loc 1 1663 27
 4655 001a 7B68     		ldr	r3, [r7, #4]
 4656 001c 1433     		adds	r3, r3, #20
 4657 001e 1A68     		ldr	r2, [r3]
 4658 0020 7B68     		ldr	r3, [r7, #4]
 4659 0022 1433     		adds	r3, r3, #20
 4660 0024 1946     		mov	r1, r3
 4661 0026 3B68     		ldr	r3, [r7]
 4662 0028 1343     		orrs	r3, r3, r2
 4663 002a 0B60     		str	r3, [r1]
1664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4664              		.loc 1 1664 1
 4665 002c 00BF     		nop
 4666 002e 0C37     		adds	r7, r7, #12
 4667              		.cfi_def_cfa_offset 4
 4668 0030 BD46     		mov	sp, r7
 4669              		.cfi_def_cfa_register 13
 4670              		@ sp needed
 4671 0032 80BC     		pop	{r7}
 4672              		.cfi_restore 7
 4673              		.cfi_def_cfa_offset 0
 4674 0034 7047     		bx	lr
 4675              		.cfi_endproc
 4676              	.LFE152:
 4678              		.section	.text.hals_uart_data_transmit,"ax",%progbits
 4679              		.align	1
 4680              		.global	hals_uart_data_transmit
 4681              		.syntax unified
 4682              		.thumb
 4683              		.thumb_func
 4684              		.fpu softvfp
 4686              	hals_uart_data_transmit:
 4687              	.LFB153:
1665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      UART transmit data function
1668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  data: data of transmission
1670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_data_transmit(uint32_t uart_periph, uint16_t data)
1674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4688              		.loc 1 1674 1
 4689              		.cfi_startproc
 4690              		@ args = 0, pretend = 0, frame = 8
 4691              		@ frame_needed = 1, uses_anonymous_args = 0
 4692              		@ link register save eliminated.
 4693 0000 80B4     		push	{r7}
 4694              		.cfi_def_cfa_offset 4
 4695              		.cfi_offset 7, -4
 4696 0002 83B0     		sub	sp, sp, #12
 4697              		.cfi_def_cfa_offset 16
 4698 0004 00AF     		add	r7, sp, #0
 4699              		.cfi_def_cfa_register 7
 4700 0006 7860     		str	r0, [r7, #4]
 4701 0008 0B46     		mov	r3, r1
 4702 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_TDATA(uart_periph) = (USART_TDATA_TDATA & (uint32_t)data);
 4703              		.loc 1 1675 51
 4704 000c 7B88     		ldrh	r3, [r7, #2]
 4705              		.loc 1 1675 5
 4706 000e 7A68     		ldr	r2, [r7, #4]
 4707 0010 2832     		adds	r2, r2, #40
 4708              		.loc 1 1675 51
 4709 0012 C3F30803 		ubfx	r3, r3, #0, #9
 4710              		.loc 1 1675 30
 4711 0016 1360     		str	r3, [r2]
1676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4712              		.loc 1 1676 1
 4713 0018 00BF     		nop
 4714 001a 0C37     		adds	r7, r7, #12
 4715              		.cfi_def_cfa_offset 4
 4716 001c BD46     		mov	sp, r7
 4717              		.cfi_def_cfa_register 13
 4718              		@ sp needed
 4719 001e 80BC     		pop	{r7}
 4720              		.cfi_restore 7
 4721              		.cfi_def_cfa_offset 0
 4722 0020 7047     		bx	lr
 4723              		.cfi_endproc
 4724              	.LFE153:
 4726              		.section	.text.hals_uart_data_receive,"ax",%progbits
 4727              		.align	1
 4728              		.global	hals_uart_data_receive
 4729              		.syntax unified
 4730              		.thumb
 4731              		.thumb_func
 4732              		.fpu softvfp
 4734              	hals_uart_data_receive:
 4735              	.LFB154:
1677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      UART receive data function
1680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     data of received
1683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** uint16_t hals_uart_data_receive(uint32_t uart_periph)
1685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4736              		.loc 1 1685 1
 4737              		.cfi_startproc
 4738              		@ args = 0, pretend = 0, frame = 8
 4739              		@ frame_needed = 1, uses_anonymous_args = 0
 4740              		@ link register save eliminated.
 4741 0000 80B4     		push	{r7}
 4742              		.cfi_def_cfa_offset 4
 4743              		.cfi_offset 7, -4
 4744 0002 83B0     		sub	sp, sp, #12
 4745              		.cfi_def_cfa_offset 16
 4746 0004 00AF     		add	r7, sp, #0
 4747              		.cfi_def_cfa_register 7
 4748 0006 7860     		str	r0, [r7, #4]
1686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return (uint16_t)(GET_BITS(USART_RDATA(uart_periph), 0U, 8U));
 4749              		.loc 1 1686 23
 4750 0008 7B68     		ldr	r3, [r7, #4]
 4751 000a 2433     		adds	r3, r3, #36
 4752 000c 1B68     		ldr	r3, [r3]
 4753              		.loc 1 1686 12
 4754 000e 9BB2     		uxth	r3, r3
 4755 0010 C3F30803 		ubfx	r3, r3, #0, #9
 4756 0014 9BB2     		uxth	r3, r3
1687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4757              		.loc 1 1687 1
 4758 0016 1846     		mov	r0, r3
 4759 0018 0C37     		adds	r7, r7, #12
 4760              		.cfi_def_cfa_offset 4
 4761 001a BD46     		mov	sp, r7
 4762              		.cfi_def_cfa_register 13
 4763              		@ sp needed
 4764 001c 80BC     		pop	{r7}
 4765              		.cfi_restore 7
 4766              		.cfi_def_cfa_offset 0
 4767 001e 7047     		bx	lr
 4768              		.cfi_endproc
 4769              	.LFE154:
 4771              		.section	.text.hals_uart_command_enable,"ax",%progbits
 4772              		.align	1
 4773              		.global	hals_uart_command_enable
 4774              		.syntax unified
 4775              		.thumb
 4776              		.thumb_func
 4777              		.fpu softvfp
 4779              	hals_uart_command_enable:
 4780              	.LFB155:
1688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable UART command
1691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1,2)
1692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  cmdtype: command type
1693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_CMD_SBKCMD: send break command
1695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_CMD_MMCMD: mute mode command
1696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_CMD_RXFCMD: receive data flush command
1697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_CMD_TXFCMD: transmit data flush request
1698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_command_enable(uint32_t uart_periph, uint32_t cmdtype)
1702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4781              		.loc 1 1702 1
 4782              		.cfi_startproc
 4783              		@ args = 0, pretend = 0, frame = 8
 4784              		@ frame_needed = 1, uses_anonymous_args = 0
 4785              		@ link register save eliminated.
 4786 0000 80B4     		push	{r7}
 4787              		.cfi_def_cfa_offset 4
 4788              		.cfi_offset 7, -4
 4789 0002 83B0     		sub	sp, sp, #12
 4790              		.cfi_def_cfa_offset 16
 4791 0004 00AF     		add	r7, sp, #0
 4792              		.cfi_def_cfa_register 7
 4793 0006 7860     		str	r0, [r7, #4]
 4794 0008 3960     		str	r1, [r7]
1703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CMD(uart_periph) |= (cmdtype);
 4795              		.loc 1 1703 28
 4796 000a 7B68     		ldr	r3, [r7, #4]
 4797 000c 1833     		adds	r3, r3, #24
 4798 000e 1A68     		ldr	r2, [r3]
 4799 0010 7B68     		ldr	r3, [r7, #4]
 4800 0012 1833     		adds	r3, r3, #24
 4801 0014 1946     		mov	r1, r3
 4802 0016 3B68     		ldr	r3, [r7]
 4803 0018 1343     		orrs	r3, r3, r2
 4804 001a 0B60     		str	r3, [r1]
1704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4805              		.loc 1 1704 1
 4806 001c 00BF     		nop
 4807 001e 0C37     		adds	r7, r7, #12
 4808              		.cfi_def_cfa_offset 4
 4809 0020 BD46     		mov	sp, r7
 4810              		.cfi_def_cfa_register 13
 4811              		@ sp needed
 4812 0022 80BC     		pop	{r7}
 4813              		.cfi_restore 7
 4814              		.cfi_def_cfa_offset 0
 4815 0024 7047     		bx	lr
 4816              		.cfi_endproc
 4817              	.LFE155:
 4819              		.section	.text.hals_uart_address_config,"ax",%progbits
 4820              		.align	1
 4821              		.global	hals_uart_address_config
 4822              		.syntax unified
 4823              		.thumb
 4824              		.thumb_func
 4825              		.fpu softvfp
 4827              	hals_uart_address_config:
 4828              	.LFB156:
1705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure the address of the UART in wake up by address match mode
1708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  addr: 0x00-0xFF, address of UART terminal
1710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_address_config(uint32_t uart_periph, uint8_t addr)
1714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4829              		.loc 1 1714 1
 4830              		.cfi_startproc
 4831              		@ args = 0, pretend = 0, frame = 8
 4832              		@ frame_needed = 1, uses_anonymous_args = 0
 4833              		@ link register save eliminated.
 4834 0000 80B4     		push	{r7}
 4835              		.cfi_def_cfa_offset 4
 4836              		.cfi_offset 7, -4
 4837 0002 83B0     		sub	sp, sp, #12
 4838              		.cfi_def_cfa_offset 16
 4839 0004 00AF     		add	r7, sp, #0
 4840              		.cfi_def_cfa_register 7
 4841 0006 7860     		str	r0, [r7, #4]
 4842 0008 0B46     		mov	r3, r1
 4843 000a FB70     		strb	r3, [r7, #3]
1715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4844              		.loc 1 1716 29
 4845 000c 7B68     		ldr	r3, [r7, #4]
 4846 000e 1A68     		ldr	r2, [r3]
 4847 0010 7B68     		ldr	r3, [r7, #4]
 4848 0012 22F00102 		bic	r2, r2, #1
 4849 0016 1A60     		str	r2, [r3]
1717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~(USART_CTL1_ADDR);
 4850              		.loc 1 1718 29
 4851 0018 7B68     		ldr	r3, [r7, #4]
 4852 001a 0433     		adds	r3, r3, #4
 4853 001c 1B68     		ldr	r3, [r3]
 4854 001e 7A68     		ldr	r2, [r7, #4]
 4855 0020 0432     		adds	r2, r2, #4
 4856 0022 23F07F43 		bic	r3, r3, #-16777216
 4857 0026 1360     		str	r3, [r2]
1719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= (USART_CTL1_ADDR & (((uint32_t)addr) << CTL1_ADDR_OFFSET));
 4858              		.loc 1 1719 29
 4859 0028 7B68     		ldr	r3, [r7, #4]
 4860 002a 0433     		adds	r3, r3, #4
 4861 002c 1A68     		ldr	r2, [r3]
 4862              		.loc 1 1719 53
 4863 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4864              		.loc 1 1719 49
 4865 0030 1B06     		lsls	r3, r3, #24
 4866              		.loc 1 1719 29
 4867 0032 7968     		ldr	r1, [r7, #4]
 4868 0034 0431     		adds	r1, r1, #4
 4869 0036 1343     		orrs	r3, r3, r2
 4870 0038 0B60     		str	r3, [r1]
1720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4871              		.loc 1 1720 1
 4872 003a 00BF     		nop
 4873 003c 0C37     		adds	r7, r7, #12
 4874              		.cfi_def_cfa_offset 4
 4875 003e BD46     		mov	sp, r7
 4876              		.cfi_def_cfa_register 13
 4877              		@ sp needed
 4878 0040 80BC     		pop	{r7}
 4879              		.cfi_restore 7
 4880              		.cfi_def_cfa_offset 0
 4881 0042 7047     		bx	lr
 4882              		.cfi_endproc
 4883              	.LFE156:
 4885              		.section	.text.hals_uart_address_detection_mode_config,"ax",%progbits
 4886              		.align	1
 4887              		.global	hals_uart_address_detection_mode_config
 4888              		.syntax unified
 4889              		.thumb
 4890              		.thumb_func
 4891              		.fpu softvfp
 4893              	hals_uart_address_detection_mode_config:
 4894              	.LFB157:
1721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure address detection mode
1724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  addmod: address detection mode
1726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_ADDM_4BIT: 4 bits
1728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_ADDM_FULLBIT: full bits
1729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_address_detection_mode_config(uint32_t uart_periph, uint32_t addmod)
1733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4895              		.loc 1 1733 1
 4896              		.cfi_startproc
 4897              		@ args = 0, pretend = 0, frame = 8
 4898              		@ frame_needed = 1, uses_anonymous_args = 0
 4899              		@ link register save eliminated.
 4900 0000 80B4     		push	{r7}
 4901              		.cfi_def_cfa_offset 4
 4902              		.cfi_offset 7, -4
 4903 0002 83B0     		sub	sp, sp, #12
 4904              		.cfi_def_cfa_offset 16
 4905 0004 00AF     		add	r7, sp, #0
 4906              		.cfi_def_cfa_register 7
 4907 0006 7860     		str	r0, [r7, #4]
 4908 0008 3960     		str	r1, [r7]
1734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 4909              		.loc 1 1735 29
 4910 000a 7B68     		ldr	r3, [r7, #4]
 4911 000c 1A68     		ldr	r2, [r3]
 4912 000e 7B68     		ldr	r3, [r7, #4]
 4913 0010 22F00102 		bic	r2, r2, #1
 4914 0014 1A60     		str	r2, [r3]
1736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~(USART_CTL1_ADDM);
 4915              		.loc 1 1737 29
 4916 0016 7B68     		ldr	r3, [r7, #4]
 4917 0018 0433     		adds	r3, r3, #4
 4918 001a 1B68     		ldr	r3, [r3]
 4919 001c 7A68     		ldr	r2, [r7, #4]
 4920 001e 0432     		adds	r2, r2, #4
 4921 0020 23F01003 		bic	r3, r3, #16
 4922 0024 1360     		str	r3, [r2]
1738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= USART_CTL1_ADDM & (addmod);
 4923              		.loc 1 1738 29
 4924 0026 7B68     		ldr	r3, [r7, #4]
 4925 0028 0433     		adds	r3, r3, #4
 4926 002a 1A68     		ldr	r2, [r3]
 4927              		.loc 1 1738 48
 4928 002c 3B68     		ldr	r3, [r7]
 4929 002e 03F01003 		and	r3, r3, #16
 4930              		.loc 1 1738 29
 4931 0032 7968     		ldr	r1, [r7, #4]
 4932 0034 0431     		adds	r1, r1, #4
 4933 0036 1343     		orrs	r3, r3, r2
 4934 0038 0B60     		str	r3, [r1]
1739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4935              		.loc 1 1739 1
 4936 003a 00BF     		nop
 4937 003c 0C37     		adds	r7, r7, #12
 4938              		.cfi_def_cfa_offset 4
 4939 003e BD46     		mov	sp, r7
 4940              		.cfi_def_cfa_register 13
 4941              		@ sp needed
 4942 0040 80BC     		pop	{r7}
 4943              		.cfi_restore 7
 4944              		.cfi_def_cfa_offset 0
 4945 0042 7047     		bx	lr
 4946              		.cfi_endproc
 4947              	.LFE157:
 4949              		.section	.text.hals_uart_mute_mode_enable,"ax",%progbits
 4950              		.align	1
 4951              		.global	hals_uart_mute_mode_enable
 4952              		.syntax unified
 4953              		.thumb
 4954              		.thumb_func
 4955              		.fpu softvfp
 4957              	hals_uart_mute_mode_enable:
 4958              	.LFB158:
1740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable mute mode
1743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_mute_mode_enable(uint32_t uart_periph)
1748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 4959              		.loc 1 1748 1
 4960              		.cfi_startproc
 4961              		@ args = 0, pretend = 0, frame = 8
 4962              		@ frame_needed = 1, uses_anonymous_args = 0
 4963              		@ link register save eliminated.
 4964 0000 80B4     		push	{r7}
 4965              		.cfi_def_cfa_offset 4
 4966              		.cfi_offset 7, -4
 4967 0002 83B0     		sub	sp, sp, #12
 4968              		.cfi_def_cfa_offset 16
 4969 0004 00AF     		add	r7, sp, #0
 4970              		.cfi_def_cfa_register 7
 4971 0006 7860     		str	r0, [r7, #4]
1749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= USART_CTL0_MEN;
 4972              		.loc 1 1749 29
 4973 0008 7B68     		ldr	r3, [r7, #4]
 4974 000a 1A68     		ldr	r2, [r3]
 4975 000c 7B68     		ldr	r3, [r7, #4]
 4976 000e 42F40052 		orr	r2, r2, #8192
 4977 0012 1A60     		str	r2, [r3]
1750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 4978              		.loc 1 1750 1
 4979 0014 00BF     		nop
 4980 0016 0C37     		adds	r7, r7, #12
 4981              		.cfi_def_cfa_offset 4
 4982 0018 BD46     		mov	sp, r7
 4983              		.cfi_def_cfa_register 13
 4984              		@ sp needed
 4985 001a 80BC     		pop	{r7}
 4986              		.cfi_restore 7
 4987              		.cfi_def_cfa_offset 0
 4988 001c 7047     		bx	lr
 4989              		.cfi_endproc
 4990              	.LFE158:
 4992              		.section	.text.hals_uart_mute_mode_disable,"ax",%progbits
 4993              		.align	1
 4994              		.global	hals_uart_mute_mode_disable
 4995              		.syntax unified
 4996              		.thumb
 4997              		.thumb_func
 4998              		.fpu softvfp
 5000              	hals_uart_mute_mode_disable:
 5001              	.LFB159:
1751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable mute mode
1754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_mute_mode_disable(uint32_t uart_periph)
1759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5002              		.loc 1 1759 1
 5003              		.cfi_startproc
 5004              		@ args = 0, pretend = 0, frame = 8
 5005              		@ frame_needed = 1, uses_anonymous_args = 0
 5006              		@ link register save eliminated.
 5007 0000 80B4     		push	{r7}
 5008              		.cfi_def_cfa_offset 4
 5009              		.cfi_offset 7, -4
 5010 0002 83B0     		sub	sp, sp, #12
 5011              		.cfi_def_cfa_offset 16
 5012 0004 00AF     		add	r7, sp, #0
 5013              		.cfi_def_cfa_register 7
 5014 0006 7860     		str	r0, [r7, #4]
1760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_MEN);
 5015              		.loc 1 1760 29
 5016 0008 7B68     		ldr	r3, [r7, #4]
 5017 000a 1A68     		ldr	r2, [r3]
 5018 000c 7B68     		ldr	r3, [r7, #4]
 5019 000e 22F40052 		bic	r2, r2, #8192
 5020 0012 1A60     		str	r2, [r3]
1761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5021              		.loc 1 1761 1
 5022 0014 00BF     		nop
 5023 0016 0C37     		adds	r7, r7, #12
 5024              		.cfi_def_cfa_offset 4
 5025 0018 BD46     		mov	sp, r7
 5026              		.cfi_def_cfa_register 13
 5027              		@ sp needed
 5028 001a 80BC     		pop	{r7}
 5029              		.cfi_restore 7
 5030              		.cfi_def_cfa_offset 0
 5031 001c 7047     		bx	lr
 5032              		.cfi_endproc
 5033              	.LFE159:
 5035              		.section	.text.hals_uart_mute_mode_wakeup_config,"ax",%progbits
 5036              		.align	1
 5037              		.global	hals_uart_mute_mode_wakeup_config
 5038              		.syntax unified
 5039              		.thumb
 5040              		.thumb_func
 5041              		.fpu softvfp
 5043              	hals_uart_mute_mode_wakeup_config:
 5044              	.LFB160:
1762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure wakeup method in mute mode
1765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  wmethod: two methods be used to enter or exit the mute mode
1767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WM_IDLE: idle line
1769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WM_ADDR: address match
1770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_mute_mode_wakeup_config(uint32_t uart_periph, uint32_t wmethod)
1774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5045              		.loc 1 1774 1
 5046              		.cfi_startproc
 5047              		@ args = 0, pretend = 0, frame = 8
 5048              		@ frame_needed = 1, uses_anonymous_args = 0
 5049              		@ link register save eliminated.
 5050 0000 80B4     		push	{r7}
 5051              		.cfi_def_cfa_offset 4
 5052              		.cfi_offset 7, -4
 5053 0002 83B0     		sub	sp, sp, #12
 5054              		.cfi_def_cfa_offset 16
 5055 0004 00AF     		add	r7, sp, #0
 5056              		.cfi_def_cfa_register 7
 5057 0006 7860     		str	r0, [r7, #4]
 5058 0008 3960     		str	r1, [r7]
1775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5059              		.loc 1 1776 29
 5060 000a 7B68     		ldr	r3, [r7, #4]
 5061 000c 1A68     		ldr	r2, [r3]
 5062 000e 7B68     		ldr	r3, [r7, #4]
 5063 0010 22F00102 		bic	r2, r2, #1
 5064 0014 1A60     		str	r2, [r3]
1777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_WM);
 5065              		.loc 1 1778 29
 5066 0016 7B68     		ldr	r3, [r7, #4]
 5067 0018 1A68     		ldr	r2, [r3]
 5068 001a 7B68     		ldr	r3, [r7, #4]
 5069 001c 22F40062 		bic	r2, r2, #2048
 5070 0020 1A60     		str	r2, [r3]
1779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= wmethod;
 5071              		.loc 1 1779 29
 5072 0022 7B68     		ldr	r3, [r7, #4]
 5073 0024 1968     		ldr	r1, [r3]
 5074 0026 7B68     		ldr	r3, [r7, #4]
 5075 0028 3A68     		ldr	r2, [r7]
 5076 002a 0A43     		orrs	r2, r2, r1
 5077 002c 1A60     		str	r2, [r3]
1780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5078              		.loc 1 1780 1
 5079 002e 00BF     		nop
 5080 0030 0C37     		adds	r7, r7, #12
 5081              		.cfi_def_cfa_offset 4
 5082 0032 BD46     		mov	sp, r7
 5083              		.cfi_def_cfa_register 13
 5084              		@ sp needed
 5085 0034 80BC     		pop	{r7}
 5086              		.cfi_restore 7
 5087              		.cfi_def_cfa_offset 0
 5088 0036 7047     		bx	lr
 5089              		.cfi_endproc
 5090              	.LFE160:
 5092              		.section	.text.hals_uart_lin_mode_enable,"ax",%progbits
 5093              		.align	1
 5094              		.global	hals_uart_lin_mode_enable
 5095              		.syntax unified
 5096              		.thumb
 5097              		.thumb_func
 5098              		.fpu softvfp
 5100              	hals_uart_lin_mode_enable:
 5101              	.LFB161:
1781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable LIN mode
1784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
1785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_lin_mode_enable(uint32_t uart_periph)
1789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5102              		.loc 1 1789 1
 5103              		.cfi_startproc
 5104              		@ args = 0, pretend = 0, frame = 8
 5105              		@ frame_needed = 1, uses_anonymous_args = 0
 5106              		@ link register save eliminated.
 5107 0000 80B4     		push	{r7}
 5108              		.cfi_def_cfa_offset 4
 5109              		.cfi_offset 7, -4
 5110 0002 83B0     		sub	sp, sp, #12
 5111              		.cfi_def_cfa_offset 16
 5112 0004 00AF     		add	r7, sp, #0
 5113              		.cfi_def_cfa_register 7
 5114 0006 7860     		str	r0, [r7, #4]
1790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5115              		.loc 1 1791 29
 5116 0008 7B68     		ldr	r3, [r7, #4]
 5117 000a 1A68     		ldr	r2, [r3]
 5118 000c 7B68     		ldr	r3, [r7, #4]
 5119 000e 22F00102 		bic	r2, r2, #1
 5120 0012 1A60     		str	r2, [r3]
1792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= USART_CTL1_LMEN;
 5121              		.loc 1 1793 29
 5122 0014 7B68     		ldr	r3, [r7, #4]
 5123 0016 0433     		adds	r3, r3, #4
 5124 0018 1B68     		ldr	r3, [r3]
 5125 001a 7A68     		ldr	r2, [r7, #4]
 5126 001c 0432     		adds	r2, r2, #4
 5127 001e 43F48043 		orr	r3, r3, #16384
 5128 0022 1360     		str	r3, [r2]
1794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5129              		.loc 1 1794 1
 5130 0024 00BF     		nop
 5131 0026 0C37     		adds	r7, r7, #12
 5132              		.cfi_def_cfa_offset 4
 5133 0028 BD46     		mov	sp, r7
 5134              		.cfi_def_cfa_register 13
 5135              		@ sp needed
 5136 002a 80BC     		pop	{r7}
 5137              		.cfi_restore 7
 5138              		.cfi_def_cfa_offset 0
 5139 002c 7047     		bx	lr
 5140              		.cfi_endproc
 5141              	.LFE161:
 5143              		.section	.text.hals_uart_lin_mode_disable,"ax",%progbits
 5144              		.align	1
 5145              		.global	hals_uart_lin_mode_disable
 5146              		.syntax unified
 5147              		.thumb
 5148              		.thumb_func
 5149              		.fpu softvfp
 5151              	hals_uart_lin_mode_disable:
 5152              	.LFB162:
1795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable LIN mode
1798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
1799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_lin_mode_disable(uint32_t uart_periph)
1803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5153              		.loc 1 1803 1
 5154              		.cfi_startproc
 5155              		@ args = 0, pretend = 0, frame = 8
 5156              		@ frame_needed = 1, uses_anonymous_args = 0
 5157              		@ link register save eliminated.
 5158 0000 80B4     		push	{r7}
 5159              		.cfi_def_cfa_offset 4
 5160              		.cfi_offset 7, -4
 5161 0002 83B0     		sub	sp, sp, #12
 5162              		.cfi_def_cfa_offset 16
 5163 0004 00AF     		add	r7, sp, #0
 5164              		.cfi_def_cfa_register 7
 5165 0006 7860     		str	r0, [r7, #4]
1804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5166              		.loc 1 1805 29
 5167 0008 7B68     		ldr	r3, [r7, #4]
 5168 000a 1A68     		ldr	r2, [r3]
 5169 000c 7B68     		ldr	r3, [r7, #4]
 5170 000e 22F00102 		bic	r2, r2, #1
 5171 0012 1A60     		str	r2, [r3]
1806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~(USART_CTL1_LMEN);
 5172              		.loc 1 1807 29
 5173 0014 7B68     		ldr	r3, [r7, #4]
 5174 0016 0433     		adds	r3, r3, #4
 5175 0018 1B68     		ldr	r3, [r3]
 5176 001a 7A68     		ldr	r2, [r7, #4]
 5177 001c 0432     		adds	r2, r2, #4
 5178 001e 23F48043 		bic	r3, r3, #16384
 5179 0022 1360     		str	r3, [r2]
1808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5180              		.loc 1 1808 1
 5181 0024 00BF     		nop
 5182 0026 0C37     		adds	r7, r7, #12
 5183              		.cfi_def_cfa_offset 4
 5184 0028 BD46     		mov	sp, r7
 5185              		.cfi_def_cfa_register 13
 5186              		@ sp needed
 5187 002a 80BC     		pop	{r7}
 5188              		.cfi_restore 7
 5189              		.cfi_def_cfa_offset 0
 5190 002c 7047     		bx	lr
 5191              		.cfi_endproc
 5192              	.LFE162:
 5194              		.section	.text.hals_uart_lin_break_detection_length_config,"ax",%progbits
 5195              		.align	1
 5196              		.global	hals_uart_lin_break_detection_length_config
 5197              		.syntax unified
 5198              		.thumb
 5199              		.thumb_func
 5200              		.fpu softvfp
 5202              	hals_uart_lin_break_detection_length_config:
 5203              	.LFB163:
1809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure LIN break frame length
1812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
1813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  lblen: LIN break detection length
1814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_LBLEN_10B: 10 bits break detection
1816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_LBLEN_11B: 11 bits break detection
1817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_lin_break_detection_length_config(uint32_t uart_periph, uint32_t lblen)
1821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5204              		.loc 1 1821 1
 5205              		.cfi_startproc
 5206              		@ args = 0, pretend = 0, frame = 8
 5207              		@ frame_needed = 1, uses_anonymous_args = 0
 5208              		@ link register save eliminated.
 5209 0000 80B4     		push	{r7}
 5210              		.cfi_def_cfa_offset 4
 5211              		.cfi_offset 7, -4
 5212 0002 83B0     		sub	sp, sp, #12
 5213              		.cfi_def_cfa_offset 16
 5214 0004 00AF     		add	r7, sp, #0
 5215              		.cfi_def_cfa_register 7
 5216 0006 7860     		str	r0, [r7, #4]
 5217 0008 3960     		str	r1, [r7]
1822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5218              		.loc 1 1823 29
 5219 000a 7B68     		ldr	r3, [r7, #4]
 5220 000c 1A68     		ldr	r2, [r3]
 5221 000e 7B68     		ldr	r3, [r7, #4]
 5222 0010 22F00102 		bic	r2, r2, #1
 5223 0014 1A60     		str	r2, [r3]
1824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) &= ~(USART_CTL1_LBLEN);
 5224              		.loc 1 1824 29
 5225 0016 7B68     		ldr	r3, [r7, #4]
 5226 0018 0433     		adds	r3, r3, #4
 5227 001a 1B68     		ldr	r3, [r3]
 5228 001c 7A68     		ldr	r2, [r7, #4]
 5229 001e 0432     		adds	r2, r2, #4
 5230 0020 23F02003 		bic	r3, r3, #32
 5231 0024 1360     		str	r3, [r2]
1825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL1(uart_periph) |= USART_CTL1_LBLEN & (lblen);
 5232              		.loc 1 1825 29
 5233 0026 7B68     		ldr	r3, [r7, #4]
 5234 0028 0433     		adds	r3, r3, #4
 5235 002a 1A68     		ldr	r2, [r3]
 5236              		.loc 1 1825 49
 5237 002c 3B68     		ldr	r3, [r7]
 5238 002e 03F02003 		and	r3, r3, #32
 5239              		.loc 1 1825 29
 5240 0032 7968     		ldr	r1, [r7, #4]
 5241 0034 0431     		adds	r1, r1, #4
 5242 0036 1343     		orrs	r3, r3, r2
 5243 0038 0B60     		str	r3, [r1]
1826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5244              		.loc 1 1826 1
 5245 003a 00BF     		nop
 5246 003c 0C37     		adds	r7, r7, #12
 5247              		.cfi_def_cfa_offset 4
 5248 003e BD46     		mov	sp, r7
 5249              		.cfi_def_cfa_register 13
 5250              		@ sp needed
 5251 0040 80BC     		pop	{r7}
 5252              		.cfi_restore 7
 5253              		.cfi_def_cfa_offset 0
 5254 0042 7047     		bx	lr
 5255              		.cfi_endproc
 5256              	.LFE163:
 5258              		.section	.text.hals_uart_halfduplex_enable,"ax",%progbits
 5259              		.align	1
 5260              		.global	hals_uart_halfduplex_enable
 5261              		.syntax unified
 5262              		.thumb
 5263              		.thumb_func
 5264              		.fpu softvfp
 5266              	hals_uart_halfduplex_enable:
 5267              	.LFB164:
1827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable half-duplex mode
1830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_halfduplex_enable(uint32_t uart_periph)
1835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5268              		.loc 1 1835 1
 5269              		.cfi_startproc
 5270              		@ args = 0, pretend = 0, frame = 8
 5271              		@ frame_needed = 1, uses_anonymous_args = 0
 5272              		@ link register save eliminated.
 5273 0000 80B4     		push	{r7}
 5274              		.cfi_def_cfa_offset 4
 5275              		.cfi_offset 7, -4
 5276 0002 83B0     		sub	sp, sp, #12
 5277              		.cfi_def_cfa_offset 16
 5278 0004 00AF     		add	r7, sp, #0
 5279              		.cfi_def_cfa_register 7
 5280 0006 7860     		str	r0, [r7, #4]
1836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5281              		.loc 1 1837 29
 5282 0008 7B68     		ldr	r3, [r7, #4]
 5283 000a 1A68     		ldr	r2, [r3]
 5284 000c 7B68     		ldr	r3, [r7, #4]
 5285 000e 22F00102 		bic	r2, r2, #1
 5286 0012 1A60     		str	r2, [r3]
1838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= USART_CTL2_HDEN;
 5287              		.loc 1 1839 29
 5288 0014 7B68     		ldr	r3, [r7, #4]
 5289 0016 0833     		adds	r3, r3, #8
 5290 0018 1B68     		ldr	r3, [r3]
 5291 001a 7A68     		ldr	r2, [r7, #4]
 5292 001c 0832     		adds	r2, r2, #8
 5293 001e 43F00803 		orr	r3, r3, #8
 5294 0022 1360     		str	r3, [r2]
1840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5295              		.loc 1 1840 1
 5296 0024 00BF     		nop
 5297 0026 0C37     		adds	r7, r7, #12
 5298              		.cfi_def_cfa_offset 4
 5299 0028 BD46     		mov	sp, r7
 5300              		.cfi_def_cfa_register 13
 5301              		@ sp needed
 5302 002a 80BC     		pop	{r7}
 5303              		.cfi_restore 7
 5304              		.cfi_def_cfa_offset 0
 5305 002c 7047     		bx	lr
 5306              		.cfi_endproc
 5307              	.LFE164:
 5309              		.section	.text.hals_uart_halfduplex_disable,"ax",%progbits
 5310              		.align	1
 5311              		.global	hals_uart_halfduplex_disable
 5312              		.syntax unified
 5313              		.thumb
 5314              		.thumb_func
 5315              		.fpu softvfp
 5317              	hals_uart_halfduplex_disable:
 5318              	.LFB165:
1841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable half-duplex mode
1844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_halfduplex_disable(uint32_t uart_periph)
1849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5319              		.loc 1 1849 1
 5320              		.cfi_startproc
 5321              		@ args = 0, pretend = 0, frame = 8
 5322              		@ frame_needed = 1, uses_anonymous_args = 0
 5323              		@ link register save eliminated.
 5324 0000 80B4     		push	{r7}
 5325              		.cfi_def_cfa_offset 4
 5326              		.cfi_offset 7, -4
 5327 0002 83B0     		sub	sp, sp, #12
 5328              		.cfi_def_cfa_offset 16
 5329 0004 00AF     		add	r7, sp, #0
 5330              		.cfi_def_cfa_register 7
 5331 0006 7860     		str	r0, [r7, #4]
1850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5332              		.loc 1 1851 29
 5333 0008 7B68     		ldr	r3, [r7, #4]
 5334 000a 1A68     		ldr	r2, [r3]
 5335 000c 7B68     		ldr	r3, [r7, #4]
 5336 000e 22F00102 		bic	r2, r2, #1
 5337 0012 1A60     		str	r2, [r3]
1852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_HDEN);
 5338              		.loc 1 1853 29
 5339 0014 7B68     		ldr	r3, [r7, #4]
 5340 0016 0833     		adds	r3, r3, #8
 5341 0018 1B68     		ldr	r3, [r3]
 5342 001a 7A68     		ldr	r2, [r7, #4]
 5343 001c 0832     		adds	r2, r2, #8
 5344 001e 23F00803 		bic	r3, r3, #8
 5345 0022 1360     		str	r3, [r2]
1854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5346              		.loc 1 1854 1
 5347 0024 00BF     		nop
 5348 0026 0C37     		adds	r7, r7, #12
 5349              		.cfi_def_cfa_offset 4
 5350 0028 BD46     		mov	sp, r7
 5351              		.cfi_def_cfa_register 13
 5352              		@ sp needed
 5353 002a 80BC     		pop	{r7}
 5354              		.cfi_restore 7
 5355              		.cfi_def_cfa_offset 0
 5356 002c 7047     		bx	lr
 5357              		.cfi_endproc
 5358              	.LFE165:
 5360              		.section	.text.hals_uart_hardware_flow_rts_config,"ax",%progbits
 5361              		.align	1
 5362              		.global	hals_uart_hardware_flow_rts_config
 5363              		.syntax unified
 5364              		.thumb
 5365              		.thumb_func
 5366              		.fpu softvfp
 5368              	hals_uart_hardware_flow_rts_config:
 5369              	.LFB166:
1855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure hardware flow control RTS
1858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  usart_periph: USARTx(x=0,1)
1859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  rtsconfig: enable or disable RTS
1860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RTS_ENABLE:  enable RTS
1862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RTS_DISABLE: disable RTS
1863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_hardware_flow_rts_config(uint32_t usart_periph, uint32_t rtsconfig)
1867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5370              		.loc 1 1867 1
 5371              		.cfi_startproc
 5372              		@ args = 0, pretend = 0, frame = 8
 5373              		@ frame_needed = 1, uses_anonymous_args = 0
 5374              		@ link register save eliminated.
 5375 0000 80B4     		push	{r7}
 5376              		.cfi_def_cfa_offset 4
 5377              		.cfi_offset 7, -4
 5378 0002 83B0     		sub	sp, sp, #12
 5379              		.cfi_def_cfa_offset 16
 5380 0004 00AF     		add	r7, sp, #0
 5381              		.cfi_def_cfa_register 7
 5382 0006 7860     		str	r0, [r7, #4]
 5383 0008 3960     		str	r1, [r7]
1868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(usart_periph) &= ~(USART_CTL0_UEN);
 5384              		.loc 1 1869 30
 5385 000a 7B68     		ldr	r3, [r7, #4]
 5386 000c 1A68     		ldr	r2, [r3]
 5387 000e 7B68     		ldr	r3, [r7, #4]
 5388 0010 22F00102 		bic	r2, r2, #1
 5389 0014 1A60     		str	r2, [r3]
1870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(usart_periph) &= ~(USART_CTL2_RTSEN);
 5390              		.loc 1 1871 30
 5391 0016 7B68     		ldr	r3, [r7, #4]
 5392 0018 0833     		adds	r3, r3, #8
 5393 001a 1B68     		ldr	r3, [r3]
 5394 001c 7A68     		ldr	r2, [r7, #4]
 5395 001e 0832     		adds	r2, r2, #8
 5396 0020 23F48073 		bic	r3, r3, #256
 5397 0024 1360     		str	r3, [r2]
1872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(usart_periph) |= rtsconfig;
 5398              		.loc 1 1872 30
 5399 0026 7B68     		ldr	r3, [r7, #4]
 5400 0028 0833     		adds	r3, r3, #8
 5401 002a 1A68     		ldr	r2, [r3]
 5402 002c 7B68     		ldr	r3, [r7, #4]
 5403 002e 0833     		adds	r3, r3, #8
 5404 0030 1946     		mov	r1, r3
 5405 0032 3B68     		ldr	r3, [r7]
 5406 0034 1343     		orrs	r3, r3, r2
 5407 0036 0B60     		str	r3, [r1]
1873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5408              		.loc 1 1873 1
 5409 0038 00BF     		nop
 5410 003a 0C37     		adds	r7, r7, #12
 5411              		.cfi_def_cfa_offset 4
 5412 003c BD46     		mov	sp, r7
 5413              		.cfi_def_cfa_register 13
 5414              		@ sp needed
 5415 003e 80BC     		pop	{r7}
 5416              		.cfi_restore 7
 5417              		.cfi_def_cfa_offset 0
 5418 0040 7047     		bx	lr
 5419              		.cfi_endproc
 5420              	.LFE166:
 5422              		.section	.text.hals_uart_hardware_flow_cts_config,"ax",%progbits
 5423              		.align	1
 5424              		.global	hals_uart_hardware_flow_cts_config
 5425              		.syntax unified
 5426              		.thumb
 5427              		.thumb_func
 5428              		.fpu softvfp
 5430              	hals_uart_hardware_flow_cts_config:
 5431              	.LFB167:
1874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure hardware flow control CTS
1877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  ctsconfig:  enable or disable CTS
1879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_CTS_ENABLE:  enable CTS
1881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_CTS_DISABLE: disable CTS
1882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_hardware_flow_cts_config(uint32_t uart_periph, uint32_t ctsconfig)
1886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5432              		.loc 1 1886 1
 5433              		.cfi_startproc
 5434              		@ args = 0, pretend = 0, frame = 8
 5435              		@ frame_needed = 1, uses_anonymous_args = 0
 5436              		@ link register save eliminated.
 5437 0000 80B4     		push	{r7}
 5438              		.cfi_def_cfa_offset 4
 5439              		.cfi_offset 7, -4
 5440 0002 83B0     		sub	sp, sp, #12
 5441              		.cfi_def_cfa_offset 16
 5442 0004 00AF     		add	r7, sp, #0
 5443              		.cfi_def_cfa_register 7
 5444 0006 7860     		str	r0, [r7, #4]
 5445 0008 3960     		str	r1, [r7]
1887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5446              		.loc 1 1888 29
 5447 000a 7B68     		ldr	r3, [r7, #4]
 5448 000c 1A68     		ldr	r2, [r3]
 5449 000e 7B68     		ldr	r3, [r7, #4]
 5450 0010 22F00102 		bic	r2, r2, #1
 5451 0014 1A60     		str	r2, [r3]
1889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~USART_CTL2_CTSEN;
 5452              		.loc 1 1890 29
 5453 0016 7B68     		ldr	r3, [r7, #4]
 5454 0018 0833     		adds	r3, r3, #8
 5455 001a 1B68     		ldr	r3, [r3]
 5456 001c 7A68     		ldr	r2, [r7, #4]
 5457 001e 0832     		adds	r2, r2, #8
 5458 0020 23F40073 		bic	r3, r3, #512
 5459 0024 1360     		str	r3, [r2]
1891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= ctsconfig;
 5460              		.loc 1 1891 29
 5461 0026 7B68     		ldr	r3, [r7, #4]
 5462 0028 0833     		adds	r3, r3, #8
 5463 002a 1A68     		ldr	r2, [r3]
 5464 002c 7B68     		ldr	r3, [r7, #4]
 5465 002e 0833     		adds	r3, r3, #8
 5466 0030 1946     		mov	r1, r3
 5467 0032 3B68     		ldr	r3, [r7]
 5468 0034 1343     		orrs	r3, r3, r2
 5469 0036 0B60     		str	r3, [r1]
1892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5470              		.loc 1 1892 1
 5471 0038 00BF     		nop
 5472 003a 0C37     		adds	r7, r7, #12
 5473              		.cfi_def_cfa_offset 4
 5474 003c BD46     		mov	sp, r7
 5475              		.cfi_def_cfa_register 13
 5476              		@ sp needed
 5477 003e 80BC     		pop	{r7}
 5478              		.cfi_restore 7
 5479              		.cfi_def_cfa_offset 0
 5480 0040 7047     		bx	lr
 5481              		.cfi_endproc
 5482              	.LFE167:
 5484              		.section	.text.hals_uart_rs485_driver_enable,"ax",%progbits
 5485              		.align	1
 5486              		.global	hals_uart_rs485_driver_enable
 5487              		.syntax unified
 5488              		.thumb
 5489              		.thumb_func
 5490              		.fpu softvfp
 5492              	hals_uart_rs485_driver_enable:
 5493              	.LFB168:
1893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable RS485 driver
1896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_rs485_driver_enable(uint32_t uart_periph)
1901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5494              		.loc 1 1901 1
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 8
 5497              		@ frame_needed = 1, uses_anonymous_args = 0
 5498              		@ link register save eliminated.
 5499 0000 80B4     		push	{r7}
 5500              		.cfi_def_cfa_offset 4
 5501              		.cfi_offset 7, -4
 5502 0002 83B0     		sub	sp, sp, #12
 5503              		.cfi_def_cfa_offset 16
 5504 0004 00AF     		add	r7, sp, #0
 5505              		.cfi_def_cfa_register 7
 5506 0006 7860     		str	r0, [r7, #4]
1902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5507              		.loc 1 1903 29
 5508 0008 7B68     		ldr	r3, [r7, #4]
 5509 000a 1A68     		ldr	r2, [r3]
 5510 000c 7B68     		ldr	r3, [r7, #4]
 5511 000e 22F00102 		bic	r2, r2, #1
 5512 0012 1A60     		str	r2, [r3]
1904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= USART_CTL2_DEM;
 5513              		.loc 1 1905 29
 5514 0014 7B68     		ldr	r3, [r7, #4]
 5515 0016 0833     		adds	r3, r3, #8
 5516 0018 1B68     		ldr	r3, [r3]
 5517 001a 7A68     		ldr	r2, [r7, #4]
 5518 001c 0832     		adds	r2, r2, #8
 5519 001e 43F48043 		orr	r3, r3, #16384
 5520 0022 1360     		str	r3, [r2]
1906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5521              		.loc 1 1906 1
 5522 0024 00BF     		nop
 5523 0026 0C37     		adds	r7, r7, #12
 5524              		.cfi_def_cfa_offset 4
 5525 0028 BD46     		mov	sp, r7
 5526              		.cfi_def_cfa_register 13
 5527              		@ sp needed
 5528 002a 80BC     		pop	{r7}
 5529              		.cfi_restore 7
 5530              		.cfi_def_cfa_offset 0
 5531 002c 7047     		bx	lr
 5532              		.cfi_endproc
 5533              	.LFE168:
 5535              		.section	.text.hals_uart_rs485_driver_disable,"ax",%progbits
 5536              		.align	1
 5537              		.global	hals_uart_rs485_driver_disable
 5538              		.syntax unified
 5539              		.thumb
 5540              		.thumb_func
 5541              		.fpu softvfp
 5543              	hals_uart_rs485_driver_disable:
 5544              	.LFB169:
1907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable RS485 driver
1910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_rs485_driver_disable(uint32_t uart_periph)
1915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5545              		.loc 1 1915 1
 5546              		.cfi_startproc
 5547              		@ args = 0, pretend = 0, frame = 8
 5548              		@ frame_needed = 1, uses_anonymous_args = 0
 5549              		@ link register save eliminated.
 5550 0000 80B4     		push	{r7}
 5551              		.cfi_def_cfa_offset 4
 5552              		.cfi_offset 7, -4
 5553 0002 83B0     		sub	sp, sp, #12
 5554              		.cfi_def_cfa_offset 16
 5555 0004 00AF     		add	r7, sp, #0
 5556              		.cfi_def_cfa_register 7
 5557 0006 7860     		str	r0, [r7, #4]
1916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5558              		.loc 1 1917 29
 5559 0008 7B68     		ldr	r3, [r7, #4]
 5560 000a 1A68     		ldr	r2, [r3]
 5561 000c 7B68     		ldr	r3, [r7, #4]
 5562 000e 22F00102 		bic	r2, r2, #1
 5563 0012 1A60     		str	r2, [r3]
1918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_DEM);
 5564              		.loc 1 1919 29
 5565 0014 7B68     		ldr	r3, [r7, #4]
 5566 0016 0833     		adds	r3, r3, #8
 5567 0018 1B68     		ldr	r3, [r3]
 5568 001a 7A68     		ldr	r2, [r7, #4]
 5569 001c 0832     		adds	r2, r2, #8
 5570 001e 23F48043 		bic	r3, r3, #16384
 5571 0022 1360     		str	r3, [r2]
1920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5572              		.loc 1 1920 1
 5573 0024 00BF     		nop
 5574 0026 0C37     		adds	r7, r7, #12
 5575              		.cfi_def_cfa_offset 4
 5576 0028 BD46     		mov	sp, r7
 5577              		.cfi_def_cfa_register 13
 5578              		@ sp needed
 5579 002a 80BC     		pop	{r7}
 5580              		.cfi_restore 7
 5581              		.cfi_def_cfa_offset 0
 5582 002c 7047     		bx	lr
 5583              		.cfi_endproc
 5584              	.LFE169:
 5586              		.section	.text.hals_uart_driver_assertime_config,"ax",%progbits
 5587              		.align	1
 5588              		.global	hals_uart_driver_assertime_config
 5589              		.syntax unified
 5590              		.thumb
 5591              		.thumb_func
 5592              		.fpu softvfp
 5594              	hals_uart_driver_assertime_config:
 5595              	.LFB170:
1921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure driver enable assertion time
1924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  deatime: 0x00000000-0x0000001F
1926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_driver_assertime_config(uint32_t uart_periph, uint32_t deatime)
1930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5596              		.loc 1 1930 1
 5597              		.cfi_startproc
 5598              		@ args = 0, pretend = 0, frame = 8
 5599              		@ frame_needed = 1, uses_anonymous_args = 0
 5600              		@ link register save eliminated.
 5601 0000 80B4     		push	{r7}
 5602              		.cfi_def_cfa_offset 4
 5603              		.cfi_offset 7, -4
 5604 0002 83B0     		sub	sp, sp, #12
 5605              		.cfi_def_cfa_offset 16
 5606 0004 00AF     		add	r7, sp, #0
 5607              		.cfi_def_cfa_register 7
 5608 0006 7860     		str	r0, [r7, #4]
 5609 0008 3960     		str	r1, [r7]
1931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5610              		.loc 1 1932 29
 5611 000a 7B68     		ldr	r3, [r7, #4]
 5612 000c 1A68     		ldr	r2, [r3]
 5613 000e 7B68     		ldr	r3, [r7, #4]
 5614 0010 22F00102 		bic	r2, r2, #1
 5615 0014 1A60     		str	r2, [r3]
1933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_DEA);
 5616              		.loc 1 1934 29
 5617 0016 7B68     		ldr	r3, [r7, #4]
 5618 0018 1A68     		ldr	r2, [r3]
 5619 001a 7B68     		ldr	r3, [r7, #4]
 5620 001c 22F07872 		bic	r2, r2, #65011712
 5621 0020 1A60     		str	r2, [r3]
1935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= (USART_CTL0_DEA & ((deatime) << CTL0_DEA_OFFSET));
 5622              		.loc 1 1935 29
 5623 0022 7B68     		ldr	r3, [r7, #4]
 5624 0024 1968     		ldr	r1, [r3]
 5625              		.loc 1 1935 61
 5626 0026 3B68     		ldr	r3, [r7]
 5627 0028 5B05     		lsls	r3, r3, #21
 5628              		.loc 1 1935 48
 5629 002a 03F07872 		and	r2, r3, #65011712
 5630              		.loc 1 1935 29
 5631 002e 7B68     		ldr	r3, [r7, #4]
 5632 0030 0A43     		orrs	r2, r2, r1
 5633 0032 1A60     		str	r2, [r3]
1936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5634              		.loc 1 1936 1
 5635 0034 00BF     		nop
 5636 0036 0C37     		adds	r7, r7, #12
 5637              		.cfi_def_cfa_offset 4
 5638 0038 BD46     		mov	sp, r7
 5639              		.cfi_def_cfa_register 13
 5640              		@ sp needed
 5641 003a 80BC     		pop	{r7}
 5642              		.cfi_restore 7
 5643              		.cfi_def_cfa_offset 0
 5644 003c 7047     		bx	lr
 5645              		.cfi_endproc
 5646              	.LFE170:
 5648              		.section	.text.hals_uart_driver_deassertime_config,"ax",%progbits
 5649              		.align	1
 5650              		.global	hals_uart_driver_deassertime_config
 5651              		.syntax unified
 5652              		.thumb
 5653              		.thumb_func
 5654              		.fpu softvfp
 5656              	hals_uart_driver_deassertime_config:
 5657              	.LFB171:
1937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure driver enable de-assertion time
1940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dedtime: 0x00000000-0x0000001F
1942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_driver_deassertime_config(uint32_t uart_periph, uint32_t dedtime)
1946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5658              		.loc 1 1946 1
 5659              		.cfi_startproc
 5660              		@ args = 0, pretend = 0, frame = 8
 5661              		@ frame_needed = 1, uses_anonymous_args = 0
 5662              		@ link register save eliminated.
 5663 0000 80B4     		push	{r7}
 5664              		.cfi_def_cfa_offset 4
 5665              		.cfi_offset 7, -4
 5666 0002 83B0     		sub	sp, sp, #12
 5667              		.cfi_def_cfa_offset 16
 5668 0004 00AF     		add	r7, sp, #0
 5669              		.cfi_def_cfa_register 7
 5670 0006 7860     		str	r0, [r7, #4]
 5671 0008 3960     		str	r1, [r7]
1947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5672              		.loc 1 1948 29
 5673 000a 7B68     		ldr	r3, [r7, #4]
 5674 000c 1A68     		ldr	r2, [r3]
 5675 000e 7B68     		ldr	r3, [r7, #4]
 5676 0010 22F00102 		bic	r2, r2, #1
 5677 0014 1A60     		str	r2, [r3]
1949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_DED);
 5678              		.loc 1 1950 29
 5679 0016 7B68     		ldr	r3, [r7, #4]
 5680 0018 1A68     		ldr	r2, [r3]
 5681 001a 7B68     		ldr	r3, [r7, #4]
 5682 001c 22F4F812 		bic	r2, r2, #2031616
 5683 0020 1A60     		str	r2, [r3]
1951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= (USART_CTL0_DED & ((dedtime) << CTL0_DED_OFFSET));
 5684              		.loc 1 1951 29
 5685 0022 7B68     		ldr	r3, [r7, #4]
 5686 0024 1968     		ldr	r1, [r3]
 5687              		.loc 1 1951 61
 5688 0026 3B68     		ldr	r3, [r7]
 5689 0028 1B04     		lsls	r3, r3, #16
 5690              		.loc 1 1951 48
 5691 002a 03F4F812 		and	r2, r3, #2031616
 5692              		.loc 1 1951 29
 5693 002e 7B68     		ldr	r3, [r7, #4]
 5694 0030 0A43     		orrs	r2, r2, r1
 5695 0032 1A60     		str	r2, [r3]
1952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5696              		.loc 1 1952 1
 5697 0034 00BF     		nop
 5698 0036 0C37     		adds	r7, r7, #12
 5699              		.cfi_def_cfa_offset 4
 5700 0038 BD46     		mov	sp, r7
 5701              		.cfi_def_cfa_register 13
 5702              		@ sp needed
 5703 003a 80BC     		pop	{r7}
 5704              		.cfi_restore 7
 5705              		.cfi_def_cfa_offset 0
 5706 003c 7047     		bx	lr
 5707              		.cfi_endproc
 5708              	.LFE171:
 5710              		.section	.text.hals_uart_depolarity_config,"ax",%progbits
 5711              		.align	1
 5712              		.global	hals_uart_depolarity_config
 5713              		.syntax unified
 5714              		.thumb
 5715              		.thumb_func
 5716              		.fpu softvfp
 5718              	hals_uart_depolarity_config:
 5719              	.LFB172:
1953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure driver enable polarity mode
1956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dep: DE signal
1958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_DEP_HIGH: DE signal is active high
1960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_DEP_LOW: DE signal is active low
1961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_depolarity_config(uint32_t uart_periph, uint32_t dep)
1965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5720              		.loc 1 1965 1
 5721              		.cfi_startproc
 5722              		@ args = 0, pretend = 0, frame = 8
 5723              		@ frame_needed = 1, uses_anonymous_args = 0
 5724              		@ link register save eliminated.
 5725 0000 80B4     		push	{r7}
 5726              		.cfi_def_cfa_offset 4
 5727              		.cfi_offset 7, -4
 5728 0002 83B0     		sub	sp, sp, #12
 5729              		.cfi_def_cfa_offset 16
 5730 0004 00AF     		add	r7, sp, #0
 5731              		.cfi_def_cfa_register 7
 5732 0006 7860     		str	r0, [r7, #4]
 5733 0008 3960     		str	r1, [r7]
1966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
1967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5734              		.loc 1 1967 29
 5735 000a 7B68     		ldr	r3, [r7, #4]
 5736 000c 1A68     		ldr	r2, [r3]
 5737 000e 7B68     		ldr	r3, [r7, #4]
 5738 0010 22F00102 		bic	r2, r2, #1
 5739 0014 1A60     		str	r2, [r3]
1968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* reset DEP bit */
1969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_DEP);
 5740              		.loc 1 1969 29
 5741 0016 7B68     		ldr	r3, [r7, #4]
 5742 0018 0833     		adds	r3, r3, #8
 5743 001a 1B68     		ldr	r3, [r3]
 5744 001c 7A68     		ldr	r2, [r7, #4]
 5745 001e 0832     		adds	r2, r2, #8
 5746 0020 23F40043 		bic	r3, r3, #32768
 5747 0024 1360     		str	r3, [r2]
1970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= (USART_CTL2_DEP & dep);
 5748              		.loc 1 1970 29
 5749 0026 7B68     		ldr	r3, [r7, #4]
 5750 0028 0833     		adds	r3, r3, #8
 5751 002a 1A68     		ldr	r2, [r3]
 5752              		.loc 1 1970 48
 5753 002c 3B68     		ldr	r3, [r7]
 5754 002e 03F40043 		and	r3, r3, #32768
 5755              		.loc 1 1970 29
 5756 0032 7968     		ldr	r1, [r7, #4]
 5757 0034 0831     		adds	r1, r1, #8
 5758 0036 1343     		orrs	r3, r3, r2
 5759 0038 0B60     		str	r3, [r1]
1971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5760              		.loc 1 1971 1
 5761 003a 00BF     		nop
 5762 003c 0C37     		adds	r7, r7, #12
 5763              		.cfi_def_cfa_offset 4
 5764 003e BD46     		mov	sp, r7
 5765              		.cfi_def_cfa_register 13
 5766              		@ sp needed
 5767 0040 80BC     		pop	{r7}
 5768              		.cfi_restore 7
 5769              		.cfi_def_cfa_offset 0
 5770 0042 7047     		bx	lr
 5771              		.cfi_endproc
 5772              	.LFE172:
 5774              		.section	.text.hals_uart_dma_receive_config,"ax",%progbits
 5775              		.align	1
 5776              		.global	hals_uart_dma_receive_config
 5777              		.syntax unified
 5778              		.thumb
 5779              		.thumb_func
 5780              		.fpu softvfp
 5782              	hals_uart_dma_receive_config:
 5783              	.LFB173:
1972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART DMA reception
1975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dmacmd: UART DMA mode
1977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RECEIVE_DMA_ENABLE: enable UART DMA for reception
1979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_RECEIVE_DMA_DISABLE: disable UART DMA for reception
1980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_dma_receive_config(uint32_t uart_periph, uint8_t dmacmd)
1984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5784              		.loc 1 1984 1
 5785              		.cfi_startproc
 5786              		@ args = 0, pretend = 0, frame = 8
 5787              		@ frame_needed = 1, uses_anonymous_args = 0
 5788              		@ link register save eliminated.
 5789 0000 80B4     		push	{r7}
 5790              		.cfi_def_cfa_offset 4
 5791              		.cfi_offset 7, -4
 5792 0002 83B0     		sub	sp, sp, #12
 5793              		.cfi_def_cfa_offset 16
 5794 0004 00AF     		add	r7, sp, #0
 5795              		.cfi_def_cfa_register 7
 5796 0006 7860     		str	r0, [r7, #4]
 5797 0008 0B46     		mov	r3, r1
 5798 000a FB70     		strb	r3, [r7, #3]
1985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~USART_CTL2_DENR;
 5799              		.loc 1 1985 29
 5800 000c 7B68     		ldr	r3, [r7, #4]
 5801 000e 0833     		adds	r3, r3, #8
 5802 0010 1B68     		ldr	r3, [r3]
 5803 0012 7A68     		ldr	r2, [r7, #4]
 5804 0014 0832     		adds	r2, r2, #8
 5805 0016 23F04003 		bic	r3, r3, #64
 5806 001a 1360     		str	r3, [r2]
1986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= (USART_CTL2_DENR & dmacmd);
 5807              		.loc 1 1986 29
 5808 001c 7B68     		ldr	r3, [r7, #4]
 5809 001e 0833     		adds	r3, r3, #8
 5810 0020 1A68     		ldr	r2, [r3]
 5811              		.loc 1 1986 49
 5812 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5813 0024 03F04003 		and	r3, r3, #64
 5814              		.loc 1 1986 29
 5815 0028 7968     		ldr	r1, [r7, #4]
 5816 002a 0831     		adds	r1, r1, #8
 5817 002c 1343     		orrs	r3, r3, r2
 5818 002e 0B60     		str	r3, [r1]
1987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5819              		.loc 1 1987 1
 5820 0030 00BF     		nop
 5821 0032 0C37     		adds	r7, r7, #12
 5822              		.cfi_def_cfa_offset 4
 5823 0034 BD46     		mov	sp, r7
 5824              		.cfi_def_cfa_register 13
 5825              		@ sp needed
 5826 0036 80BC     		pop	{r7}
 5827              		.cfi_restore 7
 5828              		.cfi_def_cfa_offset 0
 5829 0038 7047     		bx	lr
 5830              		.cfi_endproc
 5831              	.LFE173:
 5833              		.section	.text.hals_uart_dma_transmit_config,"ax",%progbits
 5834              		.align	1
 5835              		.global	hals_uart_dma_transmit_config
 5836              		.syntax unified
 5837              		.thumb
 5838              		.thumb_func
 5839              		.fpu softvfp
 5841              	hals_uart_dma_transmit_config:
 5842              	.LFB174:
1988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
1989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
1990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure UART DMA transmission
1991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
1992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dmacmd: UART DMA mode
1993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
1994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_TRANSMIT_DMA_ENABLE: enable UART DMA for transmission
1995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_TRANSMIT_DMA_DISABLE: disable UART DMA for transmission
1996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
1997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
1998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
1999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_dma_transmit_config(uint32_t uart_periph, uint8_t dmacmd)
2000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5843              		.loc 1 2000 1
 5844              		.cfi_startproc
 5845              		@ args = 0, pretend = 0, frame = 8
 5846              		@ frame_needed = 1, uses_anonymous_args = 0
 5847              		@ link register save eliminated.
 5848 0000 80B4     		push	{r7}
 5849              		.cfi_def_cfa_offset 4
 5850              		.cfi_offset 7, -4
 5851 0002 83B0     		sub	sp, sp, #12
 5852              		.cfi_def_cfa_offset 16
 5853 0004 00AF     		add	r7, sp, #0
 5854              		.cfi_def_cfa_register 7
 5855 0006 7860     		str	r0, [r7, #4]
 5856 0008 0B46     		mov	r3, r1
 5857 000a FB70     		strb	r3, [r7, #3]
2001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~USART_CTL2_DENT;
 5858              		.loc 1 2001 29
 5859 000c 7B68     		ldr	r3, [r7, #4]
 5860 000e 0833     		adds	r3, r3, #8
 5861 0010 1B68     		ldr	r3, [r3]
 5862 0012 7A68     		ldr	r2, [r7, #4]
 5863 0014 0832     		adds	r2, r2, #8
 5864 0016 23F08003 		bic	r3, r3, #128
 5865 001a 1360     		str	r3, [r2]
2002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= (USART_CTL2_DENT & dmacmd);
 5866              		.loc 1 2002 29
 5867 001c 7B68     		ldr	r3, [r7, #4]
 5868 001e 0833     		adds	r3, r3, #8
 5869 0020 1A68     		ldr	r2, [r3]
 5870              		.loc 1 2002 49
 5871 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5872 0024 03F08003 		and	r3, r3, #128
 5873              		.loc 1 2002 29
 5874 0028 7968     		ldr	r1, [r7, #4]
 5875 002a 0831     		adds	r1, r1, #8
 5876 002c 1343     		orrs	r3, r3, r2
 5877 002e 0B60     		str	r3, [r1]
2003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5878              		.loc 1 2003 1
 5879 0030 00BF     		nop
 5880 0032 0C37     		adds	r7, r7, #12
 5881              		.cfi_def_cfa_offset 4
 5882 0034 BD46     		mov	sp, r7
 5883              		.cfi_def_cfa_register 13
 5884              		@ sp needed
 5885 0036 80BC     		pop	{r7}
 5886              		.cfi_restore 7
 5887              		.cfi_def_cfa_offset 0
 5888 0038 7047     		bx	lr
 5889              		.cfi_endproc
 5890              	.LFE174:
 5892              		.section	.text.hals_uart_reception_error_dma_enable,"ax",%progbits
 5893              		.align	1
 5894              		.global	hals_uart_reception_error_dma_enable
 5895              		.syntax unified
 5896              		.thumb
 5897              		.thumb_func
 5898              		.fpu softvfp
 5900              	hals_uart_reception_error_dma_enable:
 5901              	.LFB175:
2004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable DMA on reception error
2007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_reception_error_dma_enable(uint32_t uart_periph)
2012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5902              		.loc 1 2012 1
 5903              		.cfi_startproc
 5904              		@ args = 0, pretend = 0, frame = 8
 5905              		@ frame_needed = 1, uses_anonymous_args = 0
 5906              		@ link register save eliminated.
 5907 0000 80B4     		push	{r7}
 5908              		.cfi_def_cfa_offset 4
 5909              		.cfi_offset 7, -4
 5910 0002 83B0     		sub	sp, sp, #12
 5911              		.cfi_def_cfa_offset 16
 5912 0004 00AF     		add	r7, sp, #0
 5913              		.cfi_def_cfa_register 7
 5914 0006 7860     		str	r0, [r7, #4]
2013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
2014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5915              		.loc 1 2014 29
 5916 0008 7B68     		ldr	r3, [r7, #4]
 5917 000a 1A68     		ldr	r2, [r3]
 5918 000c 7B68     		ldr	r3, [r7, #4]
 5919 000e 22F00102 		bic	r2, r2, #1
 5920 0012 1A60     		str	r2, [r3]
2015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_DDRE);
 5921              		.loc 1 2015 29
 5922 0014 7B68     		ldr	r3, [r7, #4]
 5923 0016 0833     		adds	r3, r3, #8
 5924 0018 1B68     		ldr	r3, [r3]
 5925 001a 7A68     		ldr	r2, [r7, #4]
 5926 001c 0832     		adds	r2, r2, #8
 5927 001e 23F40053 		bic	r3, r3, #8192
 5928 0022 1360     		str	r3, [r2]
2016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5929              		.loc 1 2016 1
 5930 0024 00BF     		nop
 5931 0026 0C37     		adds	r7, r7, #12
 5932              		.cfi_def_cfa_offset 4
 5933 0028 BD46     		mov	sp, r7
 5934              		.cfi_def_cfa_register 13
 5935              		@ sp needed
 5936 002a 80BC     		pop	{r7}
 5937              		.cfi_restore 7
 5938              		.cfi_def_cfa_offset 0
 5939 002c 7047     		bx	lr
 5940              		.cfi_endproc
 5941              	.LFE175:
 5943              		.section	.text.hals_uart_reception_error_dma_disable,"ax",%progbits
 5944              		.align	1
 5945              		.global	hals_uart_reception_error_dma_disable
 5946              		.syntax unified
 5947              		.thumb
 5948              		.thumb_func
 5949              		.fpu softvfp
 5951              	hals_uart_reception_error_dma_disable:
 5952              	.LFB176:
2017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable DMA on reception error
2020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_reception_error_dma_disable(uint32_t uart_periph)
2025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 5953              		.loc 1 2025 1
 5954              		.cfi_startproc
 5955              		@ args = 0, pretend = 0, frame = 8
 5956              		@ frame_needed = 1, uses_anonymous_args = 0
 5957              		@ link register save eliminated.
 5958 0000 80B4     		push	{r7}
 5959              		.cfi_def_cfa_offset 4
 5960              		.cfi_offset 7, -4
 5961 0002 83B0     		sub	sp, sp, #12
 5962              		.cfi_def_cfa_offset 16
 5963 0004 00AF     		add	r7, sp, #0
 5964              		.cfi_def_cfa_register 7
 5965 0006 7860     		str	r0, [r7, #4]
2026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
2027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 5966              		.loc 1 2027 29
 5967 0008 7B68     		ldr	r3, [r7, #4]
 5968 000a 1A68     		ldr	r2, [r3]
 5969 000c 7B68     		ldr	r3, [r7, #4]
 5970 000e 22F00102 		bic	r2, r2, #1
 5971 0012 1A60     		str	r2, [r3]
2028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= USART_CTL2_DDRE;
 5972              		.loc 1 2028 29
 5973 0014 7B68     		ldr	r3, [r7, #4]
 5974 0016 0833     		adds	r3, r3, #8
 5975 0018 1B68     		ldr	r3, [r3]
 5976 001a 7A68     		ldr	r2, [r7, #4]
 5977 001c 0832     		adds	r2, r2, #8
 5978 001e 43F40053 		orr	r3, r3, #8192
 5979 0022 1360     		str	r3, [r2]
2029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 5980              		.loc 1 2029 1
 5981 0024 00BF     		nop
 5982 0026 0C37     		adds	r7, r7, #12
 5983              		.cfi_def_cfa_offset 4
 5984 0028 BD46     		mov	sp, r7
 5985              		.cfi_def_cfa_register 13
 5986              		@ sp needed
 5987 002a 80BC     		pop	{r7}
 5988              		.cfi_restore 7
 5989              		.cfi_def_cfa_offset 0
 5990 002c 7047     		bx	lr
 5991              		.cfi_endproc
 5992              	.LFE176:
 5994              		.section	.text.hals_uart_wakeup_enable,"ax",%progbits
 5995              		.align	1
 5996              		.global	hals_uart_wakeup_enable
 5997              		.syntax unified
 5998              		.thumb
 5999              		.thumb_func
 6000              		.fpu softvfp
 6002              	hals_uart_wakeup_enable:
 6003              	.LFB177:
2030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable UART to wakeup the MCU from deep-sleep mode
2033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
2034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_wakeup_enable(uint32_t uart_periph)
2038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6004              		.loc 1 2038 1
 6005              		.cfi_startproc
 6006              		@ args = 0, pretend = 0, frame = 8
 6007              		@ frame_needed = 1, uses_anonymous_args = 0
 6008              		@ link register save eliminated.
 6009 0000 80B4     		push	{r7}
 6010              		.cfi_def_cfa_offset 4
 6011              		.cfi_offset 7, -4
 6012 0002 83B0     		sub	sp, sp, #12
 6013              		.cfi_def_cfa_offset 16
 6014 0004 00AF     		add	r7, sp, #0
 6015              		.cfi_def_cfa_register 7
 6016 0006 7860     		str	r0, [r7, #4]
2039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) |= USART_CTL0_UESM;
 6017              		.loc 1 2039 29
 6018 0008 7B68     		ldr	r3, [r7, #4]
 6019 000a 1A68     		ldr	r2, [r3]
 6020 000c 7B68     		ldr	r3, [r7, #4]
 6021 000e 42F00202 		orr	r2, r2, #2
 6022 0012 1A60     		str	r2, [r3]
2040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6023              		.loc 1 2040 1
 6024 0014 00BF     		nop
 6025 0016 0C37     		adds	r7, r7, #12
 6026              		.cfi_def_cfa_offset 4
 6027 0018 BD46     		mov	sp, r7
 6028              		.cfi_def_cfa_register 13
 6029              		@ sp needed
 6030 001a 80BC     		pop	{r7}
 6031              		.cfi_restore 7
 6032              		.cfi_def_cfa_offset 0
 6033 001c 7047     		bx	lr
 6034              		.cfi_endproc
 6035              	.LFE177:
 6037              		.section	.text.hals_uart_wakeup_disable,"ax",%progbits
 6038              		.align	1
 6039              		.global	hals_uart_wakeup_disable
 6040              		.syntax unified
 6041              		.thumb
 6042              		.thumb_func
 6043              		.fpu softvfp
 6045              	hals_uart_wakeup_disable:
 6046              	.LFB178:
2041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable UART to wakeup the MCU from deep-sleep mode
2044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
2045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_wakeup_disable(uint32_t uart_periph)
2049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6047              		.loc 1 2049 1
 6048              		.cfi_startproc
 6049              		@ args = 0, pretend = 0, frame = 8
 6050              		@ frame_needed = 1, uses_anonymous_args = 0
 6051              		@ link register save eliminated.
 6052 0000 80B4     		push	{r7}
 6053              		.cfi_def_cfa_offset 4
 6054              		.cfi_offset 7, -4
 6055 0002 83B0     		sub	sp, sp, #12
 6056              		.cfi_def_cfa_offset 16
 6057 0004 00AF     		add	r7, sp, #0
 6058              		.cfi_def_cfa_register 7
 6059 0006 7860     		str	r0, [r7, #4]
2050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UESM);
 6060              		.loc 1 2050 29
 6061 0008 7B68     		ldr	r3, [r7, #4]
 6062 000a 1A68     		ldr	r2, [r3]
 6063 000c 7B68     		ldr	r3, [r7, #4]
 6064 000e 22F00202 		bic	r2, r2, #2
 6065 0012 1A60     		str	r2, [r3]
2051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6066              		.loc 1 2051 1
 6067 0014 00BF     		nop
 6068 0016 0C37     		adds	r7, r7, #12
 6069              		.cfi_def_cfa_offset 4
 6070 0018 BD46     		mov	sp, r7
 6071              		.cfi_def_cfa_register 13
 6072              		@ sp needed
 6073 001a 80BC     		pop	{r7}
 6074              		.cfi_restore 7
 6075              		.cfi_def_cfa_offset 0
 6076 001c 7047     		bx	lr
 6077              		.cfi_endproc
 6078              	.LFE178:
 6080              		.section	.text.hals_uart_wakeup_mode_config,"ax",%progbits
 6081              		.align	1
 6082              		.global	hals_uart_wakeup_mode_config
 6083              		.syntax unified
 6084              		.thumb
 6085              		.thumb_func
 6086              		.fpu softvfp
 6088              	hals_uart_wakeup_mode_config:
 6089              	.LFB179:
2052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      configure the UART wakeup mode from deep-sleep mode
2055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0)
2056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  wum: wakeup mode
2057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WUM_ADDR: WUF active on address match
2059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WUM_STARTB: WUF active on start bit
2060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_WUM_RBNE: WUF active on RBNE
2061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_wakeup_mode_config(uint32_t uart_periph, uint32_t wum)
2065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6090              		.loc 1 2065 1
 6091              		.cfi_startproc
 6092              		@ args = 0, pretend = 0, frame = 8
 6093              		@ frame_needed = 1, uses_anonymous_args = 0
 6094              		@ link register save eliminated.
 6095 0000 80B4     		push	{r7}
 6096              		.cfi_def_cfa_offset 4
 6097              		.cfi_offset 7, -4
 6098 0002 83B0     		sub	sp, sp, #12
 6099              		.cfi_def_cfa_offset 16
 6100 0004 00AF     		add	r7, sp, #0
 6101              		.cfi_def_cfa_register 7
 6102 0006 7860     		str	r0, [r7, #4]
 6103 0008 3960     		str	r1, [r7]
2066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable UART */
2067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL0(uart_periph) &= ~(USART_CTL0_UEN);
 6104              		.loc 1 2067 29
 6105 000a 7B68     		ldr	r3, [r7, #4]
 6106 000c 1A68     		ldr	r2, [r3]
 6107 000e 7B68     		ldr	r3, [r7, #4]
 6108 0010 22F00102 		bic	r2, r2, #1
 6109 0014 1A60     		str	r2, [r3]
2068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* reset WUM bit */
2069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) &= ~(USART_CTL2_WUM);
 6110              		.loc 1 2069 29
 6111 0016 7B68     		ldr	r3, [r7, #4]
 6112 0018 0833     		adds	r3, r3, #8
 6113 001a 1B68     		ldr	r3, [r3]
 6114 001c 7A68     		ldr	r2, [r7, #4]
 6115 001e 0832     		adds	r2, r2, #8
 6116 0020 23F44013 		bic	r3, r3, #3145728
 6117 0024 1360     		str	r3, [r2]
2070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_CTL2(uart_periph) |= USART_CTL2_WUM & (wum);
 6118              		.loc 1 2070 29
 6119 0026 7B68     		ldr	r3, [r7, #4]
 6120 0028 0833     		adds	r3, r3, #8
 6121 002a 1A68     		ldr	r2, [r3]
 6122              		.loc 1 2070 47
 6123 002c 3B68     		ldr	r3, [r7]
 6124 002e 03F44013 		and	r3, r3, #3145728
 6125              		.loc 1 2070 29
 6126 0032 7968     		ldr	r1, [r7, #4]
 6127 0034 0831     		adds	r1, r1, #8
 6128 0036 1343     		orrs	r3, r3, r2
 6129 0038 0B60     		str	r3, [r1]
2071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6130              		.loc 1 2071 1
 6131 003a 00BF     		nop
 6132 003c 0C37     		adds	r7, r7, #12
 6133              		.cfi_def_cfa_offset 4
 6134 003e BD46     		mov	sp, r7
 6135              		.cfi_def_cfa_register 13
 6136              		@ sp needed
 6137 0040 80BC     		pop	{r7}
 6138              		.cfi_restore 7
 6139              		.cfi_def_cfa_offset 0
 6140 0042 7047     		bx	lr
 6141              		.cfi_endproc
 6142              	.LFE179:
 6144              		.section	.text.hals_uart_receive_fifo_enable,"ax",%progbits
 6145              		.align	1
 6146              		.global	hals_uart_receive_fifo_enable
 6147              		.syntax unified
 6148              		.thumb
 6149              		.thumb_func
 6150              		.fpu softvfp
 6152              	hals_uart_receive_fifo_enable:
 6153              	.LFB180:
2072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable receive FIFO
2075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_receive_fifo_enable(uint32_t uart_periph)
2080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6154              		.loc 1 2080 1
 6155              		.cfi_startproc
 6156              		@ args = 0, pretend = 0, frame = 8
 6157              		@ frame_needed = 1, uses_anonymous_args = 0
 6158              		@ link register save eliminated.
 6159 0000 80B4     		push	{r7}
 6160              		.cfi_def_cfa_offset 4
 6161              		.cfi_offset 7, -4
 6162 0002 83B0     		sub	sp, sp, #12
 6163              		.cfi_def_cfa_offset 16
 6164 0004 00AF     		add	r7, sp, #0
 6165              		.cfi_def_cfa_register 7
 6166 0006 7860     		str	r0, [r7, #4]
2081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_RFCS(uart_periph) |= USART_RFCS_RFEN;
 6167              		.loc 1 2081 29
 6168 0008 7B68     		ldr	r3, [r7, #4]
 6169 000a D033     		adds	r3, r3, #208
 6170 000c 1B68     		ldr	r3, [r3]
 6171 000e 7A68     		ldr	r2, [r7, #4]
 6172 0010 D032     		adds	r2, r2, #208
 6173 0012 43F48073 		orr	r3, r3, #256
 6174 0016 1360     		str	r3, [r2]
2082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6175              		.loc 1 2082 1
 6176 0018 00BF     		nop
 6177 001a 0C37     		adds	r7, r7, #12
 6178              		.cfi_def_cfa_offset 4
 6179 001c BD46     		mov	sp, r7
 6180              		.cfi_def_cfa_register 13
 6181              		@ sp needed
 6182 001e 80BC     		pop	{r7}
 6183              		.cfi_restore 7
 6184              		.cfi_def_cfa_offset 0
 6185 0020 7047     		bx	lr
 6186              		.cfi_endproc
 6187              	.LFE180:
 6189              		.section	.text.hals_uart_receive_fifo_disable,"ax",%progbits
 6190              		.align	1
 6191              		.global	hals_uart_receive_fifo_disable
 6192              		.syntax unified
 6193              		.thumb
 6194              		.thumb_func
 6195              		.fpu softvfp
 6197              	hals_uart_receive_fifo_disable:
 6198              	.LFB181:
2083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable receive FIFO
2086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_receive_fifo_disable(uint32_t uart_periph)
2091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6199              		.loc 1 2091 1
 6200              		.cfi_startproc
 6201              		@ args = 0, pretend = 0, frame = 8
 6202              		@ frame_needed = 1, uses_anonymous_args = 0
 6203              		@ link register save eliminated.
 6204 0000 80B4     		push	{r7}
 6205              		.cfi_def_cfa_offset 4
 6206              		.cfi_offset 7, -4
 6207 0002 83B0     		sub	sp, sp, #12
 6208              		.cfi_def_cfa_offset 16
 6209 0004 00AF     		add	r7, sp, #0
 6210              		.cfi_def_cfa_register 7
 6211 0006 7860     		str	r0, [r7, #4]
2092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_RFCS(uart_periph) &= ~(USART_RFCS_RFEN);
 6212              		.loc 1 2092 29
 6213 0008 7B68     		ldr	r3, [r7, #4]
 6214 000a D033     		adds	r3, r3, #208
 6215 000c 1B68     		ldr	r3, [r3]
 6216 000e 7A68     		ldr	r2, [r7, #4]
 6217 0010 D032     		adds	r2, r2, #208
 6218 0012 23F48073 		bic	r3, r3, #256
 6219 0016 1360     		str	r3, [r2]
2093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6220              		.loc 1 2093 1
 6221 0018 00BF     		nop
 6222 001a 0C37     		adds	r7, r7, #12
 6223              		.cfi_def_cfa_offset 4
 6224 001c BD46     		mov	sp, r7
 6225              		.cfi_def_cfa_register 13
 6226              		@ sp needed
 6227 001e 80BC     		pop	{r7}
 6228              		.cfi_restore 7
 6229              		.cfi_def_cfa_offset 0
 6230 0020 7047     		bx	lr
 6231              		.cfi_endproc
 6232              	.LFE181:
 6234              		.section	.text.hals_uart_receive_fifo_counter_number,"ax",%progbits
 6235              		.align	1
 6236              		.global	hals_uart_receive_fifo_counter_number
 6237              		.syntax unified
 6238              		.thumb
 6239              		.thumb_func
 6240              		.fpu softvfp
 6242              	hals_uart_receive_fifo_counter_number:
 6243              	.LFB182:
2094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      read receive FIFO counter number
2097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     receive FIFO counter number
2100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** uint8_t hals_uart_receive_fifo_counter_number(uint32_t uart_periph)
2102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6244              		.loc 1 2102 1
 6245              		.cfi_startproc
 6246              		@ args = 0, pretend = 0, frame = 8
 6247              		@ frame_needed = 1, uses_anonymous_args = 0
 6248              		@ link register save eliminated.
 6249 0000 80B4     		push	{r7}
 6250              		.cfi_def_cfa_offset 4
 6251              		.cfi_offset 7, -4
 6252 0002 83B0     		sub	sp, sp, #12
 6253              		.cfi_def_cfa_offset 16
 6254 0004 00AF     		add	r7, sp, #0
 6255              		.cfi_def_cfa_register 7
 6256 0006 7860     		str	r0, [r7, #4]
2103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return (uint8_t)(GET_BITS(USART_RFCS(uart_periph), 12U, 14U));
 6257              		.loc 1 2103 22
 6258 0008 7B68     		ldr	r3, [r7, #4]
 6259 000a D033     		adds	r3, r3, #208
 6260 000c 1B68     		ldr	r3, [r3]
 6261 000e 1B0B     		lsrs	r3, r3, #12
 6262              		.loc 1 2103 12
 6263 0010 DBB2     		uxtb	r3, r3
 6264 0012 03F00703 		and	r3, r3, #7
 6265 0016 DBB2     		uxtb	r3, r3
2104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6266              		.loc 1 2104 1
 6267 0018 1846     		mov	r0, r3
 6268 001a 0C37     		adds	r7, r7, #12
 6269              		.cfi_def_cfa_offset 4
 6270 001c BD46     		mov	sp, r7
 6271              		.cfi_def_cfa_register 13
 6272              		@ sp needed
 6273 001e 80BC     		pop	{r7}
 6274              		.cfi_restore 7
 6275              		.cfi_def_cfa_offset 0
 6276 0020 7047     		bx	lr
 6277              		.cfi_endproc
 6278              	.LFE182:
 6280              		.section	.text.hals_uart_flag_get,"ax",%progbits
 6281              		.align	1
 6282              		.global	hals_uart_flag_get
 6283              		.syntax unified
 6284              		.thumb
 6285              		.thumb_func
 6286              		.fpu softvfp
 6288              	hals_uart_flag_get:
 6289              	.LFB183:
2105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      get UART status
2108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  flag: flag type
2110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_PERR: parity error flag
2112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_FERR: frame error flag
2113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_NERR: noise error flag
2114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_ORERR: overrun error flag
2115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_IDLE: idle line detected flag
2116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_RBNE: read data buffer not empty
2117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_TC: transmission complete flag
2118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_TBE: transmit data register empty
2119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_LBD: LIN break detected flag
2120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_CTSF: CTS change flag
2121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_CTS: CTS level
2122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_RT: receiver timeout flag
2123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_EB: end of block flag
2124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_BSY: busy flag
2125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_AM: address match flag
2126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_SB: send break flag
2127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_RWU: receiver wakeup from mute mode.
2128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_WU: wakeup from deep-sleep mode flag
2129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_TEA: transmit enable acknowledge flag
2130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_REA: receive enable acknowledge flag
2131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_EPERR: early parity error flag
2132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_RFE: receive FIFO empty flag
2133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_RFF: receive FIFO full flag
2134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     FlagStatus: SET or RESET
2136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** FlagStatus hals_uart_flag_get(uint32_t uart_periph, usart_flag_enum flag)
2138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6290              		.loc 1 2138 1
 6291              		.cfi_startproc
 6292              		@ args = 0, pretend = 0, frame = 8
 6293              		@ frame_needed = 1, uses_anonymous_args = 0
 6294              		@ link register save eliminated.
 6295 0000 80B4     		push	{r7}
 6296              		.cfi_def_cfa_offset 4
 6297              		.cfi_offset 7, -4
 6298 0002 83B0     		sub	sp, sp, #12
 6299              		.cfi_def_cfa_offset 16
 6300 0004 00AF     		add	r7, sp, #0
 6301              		.cfi_def_cfa_register 7
 6302 0006 7860     		str	r0, [r7, #4]
 6303 0008 0B46     		mov	r3, r1
 6304 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != (USART_REG_VAL(uart_periph, flag) & BIT(USART_BIT_POS(flag)))) {
 6305              		.loc 1 2139 18
 6306 000c 7B88     		ldrh	r3, [r7, #2]
 6307 000e 9B09     		lsrs	r3, r3, #6
 6308 0010 9BB2     		uxth	r3, r3
 6309 0012 1A46     		mov	r2, r3
 6310 0014 7B68     		ldr	r3, [r7, #4]
 6311 0016 1344     		add	r3, r3, r2
 6312 0018 1A68     		ldr	r2, [r3]
 6313              		.loc 1 2139 53
 6314 001a 7B88     		ldrh	r3, [r7, #2]
 6315 001c 03F01F03 		and	r3, r3, #31
 6316              		.loc 1 2139 14
 6317 0020 22FA03F3 		lsr	r3, r2, r3
 6318 0024 03F00103 		and	r3, r3, #1
 6319              		.loc 1 2139 7
 6320 0028 002B     		cmp	r3, #0
 6321 002a 01D0     		beq	.L255
2140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return SET;
 6322              		.loc 1 2140 16
 6323 002c 0123     		movs	r3, #1
 6324 002e 00E0     		b	.L256
 6325              	.L255:
2141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return RESET;
 6326              		.loc 1 2142 16
 6327 0030 0023     		movs	r3, #0
 6328              	.L256:
2143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6329              		.loc 1 2144 1
 6330 0032 1846     		mov	r0, r3
 6331 0034 0C37     		adds	r7, r7, #12
 6332              		.cfi_def_cfa_offset 4
 6333 0036 BD46     		mov	sp, r7
 6334              		.cfi_def_cfa_register 13
 6335              		@ sp needed
 6336 0038 80BC     		pop	{r7}
 6337              		.cfi_restore 7
 6338              		.cfi_def_cfa_offset 0
 6339 003a 7047     		bx	lr
 6340              		.cfi_endproc
 6341              	.LFE183:
 6343              		.section	.text.hals_uart_flag_clear,"ax",%progbits
 6344              		.align	1
 6345              		.global	hals_uart_flag_clear
 6346              		.syntax unified
 6347              		.thumb
 6348              		.thumb_func
 6349              		.fpu softvfp
 6351              	hals_uart_flag_clear:
 6352              	.LFB184:
2145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      clear UART status
2148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  flag: flag type
2150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_PERR: parity error flag
2152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_FERR: frame error flag
2153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_NERR: noise error flag
2154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_ORERR: overrun error flag
2155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_IDLE: idle line detected flag
2156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_TC: transmission complete flag
2157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_LBD: LIN break detected flag
2158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_CTSF: CTS change flag
2159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_RT: receiver timeout flag
2160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_EB: end of block flag
2161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_AM: address match flag
2162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_WU: wakeup from deep-sleep mode flag
2163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_FLAG_EPERR: early parity error flag
2164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_flag_clear(uint32_t uart_periph, usart_flag_enum flag)
2168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6353              		.loc 1 2168 1
 6354              		.cfi_startproc
 6355              		@ args = 0, pretend = 0, frame = 8
 6356              		@ frame_needed = 1, uses_anonymous_args = 0
 6357              		@ link register save eliminated.
 6358 0000 80B4     		push	{r7}
 6359              		.cfi_def_cfa_offset 4
 6360              		.cfi_offset 7, -4
 6361 0002 83B0     		sub	sp, sp, #12
 6362              		.cfi_def_cfa_offset 16
 6363 0004 00AF     		add	r7, sp, #0
 6364              		.cfi_def_cfa_register 7
 6365 0006 7860     		str	r0, [r7, #4]
 6366 0008 0B46     		mov	r3, r1
 6367 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_INTC(uart_periph) |= BIT(USART_BIT_POS(flag));
 6368              		.loc 1 2169 29
 6369 000c 7B68     		ldr	r3, [r7, #4]
 6370 000e 2033     		adds	r3, r3, #32
 6371 0010 1A68     		ldr	r2, [r3]
 6372              		.loc 1 2169 32
 6373 0012 7B88     		ldrh	r3, [r7, #2]
 6374 0014 03F01F03 		and	r3, r3, #31
 6375 0018 0121     		movs	r1, #1
 6376 001a 01FA03F3 		lsl	r3, r1, r3
 6377              		.loc 1 2169 29
 6378 001e 7968     		ldr	r1, [r7, #4]
 6379 0020 2031     		adds	r1, r1, #32
 6380 0022 1343     		orrs	r3, r3, r2
 6381 0024 0B60     		str	r3, [r1]
2170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6382              		.loc 1 2170 1
 6383 0026 00BF     		nop
 6384 0028 0C37     		adds	r7, r7, #12
 6385              		.cfi_def_cfa_offset 4
 6386 002a BD46     		mov	sp, r7
 6387              		.cfi_def_cfa_register 13
 6388              		@ sp needed
 6389 002c 80BC     		pop	{r7}
 6390              		.cfi_restore 7
 6391              		.cfi_def_cfa_offset 0
 6392 002e 7047     		bx	lr
 6393              		.cfi_endproc
 6394              	.LFE184:
 6396              		.section	.text.hals_uart_interrupt_enable,"ax",%progbits
 6397              		.align	1
 6398              		.global	hals_uart_interrupt_enable
 6399              		.syntax unified
 6400              		.thumb
 6401              		.thumb_func
 6402              		.fpu softvfp
 6404              	hals_uart_interrupt_enable:
 6405              	.LFB185:
2171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      enable UART interrupt
2174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  interrupt: interrupt
2176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_IDLE: idle line detected interrupt
2178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_RBNE: read data buffer not empty interrupt and overrun error interrupt
2179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_TC: transmission complete interrupt
2180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_TBE: transmitter buffer empty interrupt
2181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_PERR: parity error interrupt
2182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_AM: address match interrupt
2183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_RT: receiver timeout interrupt
2184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_EB: end of block interrupt
2185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_LBD: LIN break detection interrupt
2186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_ERR: error interrupt
2187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_CTS: CTS interrupt
2188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_WU: wakeup from deep-sleep mode interrupt
2189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_RFF: receive FIFO full interrupt
2190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_interrupt_enable(uint32_t uart_periph, usart_interrupt_enum interrupt)
2194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6406              		.loc 1 2194 1
 6407              		.cfi_startproc
 6408              		@ args = 0, pretend = 0, frame = 8
 6409              		@ frame_needed = 1, uses_anonymous_args = 0
 6410              		@ link register save eliminated.
 6411 0000 80B4     		push	{r7}
 6412              		.cfi_def_cfa_offset 4
 6413              		.cfi_offset 7, -4
 6414 0002 83B0     		sub	sp, sp, #12
 6415              		.cfi_def_cfa_offset 16
 6416 0004 00AF     		add	r7, sp, #0
 6417              		.cfi_def_cfa_register 7
 6418 0006 7860     		str	r0, [r7, #4]
 6419 0008 0B46     		mov	r3, r1
 6420 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_REG_VAL(uart_periph, interrupt) |= BIT(USART_BIT_POS(interrupt));
 6421              		.loc 1 2195 43
 6422 000c 7B88     		ldrh	r3, [r7, #2]
 6423 000e 9B09     		lsrs	r3, r3, #6
 6424 0010 9BB2     		uxth	r3, r3
 6425 0012 1A46     		mov	r2, r3
 6426 0014 7B68     		ldr	r3, [r7, #4]
 6427 0016 1344     		add	r3, r3, r2
 6428 0018 1A68     		ldr	r2, [r3]
 6429              		.loc 1 2195 46
 6430 001a 7B88     		ldrh	r3, [r7, #2]
 6431 001c 03F01F03 		and	r3, r3, #31
 6432 0020 0121     		movs	r1, #1
 6433 0022 01FA03F3 		lsl	r3, r1, r3
 6434              		.loc 1 2195 43
 6435 0026 7988     		ldrh	r1, [r7, #2]
 6436 0028 8909     		lsrs	r1, r1, #6
 6437 002a 89B2     		uxth	r1, r1
 6438 002c 0846     		mov	r0, r1
 6439 002e 7968     		ldr	r1, [r7, #4]
 6440 0030 0144     		add	r1, r1, r0
 6441 0032 1343     		orrs	r3, r3, r2
 6442 0034 0B60     		str	r3, [r1]
2196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6443              		.loc 1 2196 1
 6444 0036 00BF     		nop
 6445 0038 0C37     		adds	r7, r7, #12
 6446              		.cfi_def_cfa_offset 4
 6447 003a BD46     		mov	sp, r7
 6448              		.cfi_def_cfa_register 13
 6449              		@ sp needed
 6450 003c 80BC     		pop	{r7}
 6451              		.cfi_restore 7
 6452              		.cfi_def_cfa_offset 0
 6453 003e 7047     		bx	lr
 6454              		.cfi_endproc
 6455              	.LFE185:
 6457              		.section	.text.hals_uart_interrupt_disable,"ax",%progbits
 6458              		.align	1
 6459              		.global	hals_uart_interrupt_disable
 6460              		.syntax unified
 6461              		.thumb
 6462              		.thumb_func
 6463              		.fpu softvfp
 6465              	hals_uart_interrupt_disable:
 6466              	.LFB186:
2197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      disable UART interrupt
2200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  interrupt: interrupt
2202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_IDLE: idle interrupt
2204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_RBNE: read data buffer not empty interrupt and overrun error interrupt
2205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_TC: transmission complete interrupt
2206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_TBE: transmitter buffer empty interrupt
2207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_PERR: parity error interrupt
2208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_AM: address match interrupt
2209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_RT: receiver timeout interrupt
2210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_EB: end of block interrupt
2211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_LBD: LIN break detection interrupt
2212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_ERR: error interrupt
2213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_CTS: CTS interrupt
2214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_WU: wakeup from deep-sleep mode interrupt
2215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_RFF: receive FIFO full interrupt
2216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_interrupt_disable(uint32_t uart_periph, usart_interrupt_enum interrupt)
2220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6467              		.loc 1 2220 1
 6468              		.cfi_startproc
 6469              		@ args = 0, pretend = 0, frame = 8
 6470              		@ frame_needed = 1, uses_anonymous_args = 0
 6471              		@ link register save eliminated.
 6472 0000 80B4     		push	{r7}
 6473              		.cfi_def_cfa_offset 4
 6474              		.cfi_offset 7, -4
 6475 0002 83B0     		sub	sp, sp, #12
 6476              		.cfi_def_cfa_offset 16
 6477 0004 00AF     		add	r7, sp, #0
 6478              		.cfi_def_cfa_register 7
 6479 0006 7860     		str	r0, [r7, #4]
 6480 0008 0B46     		mov	r3, r1
 6481 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     USART_REG_VAL(uart_periph, interrupt) &= ~BIT(USART_BIT_POS(interrupt));
 6482              		.loc 1 2221 43
 6483 000c 7B88     		ldrh	r3, [r7, #2]
 6484 000e 9B09     		lsrs	r3, r3, #6
 6485 0010 9BB2     		uxth	r3, r3
 6486 0012 1A46     		mov	r2, r3
 6487 0014 7B68     		ldr	r3, [r7, #4]
 6488 0016 1344     		add	r3, r3, r2
 6489 0018 1A68     		ldr	r2, [r3]
 6490              		.loc 1 2221 47
 6491 001a 7B88     		ldrh	r3, [r7, #2]
 6492 001c 03F01F03 		and	r3, r3, #31
 6493 0020 0121     		movs	r1, #1
 6494 0022 01FA03F3 		lsl	r3, r1, r3
 6495              		.loc 1 2221 46
 6496 0026 DB43     		mvns	r3, r3
 6497              		.loc 1 2221 43
 6498 0028 7988     		ldrh	r1, [r7, #2]
 6499 002a 8909     		lsrs	r1, r1, #6
 6500 002c 89B2     		uxth	r1, r1
 6501 002e 0846     		mov	r0, r1
 6502 0030 7968     		ldr	r1, [r7, #4]
 6503 0032 0144     		add	r1, r1, r0
 6504 0034 1340     		ands	r3, r3, r2
 6505 0036 0B60     		str	r3, [r1]
2222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6506              		.loc 1 2222 1
 6507 0038 00BF     		nop
 6508 003a 0C37     		adds	r7, r7, #12
 6509              		.cfi_def_cfa_offset 4
 6510 003c BD46     		mov	sp, r7
 6511              		.cfi_def_cfa_register 13
 6512              		@ sp needed
 6513 003e 80BC     		pop	{r7}
 6514              		.cfi_restore 7
 6515              		.cfi_def_cfa_offset 0
 6516 0040 7047     		bx	lr
 6517              		.cfi_endproc
 6518              	.LFE186:
 6520              		.section	.text.hals_uart_interrupt_flag_get,"ax",%progbits
 6521              		.align	1
 6522              		.global	hals_uart_interrupt_flag_get
 6523              		.syntax unified
 6524              		.thumb
 6525              		.thumb_func
 6526              		.fpu softvfp
 6528              	hals_uart_interrupt_flag_get:
 6529              	.LFB187:
2223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      get UART interrupt flag status
2226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  int_flag: interrupt and flag type, refer to usart_interrupt_flag_enum
2228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_EB: end of block interrupt flag
2230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RT: receiver timeout interrupt flag
2231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_AM: address match interrupt flag
2232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_PERR: parity error interrupt flag
2233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_TBE: transmitter buffer empty interrupt flag
2234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_TC: transmission complete interrupt flag
2235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RBNE: read data buffer not empty interrupt flag
2236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RBNE_ORERR: overrun error interrupt flag
2237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_IDLE: idle line detected interrupt flag
2238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_LBD: LIN break detected interrupt flag
2239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_WU: wakeup from deep-sleep mode interrupt flag
2240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_CTS: CTS interrupt flag
2241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_ERR_NERR: noise error interrupt flag
2242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_ERR_ORERR: overrun error interrupt flag
2243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_ERR_FERR: frame error interrupt flag
2244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RFF: receive FIFO full interrupt flag
2245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     FlagStatus: SET or RESET
2247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** FlagStatus hals_uart_interrupt_flag_get(uint32_t uart_periph, usart_interrupt_flag_enum int_flag)
2249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6530              		.loc 1 2249 1
 6531              		.cfi_startproc
 6532              		@ args = 0, pretend = 0, frame = 16
 6533              		@ frame_needed = 1, uses_anonymous_args = 0
 6534              		@ link register save eliminated.
 6535 0000 80B4     		push	{r7}
 6536              		.cfi_def_cfa_offset 4
 6537              		.cfi_offset 7, -4
 6538 0002 85B0     		sub	sp, sp, #20
 6539              		.cfi_def_cfa_offset 24
 6540 0004 00AF     		add	r7, sp, #0
 6541              		.cfi_def_cfa_register 7
 6542 0006 7860     		str	r0, [r7, #4]
 6543 0008 3960     		str	r1, [r7]
2250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint32_t intenable = 0U, flagstatus = 0U;
 6544              		.loc 1 2250 14
 6545 000a 0023     		movs	r3, #0
 6546 000c FB60     		str	r3, [r7, #12]
 6547              		.loc 1 2250 30
 6548 000e 0023     		movs	r3, #0
 6549 0010 BB60     		str	r3, [r7, #8]
2251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* get the interrupt enable bit status */
2252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     intenable = (USART_REG_VAL(uart_periph, int_flag) & BIT(USART_BIT_POS(int_flag)));
 6550              		.loc 1 2252 18
 6551 0012 3B68     		ldr	r3, [r7]
 6552 0014 9B09     		lsrs	r3, r3, #6
 6553 0016 C3F30902 		ubfx	r2, r3, #0, #10
 6554 001a 7B68     		ldr	r3, [r7, #4]
 6555 001c 1344     		add	r3, r3, r2
 6556 001e 1A68     		ldr	r2, [r3]
 6557              		.loc 1 2252 57
 6558 0020 3B68     		ldr	r3, [r7]
 6559 0022 03F01F03 		and	r3, r3, #31
 6560 0026 0121     		movs	r1, #1
 6561 0028 01FA03F3 		lsl	r3, r1, r3
 6562              		.loc 1 2252 15
 6563 002c 1340     		ands	r3, r3, r2
 6564 002e FB60     		str	r3, [r7, #12]
2253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* get the corresponding flag bit status */
2254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     flagstatus = (USART_REG_VAL2(uart_periph, int_flag) & BIT(USART_BIT_POS2(int_flag)));
 6565              		.loc 1 2254 19
 6566 0030 3B68     		ldr	r3, [r7]
 6567 0032 9A0D     		lsrs	r2, r3, #22
 6568 0034 7B68     		ldr	r3, [r7, #4]
 6569 0036 1344     		add	r3, r3, r2
 6570 0038 1A68     		ldr	r2, [r3]
 6571              		.loc 1 2254 59
 6572 003a 3B68     		ldr	r3, [r7]
 6573 003c 1B0C     		lsrs	r3, r3, #16
 6574 003e 03F01F03 		and	r3, r3, #31
 6575 0042 0121     		movs	r1, #1
 6576 0044 01FA03F3 		lsl	r3, r1, r3
 6577              		.loc 1 2254 16
 6578 0048 1340     		ands	r3, r3, r2
 6579 004a BB60     		str	r3, [r7, #8]
2255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(flagstatus && intenable) {
 6580              		.loc 1 2256 7
 6581 004c BB68     		ldr	r3, [r7, #8]
 6582 004e 002B     		cmp	r3, #0
 6583 0050 04D0     		beq	.L261
 6584              		.loc 1 2256 19 discriminator 1
 6585 0052 FB68     		ldr	r3, [r7, #12]
 6586 0054 002B     		cmp	r3, #0
 6587 0056 01D0     		beq	.L261
2257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return SET;
 6588              		.loc 1 2257 16
 6589 0058 0123     		movs	r3, #1
 6590 005a 00E0     		b	.L262
 6591              	.L261:
2258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return RESET;
 6592              		.loc 1 2259 16
 6593 005c 0023     		movs	r3, #0
 6594              	.L262:
2260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6595              		.loc 1 2261 1
 6596 005e 1846     		mov	r0, r3
 6597 0060 1437     		adds	r7, r7, #20
 6598              		.cfi_def_cfa_offset 4
 6599 0062 BD46     		mov	sp, r7
 6600              		.cfi_def_cfa_register 13
 6601              		@ sp needed
 6602 0064 80BC     		pop	{r7}
 6603              		.cfi_restore 7
 6604              		.cfi_def_cfa_offset 0
 6605 0066 7047     		bx	lr
 6606              		.cfi_endproc
 6607              	.LFE187:
 6609              		.section	.text.hals_uart_interrupt_flag_clear,"ax",%progbits
 6610              		.align	1
 6611              		.global	hals_uart_interrupt_flag_clear
 6612              		.syntax unified
 6613              		.thumb
 6614              		.thumb_func
 6615              		.fpu softvfp
 6617              	hals_uart_interrupt_flag_clear:
 6618              	.LFB188:
2262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      clear UART interrupt flag
2265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart_periph: USARTx(x=0,1)
2266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  flag: UART interrupt flag
2267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 only one parameter can be selected which is shown as below:
2268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_EB: end of block interrupt flag
2269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RT: receiver timeout interrupt flag
2270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_AM: address match interrupt flag
2271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_PERR: parity error interrupt flag
2272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_TC: transmission complete interrupt flag
2273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RBNE_ORERR: overrun error interrupt flag
2274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_IDLE: idle line detected interrupt flag
2275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_LBD: LIN break detected interrupt flag
2276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_WU: wakeup from deep-sleep mode interrupt flag
2277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_CTS: CTS change interrupt flag
2278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_ERR_FERR: frame error interrupt flag
2279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_ERR_NERR: noise detected interrupt flag
2280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_ERR_ORERR: overrun error interrupt flag
2281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****       \arg        USART_INT_FLAG_RFF: receive FIFO full interrupt flag
2282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** void hals_uart_interrupt_flag_clear(uint32_t uart_periph, usart_interrupt_flag_enum int_flag)
2286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6619              		.loc 1 2286 1
 6620              		.cfi_startproc
 6621              		@ args = 0, pretend = 0, frame = 8
 6622              		@ frame_needed = 1, uses_anonymous_args = 0
 6623              		@ link register save eliminated.
 6624 0000 80B4     		push	{r7}
 6625              		.cfi_def_cfa_offset 4
 6626              		.cfi_offset 7, -4
 6627 0002 83B0     		sub	sp, sp, #12
 6628              		.cfi_def_cfa_offset 16
 6629 0004 00AF     		add	r7, sp, #0
 6630              		.cfi_def_cfa_register 7
 6631 0006 7860     		str	r0, [r7, #4]
 6632 0008 3960     		str	r1, [r7]
2287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(USART_INT_FLAG_RFF == int_flag) {
 6633              		.loc 1 2287 7
 6634 000a 3B68     		ldr	r3, [r7]
 6635 000c 0F4A     		ldr	r2, .L267
 6636 000e 9342     		cmp	r3, r2
 6637 0010 08D1     		bne	.L264
2288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_RFCS(uart_periph) &= (uint32_t)(~USART_RFCS_RFFINT);
 6638              		.loc 1 2288 33
 6639 0012 7B68     		ldr	r3, [r7, #4]
 6640 0014 D033     		adds	r3, r3, #208
 6641 0016 1B68     		ldr	r3, [r3]
 6642 0018 7A68     		ldr	r2, [r7, #4]
 6643 001a D032     		adds	r2, r2, #208
 6644 001c 23F40043 		bic	r3, r3, #32768
 6645 0020 1360     		str	r3, [r2]
2289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         USART_INTC(uart_periph) |= BIT(USART_BIT_POS2(int_flag));
2291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6646              		.loc 1 2292 1
 6647 0022 0DE0     		b	.L266
 6648              	.L264:
2290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 6649              		.loc 1 2290 33
 6650 0024 7B68     		ldr	r3, [r7, #4]
 6651 0026 2033     		adds	r3, r3, #32
 6652 0028 1A68     		ldr	r2, [r3]
2290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 6653              		.loc 1 2290 36
 6654 002a 3B68     		ldr	r3, [r7]
 6655 002c 1B0C     		lsrs	r3, r3, #16
 6656 002e 03F01F03 		and	r3, r3, #31
 6657 0032 0121     		movs	r1, #1
 6658 0034 01FA03F3 		lsl	r3, r1, r3
2290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 6659              		.loc 1 2290 33
 6660 0038 7968     		ldr	r1, [r7, #4]
 6661 003a 2031     		adds	r1, r1, #32
 6662 003c 1343     		orrs	r3, r3, r2
 6663 003e 0B60     		str	r3, [r1]
 6664              	.L266:
 6665              		.loc 1 2292 1
 6666 0040 00BF     		nop
 6667 0042 0C37     		adds	r7, r7, #12
 6668              		.cfi_def_cfa_offset 4
 6669 0044 BD46     		mov	sp, r7
 6670              		.cfi_def_cfa_register 13
 6671              		@ sp needed
 6672 0046 80BC     		pop	{r7}
 6673              		.cfi_restore 7
 6674              		.cfi_def_cfa_offset 0
 6675 0048 7047     		bx	lr
 6676              	.L268:
 6677 004a 00BF     		.align	2
 6678              	.L267:
 6679 004c 09340F34 		.word	873411593
 6680              		.cfi_endproc
 6681              	.LFE188:
 6683              		.section	.text._uart_data_bit_mask_get,"ax",%progbits
 6684              		.align	1
 6685              		.syntax unified
 6686              		.thumb
 6687              		.thumb_func
 6688              		.fpu softvfp
 6690              	_uart_data_bit_mask_get:
 6691              	.LFB189:
2293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      get the mask of data bit
2296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
2297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
2298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
2299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     the mask of data bit(0x7F, 0xFF, 0x1FF)
2301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static uint16_t _uart_data_bit_mask_get(hal_uart_dev_struct *uart)
2303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6692              		.loc 1 2303 1
 6693              		.cfi_startproc
 6694              		@ args = 0, pretend = 0, frame = 16
 6695              		@ frame_needed = 1, uses_anonymous_args = 0
 6696              		@ link register save eliminated.
 6697 0000 80B4     		push	{r7}
 6698              		.cfi_def_cfa_offset 4
 6699              		.cfi_offset 7, -4
 6700 0002 85B0     		sub	sp, sp, #20
 6701              		.cfi_def_cfa_offset 24
 6702 0004 00AF     		add	r7, sp, #0
 6703              		.cfi_def_cfa_register 7
 6704 0006 7860     		str	r0, [r7, #4]
2304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     uint16_t reval;
2305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET != (USART_CTL0(uart->periph) & USART_CTL0_WL)) {
 6705              		.loc 1 2306 18
 6706 0008 7B68     		ldr	r3, [r7, #4]
 6707 000a 1B68     		ldr	r3, [r3]
 6708 000c 1B68     		ldr	r3, [r3]
 6709              		.loc 1 2306 43
 6710 000e 03F48053 		and	r3, r3, #4096
 6711              		.loc 1 2306 7
 6712 0012 002B     		cmp	r3, #0
 6713 0014 0DD0     		beq	.L270
2307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether the PCEN is enabled */
2308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != (USART_CTL0(uart->periph) & USART_CTL0_PCEN)) {
 6714              		.loc 1 2308 22
 6715 0016 7B68     		ldr	r3, [r7, #4]
 6716 0018 1B68     		ldr	r3, [r3]
 6717 001a 1B68     		ldr	r3, [r3]
 6718              		.loc 1 2308 47
 6719 001c 03F48063 		and	r3, r3, #1024
 6720              		.loc 1 2308 11
 6721 0020 002B     		cmp	r3, #0
 6722 0022 02D0     		beq	.L271
2309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             reval = 0xFFU;
 6723              		.loc 1 2309 19
 6724 0024 FF23     		movs	r3, #255
 6725 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 6726 0028 0FE0     		b	.L272
 6727              	.L271:
2310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         } else {
2311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             reval = 0x1FFU;
 6728              		.loc 1 2311 19
 6729 002a 40F2FF13 		movw	r3, #511
 6730 002e FB81     		strh	r3, [r7, #14]	@ movhi
 6731 0030 0BE0     		b	.L272
 6732              	.L270:
2312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
2313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* check whether the PCEN is enabled */
2315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(RESET != (USART_CTL0(uart->periph) & USART_CTL0_PCEN)) {
 6733              		.loc 1 2315 22
 6734 0032 7B68     		ldr	r3, [r7, #4]
 6735 0034 1B68     		ldr	r3, [r3]
 6736 0036 1B68     		ldr	r3, [r3]
 6737              		.loc 1 2315 47
 6738 0038 03F48063 		and	r3, r3, #1024
 6739              		.loc 1 2315 11
 6740 003c 002B     		cmp	r3, #0
 6741 003e 02D0     		beq	.L273
2316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             reval = 0x7FU;
 6742              		.loc 1 2316 19
 6743 0040 7F23     		movs	r3, #127
 6744 0042 FB81     		strh	r3, [r7, #14]	@ movhi
 6745 0044 01E0     		b	.L272
 6746              	.L273:
2317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         } else {
2318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             reval = 0xFFU;
 6747              		.loc 1 2318 19
 6748 0046 FF23     		movs	r3, #255
 6749 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 6750              	.L272:
2319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
2320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     return reval;
 6751              		.loc 1 2322 12
 6752 004a FB89     		ldrh	r3, [r7, #14]
2323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6753              		.loc 1 2323 1
 6754 004c 1846     		mov	r0, r3
 6755 004e 1437     		adds	r7, r7, #20
 6756              		.cfi_def_cfa_offset 4
 6757 0050 BD46     		mov	sp, r7
 6758              		.cfi_def_cfa_register 13
 6759              		@ sp needed
 6760 0052 80BC     		pop	{r7}
 6761              		.cfi_restore 7
 6762              		.cfi_def_cfa_offset 0
 6763 0054 7047     		bx	lr
 6764              		.cfi_endproc
 6765              	.LFE189:
 6767              		.section	.text._uart_error_flag_get,"ax",%progbits
 6768              		.align	1
 6769              		.syntax unified
 6770              		.thumb
 6771              		.thumb_func
 6772              		.fpu softvfp
 6774              	_uart_error_flag_get:
 6775              	.LFB190:
2324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      get uart error flag
2327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: uart device information structure
2328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure is not necessary to be reconfigured after structrue initializatio
2329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                     the structure parameters altering is automatically configured by core
2330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     SET or RESET
2332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static FlagStatus _uart_error_flag_get(hal_uart_dev_struct *uart)
2334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6776              		.loc 1 2334 1
 6777              		.cfi_startproc
 6778              		@ args = 0, pretend = 0, frame = 8
 6779              		@ frame_needed = 1, uses_anonymous_args = 0
 6780              		@ link register save eliminated.
 6781 0000 80B4     		push	{r7}
 6782              		.cfi_def_cfa_offset 4
 6783              		.cfi_offset 7, -4
 6784 0002 83B0     		sub	sp, sp, #12
 6785              		.cfi_def_cfa_offset 16
 6786 0004 00AF     		add	r7, sp, #0
 6787              		.cfi_def_cfa_register 7
 6788 0006 7860     		str	r0, [r7, #4]
2335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(0U == (USART_STAT(uart->periph) & (uint32_t)(USART_STAT_PERR | USART_STAT_FERR | \
 6789              		.loc 1 2335 15
 6790 0008 7B68     		ldr	r3, [r7, #4]
 6791 000a 1B68     		ldr	r3, [r3]
 6792 000c 1C33     		adds	r3, r3, #28
 6793 000e 1B68     		ldr	r3, [r3]
 6794              		.loc 1 2335 40
 6795 0010 03F00F03 		and	r3, r3, #15
 6796              		.loc 1 2335 7
 6797 0014 002B     		cmp	r3, #0
 6798 0016 01D1     		bne	.L276
2336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****               USART_STAT_ORERR | USART_STAT_NERR))) {
2337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return RESET;
 6799              		.loc 1 2337 16
 6800 0018 0023     		movs	r3, #0
 6801 001a 00E0     		b	.L277
 6802              	.L276:
2338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         return SET;
 6803              		.loc 1 2339 16
 6804 001c 0123     		movs	r3, #1
 6805              	.L277:
2340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6806              		.loc 1 2341 1
 6807 001e 1846     		mov	r0, r3
 6808 0020 0C37     		adds	r7, r7, #12
 6809              		.cfi_def_cfa_offset 4
 6810 0022 BD46     		mov	sp, r7
 6811              		.cfi_def_cfa_register 13
 6812              		@ sp needed
 6813 0024 80BC     		pop	{r7}
 6814              		.cfi_restore 7
 6815              		.cfi_def_cfa_offset 0
 6816 0026 7047     		bx	lr
 6817              		.cfi_endproc
 6818              	.LFE190:
 6820              		.section	.text._uart_transmit_complete_interrupt,"ax",%progbits
 6821              		.align	1
 6822              		.syntax unified
 6823              		.thumb
 6824              		.thumb_func
 6825              		.fpu softvfp
 6827              	_uart_transmit_complete_interrupt:
 6828              	.LFB191:
2342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      handle the transmit complete interrupt
2345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: pointer to a uart device information structure
2346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_transmit_complete_interrupt(void *uart)
2350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6829              		.loc 1 2350 1
 6830              		.cfi_startproc
 6831              		@ args = 0, pretend = 0, frame = 16
 6832              		@ frame_needed = 1, uses_anonymous_args = 0
 6833 0000 80B5     		push	{r7, lr}
 6834              		.cfi_def_cfa_offset 8
 6835              		.cfi_offset 7, -8
 6836              		.cfi_offset 14, -4
 6837 0002 84B0     		sub	sp, sp, #16
 6838              		.cfi_def_cfa_offset 24
 6839 0004 00AF     		add	r7, sp, #0
 6840              		.cfi_def_cfa_register 7
 6841 0006 7860     		str	r0, [r7, #4]
2351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_dev_struct *p_uart = uart;
 6842              		.loc 1 2351 26
 6843 0008 7B68     		ldr	r3, [r7, #4]
 6844 000a FB60     		str	r3, [r7, #12]
2352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_user_cb p_func = (hal_uart_user_cb)p_uart->tx_callback;
 6845              		.loc 1 2352 55
 6846 000c FB68     		ldr	r3, [r7, #12]
 6847 000e 9B6D     		ldr	r3, [r3, #88]
 6848              		.loc 1 2352 22
 6849 0010 BB60     		str	r3, [r7, #8]
2353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* disable the transmit complete interrupt */
2355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hals_uart_interrupt_disable(p_uart->periph, USART_INT_TC);
 6850              		.loc 1 2355 5
 6851 0012 FB68     		ldr	r3, [r7, #12]
 6852 0014 1B68     		ldr	r3, [r3]
 6853 0016 0621     		movs	r1, #6
 6854 0018 1846     		mov	r0, r3
 6855 001a FFF7FEFF 		bl	hals_uart_interrupt_disable
2356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* reset transmit_complete_handle and tx_state */
2358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_uart->uart_irq.transmit_complete_handle = NULL;
 6856              		.loc 1 2358 47
 6857 001e FB68     		ldr	r3, [r7, #12]
 6858 0020 0022     		movs	r2, #0
 6859 0022 1A61     		str	r2, [r3, #16]
2359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_uart->tx_state = UART_STATE_FREE;
 6860              		.loc 1 2359 22
 6861 0024 FB68     		ldr	r3, [r7, #12]
 6862 0026 0022     		movs	r2, #0
 6863 0028 83F85220 		strb	r2, [r3, #82]
2360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_func) {
 6864              		.loc 1 2361 7
 6865 002c BB68     		ldr	r3, [r7, #8]
 6866 002e 002B     		cmp	r3, #0
 6867 0030 02D0     		beq	.L280
2362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* if there is a user transmit complete callback */
2363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_func(p_uart);
 6868              		.loc 1 2363 9
 6869 0032 BB68     		ldr	r3, [r7, #8]
 6870 0034 F868     		ldr	r0, [r7, #12]
 6871 0036 9847     		blx	r3
 6872              	.LVL10:
 6873              	.L280:
2364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6874              		.loc 1 2365 1
 6875 0038 00BF     		nop
 6876 003a 1037     		adds	r7, r7, #16
 6877              		.cfi_def_cfa_offset 8
 6878 003c BD46     		mov	sp, r7
 6879              		.cfi_def_cfa_register 13
 6880              		@ sp needed
 6881 003e 80BD     		pop	{r7, pc}
 6882              		.cfi_endproc
 6883              	.LFE191:
 6885              		.section	.text._uart_transmit_interrupt,"ax",%progbits
 6886              		.align	1
 6887              		.syntax unified
 6888              		.thumb
 6889              		.thumb_func
 6890              		.fpu softvfp
 6892              	_uart_transmit_interrupt:
 6893              	.LFB192:
2366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      handle the transmit interrupt
2369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: pointer to a uart device information structure
2370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_transmit_interrupt(void *uart)
2374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 6894              		.loc 1 2374 1
 6895              		.cfi_startproc
 6896              		@ args = 0, pretend = 0, frame = 16
 6897              		@ frame_needed = 1, uses_anonymous_args = 0
 6898 0000 80B5     		push	{r7, lr}
 6899              		.cfi_def_cfa_offset 8
 6900              		.cfi_offset 7, -8
 6901              		.cfi_offset 14, -4
 6902 0002 84B0     		sub	sp, sp, #16
 6903              		.cfi_def_cfa_offset 24
 6904 0004 00AF     		add	r7, sp, #0
 6905              		.cfi_def_cfa_register 7
 6906 0006 7860     		str	r0, [r7, #4]
2375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_dev_struct *p_uart = uart;
 6907              		.loc 1 2375 26
 6908 0008 7B68     		ldr	r3, [r7, #4]
 6909 000a FB60     		str	r3, [r7, #12]
2376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(p_uart->txbuffer.pos < p_uart->txbuffer.length) {
 6910              		.loc 1 2377 24
 6911 000c FB68     		ldr	r3, [r7, #12]
 6912 000e DA6B     		ldr	r2, [r3, #60]
 6913              		.loc 1 2377 47
 6914 0010 FB68     		ldr	r3, [r7, #12]
 6915 0012 9B6B     		ldr	r3, [r3, #56]
 6916              		.loc 1 2377 7
 6917 0014 9A42     		cmp	r2, r3
 6918 0016 35D2     		bcs	.L282
2378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* send data: in case of 9bit&no parity, uint16_t data will be transmitted */
2379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if((RESET != (USART_CTL0(p_uart->periph) & USART_CTL0_WL)) && \
 6919              		.loc 1 2379 23
 6920 0018 FB68     		ldr	r3, [r7, #12]
 6921 001a 1B68     		ldr	r3, [r3]
 6922 001c 1B68     		ldr	r3, [r3]
 6923              		.loc 1 2379 50
 6924 001e 03F48053 		and	r3, r3, #4096
 6925              		.loc 1 2379 11
 6926 0022 002B     		cmp	r3, #0
 6927 0024 18D0     		beq	.L283
2380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 (RESET == (USART_CTL0(p_uart->periph) & USART_CTL0_PCEN))) {
 6928              		.loc 1 2380 28 discriminator 1
 6929 0026 FB68     		ldr	r3, [r7, #12]
 6930 0028 1B68     		ldr	r3, [r3]
 6931 002a 1B68     		ldr	r3, [r3]
 6932              		.loc 1 2380 55 discriminator 1
 6933 002c 03F48063 		and	r3, r3, #1024
2379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                 (RESET == (USART_CTL0(p_uart->periph) & USART_CTL0_PCEN))) {
 6934              		.loc 1 2379 68 discriminator 1
 6935 0030 002B     		cmp	r3, #0
 6936 0032 11D1     		bne	.L283
2381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* 9-bit data, none parity */
2382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_data_transmit(p_uart->periph, (*(uint16_t *)p_uart->txbuffer.buffer & (uint16
 6937              		.loc 1 2382 13
 6938 0034 FB68     		ldr	r3, [r7, #12]
 6939 0036 1A68     		ldr	r2, [r3]
 6940              		.loc 1 2382 83
 6941 0038 FB68     		ldr	r3, [r7, #12]
 6942 003a 5B6B     		ldr	r3, [r3, #52]
 6943              		.loc 1 2382 54
 6944 003c 1B88     		ldrh	r3, [r3]
 6945              		.loc 1 2382 13
 6946 003e C3F30803 		ubfx	r3, r3, #0, #9
 6947 0042 9BB2     		uxth	r3, r3
 6948 0044 1946     		mov	r1, r3
 6949 0046 1046     		mov	r0, r2
 6950 0048 FFF7FEFF 		bl	hals_uart_data_transmit
2383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             p_uart->txbuffer.buffer += 2;
 6951              		.loc 1 2383 37
 6952 004c FB68     		ldr	r3, [r7, #12]
 6953 004e 5B6B     		ldr	r3, [r3, #52]
 6954 0050 9A1C     		adds	r2, r3, #2
 6955 0052 FB68     		ldr	r3, [r7, #12]
 6956 0054 5A63     		str	r2, [r3, #52]
 6957 0056 0FE0     		b	.L284
 6958              	.L283:
2384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         } else {
2385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* 9-bit data, with parity or 8-bit data */
2386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             hals_uart_data_transmit(p_uart->periph, (*p_uart->txbuffer.buffer & (uint8_t)0xFFU));
 6959              		.loc 1 2386 13
 6960 0058 FB68     		ldr	r3, [r7, #12]
 6961 005a 1A68     		ldr	r2, [r3]
 6962              		.loc 1 2386 71
 6963 005c FB68     		ldr	r3, [r7, #12]
 6964 005e 5B6B     		ldr	r3, [r3, #52]
 6965              		.loc 1 2386 54
 6966 0060 1B78     		ldrb	r3, [r3]
 6967 0062 DBB2     		uxtb	r3, r3
 6968              		.loc 1 2386 13
 6969 0064 9BB2     		uxth	r3, r3
 6970 0066 1946     		mov	r1, r3
 6971 0068 1046     		mov	r0, r2
 6972 006a FFF7FEFF 		bl	hals_uart_data_transmit
2387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             p_uart->txbuffer.buffer++;
 6973              		.loc 1 2387 29
 6974 006e FB68     		ldr	r3, [r7, #12]
 6975 0070 5B6B     		ldr	r3, [r3, #52]
 6976              		.loc 1 2387 36
 6977 0072 5A1C     		adds	r2, r3, #1
 6978 0074 FB68     		ldr	r3, [r7, #12]
 6979 0076 5A63     		str	r2, [r3, #52]
 6980              	.L284:
2388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
2389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->txbuffer.pos++;
 6981              		.loc 1 2389 25
 6982 0078 FB68     		ldr	r3, [r7, #12]
 6983 007a DB6B     		ldr	r3, [r3, #60]
 6984              		.loc 1 2389 29
 6985 007c 5A1C     		adds	r2, r3, #1
 6986 007e FB68     		ldr	r3, [r7, #12]
 6987 0080 DA63     		str	r2, [r3, #60]
2390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable the TBE interrupt, enable the TC interrupt and reset the transmit_ready_handle *
2392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_TBE);
2393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(p_uart->periph, USART_INT_TC);
2394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->uart_irq.transmit_ready_handle = NULL;
2395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 6988              		.loc 1 2396 1
 6989 0082 0EE0     		b	.L286
 6990              	.L282:
2392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(p_uart->periph, USART_INT_TC);
 6991              		.loc 1 2392 9
 6992 0084 FB68     		ldr	r3, [r7, #12]
 6993 0086 1B68     		ldr	r3, [r3]
 6994 0088 0721     		movs	r1, #7
 6995 008a 1846     		mov	r0, r3
 6996 008c FFF7FEFF 		bl	hals_uart_interrupt_disable
2393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->uart_irq.transmit_ready_handle = NULL;
 6997              		.loc 1 2393 9
 6998 0090 FB68     		ldr	r3, [r7, #12]
 6999 0092 1B68     		ldr	r3, [r3]
 7000 0094 0621     		movs	r1, #6
 7001 0096 1846     		mov	r0, r3
 7002 0098 FFF7FEFF 		bl	hals_uart_interrupt_enable
2394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
 7003              		.loc 1 2394 48
 7004 009c FB68     		ldr	r3, [r7, #12]
 7005 009e 0022     		movs	r2, #0
 7006 00a0 DA60     		str	r2, [r3, #12]
 7007              	.L286:
 7008              		.loc 1 2396 1
 7009 00a2 00BF     		nop
 7010 00a4 1037     		adds	r7, r7, #16
 7011              		.cfi_def_cfa_offset 8
 7012 00a6 BD46     		mov	sp, r7
 7013              		.cfi_def_cfa_register 13
 7014              		@ sp needed
 7015 00a8 80BD     		pop	{r7, pc}
 7016              		.cfi_endproc
 7017              	.LFE192:
 7019              		.section	.text._uart_receive_interrupt,"ax",%progbits
 7020              		.align	1
 7021              		.syntax unified
 7022              		.thumb
 7023              		.thumb_func
 7024              		.fpu softvfp
 7026              	_uart_receive_interrupt:
 7027              	.LFB193:
2397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      handle the receive interrupt
2400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  uart: pointer to a uart device information structure
2401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_receive_interrupt(void *uart)
2405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 7028              		.loc 1 2405 1
 7029              		.cfi_startproc
 7030              		@ args = 0, pretend = 0, frame = 16
 7031              		@ frame_needed = 1, uses_anonymous_args = 0
 7032 0000 80B5     		push	{r7, lr}
 7033              		.cfi_def_cfa_offset 8
 7034              		.cfi_offset 7, -8
 7035              		.cfi_offset 14, -4
 7036 0002 84B0     		sub	sp, sp, #16
 7037              		.cfi_def_cfa_offset 24
 7038 0004 00AF     		add	r7, sp, #0
 7039              		.cfi_def_cfa_register 7
 7040 0006 7860     		str	r0, [r7, #4]
2406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_dev_struct *p_uart = uart;
 7041              		.loc 1 2406 26
 7042 0008 7B68     		ldr	r3, [r7, #4]
 7043 000a FB60     		str	r3, [r7, #12]
2407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_user_cb p_func = (hal_uart_user_cb)p_uart->rx_callback;
 7044              		.loc 1 2407 55
 7045 000c FB68     		ldr	r3, [r7, #12]
 7046 000e 5B6D     		ldr	r3, [r3, #84]
 7047              		.loc 1 2407 22
 7048 0010 BB60     		str	r3, [r7, #8]
2408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* store the received data */
2410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(0x1FFU == p_uart->data_bit_mask) {
 7049              		.loc 1 2410 24
 7050 0012 FB68     		ldr	r3, [r7, #12]
 7051 0014 B3F84C30 		ldrh	r3, [r3, #76]
 7052              		.loc 1 2410 7
 7053 0018 40F2FF12 		movw	r2, #511
 7054 001c 9342     		cmp	r3, r2
 7055 001e 14D1     		bne	.L288
2411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         *(uint16_t *)p_uart->rxbuffer.buffer = (hals_uart_data_receive(p_uart->periph) &
 7056              		.loc 1 2411 49
 7057 0020 FB68     		ldr	r3, [r7, #12]
 7058 0022 1B68     		ldr	r3, [r3]
 7059 0024 1846     		mov	r0, r3
 7060 0026 FFF7FEFF 		bl	hals_uart_data_receive
 7061 002a 0346     		mov	r3, r0
 7062 002c 1946     		mov	r1, r3
2412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                                 p_uart->data_bit_mask);
 7063              		.loc 1 2412 55
 7064 002e FB68     		ldr	r3, [r7, #12]
 7065 0030 B3F84C20 		ldrh	r2, [r3, #76]
2411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         *(uint16_t *)p_uart->rxbuffer.buffer = (hals_uart_data_receive(p_uart->periph) &
 7066              		.loc 1 2411 38
 7067 0034 FB68     		ldr	r3, [r7, #12]
 7068 0036 1B6C     		ldr	r3, [r3, #64]
2411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         *(uint16_t *)p_uart->rxbuffer.buffer = (hals_uart_data_receive(p_uart->periph) &
 7069              		.loc 1 2411 46
 7070 0038 0A40     		ands	r2, r2, r1
 7071 003a 92B2     		uxth	r2, r2
 7072 003c 1A80     		strh	r2, [r3]	@ movhi
2413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rxbuffer.buffer += 2U;
 7073              		.loc 1 2413 33
 7074 003e FB68     		ldr	r3, [r7, #12]
 7075 0040 1B6C     		ldr	r3, [r3, #64]
 7076 0042 9A1C     		adds	r2, r3, #2
 7077 0044 FB68     		ldr	r3, [r7, #12]
 7078 0046 1A64     		str	r2, [r3, #64]
 7079 0048 14E0     		b	.L289
 7080              	.L288:
2414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         *p_uart->rxbuffer.buffer = (uint8_t)(hals_uart_data_receive(p_uart->periph) &
 7081              		.loc 1 2415 46
 7082 004a FB68     		ldr	r3, [r7, #12]
 7083 004c 1B68     		ldr	r3, [r3]
 7084 004e 1846     		mov	r0, r3
 7085 0050 FFF7FEFF 		bl	hals_uart_data_receive
 7086 0054 0346     		mov	r3, r0
 7087              		.loc 1 2415 36
 7088 0056 D9B2     		uxtb	r1, r3
2416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                              p_uart->data_bit_mask);
 7089              		.loc 1 2416 52
 7090 0058 FB68     		ldr	r3, [r7, #12]
 7091 005a B3F84C30 		ldrh	r3, [r3, #76]
2415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                              p_uart->data_bit_mask);
 7092              		.loc 1 2415 36
 7093 005e DAB2     		uxtb	r2, r3
2415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                              p_uart->data_bit_mask);
 7094              		.loc 1 2415 26
 7095 0060 FB68     		ldr	r3, [r7, #12]
 7096 0062 1B6C     		ldr	r3, [r3, #64]
2415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                              p_uart->data_bit_mask);
 7097              		.loc 1 2415 36
 7098 0064 0A40     		ands	r2, r2, r1
 7099 0066 D2B2     		uxtb	r2, r2
2415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****                                              p_uart->data_bit_mask);
 7100              		.loc 1 2415 34
 7101 0068 1A70     		strb	r2, [r3]
2417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rxbuffer.buffer++;
 7102              		.loc 1 2417 25
 7103 006a FB68     		ldr	r3, [r7, #12]
 7104 006c 1B6C     		ldr	r3, [r3, #64]
 7105              		.loc 1 2417 32
 7106 006e 5A1C     		adds	r2, r3, #1
 7107 0070 FB68     		ldr	r3, [r7, #12]
 7108 0072 1A64     		str	r2, [r3, #64]
 7109              	.L289:
2418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_uart->rxbuffer.pos++;
 7110              		.loc 1 2419 21
 7111 0074 FB68     		ldr	r3, [r7, #12]
 7112 0076 9B6C     		ldr	r3, [r3, #72]
 7113              		.loc 1 2419 25
 7114 0078 5A1C     		adds	r2, r3, #1
 7115 007a FB68     		ldr	r3, [r7, #12]
 7116 007c 9A64     		str	r2, [r3, #72]
2420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* receive is finished */
2422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(p_uart->rxbuffer.pos == p_uart->rxbuffer.length) {
 7117              		.loc 1 2422 24
 7118 007e FB68     		ldr	r3, [r7, #12]
 7119 0080 9A6C     		ldr	r2, [r3, #72]
 7120              		.loc 1 2422 48
 7121 0082 FB68     		ldr	r3, [r7, #12]
 7122 0084 5B6C     		ldr	r3, [r3, #68]
 7123              		.loc 1 2422 7
 7124 0086 9A42     		cmp	r2, r3
 7125 0088 1FD1     		bne	.L291
2423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable PERR, ERR, RBNE interrupt */
2424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_PERR);
 7126              		.loc 1 2424 9
 7127 008a FB68     		ldr	r3, [r7, #12]
 7128 008c 1B68     		ldr	r3, [r3]
 7129 008e 0821     		movs	r1, #8
 7130 0090 1846     		mov	r0, r3
 7131 0092 FFF7FEFF 		bl	hals_uart_interrupt_disable
2425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_ERR);
 7132              		.loc 1 2425 9
 7133 0096 FB68     		ldr	r3, [r7, #12]
 7134 0098 1B68     		ldr	r3, [r3]
 7135 009a 4FF40071 		mov	r1, #512
 7136 009e 1846     		mov	r0, r3
 7137 00a0 FFF7FEFF 		bl	hals_uart_interrupt_disable
2426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_RBNE);
 7138              		.loc 1 2426 9
 7139 00a4 FB68     		ldr	r3, [r7, #12]
 7140 00a6 1B68     		ldr	r3, [r3]
 7141 00a8 0521     		movs	r1, #5
 7142 00aa 1846     		mov	r0, r3
 7143 00ac FFF7FEFF 		bl	hals_uart_interrupt_disable
2427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* reset receive_complete_handle and rx_state */
2429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->uart_irq.receive_complete_handle = NULL;
 7144              		.loc 1 2429 50
 7145 00b0 FB68     		ldr	r3, [r7, #12]
 7146 00b2 0022     		movs	r2, #0
 7147 00b4 5A60     		str	r2, [r3, #4]
2430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rx_state = UART_STATE_FREE;
 7148              		.loc 1 2430 26
 7149 00b6 FB68     		ldr	r3, [r7, #12]
 7150 00b8 0022     		movs	r2, #0
 7151 00ba 83F85320 		strb	r2, [r3, #83]
2431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         if(NULL != p_func) {
 7152              		.loc 1 2432 11
 7153 00be BB68     		ldr	r3, [r7, #8]
 7154 00c0 002B     		cmp	r3, #0
 7155 00c2 02D0     		beq	.L291
2433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             /* if there is a user receive complete callback */
2434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****             p_func(p_uart);
 7156              		.loc 1 2434 13
 7157 00c4 BB68     		ldr	r3, [r7, #8]
 7158 00c6 F868     		ldr	r0, [r7, #12]
 7159 00c8 9847     		blx	r3
 7160              	.LVL11:
 7161              	.L291:
2435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         }
2436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 7162              		.loc 1 2437 1
 7163 00ca 00BF     		nop
 7164 00cc 1037     		adds	r7, r7, #16
 7165              		.cfi_def_cfa_offset 8
 7166 00ce BD46     		mov	sp, r7
 7167              		.cfi_def_cfa_register 13
 7168              		@ sp needed
 7169 00d0 80BD     		pop	{r7, pc}
 7170              		.cfi_endproc
 7171              	.LFE193:
 7173              		.section	.text._uart_transmit_dma,"ax",%progbits
 7174              		.align	1
 7175              		.syntax unified
 7176              		.thumb
 7177              		.thumb_func
 7178              		.fpu softvfp
 7180              	_uart_transmit_dma:
 7181              	.LFB194:
2438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      handle the uart DMA transmit process
2441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dma: pointer to a DMA device information structure
2442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_transmit_dma(void *dma)
2446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 7182              		.loc 1 2446 1
 7183              		.cfi_startproc
 7184              		@ args = 0, pretend = 0, frame = 24
 7185              		@ frame_needed = 1, uses_anonymous_args = 0
 7186 0000 80B5     		push	{r7, lr}
 7187              		.cfi_def_cfa_offset 8
 7188              		.cfi_offset 7, -8
 7189              		.cfi_offset 14, -4
 7190 0002 86B0     		sub	sp, sp, #24
 7191              		.cfi_def_cfa_offset 32
 7192 0004 00AF     		add	r7, sp, #0
 7193              		.cfi_def_cfa_register 7
 7194 0006 7860     		str	r0, [r7, #4]
2447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_dev_struct *p_dma;
2448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_dev_struct *p_uart;
2449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_user_cb p_func;
2450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_dma = (hal_dma_dev_struct *)dma;
 7195              		.loc 1 2451 11
 7196 0008 7B68     		ldr	r3, [r7, #4]
 7197 000a 7B61     		str	r3, [r7, #20]
2452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_uart = (hal_uart_dev_struct *)p_dma->p_periph;
 7198              		.loc 1 2452 12
 7199 000c 7B69     		ldr	r3, [r7, #20]
 7200 000e 5B69     		ldr	r3, [r3, #20]
 7201 0010 3B61     		str	r3, [r7, #16]
2453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_func = (hal_uart_user_cb)p_uart->tx_callback;
 7202              		.loc 1 2453 38
 7203 0012 3B69     		ldr	r3, [r7, #16]
 7204 0014 9B6D     		ldr	r3, [r3, #88]
 7205              		.loc 1 2453 12
 7206 0016 FB60     		str	r3, [r7, #12]
2454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* DMA normal mode */
2456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET == (DMA_CHCTL(p_dma->channel) & DMA_CHXCTL_CMEN)) {
 7207              		.loc 1 2456 18
 7208 0018 7B69     		ldr	r3, [r7, #20]
 7209 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7210 001c 1A46     		mov	r2, r3
 7211 001e 1346     		mov	r3, r2
 7212 0020 9B00     		lsls	r3, r3, #2
 7213 0022 1344     		add	r3, r3, r2
 7214 0024 9B00     		lsls	r3, r3, #2
 7215 0026 1A46     		mov	r2, r3
 7216 0028 124B     		ldr	r3, .L296
 7217 002a 1344     		add	r3, r3, r2
 7218 002c 1B68     		ldr	r3, [r3]
 7219              		.loc 1 2456 44
 7220 002e 03F02003 		and	r3, r3, #32
 7221              		.loc 1 2456 7
 7222 0032 002B     		cmp	r3, #0
 7223 0034 13D1     		bne	.L293
2457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->txbuffer.pos = p_uart->txbuffer.length;
 7224              		.loc 1 2457 48
 7225 0036 3B69     		ldr	r3, [r7, #16]
 7226 0038 9A6B     		ldr	r2, [r3, #56]
 7227              		.loc 1 2457 30
 7228 003a 3B69     		ldr	r3, [r7, #16]
 7229 003c DA63     		str	r2, [r3, #60]
2458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_transmit_config(p_uart->periph, USART_TRANSMIT_DMA_DISABLE);
 7230              		.loc 1 2458 9
 7231 003e 3B69     		ldr	r3, [r7, #16]
 7232 0040 1B68     		ldr	r3, [r3]
 7233 0042 0021     		movs	r1, #0
 7234 0044 1846     		mov	r0, r3
 7235 0046 FFF7FEFF 		bl	hals_uart_dma_transmit_config
2459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* enable TC interrupt */
2460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_enable(p_uart->periph, USART_INT_TC);
 7236              		.loc 1 2460 9
 7237 004a 3B69     		ldr	r3, [r7, #16]
 7238 004c 1B68     		ldr	r3, [r3]
 7239 004e 0621     		movs	r1, #6
 7240 0050 1846     		mov	r0, r3
 7241 0052 FFF7FEFF 		bl	hals_uart_interrupt_enable
2461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* reset rx_state */
2462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->tx_state = UART_STATE_FREE;
 7242              		.loc 1 2462 26
 7243 0056 3B69     		ldr	r3, [r7, #16]
 7244 0058 0022     		movs	r2, #0
 7245 005a 83F85220 		strb	r2, [r3, #82]
 7246              	.L293:
2463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_func) {
 7247              		.loc 1 2465 7
 7248 005e FB68     		ldr	r3, [r7, #12]
 7249 0060 002B     		cmp	r3, #0
 7250 0062 02D0     		beq	.L295
2466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* if there is a user receive complete callback */
2467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_func(p_uart);
 7251              		.loc 1 2467 9
 7252 0064 FB68     		ldr	r3, [r7, #12]
 7253 0066 3869     		ldr	r0, [r7, #16]
 7254 0068 9847     		blx	r3
 7255              	.LVL12:
 7256              	.L295:
2468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 7257              		.loc 1 2469 1
 7258 006a 00BF     		nop
 7259 006c 1837     		adds	r7, r7, #24
 7260              		.cfi_def_cfa_offset 8
 7261 006e BD46     		mov	sp, r7
 7262              		.cfi_def_cfa_register 13
 7263              		@ sp needed
 7264 0070 80BD     		pop	{r7, pc}
 7265              	.L297:
 7266 0072 00BF     		.align	2
 7267              	.L296:
 7268 0074 08000240 		.word	1073872904
 7269              		.cfi_endproc
 7270              	.LFE194:
 7272              		.section	.text._uart_receive_dma,"ax",%progbits
 7273              		.align	1
 7274              		.syntax unified
 7275              		.thumb
 7276              		.thumb_func
 7277              		.fpu softvfp
 7279              	_uart_receive_dma:
 7280              	.LFB195:
2470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      handle the uart DMA receive process
2473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dma: pointer to a DMA device information structure
2474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_receive_dma(void *dma)
2478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 7281              		.loc 1 2478 1
 7282              		.cfi_startproc
 7283              		@ args = 0, pretend = 0, frame = 24
 7284              		@ frame_needed = 1, uses_anonymous_args = 0
 7285 0000 80B5     		push	{r7, lr}
 7286              		.cfi_def_cfa_offset 8
 7287              		.cfi_offset 7, -8
 7288              		.cfi_offset 14, -4
 7289 0002 86B0     		sub	sp, sp, #24
 7290              		.cfi_def_cfa_offset 32
 7291 0004 00AF     		add	r7, sp, #0
 7292              		.cfi_def_cfa_register 7
 7293 0006 7860     		str	r0, [r7, #4]
2479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_dev_struct *p_dma;
2480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_dev_struct *p_uart;
2481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_user_cb p_func;
2482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_dma = (hal_dma_dev_struct *)dma;
 7294              		.loc 1 2483 11
 7295 0008 7B68     		ldr	r3, [r7, #4]
 7296 000a 7B61     		str	r3, [r7, #20]
2484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_uart = (hal_uart_dev_struct *)p_dma->p_periph;
 7297              		.loc 1 2484 12
 7298 000c 7B69     		ldr	r3, [r7, #20]
 7299 000e 5B69     		ldr	r3, [r3, #20]
 7300 0010 3B61     		str	r3, [r7, #16]
2485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_func = (hal_uart_user_cb)p_uart->rx_callback;
 7301              		.loc 1 2485 38
 7302 0012 3B69     		ldr	r3, [r7, #16]
 7303 0014 5B6D     		ldr	r3, [r3, #84]
 7304              		.loc 1 2485 12
 7305 0016 FB60     		str	r3, [r7, #12]
2486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     /* DMA normal mode */
2488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(RESET == (DMA_CHCTL(p_dma->channel) & DMA_CHXCTL_CMEN)) {
 7306              		.loc 1 2488 18
 7307 0018 7B69     		ldr	r3, [r7, #20]
 7308 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7309 001c 1A46     		mov	r2, r3
 7310 001e 1346     		mov	r3, r2
 7311 0020 9B00     		lsls	r3, r3, #2
 7312 0022 1344     		add	r3, r3, r2
 7313 0024 9B00     		lsls	r3, r3, #2
 7314 0026 1A46     		mov	r2, r3
 7315 0028 154B     		ldr	r3, .L302
 7316 002a 1344     		add	r3, r3, r2
 7317 002c 1B68     		ldr	r3, [r3]
 7318              		.loc 1 2488 44
 7319 002e 03F02003 		and	r3, r3, #32
 7320              		.loc 1 2488 7
 7321 0032 002B     		cmp	r3, #0
 7322 0034 1AD1     		bne	.L299
2489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rxbuffer.pos = p_uart->rxbuffer.length;
 7323              		.loc 1 2489 48
 7324 0036 3B69     		ldr	r3, [r7, #16]
 7325 0038 5A6C     		ldr	r2, [r3, #68]
 7326              		.loc 1 2489 30
 7327 003a 3B69     		ldr	r3, [r7, #16]
 7328 003c 9A64     		str	r2, [r3, #72]
2490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable DMA receive, PERR and ERR interrupt */
2491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_receive_config(p_uart->periph, USART_RECEIVE_DMA_DISABLE);
 7329              		.loc 1 2491 9
 7330 003e 3B69     		ldr	r3, [r7, #16]
 7331 0040 1B68     		ldr	r3, [r3]
 7332 0042 0021     		movs	r1, #0
 7333 0044 1846     		mov	r0, r3
 7334 0046 FFF7FEFF 		bl	hals_uart_dma_receive_config
2492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_PERR);
 7335              		.loc 1 2492 9
 7336 004a 3B69     		ldr	r3, [r7, #16]
 7337 004c 1B68     		ldr	r3, [r3]
 7338 004e 0821     		movs	r1, #8
 7339 0050 1846     		mov	r0, r3
 7340 0052 FFF7FEFF 		bl	hals_uart_interrupt_disable
2493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_ERR);
 7341              		.loc 1 2493 9
 7342 0056 3B69     		ldr	r3, [r7, #16]
 7343 0058 1B68     		ldr	r3, [r3]
 7344 005a 4FF40071 		mov	r1, #512
 7345 005e 1846     		mov	r0, r3
 7346 0060 FFF7FEFF 		bl	hals_uart_interrupt_disable
2494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* reset rx_state */
2495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rx_state = UART_STATE_FREE;
 7347              		.loc 1 2495 26
 7348 0064 3B69     		ldr	r3, [r7, #16]
 7349 0066 0022     		movs	r2, #0
 7350 0068 83F85320 		strb	r2, [r3, #83]
 7351              	.L299:
2496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(NULL != p_func) {
 7352              		.loc 1 2498 7
 7353 006c FB68     		ldr	r3, [r7, #12]
 7354 006e 002B     		cmp	r3, #0
 7355 0070 02D0     		beq	.L301
2499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* if there is a user receive complete callback */
2500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_func(p_uart);
 7356              		.loc 1 2500 9
 7357 0072 FB68     		ldr	r3, [r7, #12]
 7358 0074 3869     		ldr	r0, [r7, #16]
 7359 0076 9847     		blx	r3
 7360              	.LVL13:
 7361              	.L301:
2501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 7362              		.loc 1 2502 1
 7363 0078 00BF     		nop
 7364 007a 1837     		adds	r7, r7, #24
 7365              		.cfi_def_cfa_offset 8
 7366 007c BD46     		mov	sp, r7
 7367              		.cfi_def_cfa_register 13
 7368              		@ sp needed
 7369 007e 80BD     		pop	{r7, pc}
 7370              	.L303:
 7371              		.align	2
 7372              	.L302:
 7373 0080 08000240 		.word	1073872904
 7374              		.cfi_endproc
 7375              	.LFE195:
 7377              		.section	.text._uart_dma_error,"ax",%progbits
 7378              		.align	1
 7379              		.syntax unified
 7380              		.thumb
 7381              		.thumb_func
 7382              		.fpu softvfp
 7384              	_uart_dma_error:
 7385              	.LFB196:
2503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** /*!
2505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \brief      handle the uart DMA error process
2506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[in]  dma: pointer to a DMA device information structure
2507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \param[out] none
2508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     \retval     none
2509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** */
2510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** static void _uart_dma_error(void *dma)
2511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** {
 7386              		.loc 1 2511 1
 7387              		.cfi_startproc
 7388              		@ args = 0, pretend = 0, frame = 16
 7389              		@ frame_needed = 1, uses_anonymous_args = 0
 7390 0000 80B5     		push	{r7, lr}
 7391              		.cfi_def_cfa_offset 8
 7392              		.cfi_offset 7, -8
 7393              		.cfi_offset 14, -4
 7394 0002 84B0     		sub	sp, sp, #16
 7395              		.cfi_def_cfa_offset 24
 7396 0004 00AF     		add	r7, sp, #0
 7397              		.cfi_def_cfa_register 7
 7398 0006 7860     		str	r0, [r7, #4]
2512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_dma_dev_struct *p_dma;
2513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     hal_uart_dev_struct *p_uart;
2514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_dma = (hal_dma_dev_struct *)dma;
 7399              		.loc 1 2515 11
 7400 0008 7B68     		ldr	r3, [r7, #4]
 7401 000a FB60     		str	r3, [r7, #12]
2516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     p_uart = (hal_uart_dev_struct *)p_dma->p_periph;
 7402              		.loc 1 2516 12
 7403 000c FB68     		ldr	r3, [r7, #12]
 7404 000e 5B69     		ldr	r3, [r3, #20]
 7405 0010 BB60     		str	r3, [r7, #8]
2517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(UART_STATE_BUSY == p_uart->tx_state) {
 7406              		.loc 1 2518 33
 7407 0012 BB68     		ldr	r3, [r7, #8]
 7408 0014 93F85230 		ldrb	r3, [r3, #82]
 7409 0018 DBB2     		uxtb	r3, r3
 7410              		.loc 1 2518 7
 7411 001a 012B     		cmp	r3, #1
 7412 001c 1CD1     		bne	.L305
2519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* transmit state is busy */
2520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->error_state |= HAL_UART_ERROR_DMATX;
 7413              		.loc 1 2520 29
 7414 001e BB68     		ldr	r3, [r7, #8]
 7415 0020 B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 7416 0024 9BB2     		uxth	r3, r3
 7417 0026 43F01003 		orr	r3, r3, #16
 7418 002a 9AB2     		uxth	r2, r3
 7419 002c BB68     		ldr	r3, [r7, #8]
 7420 002e A3F85020 		strh	r2, [r3, #80]	@ movhi
2521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->last_error = HAL_UART_ERROR_DMATX;
 7421              		.loc 1 2521 28
 7422 0032 BB68     		ldr	r3, [r7, #8]
 7423 0034 1022     		movs	r2, #16
 7424 0036 A3F84E20 		strh	r2, [r3, #78]	@ movhi
2522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->txbuffer.pos = p_uart->txbuffer.length;
 7425              		.loc 1 2522 48
 7426 003a BB68     		ldr	r3, [r7, #8]
 7427 003c 9A6B     		ldr	r2, [r3, #56]
 7428              		.loc 1 2522 30
 7429 003e BB68     		ldr	r3, [r7, #8]
 7430 0040 DA63     		str	r2, [r3, #60]
2523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable DMA transmit and reset tx_state */
2524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_transmit_config(p_uart->periph, USART_TRANSMIT_DMA_DISABLE);
 7431              		.loc 1 2524 9
 7432 0042 BB68     		ldr	r3, [r7, #8]
 7433 0044 1B68     		ldr	r3, [r3]
 7434 0046 0021     		movs	r1, #0
 7435 0048 1846     		mov	r0, r3
 7436 004a FFF7FEFF 		bl	hals_uart_dma_transmit_config
2525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->tx_state = UART_STATE_FREE;
 7437              		.loc 1 2525 26
 7438 004e BB68     		ldr	r3, [r7, #8]
 7439 0050 0022     		movs	r2, #0
 7440 0052 83F85220 		strb	r2, [r3, #82]
 7441 0056 2EE0     		b	.L306
 7442              	.L305:
2526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else if(UART_STATE_BUSY == p_uart->rx_state) {
 7443              		.loc 1 2526 40
 7444 0058 BB68     		ldr	r3, [r7, #8]
 7445 005a 93F85330 		ldrb	r3, [r3, #83]
 7446 005e DBB2     		uxtb	r3, r3
 7447              		.loc 1 2526 14
 7448 0060 012B     		cmp	r3, #1
 7449 0062 28D1     		bne	.L306
2527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* receive state is busy */
2528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->error_state |= HAL_UART_ERROR_DMARX;
 7450              		.loc 1 2528 29
 7451 0064 BB68     		ldr	r3, [r7, #8]
 7452 0066 B3F85030 		ldrh	r3, [r3, #80]	@ movhi
 7453 006a 9BB2     		uxth	r3, r3
 7454 006c 43F02003 		orr	r3, r3, #32
 7455 0070 9AB2     		uxth	r2, r3
 7456 0072 BB68     		ldr	r3, [r7, #8]
 7457 0074 A3F85020 		strh	r2, [r3, #80]	@ movhi
2529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->last_error = HAL_UART_ERROR_DMARX;
 7458              		.loc 1 2529 28
 7459 0078 BB68     		ldr	r3, [r7, #8]
 7460 007a 2022     		movs	r2, #32
 7461 007c A3F84E20 		strh	r2, [r3, #78]	@ movhi
2530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rxbuffer.pos = p_uart->rxbuffer.length;
 7462              		.loc 1 2530 48
 7463 0080 BB68     		ldr	r3, [r7, #8]
 7464 0082 5A6C     		ldr	r2, [r3, #68]
 7465              		.loc 1 2530 30
 7466 0084 BB68     		ldr	r3, [r7, #8]
 7467 0086 9A64     		str	r2, [r3, #72]
2531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* disable DMA receive, PERR, ERR interrupt */
2532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_dma_receive_config(p_uart->periph, USART_RECEIVE_DMA_DISABLE);
 7468              		.loc 1 2532 9
 7469 0088 BB68     		ldr	r3, [r7, #8]
 7470 008a 1B68     		ldr	r3, [r3]
 7471 008c 0021     		movs	r1, #0
 7472 008e 1846     		mov	r0, r3
 7473 0090 FFF7FEFF 		bl	hals_uart_dma_receive_config
2533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_PERR);
 7474              		.loc 1 2533 9
 7475 0094 BB68     		ldr	r3, [r7, #8]
 7476 0096 1B68     		ldr	r3, [r3]
 7477 0098 0821     		movs	r1, #8
 7478 009a 1846     		mov	r0, r3
 7479 009c FFF7FEFF 		bl	hals_uart_interrupt_disable
2534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         hals_uart_interrupt_disable(p_uart->periph, USART_INT_ERR);
 7480              		.loc 1 2534 9
 7481 00a0 BB68     		ldr	r3, [r7, #8]
 7482 00a2 1B68     		ldr	r3, [r3]
 7483 00a4 4FF40071 		mov	r1, #512
 7484 00a8 1846     		mov	r0, r3
 7485 00aa FFF7FEFF 		bl	hals_uart_interrupt_disable
2535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* reset rx_state */
2536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->rx_state = UART_STATE_FREE;
 7486              		.loc 1 2536 26
 7487 00ae BB68     		ldr	r3, [r7, #8]
 7488 00b0 0022     		movs	r2, #0
 7489 00b2 83F85320 		strb	r2, [r3, #83]
 7490              	.L306:
2537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     } else {
2538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         HAL_DEBUGE("uart processor fatal error: dma error exception due to run state");
2539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** 
2541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     if(p_uart->uart_irq.error_handle != NULL) {
 7491              		.loc 1 2541 24
 7492 00b6 BB68     		ldr	r3, [r7, #8]
 7493 00b8 5B69     		ldr	r3, [r3, #20]
 7494              		.loc 1 2541 7
 7495 00ba 002B     		cmp	r3, #0
 7496 00bc 07D0     		beq	.L308
2542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         /* if there is a user error callback */
2543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->uart_irq.error_handle(p_uart);
 7497              		.loc 1 2543 25
 7498 00be BB68     		ldr	r3, [r7, #8]
 7499 00c0 5B69     		ldr	r3, [r3, #20]
 7500              		.loc 1 2543 9
 7501 00c2 B868     		ldr	r0, [r7, #8]
 7502 00c4 9847     		blx	r3
 7503              	.LVL14:
2544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****         p_uart->error_state = HAL_UART_ERROR_NONE;
 7504              		.loc 1 2544 29
 7505 00c6 BB68     		ldr	r3, [r7, #8]
 7506 00c8 0022     		movs	r2, #0
 7507 00ca A3F85020 		strh	r2, [r3, #80]	@ movhi
 7508              	.L308:
2545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c ****     }
2546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_uart.c **** }
 7509              		.loc 1 2546 1
 7510 00ce 00BF     		nop
 7511 00d0 1037     		adds	r7, r7, #16
 7512              		.cfi_def_cfa_offset 8
 7513 00d2 BD46     		mov	sp, r7
 7514              		.cfi_def_cfa_register 13
 7515              		@ sp needed
 7516 00d4 80BD     		pop	{r7, pc}
 7517              		.cfi_endproc
 7518              	.LFE196:
 7520              		.text
 7521              	.Letext0:
 7522              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 7523              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 7524              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 7525              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 7526              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 7527              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 7528              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 7529              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 7530              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 7531              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 7532              		.file 12 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_dma.h"
 7533              		.file 13 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 7534              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rcu.h"
 7535              		.file 15 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_usart_com.h"
 7536              		.file 16 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_uart.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_uart.c
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:16     .text.hal_uart_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:24     .text.hal_uart_struct_init:00000000 hal_uart_struct_init
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:50     .text.hal_uart_struct_init:0000001c $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:54     .text.hal_uart_struct_init:0000002c $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:354    .text.hal_uart_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:361    .text.hal_uart_deinit:00000000 hal_uart_deinit
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3514   .text.hals_uart_deinit:00000000 hals_uart_deinit
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:414    .text.hal_uart_deinit:0000003c $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:420    .text.hal_uart_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:427    .text.hal_uart_init:00000000 hal_uart_init
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3958   .text.hals_uart_disable:00000000 hals_uart_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3583   .text.hals_uart_baudrate_set:00000000 hals_uart_baudrate_set
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6690   .text._uart_data_bit_mask_get:00000000 _uart_data_bit_mask_get
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5317   .text.hals_uart_halfduplex_disable:00000000 hals_uart_halfduplex_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5151   .text.hals_uart_lin_mode_disable:00000000 hals_uart_lin_mode_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5043   .text.hals_uart_mute_mode_wakeup_config:00000000 hals_uart_mute_mode_wakeup_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4893   .text.hals_uart_address_detection_mode_config:00000000 hals_uart_address_detection_mode_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4827   .text.hals_uart_address_config:00000000 hals_uart_address_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4957   .text.hals_uart_mute_mode_enable:00000000 hals_uart_mute_mode_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5202   .text.hals_uart_lin_break_detection_length_config:00000000 hals_uart_lin_break_detection_length_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5100   .text.hals_uart_lin_mode_enable:00000000 hals_uart_lin_mode_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5266   .text.hals_uart_halfduplex_enable:00000000 hals_uart_halfduplex_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5594   .text.hals_uart_driver_assertime_config:00000000 hals_uart_driver_assertime_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5656   .text.hals_uart_driver_deassertime_config:00000000 hals_uart_driver_deassertime_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5718   .text.hals_uart_depolarity_config:00000000 hals_uart_depolarity_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5492   .text.hals_uart_rs485_driver_enable:00000000 hals_uart_rs485_driver_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3915   .text.hals_uart_enable:00000000 hals_uart_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:985    .text.hal_uart_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:992    .text.hal_uart_irq:00000000 hal_uart_irq
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6774   .text._uart_error_flag_get:00000000 _uart_error_flag_get
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6528   .text.hals_uart_interrupt_flag_get:00000000 hals_uart_interrupt_flag_get
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6617   .text.hals_uart_interrupt_flag_clear:00000000 hals_uart_interrupt_flag_clear
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1246   .text.hal_uart_irq:000001b8 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1255   .text.hal_uart_irq:000001d4 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1499   .text.hal_uart_irq:00000338 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1510   .text.hal_uart_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1517   .text.hal_uart_irq_handle_set:00000000 hal_uart_irq_handle_set
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6404   .text.hals_uart_interrupt_enable:00000000 hals_uart_interrupt_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6465   .text.hals_uart_interrupt_disable:00000000 hals_uart_interrupt_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1868   .text.hal_uart_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1875   .text.hal_uart_irq_handle_all_reset:00000000 hal_uart_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1945   .text.hal_uart_transmit_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:1952   .text.hal_uart_transmit_poll:00000000 hal_uart_transmit_poll
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6288   .text.hals_uart_flag_get:00000000 hals_uart_flag_get
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4686   .text.hals_uart_data_transmit:00000000 hals_uart_data_transmit
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2204   .text.hal_uart_receive_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2211   .text.hal_uart_receive_poll:00000000 hal_uart_receive_poll
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4734   .text.hals_uart_data_receive:00000000 hals_uart_data_receive
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2444   .text.hal_uart_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2451   .text.hal_uart_transmit_interrupt:00000000 hal_uart_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2555   .text.hal_uart_transmit_interrupt:00000098 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6892   .text._uart_transmit_interrupt:00000000 _uart_transmit_interrupt
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6827   .text._uart_transmit_complete_interrupt:00000000 _uart_transmit_complete_interrupt
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2562   .text.hal_uart_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2569   .text.hal_uart_receive_interrupt:00000000 hal_uart_receive_interrupt
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2683   .text.hal_uart_receive_interrupt:000000b0 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7026   .text._uart_receive_interrupt:00000000 _uart_receive_interrupt
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2688   .text.hal_uart_transmit_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2695   .text.hal_uart_transmit_dma:00000000 hal_uart_transmit_dma
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5841   .text.hals_uart_dma_transmit_config:00000000 hals_uart_dma_transmit_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2890   .text.hal_uart_transmit_dma:00000118 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7180   .text._uart_transmit_dma:00000000 _uart_transmit_dma
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7384   .text._uart_dma_error:00000000 _uart_dma_error
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2898   .text.hal_uart_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:2905   .text.hal_uart_receive_dma:00000000 hal_uart_receive_dma
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5782   .text.hals_uart_dma_receive_config:00000000 hals_uart_dma_receive_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3106   .text.hal_uart_receive_dma:0000012c $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7279   .text._uart_receive_dma:00000000 _uart_receive_dma
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3112   .text.hal_uart_dma_pause:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3119   .text.hal_uart_dma_pause:00000000 hal_uart_dma_pause
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3206   .text.hal_uart_dma_resume:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3213   .text.hal_uart_dma_resume:00000000 hal_uart_dma_resume
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3300   .text.hal_uart_transmit_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3307   .text.hal_uart_transmit_stop:00000000 hal_uart_transmit_stop
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3385   .text.hal_uart_receive_stop:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3392   .text.hal_uart_receive_stop:00000000 hal_uart_receive_stop
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3499   .text.hal_uart_receive_stop:000000ac $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3507   .text.hals_uart_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3570   .text.hals_uart_deinit:00000048 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3576   .text.hals_uart_baudrate_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3726   .text.hals_uart_baudrate_set:000000c4 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3732   .text.hals_uart_parity_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3739   .text.hals_uart_parity_config:00000000 hals_uart_parity_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3789   .text.hals_uart_word_length_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3796   .text.hals_uart_word_length_set:00000000 hals_uart_word_length_set
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3846   .text.hals_uart_stop_bit_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3853   .text.hals_uart_stop_bit_set:00000000 hals_uart_stop_bit_set
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3908   .text.hals_uart_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3951   .text.hals_uart_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:3994   .text.hals_uart_transmit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4001   .text.hals_uart_transmit_config:00000000 hals_uart_transmit_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4045   .text.hals_uart_receive_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4052   .text.hals_uart_receive_config:00000000 hals_uart_receive_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4096   .text.hals_uart_data_first_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4103   .text.hals_uart_data_first_config:00000000 hals_uart_data_first_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4158   .text.hals_uart_invert_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4165   .text.hals_uart_invert_config:00000000 hals_uart_invert_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4196   .text.hals_uart_invert_config:00000024 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4204   .text.hals_uart_invert_config:00000044 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4312   .text.hals_uart_overrun_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4319   .text.hals_uart_overrun_enable:00000000 hals_uart_overrun_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4363   .text.hals_uart_overrun_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4370   .text.hals_uart_overrun_disable:00000000 hals_uart_overrun_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4414   .text.hals_uart_oversample_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4421   .text.hals_uart_oversample_config:00000000 hals_uart_oversample_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4471   .text.hals_uart_sample_bit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4478   .text.hals_uart_sample_bit_config:00000000 hals_uart_sample_bit_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4533   .text.hals_uart_receiver_timeout_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4540   .text.hals_uart_receiver_timeout_enable:00000000 hals_uart_receiver_timeout_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4578   .text.hals_uart_receiver_timeout_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4585   .text.hals_uart_receiver_timeout_disable:00000000 hals_uart_receiver_timeout_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4623   .text.hals_uart_receiver_timeout_threshold_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4630   .text.hals_uart_receiver_timeout_threshold_config:00000000 hals_uart_receiver_timeout_threshold_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4679   .text.hals_uart_data_transmit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4727   .text.hals_uart_data_receive:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4772   .text.hals_uart_command_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4779   .text.hals_uart_command_enable:00000000 hals_uart_command_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4820   .text.hals_uart_address_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4886   .text.hals_uart_address_detection_mode_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4950   .text.hals_uart_mute_mode_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:4993   .text.hals_uart_mute_mode_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5000   .text.hals_uart_mute_mode_disable:00000000 hals_uart_mute_mode_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5036   .text.hals_uart_mute_mode_wakeup_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5093   .text.hals_uart_lin_mode_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5144   .text.hals_uart_lin_mode_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5195   .text.hals_uart_lin_break_detection_length_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5259   .text.hals_uart_halfduplex_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5310   .text.hals_uart_halfduplex_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5361   .text.hals_uart_hardware_flow_rts_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5368   .text.hals_uart_hardware_flow_rts_config:00000000 hals_uart_hardware_flow_rts_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5423   .text.hals_uart_hardware_flow_cts_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5430   .text.hals_uart_hardware_flow_cts_config:00000000 hals_uart_hardware_flow_cts_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5485   .text.hals_uart_rs485_driver_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5536   .text.hals_uart_rs485_driver_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5543   .text.hals_uart_rs485_driver_disable:00000000 hals_uart_rs485_driver_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5587   .text.hals_uart_driver_assertime_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5649   .text.hals_uart_driver_deassertime_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5711   .text.hals_uart_depolarity_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5775   .text.hals_uart_dma_receive_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5834   .text.hals_uart_dma_transmit_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5893   .text.hals_uart_reception_error_dma_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5900   .text.hals_uart_reception_error_dma_enable:00000000 hals_uart_reception_error_dma_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5944   .text.hals_uart_reception_error_dma_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5951   .text.hals_uart_reception_error_dma_disable:00000000 hals_uart_reception_error_dma_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:5995   .text.hals_uart_wakeup_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6002   .text.hals_uart_wakeup_enable:00000000 hals_uart_wakeup_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6038   .text.hals_uart_wakeup_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6045   .text.hals_uart_wakeup_disable:00000000 hals_uart_wakeup_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6081   .text.hals_uart_wakeup_mode_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6088   .text.hals_uart_wakeup_mode_config:00000000 hals_uart_wakeup_mode_config
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6145   .text.hals_uart_receive_fifo_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6152   .text.hals_uart_receive_fifo_enable:00000000 hals_uart_receive_fifo_enable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6190   .text.hals_uart_receive_fifo_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6197   .text.hals_uart_receive_fifo_disable:00000000 hals_uart_receive_fifo_disable
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6235   .text.hals_uart_receive_fifo_counter_number:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6242   .text.hals_uart_receive_fifo_counter_number:00000000 hals_uart_receive_fifo_counter_number
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6281   .text.hals_uart_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6344   .text.hals_uart_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6351   .text.hals_uart_flag_clear:00000000 hals_uart_flag_clear
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6397   .text.hals_uart_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6458   .text.hals_uart_interrupt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6521   .text.hals_uart_interrupt_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6610   .text.hals_uart_interrupt_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6679   .text.hals_uart_interrupt_flag_clear:0000004c $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6684   .text._uart_data_bit_mask_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6768   .text._uart_error_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6821   .text._uart_transmit_complete_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:6886   .text._uart_transmit_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7020   .text._uart_receive_interrupt:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7174   .text._uart_transmit_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7268   .text._uart_transmit_dma:00000074 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7273   .text._uart_receive_dma:00000000 $t
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7373   .text._uart_receive_dma:00000080 $d
C:\Users\peter\AppData\Local\Temp\cc6ReuvO.s:7378   .text._uart_dma_error:00000000 $t
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hals_smartcard_mode_disable
hals_irda_mode_disable
hals_usrt_clock_disable
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
hal_dma_start_interrupt
hal_dma_stop
hal_rcu_periph_reset_enable
hal_rcu_periph_reset_disable
hals_rcu_clock_freq_get
