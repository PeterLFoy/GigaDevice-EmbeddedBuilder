   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gd32f3x0_hal_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.hal_rtc_init,"ax",%progbits
  16              		.align	1
  17              		.global	hal_rtc_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	hal_rtc_init:
  25              	.LFB119:
  26              		.file 1 "../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c"
   1:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
   2:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \file    gd32f3x0_hal_rtc.c
   3:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief   RTC driver
   4:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
   5:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \version 2023-08-01, V1.0.0, HAL firmware for GD32F3x0
   6:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
   7:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
   8:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*
   9:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     Copyright (c) 2023, GigaDevice Semiconductor Inc.
  10:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
  11:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** are permitted provided that the following conditions are met:
  13:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
  14:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****        list of conditions and the following disclaimer.
  16:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****        this list of conditions and the following disclaimer in the documentation
  18:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****        and/or other materials provided with the distribution.
  19:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****        may be used to endorse or promote products derived from this software without
  21:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****        specific prior written permission.
  22:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
  23:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** OF SUCH DAMAGE.
  33:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
  34:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
  35:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #include "gd32f3x0_hal.h"
  36:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
  37:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
  38:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      init RTC
  39:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
  40:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
  41:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
  42:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_init: the pointer of RTC calendar configure structure
  43:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_year: 0~99
  44:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_month:
  45:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
  46:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_JAN: Janurary
  47:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FEB: February
  48:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MAR: March
  49:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_APR: April
  50:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MAY: May
  51:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_JUN: June
  52:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_JUL: July
  53:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_AUG: August
  54:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_SEP: September
  55:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_OCT: October
  56:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_NOV: November
  57:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DEC: December
  58:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_date: 0~31
  59:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_day_of_week:
  60:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
  61:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MONDAY: Monday
  62:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TUESDAY: Tuesday
  63:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_WEDSDAY: Wednesday
  64:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_THURSDAY: Thursday
  65:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FRIDAY: Friday
  66:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_SATURDAY: Saturday
  67:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_SUNDAY: Sunday
  68:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_hour: 0 - 24 or 1 - 12
  69:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_minute: 0 - 59
  70:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_second: 0 - 59
  71:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_am_pm:
  72:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
  73:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_AM: AM format
  74:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PM: PM format
  75:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_daylight_saving:
  76:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
  77:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DAYLIGHT_SAVING_NONE: no daylight saving
  78:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DAYLIGHT_SAVING_ADD_1H: add 1 hour(summer time change)
  79:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DAYLIGHT_SAVING_SUB_1H: subtract 1 hour(winter time change)
  80:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_clock_format:
  81:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
  82:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_24H_FORMAT: 24-hour format
  83:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_12H_FORMAT: 12-hour format
  84:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_psc_factor_s: 0x0 - 0x7FFF
  85:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_psc_factor_a: 0x0 - 0x7F
  86:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
  87:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
  88:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
  89:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_init(hal_rtc_dev_struct *rtc_dev, hal_rtc_init_struct *rtc_init)
  90:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
  27              		.loc 1 90 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 90B5     		push	{r4, r7, lr}
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
  91:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
  42              		.loc 1 91 15
  43 000a 0023     		movs	r3, #0
  44 000c FB75     		strb	r3, [r7, #23]
  92:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg_time = 0x00U, reg_date = 0x00U;
  45              		.loc 1 92 14
  46 000e 0023     		movs	r3, #0
  47 0010 3B61     		str	r3, [r7, #16]
  48              		.loc 1 92 32
  49 0012 0023     		movs	r3, #0
  50 0014 FB60     		str	r3, [r7, #12]
  93:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
  94:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
  95:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL == rtc_dev) || (NULL == rtc_init)) {
  96:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] or pointer [*rtc_init] address is invalid");
  97:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
  98:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
  99:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_init->rtc_year */
 102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_init->rtc_year > 99) {
 103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_year] value is invalid");
 104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_init->rtc_date */
 108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((rtc_init->rtc_date < 1U) || (rtc_init->rtc_date > 31U)) {
 109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_date] value is invalid");
 110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_init->rtc_clock_format */
 114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((RTC_24H_FORMAT != rtc_init->rtc_clock_format) && (RTC_12H_FORMAT != rtc_init->rtc_clock_for
 115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_clock_format] value is invalid");
 116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_initpara_struct->rtc_hour, and rtc_initpara_struct->rtc_am_pm */
 120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RTC_12H_FORMAT == rtc_init->rtc_clock_format) {
 121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((rtc_init->rtc_hour < 1U) || (rtc_init->rtc_hour > 12U)) {
 123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_init->rtc_hour] value is invalid");
 124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((RTC_AM != rtc_init->rtc_am_pm) && (RTC_PM != rtc_init->rtc_am_pm)) {
 127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_init->rtc_am_pm] value is invalid");
 128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
 131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(rtc_init->rtc_hour > 23U) {
 132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_init->rtc_hour] value is invalid");
 133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_init->rtc_am_pm = RTC_AM;
 136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_initpara_struct->rtc_minute */
 139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_init->rtc_minute > 59) {
 140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_minute] value is invalid");
 141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_initpara_struct->rtc_second */
 145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_init->rtc_second > 59) {
 146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_second] value is invalid");
 147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_initpara_struct->rtc_factor_syn */
 151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_init->rtc_psc_factor_s > 0x7FFF) {
 152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_psc_factor_s] value is invalid");
 153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_initpara_struct->rtc_factor_asyn */
 157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_init->rtc_psc_factor_a > 0x7F) {
 158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_init->rtc_psc_factor_a] value is invalid");
 159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
  51              		.loc 1 163 20
  52 0016 7B68     		ldr	r3, [r7, #4]
  53 0018 0222     		movs	r2, #2
  54 001a 5A74     		strb	r2, [r3, #17]
 164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* calendar config */
 166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* 1st: disable the write protection */
 167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
  55              		.loc 1 167 5
  56 001c 534B     		ldr	r3, .L5
  57              		.loc 1 167 13
  58 001e CA22     		movs	r2, #202
  59 0020 1A60     		str	r2, [r3]
 168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
  60              		.loc 1 168 5
  61 0022 524B     		ldr	r3, .L5
  62              		.loc 1 168 13
  63 0024 5322     		movs	r2, #83
  64 0026 1A60     		str	r2, [r3]
 169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* 2nd: enter init mode */
 170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     error_status = hals_rtc_init_mode_enter();
  65              		.loc 1 170 20
  66 0028 FFF7FEFF 		bl	hals_rtc_init_mode_enter
  67 002c 0346     		mov	r3, r0
  68 002e FB75     		strb	r3, [r7, #23]
 171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR != error_status) {
  69              		.loc 1 171 7
  70 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  71 0032 002B     		cmp	r3, #0
  72 0034 00F08680 		beq	.L2
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_PSC = (uint32_t)(PSC_FACTOR_A(rtc_init->rtc_psc_factor_a) | \
  73              		.loc 1 172 30
  74 0038 3B68     		ldr	r3, [r7]
  75 003a 5B8B     		ldrh	r3, [r3, #26]
  76 003c 1B04     		lsls	r3, r3, #16
  77 003e 03F4FE02 		and	r2, r3, #8323072
 173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                              PSC_FACTOR_S(rtc_init->rtc_psc_factor_s));
  78              		.loc 1 173 30
  79 0042 3B68     		ldr	r3, [r7]
  80 0044 1B8B     		ldrh	r3, [r3, #24]
  81 0046 C3F30E03 		ubfx	r3, r3, #0, #15
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_PSC = (uint32_t)(PSC_FACTOR_A(rtc_init->rtc_psc_factor_a) | \
  82              		.loc 1 172 9
  83 004a 4949     		ldr	r1, .L5+4
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_PSC = (uint32_t)(PSC_FACTOR_A(rtc_init->rtc_psc_factor_a) | \
  84              		.loc 1 172 19
  85 004c 1343     		orrs	r3, r3, r2
 172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_PSC = (uint32_t)(PSC_FACTOR_A(rtc_init->rtc_psc_factor_a) | \
  86              		.loc 1 172 17
  87 004e 0B60     		str	r3, [r1]
 174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL &= (uint32_t)(~RTC_CTL_CS);
  88              		.loc 1 174 17
  89 0050 484B     		ldr	r3, .L5+8
  90 0052 1B68     		ldr	r3, [r3]
  91 0054 474A     		ldr	r2, .L5+8
  92 0056 23F04003 		bic	r3, r3, #64
  93 005a 1360     		str	r3, [r2]
 175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL |=  rtc_init->rtc_clock_format;
  94              		.loc 1 175 17
  95 005c 454B     		ldr	r3, .L5+8
  96 005e 1A68     		ldr	r2, [r3]
  97              		.loc 1 175 29
  98 0060 3B68     		ldr	r3, [r7]
  99 0062 5B69     		ldr	r3, [r3, #20]
 100              		.loc 1 175 17
 101 0064 4349     		ldr	r1, .L5+8
 102 0066 1343     		orrs	r3, r3, r2
 103 0068 0B60     		str	r3, [r1]
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         reg_date = (DATE_YR(hals_rtc_normal_2_bcd(rtc_init->rtc_year)) | \
 104              		.loc 1 176 21
 105 006a 3B68     		ldr	r3, [r7]
 106 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107 006e 1846     		mov	r0, r3
 108 0070 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 109 0074 0346     		mov	r3, r0
 110 0076 1B04     		lsls	r3, r3, #16
 111 0078 03F47F04 		and	r4, r3, #16711680
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     DATE_DOW(hals_rtc_normal_2_bcd(rtc_init->rtc_day_of_week)) | \
 112              		.loc 1 177 21
 113 007c 3B68     		ldr	r3, [r7]
 114 007e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 115 0080 1846     		mov	r0, r3
 116 0082 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 117 0086 0346     		mov	r3, r0
 118 0088 5B03     		lsls	r3, r3, #13
 119 008a 03F46043 		and	r3, r3, #57344
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         reg_date = (DATE_YR(hals_rtc_normal_2_bcd(rtc_init->rtc_year)) | \
 120              		.loc 1 176 72
 121 008e 1C43     		orrs	r4, r4, r3
 178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     DATE_MON(hals_rtc_normal_2_bcd(rtc_init->rtc_month)) | \
 122              		.loc 1 178 21
 123 0090 3B68     		ldr	r3, [r7]
 124 0092 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 125 0094 1846     		mov	r0, r3
 126 0096 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 127 009a 0346     		mov	r3, r0
 128 009c 1B02     		lsls	r3, r3, #8
 129 009e 03F4F853 		and	r3, r3, #7936
 177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     DATE_DOW(hals_rtc_normal_2_bcd(rtc_init->rtc_day_of_week)) | \
 130              		.loc 1 177 80
 131 00a2 1C43     		orrs	r4, r4, r3
 179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     DATE_DAY(hals_rtc_normal_2_bcd(rtc_init->rtc_date)));
 132              		.loc 1 179 21
 133 00a4 3B68     		ldr	r3, [r7]
 134 00a6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 135 00a8 1846     		mov	r0, r3
 136 00aa FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 137 00ae 0346     		mov	r3, r0
 138 00b0 03F03F03 		and	r3, r3, #63
 176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     DATE_DOW(hals_rtc_normal_2_bcd(rtc_init->rtc_day_of_week)) | \
 139              		.loc 1 176 18
 140 00b4 2343     		orrs	r3, r3, r4
 141 00b6 FB60     		str	r3, [r7, #12]
 180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         reg_time = (rtc_init->rtc_am_pm | \
 142              		.loc 1 181 29
 143 00b8 3B68     		ldr	r3, [r7]
 144 00ba DC68     		ldr	r4, [r3, #12]
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     TIME_HR(hals_rtc_normal_2_bcd(rtc_init->rtc_hour)) | \
 145              		.loc 1 182 21
 146 00bc 3B68     		ldr	r3, [r7]
 147 00be 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 148 00c0 1846     		mov	r0, r3
 149 00c2 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 150 00c6 0346     		mov	r3, r0
 151 00c8 1B04     		lsls	r3, r3, #16
 152 00ca 03F47C13 		and	r3, r3, #4128768
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     TIME_HR(hals_rtc_normal_2_bcd(rtc_init->rtc_hour)) | \
 153              		.loc 1 181 41
 154 00ce 1C43     		orrs	r4, r4, r3
 183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     TIME_MN(hals_rtc_normal_2_bcd(rtc_init->rtc_minute)) | \
 155              		.loc 1 183 21
 156 00d0 3B68     		ldr	r3, [r7]
 157 00d2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 158 00d4 1846     		mov	r0, r3
 159 00d6 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 160 00da 0346     		mov	r3, r0
 161 00dc 1B02     		lsls	r3, r3, #8
 162 00de 03F4FE43 		and	r3, r3, #32512
 182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     TIME_HR(hals_rtc_normal_2_bcd(rtc_init->rtc_hour)) | \
 163              		.loc 1 182 72
 164 00e2 1C43     		orrs	r4, r4, r3
 184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     TIME_SC(hals_rtc_normal_2_bcd(rtc_init->rtc_second)));
 165              		.loc 1 184 21
 166 00e4 3B68     		ldr	r3, [r7]
 167 00e6 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 168 00e8 1846     		mov	r0, r3
 169 00ea FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 170 00ee 0346     		mov	r3, r0
 171 00f0 03F07F03 		and	r3, r3, #127
 181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                     TIME_HR(hals_rtc_normal_2_bcd(rtc_init->rtc_hour)) | \
 172              		.loc 1 181 18
 173 00f4 2343     		orrs	r3, r3, r4
 174 00f6 3B61     		str	r3, [r7, #16]
 185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TIME = (uint32_t)reg_time;
 175              		.loc 1 185 9
 176 00f8 1F4A     		ldr	r2, .L5+12
 177              		.loc 1 185 18
 178 00fa 3B69     		ldr	r3, [r7, #16]
 179 00fc 1360     		str	r3, [r2]
 186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_DATE = (uint32_t)reg_date;
 180              		.loc 1 186 9
 181 00fe 1F4A     		ldr	r2, .L5+16
 182              		.loc 1 186 18
 183 0100 FB68     		ldr	r3, [r7, #12]
 184 0102 1360     		str	r3, [r2]
 187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TIME &= (uint32_t)(~RTC_PM);
 185              		.loc 1 187 18
 186 0104 1C4B     		ldr	r3, .L5+12
 187 0106 1B68     		ldr	r3, [r3]
 188 0108 1B4A     		ldr	r2, .L5+12
 189 010a 23F48003 		bic	r3, r3, #4194304
 190 010e 1360     		str	r3, [r2]
 188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TIME |=  rtc_init->rtc_am_pm;
 191              		.loc 1 188 18
 192 0110 194B     		ldr	r3, .L5+12
 193 0112 1A68     		ldr	r2, [r3]
 194              		.loc 1 188 30
 195 0114 3B68     		ldr	r3, [r7]
 196 0116 DB68     		ldr	r3, [r3, #12]
 197              		.loc 1 188 18
 198 0118 1749     		ldr	r1, .L5+12
 199 011a 1343     		orrs	r3, r3, r2
 200 011c 0B60     		str	r3, [r1]
 189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL &= (uint32_t)(~(RTC_DAYLIGHT_SAVING_ADD_1H | RTC_DAYLIGHT_SAVING_SUB_1H));
 201              		.loc 1 189 17
 202 011e 154B     		ldr	r3, .L5+8
 203 0120 1B68     		ldr	r3, [r3]
 204 0122 144A     		ldr	r2, .L5+8
 205 0124 23F44033 		bic	r3, r3, #196608
 206 0128 1360     		str	r3, [r2]
 190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL |= rtc_init->rtc_daylight_saving;
 207              		.loc 1 190 17
 208 012a 124B     		ldr	r3, .L5+8
 209 012c 1A68     		ldr	r2, [r3]
 210              		.loc 1 190 28
 211 012e 3B68     		ldr	r3, [r7]
 212 0130 1B69     		ldr	r3, [r3, #16]
 213              		.loc 1 190 17
 214 0132 1049     		ldr	r1, .L5+8
 215 0134 1343     		orrs	r3, r3, r2
 216 0136 0B60     		str	r3, [r1]
 191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* 3rd: exit init mode */
 193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_init_mode_exit();
 217              		.loc 1 193 9
 218 0138 FFF7FEFF 		bl	hals_rtc_init_mode_exit
 194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* 4th: wait the RSYNF flag to set */
 195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = hals_rtc_register_sync_wait();
 219              		.loc 1 195 24
 220 013c FFF7FEFF 		bl	hals_rtc_register_sync_wait
 221 0140 0346     		mov	r3, r0
 222 0142 FB75     		strb	r3, [r7, #23]
 223              	.L2:
 196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* 5th: enable the write protection */
 198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 224              		.loc 1 198 5
 225 0144 094B     		ldr	r3, .L5
 226              		.loc 1 198 13
 227 0146 FF22     		movs	r2, #255
 228 0148 1A60     		str	r2, [r3]
 199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR == error_status) {
 229              		.loc 1 199 7
 230 014a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 231 014c 002B     		cmp	r3, #0
 232 014e 02D1     		bne	.L3
 200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_BUSY;
 233              		.loc 1 200 16
 234 0150 6FF00203 		mvn	r3, #2
 235 0154 06E0     		b	.L4
 236              	.L3:
 201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state */
 204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 237              		.loc 1 204 26
 238 0156 7B68     		ldr	r3, [r7, #4]
 239 0158 0022     		movs	r2, #0
 240 015a 1A74     		strb	r2, [r3, #16]
 205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC state */
 206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_READY;
 241              		.loc 1 206 20
 242 015c 7B68     		ldr	r3, [r7, #4]
 243 015e 0522     		movs	r2, #5
 244 0160 5A74     		strb	r2, [r3, #17]
 207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 245              		.loc 1 209 12
 246 0162 0023     		movs	r3, #0
 247              	.L4:
 210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 248              		.loc 1 210 1
 249 0164 1846     		mov	r0, r3
 250 0166 1C37     		adds	r7, r7, #28
 251              		.cfi_def_cfa_offset 12
 252 0168 BD46     		mov	sp, r7
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 016a 90BD     		pop	{r4, r7, pc}
 256              	.L6:
 257              		.align	2
 258              	.L5:
 259 016c 24280040 		.word	1073752100
 260 0170 10280040 		.word	1073752080
 261 0174 08280040 		.word	1073752072
 262 0178 00280040 		.word	1073752064
 263 017c 04280040 		.word	1073752068
 264              		.cfi_endproc
 265              	.LFE119:
 267              		.section	.text.hal_rtc_alarm_output_config,"ax",%progbits
 268              		.align	1
 269              		.global	hal_rtc_alarm_output_config
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu softvfp
 275              	hal_rtc_alarm_output_config:
 276              	.LFB120:
 211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC alarm output
 214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  hal_rtc_alarm_output_config_struct: the pointer of RTC alarm output configure struc
 218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_output_polarity:
 219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_HIGH: enable alarm flag output with high level
 221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_LOW: enable alarm flag output with low level
 222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_output_type:
 223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_OUTPUT_OD: RTC alarm output open-drain mode
 225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_OUTPUT_PP: RTC alarm output push-pull mode
 226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_alarm_output_config(hal_rtc_dev_struct *rtc_dev,
 230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                                     hal_rtc_alarm_output_config_struct *rtc_alarm_output_config)
 231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 277              		.loc 1 231 1
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282 0000 80B4     		push	{r7}
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 7, -4
 285 0002 83B0     		sub	sp, sp, #12
 286              		.cfi_def_cfa_offset 16
 287 0004 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 290 0008 3960     		str	r1, [r7]
 232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL == rtc_dev) || (NULL == rtc_alarm_output_config)) {
 235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] or pointer [*rtc_alarm_output_config] address is invalid");
 236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 291              		.loc 1 240 20
 292 000a 7B68     		ldr	r3, [r7, #4]
 293 000c 0222     		movs	r2, #2
 294 000e 5A74     		strb	r2, [r3, #17]
 241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* alram output config */
 243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
 244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 295              		.loc 1 244 5
 296 0010 174B     		ldr	r3, .L9
 297              		.loc 1 244 13
 298 0012 CA22     		movs	r2, #202
 299 0014 1A60     		str	r2, [r3]
 245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 300              		.loc 1 245 5
 301 0016 164B     		ldr	r3, .L9
 302              		.loc 1 245 13
 303 0018 5322     		movs	r2, #83
 304 001a 1A60     		str	r2, [r3]
 246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)~(RTC_CTL_OS | RTC_CTL_OPOL);
 305              		.loc 1 246 13
 306 001c 154B     		ldr	r3, .L9+4
 307 001e 1B68     		ldr	r3, [r3]
 308 0020 144A     		ldr	r2, .L9+4
 309 0022 23F4E003 		bic	r3, r3, #7340032
 310 0026 1360     		str	r3, [r2]
 247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= (uint32_t)(rtc_alarm_output_config->rtc_alarm_output_polarity);
 311              		.loc 1 248 13
 312 0028 124B     		ldr	r3, .L9+4
 313 002a 1A68     		ldr	r2, [r3]
 314              		.loc 1 248 50
 315 002c 3B68     		ldr	r3, [r7]
 316 002e 1B68     		ldr	r3, [r3]
 317              		.loc 1 248 13
 318 0030 1049     		ldr	r1, .L9+4
 319 0032 1343     		orrs	r3, r3, r2
 320 0034 0B60     		str	r3, [r1]
 249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* alarm output */
 251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP &= (uint32_t)~(RTC_TAMP_PC13VAL);
 321              		.loc 1 251 14
 322 0036 104B     		ldr	r3, .L9+8
 323 0038 1B68     		ldr	r3, [r3]
 324 003a 0F4A     		ldr	r2, .L9+8
 325 003c 23F48023 		bic	r3, r3, #262144
 326 0040 1360     		str	r3, [r2]
 252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP |= (uint32_t)(rtc_alarm_output_config->rtc_alarm_output_type);
 327              		.loc 1 252 14
 328 0042 0D4B     		ldr	r3, .L9+8
 329 0044 1A68     		ldr	r2, [r3]
 330              		.loc 1 252 51
 331 0046 3B68     		ldr	r3, [r7]
 332 0048 5B68     		ldr	r3, [r3, #4]
 333              		.loc 1 252 14
 334 004a 0B49     		ldr	r1, .L9+8
 335 004c 1343     		orrs	r3, r3, r2
 336 004e 0B60     		str	r3, [r1]
 253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
 255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 337              		.loc 1 255 5
 338 0050 074B     		ldr	r3, .L9
 339              		.loc 1 255 13
 340 0052 FF22     		movs	r2, #255
 341 0054 1A60     		str	r2, [r3]
 256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state */
 257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 342              		.loc 1 257 26
 343 0056 7B68     		ldr	r3, [r7, #4]
 344 0058 0022     		movs	r2, #0
 345 005a 1A74     		strb	r2, [r3, #16]
 258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC state */
 259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_READY;
 346              		.loc 1 259 20
 347 005c 7B68     		ldr	r3, [r7, #4]
 348 005e 0522     		movs	r2, #5
 349 0060 5A74     		strb	r2, [r3, #17]
 260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 350              		.loc 1 262 12
 351 0062 0023     		movs	r3, #0
 263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 352              		.loc 1 263 1
 353 0064 1846     		mov	r0, r3
 354 0066 0C37     		adds	r7, r7, #12
 355              		.cfi_def_cfa_offset 4
 356 0068 BD46     		mov	sp, r7
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 006a 80BC     		pop	{r7}
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 006c 7047     		bx	lr
 363              	.L10:
 364 006e 00BF     		.align	2
 365              	.L9:
 366 0070 24280040 		.word	1073752100
 367 0074 08280040 		.word	1073752072
 368 0078 40280040 		.word	1073752128
 369              		.cfi_endproc
 370              	.LFE120:
 372              		.section	.text.hal_rtc_alarm_config,"ax",%progbits
 373              		.align	1
 374              		.global	hal_rtc_alarm_config
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 380              	hal_rtc_alarm_config:
 381              	.LFB121:
 264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC alarm
 267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  hal_rtc_alarm_config_struct: the pointer of RTC alarm configure structure
 271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_am_pm:
 272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_AM: AM format
 274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_PM: PM format
 275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_weekday_mask:
 276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_WEEKDAY_MASK_DISABLE: RTC alarm weekday no mask
 278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_WEEKDAY_MASK_ENABLE: RTC alarm weekday mask
 279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_hour_mask:
 280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_HOUR_MASK_DISABLE: RTC alarm hour no mask
 282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_HOUR_MASK_ENABLE: RTC alarm hour mask
 283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_minute_mask:
 284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_MINUTE_MASK_DISABLE: RTC alarm minute no mask
 286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_MINUTE_MASK_ENABLE: RTC alarm minute mask
 287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_second_mask:
 288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SECOND_MASK_DISABLE: RTC alarm second no mask
 290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SECOND_MASK_ENABLE: RTC alarm second mask
 291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_subsecond_mask:
 292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_0_14: RTC alarm second no mask
 294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_1_14: RTC alarm second mask
 295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_2_14: RTC alarm second no mask
 296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_3_14: RTC alarm second mask
 297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_4_14: RTC alarm second no mask
 298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_5_14: RTC alarm second mask
 299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_6_14: RTC alarm second no mask
 300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_7_14: RTC alarm second mask
 301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_8_14: RTC alarm second no mask
 302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_9_14: RTC alarm second mask
 303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_10_14: RTC alarm second no mask
 304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_11_14: RTC alarm second mask
 305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_12_14: RTC alarm second no mask
 306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_13_14: RTC alarm second no mask
 307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_14: RTC alarm second mask
 308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_NONE: RTC alarm second mask
 309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_weekday_or_date:
 310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SELECT_WEEKDAY: RTC alarm select weekday
 312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SELECT_DATE: RTC alarm select date
 313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_day: 1 - 31 or below
 314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_MONDAY: RTC alarm Monday
 316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_TUESDAY: RTC alarm Tuesday
 317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_WEDSDAY: RTC alarm Wednesday
 318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_THURSDAY: RTC alarm Thursday
 319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_FRIDAY: RTC alarm Friday
 320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SATURDAY: RTC alarm Saturday
 321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SUNDAY: RTC alarm Sunday
 322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_hour: 0 - 24 or 1 - 12
 323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_minute: 0 - 59
 324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_second: 0 - 59
 325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_subsecond: 0x00~0x7FFF
 326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_alarm_config(hal_rtc_dev_struct *rtc_dev, hal_rtc_alarm_config_struct *rtc_alarm_co
 330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 382              		.loc 1 330 1
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386 0000 90B5     		push	{r4, r7, lr}
 387              		.cfi_def_cfa_offset 12
 388              		.cfi_offset 4, -12
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 85B0     		sub	sp, sp, #20
 392              		.cfi_def_cfa_offset 32
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 7860     		str	r0, [r7, #4]
 396 0008 3960     		str	r1, [r7]
 331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg_alrm0td = 0x00U;
 397              		.loc 1 331 14
 398 000a 0023     		movs	r3, #0
 399 000c FB60     		str	r3, [r7, #12]
 332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg_alrm0ss = 0x00U;
 400              		.loc 1 332 14
 401 000e 0023     		movs	r3, #0
 402 0010 BB60     		str	r3, [r7, #8]
 333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t rtc_display_format = 0U;
 335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL == rtc_dev) || (NULL == rtc_alarm_config)) {
 337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] or pointer [*rtc_alarm_config] address is invalid");
 338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_alarm_time->rtc_alarm_mask */
 343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(0x80808080U != ((rtc_alarm_config->rtc_alarm_hour_mask | rtc_alarm_config->rtc_alarm_minute_
 344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                         rtc_alarm_config->rtc_alarm_second_mask) | 0x80808080U)) {
 345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_alarm_time->rtc_alarm_mask] value is invalid");
 346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_display_format = RTC_CTL & RTC_CTL_CS;
 350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_alarm_config->rtc_alarm_hour, and rtc_alarm_config->rtc_alarm_am_pm */
 351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(0U != rtc_display_format) {
 352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((rtc_alarm_config->rtc_alarm_hour < 1U) || (rtc_alarm_config->rtc_alarm_hour > 12U)) {
 354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_alarm_config->rtc_alarm_hour] value is invalid");
 355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((RTC_ALARM_AM != rtc_alarm_config->rtc_alarm_am_pm) && (RTC_ALARM_PM != rtc_alarm_config
 358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_alarm_config->rtc_alarm_am_pm] value is invalid");
 359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
 362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(rtc_alarm_config->rtc_alarm_hour > 23U) {
 363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_alarm_config->rtc_alarm_hour] value is invalid");
 364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_alarm_config->rtc_alarm_am_pm = RTC_ALARM_AM;
 367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_alarm_time->rtc_alarm_minute */
 370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_alarm_config->rtc_alarm_minute > 59) {
 371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_alarm_config->rtc_alarm_minute] value is invalid");
 372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_alarm_time->rtc_alarm_second */
 376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_alarm_config->rtc_alarm_second > 59) {
 377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_alarm_config->rtc_alarm_second] value is invalid");
 378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_alarm_time->rtc_weekday_or_date, and rtc_alarm_time->rtc_alarm_day */
 382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RTC_ALARM_SELECT_DATE == rtc_alarm_config->rtc_weekday_or_date) {
 383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((rtc_alarm_config->rtc_alarm_day < 1U) || (rtc_alarm_config->rtc_alarm_day > 31U)) {
 384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_alarm_config->rtc_weekday_or_date] value is invalid");
 385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else if(RTC_ALARM_SELECT_WEEKDAY == rtc_alarm_config->rtc_weekday_or_date) {
 388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((rtc_alarm_config->rtc_alarm_day < 1U) || (rtc_alarm_config->rtc_alarm_day > 7U)) {
 389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("parameter [rtc_alarm_config->rtc_weekday_or_date] value is invalid");
 390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_VAL;
 391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
 393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_alarm_config->rtc_weekday_or_date] value is invalid");
 394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter rtc_alarm_time->rtc_alarm_subsecond_mask */
 398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RTC_ALRM0SS_MASKSSC != (rtc_alarm_config->rtc_alarm_subsecond_mask | RTC_ALRM0SS_MASKSSC)) {
 399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [rtc_alarm_config->rtc_alarm_subsecond_mask] value is invalid");
 400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
 401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 403              		.loc 1 403 20
 404 0012 7B68     		ldr	r3, [r7, #4]
 405 0014 0222     		movs	r2, #2
 406 0016 5A74     		strb	r2, [r3, #17]
 404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* alarm config */
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_alrm0td = (rtc_alarm_config->rtc_alarm_am_pm | \
 407              		.loc 1 406 36
 408 0018 3B68     		ldr	r3, [r7]
 409 001a 1A68     		ldr	r2, [r3]
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_weekday_mask | \
 410              		.loc 1 407 36
 411 001c 3B68     		ldr	r3, [r7]
 412 001e 5B68     		ldr	r3, [r3, #4]
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_weekday_mask | \
 413              		.loc 1 406 54
 414 0020 1A43     		orrs	r2, r2, r3
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_hour_mask | \
 415              		.loc 1 408 36
 416 0022 3B68     		ldr	r3, [r7]
 417 0024 9B68     		ldr	r3, [r3, #8]
 407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_weekday_mask | \
 418              		.loc 1 407 61
 419 0026 1A43     		orrs	r2, r2, r3
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_minute_mask | \
 420              		.loc 1 409 36
 421 0028 3B68     		ldr	r3, [r7]
 422 002a DB68     		ldr	r3, [r3, #12]
 408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_hour_mask | \
 423              		.loc 1 408 58
 424 002c 1A43     		orrs	r2, r2, r3
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_second_mask | \
 425              		.loc 1 410 36
 426 002e 3B68     		ldr	r3, [r7]
 427 0030 1B69     		ldr	r3, [r3, #16]
 409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_minute_mask | \
 428              		.loc 1 409 60
 429 0032 1A43     		orrs	r2, r2, r3
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_weekday_or_date | \
 430              		.loc 1 411 36
 431 0034 3B68     		ldr	r3, [r7]
 432 0036 9B69     		ldr	r3, [r3, #24]
 410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_second_mask | \
 433              		.loc 1 410 60
 434 0038 42EA0304 		orr	r4, r2, r3
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    ALRM0TD_DAY(hals_rtc_normal_2_bcd(rtc_alarm_config->rtc_alarm_day)) | \
 435              		.loc 1 412 20
 436 003c 3B68     		ldr	r3, [r7]
 437 003e DB69     		ldr	r3, [r3, #28]
 438 0040 DBB2     		uxtb	r3, r3
 439 0042 1846     		mov	r0, r3
 440 0044 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 441 0048 0346     		mov	r3, r0
 442 004a 1B06     		lsls	r3, r3, #24
 443 004c 03F07C53 		and	r3, r3, #1056964608
 411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_weekday_or_date | \
 444              		.loc 1 411 58
 445 0050 1C43     		orrs	r4, r4, r3
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    ALRM0TD_HR(hals_rtc_normal_2_bcd(rtc_alarm_config->rtc_alarm_hour)) | \
 446              		.loc 1 413 20
 447 0052 3B68     		ldr	r3, [r7]
 448 0054 1B6A     		ldr	r3, [r3, #32]
 449 0056 DBB2     		uxtb	r3, r3
 450 0058 1846     		mov	r0, r3
 451 005a FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 452 005e 0346     		mov	r3, r0
 453 0060 1B04     		lsls	r3, r3, #16
 454 0062 03F47C13 		and	r3, r3, #4128768
 412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    ALRM0TD_DAY(hals_rtc_normal_2_bcd(rtc_alarm_config->rtc_alarm_day)) | \
 455              		.loc 1 412 88
 456 0066 1C43     		orrs	r4, r4, r3
 414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    ALRM0TD_MN(hals_rtc_normal_2_bcd(rtc_alarm_config->rtc_alarm_minute)) | \
 457              		.loc 1 414 20
 458 0068 3B68     		ldr	r3, [r7]
 459 006a 5B6A     		ldr	r3, [r3, #36]
 460 006c DBB2     		uxtb	r3, r3
 461 006e 1846     		mov	r0, r3
 462 0070 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 463 0074 0346     		mov	r3, r0
 464 0076 1B02     		lsls	r3, r3, #8
 465 0078 03F4FE43 		and	r3, r3, #32512
 413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    ALRM0TD_HR(hals_rtc_normal_2_bcd(rtc_alarm_config->rtc_alarm_hour)) | \
 466              		.loc 1 413 88
 467 007c 1C43     		orrs	r4, r4, r3
 415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    ALRM0TD_SC(hals_rtc_normal_2_bcd(rtc_alarm_config->rtc_alarm_second)));
 468              		.loc 1 415 20
 469 007e 3B68     		ldr	r3, [r7]
 470 0080 9B6A     		ldr	r3, [r3, #40]
 471 0082 DBB2     		uxtb	r3, r3
 472 0084 1846     		mov	r0, r3
 473 0086 FFF7FEFF 		bl	hals_rtc_normal_2_bcd
 474 008a 0346     		mov	r3, r0
 475 008c 03F07F03 		and	r3, r3, #127
 406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                    rtc_alarm_config->rtc_alarm_weekday_mask | \
 476              		.loc 1 406 17
 477 0090 2343     		orrs	r3, r3, r4
 478 0092 FB60     		str	r3, [r7, #12]
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_alrm0ss = rtc_alarm_config->rtc_alarm_subsecond_mask | \
 479              		.loc 1 416 35
 480 0094 3B68     		ldr	r3, [r7]
 481 0096 5A69     		ldr	r2, [r3, #20]
 417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   SS_SSC(rtc_alarm_config->rtc_alarm_subsecond);
 482              		.loc 1 417 19
 483 0098 3B68     		ldr	r3, [r7]
 484 009a DB6A     		ldr	r3, [r3, #44]
 485 009c 9BB2     		uxth	r3, r3
 416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_alrm0ss = rtc_alarm_config->rtc_alarm_subsecond_mask | \
 486              		.loc 1 416 17
 487 009e 1343     		orrs	r3, r3, r2
 488 00a0 BB60     		str	r3, [r7, #8]
 418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable RTC alarm */
 420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR == hals_rtc_alarm_disable()) {
 489              		.loc 1 420 17
 490 00a2 FFF7FEFF 		bl	hals_rtc_alarm_disable
 491 00a6 0346     		mov	r3, r0
 492              		.loc 1 420 7
 493 00a8 002B     		cmp	r3, #0
 494 00aa 02D1     		bne	.L12
 421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("disable RTC alarm error");
 422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_TIMEOUT;
 495              		.loc 1 422 16
 496 00ac 6FF00403 		mvn	r3, #4
 497 00b0 15E0     		b	.L13
 498              	.L12:
 423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
 426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 499              		.loc 1 426 5
 500 00b2 0D4B     		ldr	r3, .L14
 501              		.loc 1 426 13
 502 00b4 CA22     		movs	r2, #202
 503 00b6 1A60     		str	r2, [r3]
 427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 504              		.loc 1 427 5
 505 00b8 0B4B     		ldr	r3, .L14
 506              		.loc 1 427 13
 507 00ba 5322     		movs	r2, #83
 508 00bc 1A60     		str	r2, [r3]
 428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_ALRM0TD = (uint32_t)reg_alrm0td;
 509              		.loc 1 429 5
 510 00be 0B4A     		ldr	r2, .L14+4
 511              		.loc 1 429 17
 512 00c0 FB68     		ldr	r3, [r7, #12]
 513 00c2 1360     		str	r3, [r2]
 430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_ALRM0SS = reg_alrm0ss;
 514              		.loc 1 430 5
 515 00c4 0A4A     		ldr	r2, .L14+8
 516              		.loc 1 430 17
 517 00c6 BB68     		ldr	r3, [r7, #8]
 518 00c8 1360     		str	r3, [r2]
 431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
 433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 519              		.loc 1 433 5
 520 00ca 074B     		ldr	r3, .L14
 521              		.loc 1 433 13
 522 00cc FF22     		movs	r2, #255
 523 00ce 1A60     		str	r2, [r3]
 434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state */
 435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 524              		.loc 1 435 26
 525 00d0 7B68     		ldr	r3, [r7, #4]
 526 00d2 0022     		movs	r2, #0
 527 00d4 1A74     		strb	r2, [r3, #16]
 436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC state */
 437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_READY;
 528              		.loc 1 437 20
 529 00d6 7B68     		ldr	r3, [r7, #4]
 530 00d8 0522     		movs	r2, #5
 531 00da 5A74     		strb	r2, [r3, #17]
 438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 532              		.loc 1 440 12
 533 00dc 0023     		movs	r3, #0
 534              	.L13:
 441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 535              		.loc 1 441 1
 536 00de 1846     		mov	r0, r3
 537 00e0 1437     		adds	r7, r7, #20
 538              		.cfi_def_cfa_offset 12
 539 00e2 BD46     		mov	sp, r7
 540              		.cfi_def_cfa_register 13
 541              		@ sp needed
 542 00e4 90BD     		pop	{r4, r7, pc}
 543              	.L15:
 544 00e6 00BF     		.align	2
 545              	.L14:
 546 00e8 24280040 		.word	1073752100
 547 00ec 1C280040 		.word	1073752092
 548 00f0 44280040 		.word	1073752132
 549              		.cfi_endproc
 550              	.LFE121:
 552              		.section	.text.hal_rtc_tamp_config,"ax",%progbits
 553              		.align	1
 554              		.global	hal_rtc_tamp_config
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu softvfp
 560              	hal_rtc_tamp_config:
 561              	.LFB122:
 442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC tamper
 445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  hal_rtc_alarm_config_struct: the pointer of RTC alarm configure structure
 449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper_filter:
 450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FLT_EDGE: detecting tamper event using edge mode. precharge duration is dis
 452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FLT_2S: detecting tamper event using level mode.2 consecutive valid level s
 453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FLT_4S: detecting tamper event using level mode.4 consecutive valid level s
 454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FLT_8S: detecting tamper event using level mode.8 consecutive valid level s
 455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper_sample_frequency:
 456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV32768: sample once every 32768 RTCCLK(1Hz if RTCCLK=32.768KHz)
 458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV16384: sample once every 16384 RTCCLK(2Hz if RTCCLK=32.768KHz)
 459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV8192: sample once every 8192 RTCCLK(4Hz if RTCCLK=32.768KHz)
 460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV4096: sample once every 4096 RTCCLK(8Hz if RTCCLK=32.768KHz)
 461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV2048: sample once every 2048 RTCCLK(16Hz if RTCCLK=32.768KHz)
 462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV1024: sample once every 1024 RTCCLK(32Hz if RTCCLK=32.768KHz)
 463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV512: sample once every 512 RTCCLK(64Hz if RTCCLK=32.768KHz)
 464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FREQ_DIV256: sample once every 256 RTCCLK(128Hz if RTCCLK=32.768KHz)
 465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper_precharge_enable:
 466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PRCH_DISALE:  RTC tamper precharge feature disable during a voltage level d
 468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PRCH_ENALE: RTC tamper precharge feature enable during a voltage level dete
 469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper_precharge_time:
 470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PRCH_1C: 1 RTC clock prechagre time before each sampling
 472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PRCH_2C: 2 RTC clock prechagre time before each sampling
 473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PRCH_4C: 4 RTC clock prechagre time before each sampling
 474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PRCH_8C: 8 RTC clock prechagre time before each sampling
 475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper_with_timestamp:
 476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TIMESTAMP_DISALE: RTC tamper time-stamp feature disable
 478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TIMESTAMP_ENALE: RTC tamper time-stamp feature enable
 479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper0_trigger:
 480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_EDGE_RISING: tamper detection is in rising edge mode
 482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_EDGE_FALLING: tamper detection is in falling edge mode
 483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_LEVEL_LOW: tamper detection is in low level mode
 484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_LEVEL_HIGH: tamper detection is in high level mode
 485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper1_trigger:
 486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_EDGE_RISING: tamper detection is in rising edge mode
 488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_EDGE_FALLING: tamper detection is in falling edge mode
 489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_LEVEL_LOW: tamper detection is in low level mode
 490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TAMPER_TRIGGER_LEVEL_HIGH: tamper detection is in high level mode
 491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper0_source:
 492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          ENABLE: enable TAMPER0
 493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          DISABLE: disable TAMPER0
 494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_tamper1_source:
 495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          ENABLE: enable TAMPER1
 496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          DISABLE: disable TAMPER1
 497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_tamp_config(hal_rtc_dev_struct *rtc_dev, hal_rtc_tamper_config_struct *rtc_tamper_c
 501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 562              		.loc 1 501 1
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 8
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 83B0     		sub	sp, sp, #12
 571              		.cfi_def_cfa_offset 16
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 575 0008 3960     		str	r1, [r7]
 502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL == rtc_dev) || (NULL == rtc_tamper_config)) {
 505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] or pointer [*rtc_tamper_config] address is invalid");
 506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 576              		.loc 1 511 20
 577 000a 7B68     		ldr	r3, [r7, #4]
 578 000c 0222     		movs	r2, #2
 579 000e 5A74     		strb	r2, [r3, #17]
 512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* tamper config */
 514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* tamper filter must be used when the tamper source is voltage level detection */
 515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP &= (uint32_t)~(RTC_TAMP_DISPU | RTC_TAMP_PRCH | RTC_TAMP_FREQ | RTC_TAMP_FLT | RTC_TAM
 580              		.loc 1 515 14
 581 0010 214B     		ldr	r3, .L20
 582 0012 1B68     		ldr	r3, [r3]
 583 0014 204A     		ldr	r2, .L20
 584 0016 23F47F43 		bic	r3, r3, #65280
 585 001a 23F09B03 		bic	r3, r3, #155
 586 001e 1360     		str	r3, [r2]
 516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                             RTC_TAMP_TP1EG | RTC_TAMPER0 | RTC_TAMPER1);
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP |= (rtc_tamper_config->rtc_tamper_filter | \
 587              		.loc 1 517 14
 588 0020 1D4B     		ldr	r3, .L20
 589 0022 1A68     		ldr	r2, [r3]
 590              		.loc 1 517 35
 591 0024 3B68     		ldr	r3, [r7]
 592 0026 1968     		ldr	r1, [r3]
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_sample_frequency | \
 593              		.loc 1 518 35
 594 0028 3B68     		ldr	r3, [r7]
 595 002a 5B68     		ldr	r3, [r3, #4]
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_sample_frequency | \
 596              		.loc 1 517 55
 597 002c 1943     		orrs	r1, r1, r3
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_precharge_enable | \
 598              		.loc 1 519 35
 599 002e 3B68     		ldr	r3, [r7]
 600 0030 DB68     		ldr	r3, [r3, #12]
 518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_sample_frequency | \
 601              		.loc 1 518 65
 602 0032 1943     		orrs	r1, r1, r3
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_precharge_time | \
 603              		.loc 1 520 35
 604 0034 3B68     		ldr	r3, [r7]
 605 0036 9B68     		ldr	r3, [r3, #8]
 519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_precharge_enable | \
 606              		.loc 1 519 65
 607 0038 1943     		orrs	r1, r1, r3
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_with_timestamp | \
 608              		.loc 1 521 35
 609 003a 3B68     		ldr	r3, [r7]
 610 003c 1B69     		ldr	r3, [r3, #16]
 520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_precharge_time | \
 611              		.loc 1 520 63
 612 003e 1943     		orrs	r1, r1, r3
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  (rtc_tamper_config->rtc_tamper0_trigger << 1) | \
 613              		.loc 1 522 36
 614 0040 3B68     		ldr	r3, [r7]
 615 0042 5B69     		ldr	r3, [r3, #20]
 616              		.loc 1 522 58
 617 0044 5B00     		lsls	r3, r3, #1
 521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_with_timestamp | \
 618              		.loc 1 521 63
 619 0046 1943     		orrs	r1, r1, r3
 523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  (rtc_tamper_config->rtc_tamper1_trigger << 4)
 620              		.loc 1 523 36
 621 0048 3B68     		ldr	r3, [r7]
 622 004a 9B69     		ldr	r3, [r3, #24]
 623              		.loc 1 523 58
 624 004c 1B01     		lsls	r3, r3, #4
 522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  (rtc_tamper_config->rtc_tamper0_trigger << 1) | \
 625              		.loc 1 522 64
 626 004e 0B43     		orrs	r3, r3, r1
 517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                  rtc_tamper_config->rtc_tamper_sample_frequency | \
 627              		.loc 1 517 14
 628 0050 1149     		ldr	r1, .L20
 629 0052 1343     		orrs	r3, r3, r2
 630 0054 0B60     		str	r3, [r1]
 524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 );
 525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state */
 527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 631              		.loc 1 527 26
 632 0056 7B68     		ldr	r3, [r7, #4]
 633 0058 0022     		movs	r2, #0
 634 005a 1A74     		strb	r2, [r3, #16]
 528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC state */
 529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_READY;
 635              		.loc 1 529 20
 636 005c 7B68     		ldr	r3, [r7, #4]
 637 005e 0522     		movs	r2, #5
 638 0060 5A74     		strb	r2, [r3, #17]
 530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_tamper_config->rtc_tamper0_source == ENABLE) {
 639              		.loc 1 531 25
 640 0062 3B68     		ldr	r3, [r7]
 641 0064 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 642              		.loc 1 531 7
 643 0066 012B     		cmp	r3, #1
 644 0068 05D1     		bne	.L17
 532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* enable tamper0 */
 533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TAMP |= RTC_TAMPER0;
 645              		.loc 1 533 18
 646 006a 0B4B     		ldr	r3, .L20
 647 006c 1B68     		ldr	r3, [r3]
 648 006e 0A4A     		ldr	r2, .L20
 649 0070 43F00103 		orr	r3, r3, #1
 650 0074 1360     		str	r3, [r2]
 651              	.L17:
 534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(rtc_tamper_config->rtc_tamper1_source == ENABLE) {
 652              		.loc 1 536 25
 653 0076 3B68     		ldr	r3, [r7]
 654 0078 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 655              		.loc 1 536 7
 656 007a 012B     		cmp	r3, #1
 657 007c 05D1     		bne	.L18
 537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* enable tamper1 */
 538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TAMP |= RTC_TAMPER1;
 658              		.loc 1 538 18
 659 007e 064B     		ldr	r3, .L20
 660 0080 1B68     		ldr	r3, [r3]
 661 0082 054A     		ldr	r2, .L20
 662 0084 43F00803 		orr	r3, r3, #8
 663 0088 1360     		str	r3, [r2]
 664              	.L18:
 539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 665              		.loc 1 541 12
 666 008a 0023     		movs	r3, #0
 542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 667              		.loc 1 542 1
 668 008c 1846     		mov	r0, r3
 669 008e 0C37     		adds	r7, r7, #12
 670              		.cfi_def_cfa_offset 4
 671 0090 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0092 80BC     		pop	{r7}
 675              		.cfi_restore 7
 676              		.cfi_def_cfa_offset 0
 677 0094 7047     		bx	lr
 678              	.L21:
 679 0096 00BF     		.align	2
 680              	.L20:
 681 0098 40280040 		.word	1073752128
 682              		.cfi_endproc
 683              	.LFE122:
 685              		.section	.text.hal_rtc_timestamp_config,"ax",%progbits
 686              		.align	1
 687              		.global	hal_rtc_timestamp_config
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu softvfp
 693              	hal_rtc_timestamp_config:
 694              	.LFB123:
 543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC time stamp
 546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_timestamp_config: rtc timestamp configuration
 550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TIMESTAMP_RISING_EDGE: rising edge is valid event edge for time-stamp event
 552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TIMESTAMP_FALLING_EDGE: falling edge is valid event edge for time-stamp eve
 553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_timestamp_config(hal_rtc_dev_struct *rtc_dev, uint32_t rtc_timestamp_config)
 557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 695              		.loc 1 557 1
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700 0000 80B4     		push	{r7}
 701              		.cfi_def_cfa_offset 4
 702              		.cfi_offset 7, -4
 703 0002 83B0     		sub	sp, sp, #12
 704              		.cfi_def_cfa_offset 16
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 707 0006 7860     		str	r0, [r7, #4]
 708 0008 3960     		str	r1, [r7]
 558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
 561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] address is invalid");
 562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 709              		.loc 1 566 20
 710 000a 7B68     		ldr	r3, [r7, #4]
 711 000c 0222     		movs	r2, #2
 712 000e 5A74     		strb	r2, [r3, #17]
 567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* tamper config */
 569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
 570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 713              		.loc 1 570 5
 714 0010 114B     		ldr	r3, .L24
 715              		.loc 1 570 13
 716 0012 CA22     		movs	r2, #202
 717 0014 1A60     		str	r2, [r3]
 571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 718              		.loc 1 571 5
 719 0016 104B     		ldr	r3, .L24
 720              		.loc 1 571 13
 721 0018 5322     		movs	r2, #83
 722 001a 1A60     		str	r2, [r3]
 572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* clear the bits to be configured in RTC_CTL */
 573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)(~(RTC_CTL_TSEG));
 723              		.loc 1 573 13
 724 001c 0F4B     		ldr	r3, .L24+4
 725 001e 1B68     		ldr	r3, [r3]
 726 0020 0E4A     		ldr	r2, .L24+4
 727 0022 23F00803 		bic	r3, r3, #8
 728 0026 1360     		str	r3, [r2]
 574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* new configuration */
 575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= (uint32_t)(rtc_timestamp_config | RTC_CTL_TSEN);
 729              		.loc 1 575 13
 730 0028 0C4B     		ldr	r3, .L24+4
 731 002a 1A68     		ldr	r2, [r3]
 732 002c 3B68     		ldr	r3, [r7]
 733 002e 1343     		orrs	r3, r3, r2
 734 0030 0A4A     		ldr	r2, .L24+4
 735 0032 43F40063 		orr	r3, r3, #2048
 736 0036 1360     		str	r3, [r2]
 576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
 578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 737              		.loc 1 578 5
 738 0038 074B     		ldr	r3, .L24
 739              		.loc 1 578 13
 740 003a FF22     		movs	r2, #255
 741 003c 1A60     		str	r2, [r3]
 579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state */
 580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 742              		.loc 1 580 26
 743 003e 7B68     		ldr	r3, [r7, #4]
 744 0040 0022     		movs	r2, #0
 745 0042 1A74     		strb	r2, [r3, #16]
 581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC state */
 582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_READY;
 746              		.loc 1 582 20
 747 0044 7B68     		ldr	r3, [r7, #4]
 748 0046 0522     		movs	r2, #5
 749 0048 5A74     		strb	r2, [r3, #17]
 583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 750              		.loc 1 585 12
 751 004a 0023     		movs	r3, #0
 586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 752              		.loc 1 586 1
 753 004c 1846     		mov	r0, r3
 754 004e 0C37     		adds	r7, r7, #12
 755              		.cfi_def_cfa_offset 4
 756 0050 BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0052 80BC     		pop	{r7}
 760              		.cfi_restore 7
 761              		.cfi_def_cfa_offset 0
 762 0054 7047     		bx	lr
 763              	.L25:
 764 0056 00BF     		.align	2
 765              	.L24:
 766 0058 24280040 		.word	1073752100
 767 005c 08280040 		.word	1073752072
 768              		.cfi_endproc
 769              	.LFE123:
 771              		.section	.text.hal_rtc_calib_config,"ax",%progbits
 772              		.align	1
 773              		.global	hal_rtc_calib_config
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu softvfp
 779              	hal_rtc_calib_config:
 780              	.LFB124:
 587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC calibration
 590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_calib_config: rtc calibration configuration
 594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_CALIBRATION_NONE: calibration output none
 596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_CALIBRATION_OUTPUT_512HZ: calibration output of 512Hz is enable
 597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_CALIBRATION_OUTPUT_1HZ: calibration output of 1Hz is enable
 598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_calib_config(hal_rtc_dev_struct *rtc_dev, uint8_t rtc_calib_config)
 602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 781              		.loc 1 602 1
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786 0000 80B4     		push	{r7}
 787              		.cfi_def_cfa_offset 4
 788              		.cfi_offset 7, -4
 789 0002 83B0     		sub	sp, sp, #12
 790              		.cfi_def_cfa_offset 16
 791 0004 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 793 0006 7860     		str	r0, [r7, #4]
 794 0008 0B46     		mov	r3, r1
 795 000a FB70     		strb	r3, [r7, #3]
 603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
 606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] address is invalid");
 607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 796              		.loc 1 611 20
 797 000c 7B68     		ldr	r3, [r7, #4]
 798 000e 0222     		movs	r2, #2
 799 0010 5A74     		strb	r2, [r3, #17]
 612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* tamper config */
 614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
 615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 800              		.loc 1 615 5
 801 0012 1D4B     		ldr	r3, .L32
 802              		.loc 1 615 13
 803 0014 CA22     		movs	r2, #202
 804 0016 1A60     		str	r2, [r3]
 616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 805              		.loc 1 616 5
 806 0018 1B4B     		ldr	r3, .L32
 807              		.loc 1 616 13
 808 001a 5322     		movs	r2, #83
 809 001c 1A60     		str	r2, [r3]
 617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     switch(rtc_calib_config) {
 810              		.loc 1 618 5
 811 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 812 0020 022B     		cmp	r3, #2
 813 0022 1AD0     		beq	.L27
 814 0024 022B     		cmp	r3, #2
 815 0026 1FDC     		bgt	.L28
 816 0028 002B     		cmp	r3, #0
 817 002a 02D0     		beq	.L29
 818 002c 012B     		cmp	r3, #1
 819 002e 07D0     		beq	.L30
 820 0030 1AE0     		b	.L28
 821              	.L29:
 619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case RTC_CALIBRATION_NONE:
 620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear the bits to be configured in RTC_CTL */
 621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL &= (uint32_t)(~(RTC_CTL_COEN));
 822              		.loc 1 621 17
 823 0032 164B     		ldr	r3, .L32+4
 824 0034 1B68     		ldr	r3, [r3]
 825 0036 154A     		ldr	r2, .L32+4
 826 0038 23F40003 		bic	r3, r3, #8388608
 827 003c 1360     		str	r3, [r2]
 622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 828              		.loc 1 622 9
 829 003e 13E0     		b	.L28
 830              	.L30:
 623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case RTC_CALIBRATION_OUTPUT_512HZ:
 624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear the bits to be configured in RTC_CTL */
 625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL &= (uint32_t)(~(RTC_CTL_COS));
 831              		.loc 1 625 17
 832 0040 124B     		ldr	r3, .L32+4
 833 0042 1B68     		ldr	r3, [r3]
 834 0044 114A     		ldr	r2, .L32+4
 835 0046 23F40023 		bic	r3, r3, #524288
 836 004a 1360     		str	r3, [r2]
 626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL |= (uint32_t)((RTC_CTL_COEN));
 837              		.loc 1 626 17
 838 004c 0F4B     		ldr	r3, .L32+4
 839 004e 1B68     		ldr	r3, [r3]
 840 0050 0E4A     		ldr	r2, .L32+4
 841 0052 43F40003 		orr	r3, r3, #8388608
 842 0056 1360     		str	r3, [r2]
 627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 843              		.loc 1 627 9
 844 0058 06E0     		b	.L28
 845              	.L27:
 628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case RTC_CALIBRATION_OUTPUT_1HZ:
 629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear the bits to be configured in RTC_CTL */
 630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_CTL |= (uint32_t)(RTC_CTL_COEN | RTC_CTL_COS);
 846              		.loc 1 630 17
 847 005a 0C4B     		ldr	r3, .L32+4
 848 005c 1B68     		ldr	r3, [r3]
 849 005e 0B4A     		ldr	r2, .L32+4
 850 0060 43F40803 		orr	r3, r3, #8912896
 851 0064 1360     		str	r3, [r2]
 631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 852              		.loc 1 631 9
 853 0066 00BF     		nop
 854              	.L28:
 632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
 635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 855              		.loc 1 635 5
 856 0068 074B     		ldr	r3, .L32
 857              		.loc 1 635 13
 858 006a FF22     		movs	r2, #255
 859 006c 1A60     		str	r2, [r3]
 636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state */
 637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 860              		.loc 1 637 26
 861 006e 7B68     		ldr	r3, [r7, #4]
 862 0070 0022     		movs	r2, #0
 863 0072 1A74     		strb	r2, [r3, #16]
 638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC state */
 639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_READY;
 864              		.loc 1 639 20
 865 0074 7B68     		ldr	r3, [r7, #4]
 866 0076 0522     		movs	r2, #5
 867 0078 5A74     		strb	r2, [r3, #17]
 640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 868              		.loc 1 642 12
 869 007a 0023     		movs	r3, #0
 643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 870              		.loc 1 643 1
 871 007c 1846     		mov	r0, r3
 872 007e 0C37     		adds	r7, r7, #12
 873              		.cfi_def_cfa_offset 4
 874 0080 BD46     		mov	sp, r7
 875              		.cfi_def_cfa_register 13
 876              		@ sp needed
 877 0082 80BC     		pop	{r7}
 878              		.cfi_restore 7
 879              		.cfi_def_cfa_offset 0
 880 0084 7047     		bx	lr
 881              	.L33:
 882 0086 00BF     		.align	2
 883              	.L32:
 884 0088 24280040 		.word	1073752100
 885 008c 08280040 		.word	1073752072
 886              		.cfi_endproc
 887              	.LFE124:
 889              		.section	.text.hal_rtc_refclock_detection_config,"ax",%progbits
 890              		.align	1
 891              		.global	hal_rtc_refclock_detection_config
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu softvfp
 897              	hal_rtc_refclock_detection_config:
 898              	.LFB125:
 644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC reference clock detection function
 647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  refclock_detection: rtc reference clock detection
 651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
 652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          DISABLE: disable RTC reference clock detection function
 653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          ENABLE: enable RTC reference clock detection function
 654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_refclock_detection_config(hal_rtc_dev_struct *rtc_dev, ControlStatus refclock_detec
 658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 899              		.loc 1 658 1
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 16
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 84B0     		sub	sp, sp, #16
 908              		.cfi_def_cfa_offset 24
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 912 0008 0B46     		mov	r3, r1
 913 000a FB70     		strb	r3, [r7, #3]
 659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 914              		.loc 1 659 15
 915 000c 0023     		movs	r3, #0
 916 000e FB73     		strb	r3, [r7, #15]
 660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
 663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*rtc_dev] address is invalid");
 664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 917              		.loc 1 668 20
 918 0010 7B68     		ldr	r3, [r7, #4]
 919 0012 0222     		movs	r2, #2
 920 0014 5A74     		strb	r2, [r3, #17]
 669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
 671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 921              		.loc 1 671 5
 922 0016 1C4B     		ldr	r3, .L40
 923              		.loc 1 671 13
 924 0018 CA22     		movs	r2, #202
 925 001a 1A60     		str	r2, [r3]
 672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 926              		.loc 1 672 5
 927 001c 1A4B     		ldr	r3, .L40
 928              		.loc 1 672 13
 929 001e 5322     		movs	r2, #83
 930 0020 1A60     		str	r2, [r3]
 673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enter init mode */
 675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     error_status = hals_rtc_init_mode_enter();
 931              		.loc 1 675 20
 932 0022 FFF7FEFF 		bl	hals_rtc_init_mode_enter
 933 0026 0346     		mov	r3, r0
 934 0028 FB73     		strb	r3, [r7, #15]
 676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR != error_status) {
 935              		.loc 1 677 7
 936 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 937 002c 002B     		cmp	r3, #0
 938 002e 11D0     		beq	.L35
 678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(ENABLE == refclock_detection) {
 939              		.loc 1 678 11
 940 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 941 0032 012B     		cmp	r3, #1
 942 0034 06D1     		bne	.L36
 679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             RTC_CTL |= (uint32_t)RTC_CTL_REFEN;
 943              		.loc 1 679 21
 944 0036 154B     		ldr	r3, .L40+4
 945 0038 1B68     		ldr	r3, [r3]
 946 003a 144A     		ldr	r2, .L40+4
 947 003c 43F01003 		orr	r3, r3, #16
 948 0040 1360     		str	r3, [r2]
 949 0042 05E0     		b	.L37
 950              	.L36:
 680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         } else {
 681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             RTC_CTL &= (uint32_t)~RTC_CTL_REFEN;
 951              		.loc 1 681 21
 952 0044 114B     		ldr	r3, .L40+4
 953 0046 1B68     		ldr	r3, [r3]
 954 0048 104A     		ldr	r2, .L40+4
 955 004a 23F01003 		bic	r3, r3, #16
 956 004e 1360     		str	r3, [r2]
 957              	.L37:
 682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* exit init mode */
 684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_init_mode_exit();
 958              		.loc 1 684 9
 959 0050 FFF7FEFF 		bl	hals_rtc_init_mode_exit
 960              	.L35:
 685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
 688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 961              		.loc 1 688 5
 962 0054 0C4B     		ldr	r3, .L40
 963              		.loc 1 688 13
 964 0056 FF22     		movs	r2, #255
 965 0058 1A60     		str	r2, [r3]
 689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR != error_status) {
 966              		.loc 1 690 7
 967 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 968 005c 002B     		cmp	r3, #0
 969 005e 07D0     		beq	.L38
 691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* change RTC error state */
 692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 970              		.loc 1 692 30
 971 0060 7B68     		ldr	r3, [r7, #4]
 972 0062 0022     		movs	r2, #0
 973 0064 1A74     		strb	r2, [r3, #16]
 693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* change RTC state */
 694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->state = HAL_RTC_STATE_READY;
 974              		.loc 1 694 24
 975 0066 7B68     		ldr	r3, [r7, #4]
 976 0068 0522     		movs	r2, #5
 977 006a 5A74     		strb	r2, [r3, #17]
 695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_NONE;
 978              		.loc 1 696 16
 979 006c 0023     		movs	r3, #0
 980 006e 07E0     		b	.L39
 981              	.L38:
 697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
 698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* change RTC error state */
 699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->error_state = HAL_RTC_ERROR_SYSTEM;
 982              		.loc 1 699 30
 983 0070 7B68     		ldr	r3, [r7, #4]
 984 0072 0122     		movs	r2, #1
 985 0074 1A74     		strb	r2, [r3, #16]
 700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* change RTC state */
 701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->state = HAL_RTC_STATE_ERROR;
 986              		.loc 1 701 24
 987 0076 7B68     		ldr	r3, [r7, #4]
 988 0078 0422     		movs	r2, #4
 989 007a 5A74     		strb	r2, [r3, #17]
 702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* return function state */
 703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_HARDWARE;
 990              		.loc 1 703 16
 991 007c 6FF00703 		mvn	r3, #7
 992              	.L39:
 704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 993              		.loc 1 705 1
 994 0080 1846     		mov	r0, r3
 995 0082 1037     		adds	r7, r7, #16
 996              		.cfi_def_cfa_offset 8
 997 0084 BD46     		mov	sp, r7
 998              		.cfi_def_cfa_register 13
 999              		@ sp needed
 1000 0086 80BD     		pop	{r7, pc}
 1001              	.L41:
 1002              		.align	2
 1003              	.L40:
 1004 0088 24280040 		.word	1073752100
 1005 008c 08280040 		.word	1073752072
 1006              		.cfi_endproc
 1007              	.LFE125:
 1009              		.section	.text.hal_rtc_struct_init,"ax",%progbits
 1010              		.align	1
 1011              		.global	hal_rtc_struct_init
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1015              		.fpu softvfp
 1017              	hal_rtc_struct_init:
 1018              	.LFB126:
 706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      initialize the RTC structure with the default values
 709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  hal_struct_type: the argument could be selected from enumeration <hal_rtc_struct_ty
 710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out]  p_struct: pointer to RTC structure that contains the configuration information
 711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
 712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_struct_init(hal_rtc_struct_type_enum hal_struct_type, void *p_struct)
 714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 1019              		.loc 1 714 1
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 8
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 83B0     		sub	sp, sp, #12
 1028              		.cfi_def_cfa_offset 16
 1029 0004 00AF     		add	r7, sp, #0
 1030              		.cfi_def_cfa_register 7
 1031 0006 0346     		mov	r3, r0
 1032 0008 3960     		str	r1, [r7]
 1033 000a FB71     		strb	r3, [r7, #7]
 715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == p_struct) {
 718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [*p_struct] value is invalid");
 719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     switch(hal_struct_type) {
 1034              		.loc 1 722 5
 1035 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1036 000e 062B     		cmp	r3, #6
 1037 0010 00F2C180 		bhi	.L53
 1038 0014 01A2     		adr	r2, .L45
 1039 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1040 001a 00BF     		.p2align 2
 1041              	.L45:
 1042 001c 39000000 		.word	.L51+1
 1043 0020 85000000 		.word	.L50+1
 1044 0024 93000000 		.word	.L49+1
 1045 0028 DF000000 		.word	.L48+1
 1046 002c 19010000 		.word	.L47+1
 1047 0030 4B010000 		.word	.L46+1
 1048 0034 65010000 		.word	.L44+1
 1049              		.p2align 1
 1050              	.L51:
 723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_INIT_STRUCT:
 724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* RTC init struct */
 725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_year                             = 0x00;
 1051              		.loc 1 725 81
 1052 0038 3B68     		ldr	r3, [r7]
 1053 003a 0022     		movs	r2, #0
 1054 003c 1A70     		strb	r2, [r3]
 726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_month                            = RTC_JAN;
 1055              		.loc 1 726 81
 1056 003e 3B68     		ldr	r3, [r7]
 1057 0040 0122     		movs	r2, #1
 1058 0042 5A70     		strb	r2, [r3, #1]
 727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_date                             = 0x1;
 1059              		.loc 1 727 81
 1060 0044 3B68     		ldr	r3, [r7]
 1061 0046 0122     		movs	r2, #1
 1062 0048 9A70     		strb	r2, [r3, #2]
 728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_day_of_week                      = RTC_MONDAY;
 1063              		.loc 1 728 81
 1064 004a 3B68     		ldr	r3, [r7]
 1065 004c 0122     		movs	r2, #1
 1066 004e DA70     		strb	r2, [r3, #3]
 729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_hour                             = 0x0;
 1067              		.loc 1 729 81
 1068 0050 3B68     		ldr	r3, [r7]
 1069 0052 0022     		movs	r2, #0
 1070 0054 1A71     		strb	r2, [r3, #4]
 730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_minute                           = 0x0;
 1071              		.loc 1 730 81
 1072 0056 3B68     		ldr	r3, [r7]
 1073 0058 0022     		movs	r2, #0
 1074 005a 5A71     		strb	r2, [r3, #5]
 731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_second                           = 0x0;
 1075              		.loc 1 731 81
 1076 005c 3B68     		ldr	r3, [r7]
 1077 005e 0022     		movs	r2, #0
 1078 0060 9A71     		strb	r2, [r3, #6]
 732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_am_pm                            = RTC_AM;
 1079              		.loc 1 732 81
 1080 0062 3B68     		ldr	r3, [r7]
 1081 0064 0022     		movs	r2, #0
 1082 0066 DA60     		str	r2, [r3, #12]
 733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_daylight_saving                  = RTC_DAYLIGHT_SAVI
 1083              		.loc 1 733 81
 1084 0068 3B68     		ldr	r3, [r7]
 1085 006a 0022     		movs	r2, #0
 1086 006c 1A61     		str	r2, [r3, #16]
 734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_clock_format                     = RTC_24H_FORMAT;
 1087              		.loc 1 734 81
 1088 006e 3B68     		ldr	r3, [r7]
 1089 0070 0022     		movs	r2, #0
 1090 0072 5A61     		str	r2, [r3, #20]
 735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_psc_factor_s                     = 0x18F;
 1091              		.loc 1 735 81
 1092 0074 3B68     		ldr	r3, [r7]
 1093 0076 40F28F12 		movw	r2, #399
 1094 007a 1A83     		strh	r2, [r3, #24]	@ movhi
 736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_init_struct *)p_struct)->rtc_psc_factor_a                     = 0x63;
 1095              		.loc 1 736 81
 1096 007c 3B68     		ldr	r3, [r7]
 1097 007e 6322     		movs	r2, #99
 1098 0080 5A83     		strh	r2, [r3, #26]	@ movhi
 737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1099              		.loc 1 737 9
 1100 0082 89E0     		b	.L52
 1101              	.L50:
 738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_ALARM_OUTPUT_CONFIG_STRUCT:
 739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* RTC alarm out config struct */
 740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_output_config_struct *)p_struct)->rtc_alarm_output_polarity        = RTC_AL
 1102              		.loc 1 740 92
 1103 0084 3B68     		ldr	r3, [r7]
 1104 0086 0022     		movs	r2, #0
 1105 0088 1A60     		str	r2, [r3]
 741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_output_config_struct *)p_struct)->rtc_alarm_output_polarity        = RTC_AL
 1106              		.loc 1 741 92
 1107 008a 3B68     		ldr	r3, [r7]
 1108 008c 0022     		movs	r2, #0
 1109 008e 1A60     		str	r2, [r3]
 742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1110              		.loc 1 742 9
 1111 0090 82E0     		b	.L52
 1112              	.L49:
 743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_ALARM_CONFIG_STRUCT:
 744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* RTC alarm config struct */
 745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_am_pm                         = RTC_AL
 1113              		.loc 1 745 92
 1114 0092 3B68     		ldr	r3, [r7]
 1115 0094 0022     		movs	r2, #0
 1116 0096 1A60     		str	r2, [r3]
 746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_weekday_mask                  = RTC_AL
 1117              		.loc 1 746 92
 1118 0098 3B68     		ldr	r3, [r7]
 1119 009a 0022     		movs	r2, #0
 1120 009c 5A60     		str	r2, [r3, #4]
 747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_hour_mask                     = RTC_AL
 1121              		.loc 1 747 92
 1122 009e 3B68     		ldr	r3, [r7]
 1123 00a0 0022     		movs	r2, #0
 1124 00a2 9A60     		str	r2, [r3, #8]
 748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_minute_mask                   = RTC_AL
 1125              		.loc 1 748 92
 1126 00a4 3B68     		ldr	r3, [r7]
 1127 00a6 0022     		movs	r2, #0
 1128 00a8 DA60     		str	r2, [r3, #12]
 749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_second_mask                   = RTC_AL
 1129              		.loc 1 749 92
 1130 00aa 3B68     		ldr	r3, [r7]
 1131 00ac 0022     		movs	r2, #0
 1132 00ae 1A61     		str	r2, [r3, #16]
 750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_subsecond_mask                = RTC_MA
 1133              		.loc 1 750 92
 1134 00b0 3B68     		ldr	r3, [r7]
 1135 00b2 0022     		movs	r2, #0
 1136 00b4 5A61     		str	r2, [r3, #20]
 751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_weekday_or_date                     = RTC_AL
 1137              		.loc 1 751 92
 1138 00b6 3B68     		ldr	r3, [r7]
 1139 00b8 4FF08042 		mov	r2, #1073741824
 1140 00bc 9A61     		str	r2, [r3, #24]
 752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_day                           = RTC_AL
 1141              		.loc 1 752 92
 1142 00be 3B68     		ldr	r3, [r7]
 1143 00c0 0122     		movs	r2, #1
 1144 00c2 DA61     		str	r2, [r3, #28]
 753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_hour                          = 0x0;
 1145              		.loc 1 753 92
 1146 00c4 3B68     		ldr	r3, [r7]
 1147 00c6 0022     		movs	r2, #0
 1148 00c8 1A62     		str	r2, [r3, #32]
 754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_minute                        = 0x0;
 1149              		.loc 1 754 92
 1150 00ca 3B68     		ldr	r3, [r7]
 1151 00cc 0022     		movs	r2, #0
 1152 00ce 5A62     		str	r2, [r3, #36]
 755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_second                        = 0x0;
 1153              		.loc 1 755 92
 1154 00d0 3B68     		ldr	r3, [r7]
 1155 00d2 0022     		movs	r2, #0
 1156 00d4 9A62     		str	r2, [r3, #40]
 756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_alarm_config_struct *)p_struct)->rtc_alarm_subsecond                     = 0x0;
 1157              		.loc 1 756 92
 1158 00d6 3B68     		ldr	r3, [r7]
 1159 00d8 0022     		movs	r2, #0
 1160 00da DA62     		str	r2, [r3, #44]
 757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1161              		.loc 1 757 9
 1162 00dc 5CE0     		b	.L52
 1163              	.L48:
 758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_TAMPER_CONFIG_STRUCT:
 759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* RTC alarm config struct */
 760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper_filter                      = RTC_FL
 1164              		.loc 1 760 92
 1165 00de 3B68     		ldr	r3, [r7]
 1166 00e0 0022     		movs	r2, #0
 1167 00e2 1A60     		str	r2, [r3]
 761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper_sample_frequency            = RTC_FR
 1168              		.loc 1 761 92
 1169 00e4 3B68     		ldr	r3, [r7]
 1170 00e6 0022     		movs	r2, #0
 1171 00e8 5A60     		str	r2, [r3, #4]
 762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper_precharge_time              = RTC_PR
 1172              		.loc 1 762 92
 1173 00ea 3B68     		ldr	r3, [r7]
 1174 00ec 0022     		movs	r2, #0
 1175 00ee 9A60     		str	r2, [r3, #8]
 763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper_precharge_enable            = RTC_PR
 1176              		.loc 1 763 92
 1177 00f0 3B68     		ldr	r3, [r7]
 1178 00f2 4FF40042 		mov	r2, #32768
 1179 00f6 DA60     		str	r2, [r3, #12]
 764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper_with_timestamp              = RTC_TA
 1180              		.loc 1 764 92
 1181 00f8 3B68     		ldr	r3, [r7]
 1182 00fa 0022     		movs	r2, #0
 1183 00fc 1A61     		str	r2, [r3, #16]
 765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper0_trigger                    = RTC_TA
 1184              		.loc 1 765 92
 1185 00fe 3B68     		ldr	r3, [r7]
 1186 0100 0022     		movs	r2, #0
 1187 0102 5A61     		str	r2, [r3, #20]
 766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper1_trigger                    = RTC_TA
 1188              		.loc 1 766 92
 1189 0104 3B68     		ldr	r3, [r7]
 1190 0106 0022     		movs	r2, #0
 1191 0108 9A61     		str	r2, [r3, #24]
 767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper0_source                     = DISABL
 1192              		.loc 1 767 92
 1193 010a 3B68     		ldr	r3, [r7]
 1194 010c 0022     		movs	r2, #0
 1195 010e 1A77     		strb	r2, [r3, #28]
 768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_tamper_config_struct *)p_struct)->rtc_tamper1_source                     = ENABLE
 1196              		.loc 1 768 92
 1197 0110 3B68     		ldr	r3, [r7]
 1198 0112 0122     		movs	r2, #1
 1199 0114 5A77     		strb	r2, [r3, #29]
 769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1200              		.loc 1 769 9
 1201 0116 3FE0     		b	.L52
 1202              	.L47:
 770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_TIMESTAMP_STRUCT:
 771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* RTC timestamp config struct */
 772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_month = RTC_JAN;
 1203              		.loc 1 772 69
 1204 0118 3B68     		ldr	r3, [r7]
 1205 011a 0122     		movs	r2, #1
 1206 011c 1A70     		strb	r2, [r3]
 773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_date = 0x1;
 1207              		.loc 1 773 68
 1208 011e 3B68     		ldr	r3, [r7]
 1209 0120 0122     		movs	r2, #1
 1210 0122 5A70     		strb	r2, [r3, #1]
 774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_weekday = RTC_MONDAY;
 1211              		.loc 1 774 71
 1212 0124 3B68     		ldr	r3, [r7]
 1213 0126 0122     		movs	r2, #1
 1214 0128 9A70     		strb	r2, [r3, #2]
 775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_hour = 0x0;
 1215              		.loc 1 775 68
 1216 012a 3B68     		ldr	r3, [r7]
 1217 012c 0022     		movs	r2, #0
 1218 012e DA70     		strb	r2, [r3, #3]
 776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_minute = 0x0;
 1219              		.loc 1 776 70
 1220 0130 3B68     		ldr	r3, [r7]
 1221 0132 0022     		movs	r2, #0
 1222 0134 1A71     		strb	r2, [r3, #4]
 777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_second = 0x0;
 1223              		.loc 1 777 70
 1224 0136 3B68     		ldr	r3, [r7]
 1225 0138 0022     		movs	r2, #0
 1226 013a 5A71     		strb	r2, [r3, #5]
 778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_timestamp_subsecond = 0x0;
 1227              		.loc 1 778 73
 1228 013c 3B68     		ldr	r3, [r7]
 1229 013e 0022     		movs	r2, #0
 1230 0140 9A60     		str	r2, [r3, #8]
 779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_timestamp_struct *)p_struct)->rtc_am_pm = RTC_AM;
 1231              		.loc 1 779 59
 1232 0142 3B68     		ldr	r3, [r7]
 1233 0144 0022     		movs	r2, #0
 1234 0146 DA60     		str	r2, [r3, #12]
 780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1235              		.loc 1 780 9
 1236 0148 26E0     		b	.L52
 1237              	.L46:
 781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_IRQ_STRUCT:
 782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* initialize RTC initialization structure with the default values */
 783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_irq_struct *)p_struct)->rtc_timestamp_handle                             = NULL;
 1238              		.loc 1 783 92
 1239 014a 3B68     		ldr	r3, [r7]
 1240 014c 0022     		movs	r2, #0
 1241 014e 1A60     		str	r2, [r3]
 784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_irq_struct *)p_struct)->rtc_alarm_handle                                 = NULL;
 1242              		.loc 1 784 92
 1243 0150 3B68     		ldr	r3, [r7]
 1244 0152 0022     		movs	r2, #0
 1245 0154 5A60     		str	r2, [r3, #4]
 785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_irq_struct *)p_struct)->rtc_tamper0_handle                                 = NULL
 1246              		.loc 1 785 94
 1247 0156 3B68     		ldr	r3, [r7]
 1248 0158 0022     		movs	r2, #0
 1249 015a 9A60     		str	r2, [r3, #8]
 786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_irq_struct *)p_struct)->rtc_tamper1_handle                                 = NULL
 1250              		.loc 1 786 94
 1251 015c 3B68     		ldr	r3, [r7]
 1252 015e 0022     		movs	r2, #0
 1253 0160 DA60     		str	r2, [r3, #12]
 787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1254              		.loc 1 787 9
 1255 0162 19E0     		b	.L52
 1256              	.L44:
 788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     case HAL_RTC_DEV_STRUCT:
 789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* initialize RTC initialization structure with the default values */
 790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->rtc_irq.rtc_timestamp_handle                     = NULL;
 1257              		.loc 1 790 92
 1258 0164 3B68     		ldr	r3, [r7]
 1259 0166 0022     		movs	r2, #0
 1260 0168 1A60     		str	r2, [r3]
 791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->rtc_irq.rtc_alarm_handle                         = NULL;
 1261              		.loc 1 791 92
 1262 016a 3B68     		ldr	r3, [r7]
 1263 016c 0022     		movs	r2, #0
 1264 016e 5A60     		str	r2, [r3, #4]
 792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->rtc_irq.rtc_tamper0_handle                         = NULL
 1265              		.loc 1 792 94
 1266 0170 3B68     		ldr	r3, [r7]
 1267 0172 0022     		movs	r2, #0
 1268 0174 9A60     		str	r2, [r3, #8]
 793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->rtc_irq.rtc_tamper1_handle                         = NULL
 1269              		.loc 1 793 94
 1270 0176 3B68     		ldr	r3, [r7]
 1271 0178 0022     		movs	r2, #0
 1272 017a DA60     		str	r2, [r3, #12]
 794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->error_state                                      = HAL_RT
 1273              		.loc 1 794 92
 1274 017c 3B68     		ldr	r3, [r7]
 1275 017e 0022     		movs	r2, #0
 1276 0180 1A74     		strb	r2, [r3, #16]
 795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->state                                            = HAL_RT
 1277              		.loc 1 795 92
 1278 0182 3B68     		ldr	r3, [r7]
 1279 0184 0022     		movs	r2, #0
 1280 0186 5A74     		strb	r2, [r3, #17]
 796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->mutex                                            = HAL_MU
 1281              		.loc 1 796 92
 1282 0188 3B68     		ldr	r3, [r7]
 1283 018a 0022     		movs	r2, #0
 1284 018c 9A74     		strb	r2, [r3, #18]
 797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ((hal_rtc_dev_struct *)p_struct)->priv                                             = NULL;
 1285              		.loc 1 797 92
 1286 018e 3B68     		ldr	r3, [r7]
 1287 0190 0022     		movs	r2, #0
 1288 0192 5A61     		str	r2, [r3, #20]
 798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1289              		.loc 1 798 9
 1290 0194 00E0     		b	.L52
 1291              	.L53:
 799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     default:
 800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGW("parameter [hal_struct_type] value is undefine");
 801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         break;
 1292              		.loc 1 801 9
 1293 0196 00BF     		nop
 1294              	.L52:
 802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 1295              		.loc 1 803 1
 1296 0198 00BF     		nop
 1297 019a 0C37     		adds	r7, r7, #12
 1298              		.cfi_def_cfa_offset 4
 1299 019c BD46     		mov	sp, r7
 1300              		.cfi_def_cfa_register 13
 1301              		@ sp needed
 1302 019e 80BC     		pop	{r7}
 1303              		.cfi_restore 7
 1304              		.cfi_def_cfa_offset 0
 1305 01a0 7047     		bx	lr
 1306              		.cfi_endproc
 1307              	.LFE126:
 1309 01a2 00BF     		.section	.text.hal_rtc_deinit,"ax",%progbits
 1310              		.align	1
 1311              		.global	hal_rtc_deinit
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu softvfp
 1317              	hal_rtc_deinit:
 1318              	.LFB127:
 804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      deinitialize RTC device structure and init structure
 807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out]  rtc_dev: RTC device information structure
 808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_deinit(hal_rtc_dev_struct *rtc_dev)
 813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 1319              		.loc 1 813 1
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 16
 1322              		@ frame_needed = 1, uses_anonymous_args = 0
 1323 0000 80B5     		push	{r7, lr}
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 84B0     		sub	sp, sp, #16
 1328              		.cfi_def_cfa_offset 24
 1329 0004 00AF     		add	r7, sp, #0
 1330              		.cfi_def_cfa_register 7
 1331 0006 7860     		str	r0, [r7, #4]
 814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 1332              		.loc 1 814 15
 1333 0008 0023     		movs	r3, #0
 1334 000a FB73     		strb	r3, [r7, #15]
 815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     int32_t ret_status = HAL_ERR_TIMEOUT;
 1335              		.loc 1 815 13
 1336 000c 6FF00403 		mvn	r3, #4
 1337 0010 BB60     		str	r3, [r7, #8]
 816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
 819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [rtc_dev] address is invalid");
 820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 1338              		.loc 1 824 20
 1339 0012 7B68     		ldr	r3, [r7, #4]
 1340 0014 0222     		movs	r2, #2
 1341 0016 5A74     		strb	r2, [r3, #17]
 825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* deinit RTC */
 826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
 828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 1342              		.loc 1 828 5
 1343 0018 224B     		ldr	r3, .L58
 1344              		.loc 1 828 13
 1345 001a CA22     		movs	r2, #202
 1346 001c 1A60     		str	r2, [r3]
 829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 1347              		.loc 1 829 5
 1348 001e 214B     		ldr	r3, .L58
 1349              		.loc 1 829 13
 1350 0020 5322     		movs	r2, #83
 1351 0022 1A60     		str	r2, [r3]
 830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enter init mode */
 831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     error_status = hals_rtc_init_mode_enter();
 1352              		.loc 1 831 20
 1353 0024 FFF7FEFF 		bl	hals_rtc_init_mode_enter
 1354 0028 0346     		mov	r3, r0
 1355 002a FB73     		strb	r3, [r7, #15]
 832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR != error_status) {
 1356              		.loc 1 832 7
 1357 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1358 002e 002B     		cmp	r3, #0
 1359 0030 23D0     		beq	.L55
 833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* before reset RTC_TIME and RTC_DATE, BPSHAD bit in RTC_CTL should be reset as the conditi
 834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****            in order to read calendar from shadow register, not the real registers being reset */
 835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TIME = RTC_REGISTER_RESET;
 1360              		.loc 1 835 9
 1361 0032 1D4B     		ldr	r3, .L58+4
 1362              		.loc 1 835 18
 1363 0034 0022     		movs	r2, #0
 1364 0036 1A60     		str	r2, [r3]
 836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_DATE = RTC_DATE_RESET;
 1365              		.loc 1 836 9
 1366 0038 1C4B     		ldr	r3, .L58+8
 1367              		.loc 1 836 18
 1368 003a 42F20112 		movw	r2, #8449
 1369 003e 1A60     		str	r2, [r3]
 837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_PSC = RTC_PSC_RESET;
 1370              		.loc 1 838 9
 1371 0040 1B4B     		ldr	r3, .L58+12
 1372              		.loc 1 838 17
 1373 0042 1C4A     		ldr	r2, .L58+16
 1374 0044 1A60     		str	r2, [r3]
 839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* reset RTC_STAT register, also exit init mode.
 841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****            at the same time, RTC_STAT_SOPF bit is reset, as the condition to reset RTC_SHIFTCTL reg
 842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_STAT = RTC_STAT_RESET;
 1375              		.loc 1 842 9
 1376 0046 1C4B     		ldr	r3, .L58+20
 1377              		.loc 1 842 18
 1378 0048 0722     		movs	r2, #7
 1379 004a 1A60     		str	r2, [r3]
 843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* to write RTC_ALRM0SS register, ALRM0EN bit in RTC_CTL register should be reset as the co
 845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_ALRM0TD = RTC_REGISTER_RESET;
 1380              		.loc 1 845 9
 1381 004c 1B4B     		ldr	r3, .L58+24
 1382              		.loc 1 845 21
 1383 004e 0022     		movs	r2, #0
 1384 0050 1A60     		str	r2, [r3]
 846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_ALRM0SS = RTC_REGISTER_RESET;
 1385              		.loc 1 846 9
 1386 0052 1B4B     		ldr	r3, .L58+28
 1387              		.loc 1 846 21
 1388 0054 0022     		movs	r2, #0
 1389 0056 1A60     		str	r2, [r3]
 847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* reset RTC_SHIFTCTL and RTC_HRFC register, this can be done without the init mode */
 849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_SHIFTCTL = RTC_REGISTER_RESET;
 1390              		.loc 1 849 9
 1391 0058 1A4B     		ldr	r3, .L58+32
 1392              		.loc 1 849 22
 1393 005a 0022     		movs	r2, #0
 1394 005c 1A60     		str	r2, [r3]
 850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_HRFC = RTC_REGISTER_RESET;
 1395              		.loc 1 850 9
 1396 005e 1A4B     		ldr	r3, .L58+36
 1397              		.loc 1 850 18
 1398 0060 0022     		movs	r2, #0
 1399 0062 1A60     		str	r2, [r3]
 851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         ret_status = hals_rtc_register_sync_wait();
 1400              		.loc 1 852 22
 1401 0064 FFF7FEFF 		bl	hals_rtc_register_sync_wait
 1402 0068 0346     		mov	r3, r0
 1403              		.loc 1 852 20
 1404 006a BB60     		str	r3, [r7, #8]
 853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(HAL_ERR_TIMEOUT == ret_status) {
 1405              		.loc 1 853 11
 1406 006c BB68     		ldr	r3, [r7, #8]
 1407 006e 13F1050F 		cmn	r3, #5
 1408 0072 08D1     		bne	.L56
 854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             HAL_DEBUGE("rtc register synchronized with APB clock timout");
 855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_TIMEOUT;
 1409              		.loc 1 855 20
 1410 0074 6FF00403 		mvn	r3, #4
 1411 0078 0FE0     		b	.L57
 1412              	.L55:
 856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
 858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* enable the write protection */
 859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_WPK = RTC_LOCK_KEY;
 1413              		.loc 1 859 9
 1414 007a 0A4B     		ldr	r3, .L58
 1415              		.loc 1 859 17
 1416 007c FF22     		movs	r2, #255
 1417 007e 1A60     		str	r2, [r3]
 860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("rtc enter init mode timout");
 862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_TIMEOUT;
 1418              		.loc 1 862 16
 1419 0080 6FF00403 		mvn	r3, #4
 1420 0084 09E0     		b	.L57
 1421              	.L56:
 863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
 866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 1422              		.loc 1 866 5
 1423 0086 074B     		ldr	r3, .L58
 1424              		.loc 1 866 13
 1425 0088 FF22     		movs	r2, #255
 1426 008a 1A60     		str	r2, [r3]
 867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* change RTC error state and state */
 869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->error_state = HAL_RTC_ERROR_NONE;
 1427              		.loc 1 869 26
 1428 008c 7B68     		ldr	r3, [r7, #4]
 1429 008e 0022     		movs	r2, #0
 1430 0090 1A74     		strb	r2, [r3, #16]
 870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_NONE;
 1431              		.loc 1 870 20
 1432 0092 7B68     		ldr	r3, [r7, #4]
 1433 0094 0022     		movs	r2, #0
 1434 0096 5A74     		strb	r2, [r3, #17]
 871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 1435              		.loc 1 873 12
 1436 0098 0023     		movs	r3, #0
 1437              	.L57:
 874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 1438              		.loc 1 874 1
 1439 009a 1846     		mov	r0, r3
 1440 009c 1037     		adds	r7, r7, #16
 1441              		.cfi_def_cfa_offset 8
 1442 009e BD46     		mov	sp, r7
 1443              		.cfi_def_cfa_register 13
 1444              		@ sp needed
 1445 00a0 80BD     		pop	{r7, pc}
 1446              	.L59:
 1447 00a2 00BF     		.align	2
 1448              	.L58:
 1449 00a4 24280040 		.word	1073752100
 1450 00a8 00280040 		.word	1073752064
 1451 00ac 04280040 		.word	1073752068
 1452 00b0 10280040 		.word	1073752080
 1453 00b4 FF007F00 		.word	8323327
 1454 00b8 0C280040 		.word	1073752076
 1455 00bc 1C280040 		.word	1073752092
 1456 00c0 44280040 		.word	1073752132
 1457 00c4 2C280040 		.word	1073752108
 1458 00c8 3C280040 		.word	1073752124
 1459              		.cfi_endproc
 1460              	.LFE127:
 1462              		.section	.text.hal_rtc_interrupt_enable,"ax",%progbits
 1463              		.align	1
 1464              		.global	hal_rtc_interrupt_enable
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu softvfp
 1470              	hal_rtc_interrupt_enable:
 1471              	.LFB128:
 875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enbale RTC interrupt
 878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structrue
 879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  p_irq: RTC interrupt callback function structure
 882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_interrupt_enable(hal_rtc_dev_struct *rtc_dev, hal_rtc_irq_struct *p_irq)
 886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 1472              		.loc 1 886 1
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 8
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 80B5     		push	{r7, lr}
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 82B0     		sub	sp, sp, #8
 1481              		.cfi_def_cfa_offset 16
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
 1485 0008 3960     		str	r1, [r7]
 887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL == rtc_dev) || (NULL == p_irq)) {
 890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [rtc_dev] or pointer [p_irq] address is invalid");
 891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* lock RTC */
 895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     HAL_LOCK(rtc_dev);
 1486              		.loc 1 895 5
 1487 000a 7B68     		ldr	r3, [r7, #4]
 1488 000c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1489 000e 012B     		cmp	r3, #1
 1490 0010 02D1     		bne	.L61
 1491              		.loc 1 895 5 is_stmt 0 discriminator 1
 1492 0012 6FF00103 		mvn	r3, #1
 1493 0016 59E0     		b	.L62
 1494              	.L61:
 1495              		.loc 1 895 5 discriminator 2
 1496 0018 7B68     		ldr	r3, [r7, #4]
 1497 001a 0122     		movs	r2, #1
 1498 001c 9A74     		strb	r2, [r3, #18]
 896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 1499              		.loc 1 896 20 is_stmt 1 discriminator 2
 1500 001e 7B68     		ldr	r3, [r7, #4]
 1501 0020 0222     		movs	r2, #2
 1502 0022 5A74     		strb	r2, [r3, #17]
 897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_timestamp_handle = p_irq->rtc_timestamp_handle;
 1503              		.loc 1 897 50 discriminator 2
 1504 0024 3B68     		ldr	r3, [r7]
 1505 0026 1A68     		ldr	r2, [r3]
 1506              		.loc 1 897 43 discriminator 2
 1507 0028 7B68     		ldr	r3, [r7, #4]
 1508 002a 1A60     		str	r2, [r3]
 898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_alarm_handle = p_irq->rtc_alarm_handle;
 1509              		.loc 1 898 46 discriminator 2
 1510 002c 3B68     		ldr	r3, [r7]
 1511 002e 5A68     		ldr	r2, [r3, #4]
 1512              		.loc 1 898 39 discriminator 2
 1513 0030 7B68     		ldr	r3, [r7, #4]
 1514 0032 5A60     		str	r2, [r3, #4]
 899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_tamper0_handle = p_irq->rtc_tamper0_handle;
 1515              		.loc 1 899 48 discriminator 2
 1516 0034 3B68     		ldr	r3, [r7]
 1517 0036 9A68     		ldr	r2, [r3, #8]
 1518              		.loc 1 899 41 discriminator 2
 1519 0038 7B68     		ldr	r3, [r7, #4]
 1520 003a 9A60     		str	r2, [r3, #8]
 900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_tamper1_handle = p_irq->rtc_tamper1_handle;
 1521              		.loc 1 900 48 discriminator 2
 1522 003c 3B68     		ldr	r3, [r7]
 1523 003e DA68     		ldr	r2, [r3, #12]
 1524              		.loc 1 900 41 discriminator 2
 1525 0040 7B68     		ldr	r3, [r7, #4]
 1526 0042 DA60     		str	r2, [r3, #12]
 901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* clear the specified RTC interrupt flag and enable RTC interrupt */
 903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != rtc_dev->rtc_irq.rtc_timestamp_handle) {
 1527              		.loc 1 903 32 discriminator 2
 1528 0044 7B68     		ldr	r3, [r7, #4]
 1529 0046 1B68     		ldr	r3, [r3]
 1530              		.loc 1 903 7 discriminator 2
 1531 0048 002B     		cmp	r3, #0
 1532 004a 08D0     		beq	.L63
 904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP);
 1533              		.loc 1 904 9
 1534 004c 4FF40060 		mov	r0, #2048
 1535 0050 FFF7FEFF 		bl	hals_rtc_flag_clear
 905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_TIMESTAMP);
 1536              		.loc 1 905 9
 1537 0054 4FF40040 		mov	r0, #32768
 1538 0058 FFF7FEFF 		bl	hals_rtc_interrupt_enable
 1539 005c 03E0     		b	.L64
 1540              	.L63:
 906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else{
 907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_TIMESTAMP);
 1541              		.loc 1 907 9
 1542 005e 4FF40040 		mov	r0, #32768
 1543 0062 FFF7FEFF 		bl	hals_rtc_interrupt_disable
 1544              	.L64:
 908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != rtc_dev->rtc_irq.rtc_alarm_handle) {
 1545              		.loc 1 910 32
 1546 0066 7B68     		ldr	r3, [r7, #4]
 1547 0068 5B68     		ldr	r3, [r3, #4]
 1548              		.loc 1 910 7
 1549 006a 002B     		cmp	r3, #0
 1550 006c 08D0     		beq	.L65
 911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_ALARM0);
 1551              		.loc 1 911 9
 1552 006e 4FF48070 		mov	r0, #256
 1553 0072 FFF7FEFF 		bl	hals_rtc_flag_clear
 912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_ALARM);
 1554              		.loc 1 912 9
 1555 0076 4FF48050 		mov	r0, #4096
 1556 007a FFF7FEFF 		bl	hals_rtc_interrupt_enable
 1557 007e 03E0     		b	.L66
 1558              	.L65:
 913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else{
 914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_ALARM);
 1559              		.loc 1 914 9
 1560 0080 4FF48050 		mov	r0, #4096
 1561 0084 FFF7FEFF 		bl	hals_rtc_interrupt_disable
 1562              	.L66:
 915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != rtc_dev->rtc_irq.rtc_tamper0_handle) {
 1563              		.loc 1 917 32
 1564 0088 7B68     		ldr	r3, [r7, #4]
 1565 008a 9B68     		ldr	r3, [r3, #8]
 1566              		.loc 1 917 7
 1567 008c 002B     		cmp	r3, #0
 1568 008e 07D0     		beq	.L67
 918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TAMP0);
 1569              		.loc 1 918 9
 1570 0090 4FF40050 		mov	r0, #8192
 1571 0094 FFF7FEFF 		bl	hals_rtc_flag_clear
 919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_TAMP);
 1572              		.loc 1 919 9
 1573 0098 0420     		movs	r0, #4
 1574 009a FFF7FEFF 		bl	hals_rtc_interrupt_enable
 1575 009e 02E0     		b	.L68
 1576              	.L67:
 920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else{
 921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_TAMP);
 1577              		.loc 1 921 9
 1578 00a0 0420     		movs	r0, #4
 1579 00a2 FFF7FEFF 		bl	hals_rtc_interrupt_disable
 1580              	.L68:
 922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != rtc_dev->rtc_irq.rtc_tamper1_handle) {
 1581              		.loc 1 924 32
 1582 00a6 7B68     		ldr	r3, [r7, #4]
 1583 00a8 DB68     		ldr	r3, [r3, #12]
 1584              		.loc 1 924 7
 1585 00aa 002B     		cmp	r3, #0
 1586 00ac 07D0     		beq	.L69
 925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TAMP1);
 1587              		.loc 1 925 9
 1588 00ae 4FF48040 		mov	r0, #16384
 1589 00b2 FFF7FEFF 		bl	hals_rtc_flag_clear
 926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_TAMP);
 1590              		.loc 1 926 9
 1591 00b6 0420     		movs	r0, #4
 1592 00b8 FFF7FEFF 		bl	hals_rtc_interrupt_enable
 1593 00bc 02E0     		b	.L70
 1594              	.L69:
 927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else{
 928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_TAMP);
 1595              		.loc 1 928 9
 1596 00be 0420     		movs	r0, #4
 1597 00c0 FFF7FEFF 		bl	hals_rtc_interrupt_disable
 1598              	.L70:
 929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* unlock rtc */
 932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     HAL_UNLOCK(rtc_dev);
 1599              		.loc 1 932 5
 1600 00c4 7B68     		ldr	r3, [r7, #4]
 1601 00c6 0022     		movs	r2, #0
 1602 00c8 9A74     		strb	r2, [r3, #18]
 933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 1603              		.loc 1 934 12
 1604 00ca 0023     		movs	r3, #0
 1605              	.L62:
 935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 1606              		.loc 1 935 1
 1607 00cc 1846     		mov	r0, r3
 1608 00ce 0837     		adds	r7, r7, #8
 1609              		.cfi_def_cfa_offset 8
 1610 00d0 BD46     		mov	sp, r7
 1611              		.cfi_def_cfa_register 13
 1612              		@ sp needed
 1613 00d2 80BD     		pop	{r7, pc}
 1614              		.cfi_endproc
 1615              	.LFE128:
 1617              		.section	.text.hal_rtc_interrupt_disable,"ax",%progbits
 1618              		.align	1
 1619              		.global	hal_rtc_interrupt_disable
 1620              		.syntax unified
 1621              		.thumb
 1622              		.thumb_func
 1623              		.fpu softvfp
 1625              	hal_rtc_interrupt_disable:
 1626              	.LFB129:
 936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      disable RTC interrupt
 939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structrue
 940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     HAL_ERR_ADDRESS, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
 944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_interrupt_disable(hal_rtc_dev_struct *rtc_dev)
 946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 1627              		.loc 1 946 1
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 8
 1630              		@ frame_needed = 1, uses_anonymous_args = 0
 1631 0000 80B5     		push	{r7, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 82B0     		sub	sp, sp, #8
 1636              		.cfi_def_cfa_offset 16
 1637 0004 00AF     		add	r7, sp, #0
 1638              		.cfi_def_cfa_register 7
 1639 0006 7860     		str	r0, [r7, #4]
 947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
 950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [rtc_dev] address is invalid");
 951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_ADDRESS;
 952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* lock RTC */
 955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     HAL_LOCK(rtc_dev);
 1640              		.loc 1 955 5
 1641 0008 7B68     		ldr	r3, [r7, #4]
 1642 000a 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1643 000c 012B     		cmp	r3, #1
 1644 000e 02D1     		bne	.L72
 1645              		.loc 1 955 5 is_stmt 0 discriminator 1
 1646 0010 6FF00103 		mvn	r3, #1
 1647 0014 24E0     		b	.L73
 1648              	.L72:
 1649              		.loc 1 955 5 discriminator 2
 1650 0016 7B68     		ldr	r3, [r7, #4]
 1651 0018 0122     		movs	r2, #1
 1652 001a 9A74     		strb	r2, [r3, #18]
 956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->state = HAL_RTC_STATE_BUSY;
 1653              		.loc 1 956 20 is_stmt 1 discriminator 2
 1654 001c 7B68     		ldr	r3, [r7, #4]
 1655 001e 0222     		movs	r2, #2
 1656 0020 5A74     		strb	r2, [r3, #17]
 957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_timestamp_handle = NULL;
 1657              		.loc 1 957 43 discriminator 2
 1658 0022 7B68     		ldr	r3, [r7, #4]
 1659 0024 0022     		movs	r2, #0
 1660 0026 1A60     		str	r2, [r3]
 958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_alarm_handle = NULL;
 1661              		.loc 1 958 39 discriminator 2
 1662 0028 7B68     		ldr	r3, [r7, #4]
 1663 002a 0022     		movs	r2, #0
 1664 002c 5A60     		str	r2, [r3, #4]
 959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_tamper0_handle = NULL;
 1665              		.loc 1 959 41 discriminator 2
 1666 002e 7B68     		ldr	r3, [r7, #4]
 1667 0030 0022     		movs	r2, #0
 1668 0032 9A60     		str	r2, [r3, #8]
 960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_tamper1_handle = NULL;
 1669              		.loc 1 960 41 discriminator 2
 1670 0034 7B68     		ldr	r3, [r7, #4]
 1671 0036 0022     		movs	r2, #0
 1672 0038 DA60     		str	r2, [r3, #12]
 961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* clear the RTC interrupt flag */
 962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP | RTC_FLAG_ALARM0 | RTC_FLAG_TAMP0 | RTC_FLAG_TAMP1);
 1673              		.loc 1 962 5 discriminator 2
 1674 003a 4FF4D240 		mov	r0, #26880
 1675 003e FFF7FEFF 		bl	hals_rtc_flag_clear
 963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /*  disable RTC interrupt */
 964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_interrupt_disable(RTC_INT_TIMESTAMP);
 1676              		.loc 1 964 5 discriminator 2
 1677 0042 4FF40040 		mov	r0, #32768
 1678 0046 FFF7FEFF 		bl	hals_rtc_interrupt_disable
 965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_interrupt_disable(RTC_INT_ALARM);
 1679              		.loc 1 965 5 discriminator 2
 1680 004a 4FF48050 		mov	r0, #4096
 1681 004e FFF7FEFF 		bl	hals_rtc_interrupt_disable
 966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_interrupt_disable(RTC_INT_TAMP);
 1682              		.loc 1 966 5 discriminator 2
 1683 0052 0420     		movs	r0, #4
 1684 0054 FFF7FEFF 		bl	hals_rtc_interrupt_disable
 967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* unlock RTC */
 968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     HAL_UNLOCK(rtc_dev);
 1685              		.loc 1 968 5 discriminator 2
 1686 0058 7B68     		ldr	r3, [r7, #4]
 1687 005a 0022     		movs	r2, #0
 1688 005c 9A74     		strb	r2, [r3, #18]
 969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* return function state */
 970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 1689              		.loc 1 970 12 discriminator 2
 1690 005e 0023     		movs	r3, #0
 1691              	.L73:
 971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 1692              		.loc 1 971 1
 1693 0060 1846     		mov	r0, r3
 1694 0062 0837     		adds	r7, r7, #8
 1695              		.cfi_def_cfa_offset 8
 1696 0064 BD46     		mov	sp, r7
 1697              		.cfi_def_cfa_register 13
 1698              		@ sp needed
 1699 0066 80BD     		pop	{r7, pc}
 1700              		.cfi_endproc
 1701              	.LFE129:
 1703              		.section	.text.hal_rtc_irq,"ax",%progbits
 1704              		.align	1
 1705              		.global	hal_rtc_irq
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu softvfp
 1711              	hal_rtc_irq:
 1712              	.LFB130:
 972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
 974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      RTC interrupt handler content function,which is merely used in rtc_handler
 975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
 976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
 977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
 978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
 979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
 980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
 981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_irq(hal_rtc_dev_struct *rtc_dev)
 982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 1713              		.loc 1 982 1
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 16
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717 0000 80B5     		push	{r7, lr}
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 7, -8
 1720              		.cfi_offset 14, -4
 1721 0002 84B0     		sub	sp, sp, #16
 1722              		.cfi_def_cfa_offset 24
 1723 0004 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
 1725 0006 7860     		str	r0, [r7, #4]
 983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t int_en = 0U;
 1726              		.loc 1 983 14
 1727 0008 0023     		movs	r3, #0
 1728 000a FB60     		str	r3, [r7, #12]
 984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
 985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
 986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
 987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [rtc_dev] address is invalid");
 988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
 989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
 990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
 991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check rtc underflow interrupt state bit */
 992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     int_en = RTC_CTL & RTC_CTL_TSIE;
 1729              		.loc 1 992 14
 1730 000c 494B     		ldr	r3, .L83
 1731 000e 1B68     		ldr	r3, [r3]
 1732              		.loc 1 992 12
 1733 0010 03F40043 		and	r3, r3, #32768
 1734 0014 FB60     		str	r3, [r7, #12]
 993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((SET == hals_rtc_flag_get(RTC_FLAG_TIMESTAMP)) && (RESET != int_en)) {
 1735              		.loc 1 993 16
 1736 0016 4FF40060 		mov	r0, #2048
 1737 001a FFF7FEFF 		bl	hals_rtc_flag_get
 1738 001e 0346     		mov	r3, r0
 1739              		.loc 1 993 7
 1740 0020 012B     		cmp	r3, #1
 1741 0022 16D1     		bne	.L75
 1742              		.loc 1 993 55 discriminator 1
 1743 0024 FB68     		ldr	r3, [r7, #12]
 1744 0026 002B     		cmp	r3, #0
 1745 0028 13D0     		beq	.L75
 994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* error callback */
 995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(NULL != (rtc_dev->rtc_irq.rtc_timestamp_handle)) {
 1746              		.loc 1 995 37
 1747 002a 7B68     		ldr	r3, [r7, #4]
 1748 002c 1B68     		ldr	r3, [r3]
 1749              		.loc 1 995 11
 1750 002e 002B     		cmp	r3, #0
 1751 0030 03D0     		beq	.L76
 996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             rtc_dev->rtc_irq.rtc_timestamp_handle(rtc_dev);
 1752              		.loc 1 996 29
 1753 0032 7B68     		ldr	r3, [r7, #4]
 1754 0034 1B68     		ldr	r3, [r3]
 1755              		.loc 1 996 13
 1756 0036 7868     		ldr	r0, [r7, #4]
 1757 0038 9847     		blx	r3
 1758              	.LVL0:
 1759              	.L76:
 997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
 998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear interrupt flag */
 999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP);
 1760              		.loc 1 999 9
 1761 003a 4FF40060 		mov	r0, #2048
 1762 003e FFF7FEFF 		bl	hals_rtc_flag_clear
1000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP_OVERFLOW);
 1763              		.loc 1 1000 9
 1764 0042 4FF48050 		mov	r0, #4096
 1765 0046 FFF7FEFF 		bl	hals_rtc_flag_clear
1001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_TAMPER_TIMESTAMP_19;
 1766              		.loc 1 1001 9
 1767 004a 3B4B     		ldr	r3, .L83+4
 1768              		.loc 1 1001 17
 1769 004c 4FF40022 		mov	r2, #524288
 1770 0050 1A60     		str	r2, [r3]
 1771              	.L75:
1002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     int_en = RTC_CTL & RTC_CTL_ALRM0IE;
 1772              		.loc 1 1005 14
 1773 0052 384B     		ldr	r3, .L83
 1774 0054 1B68     		ldr	r3, [r3]
 1775              		.loc 1 1005 12
 1776 0056 03F48053 		and	r3, r3, #4096
 1777 005a FB60     		str	r3, [r7, #12]
1006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((SET == hals_rtc_flag_get(RTC_FLAG_ALARM0)) && (RESET != int_en)) {
 1778              		.loc 1 1006 16
 1779 005c 4FF48070 		mov	r0, #256
 1780 0060 FFF7FEFF 		bl	hals_rtc_flag_get
 1781 0064 0346     		mov	r3, r0
 1782              		.loc 1 1006 7
 1783 0066 012B     		cmp	r3, #1
 1784 0068 12D1     		bne	.L77
 1785              		.loc 1 1006 52 discriminator 1
 1786 006a FB68     		ldr	r3, [r7, #12]
 1787 006c 002B     		cmp	r3, #0
 1788 006e 0FD0     		beq	.L77
1007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear interrupt flag */
1008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_ALARM0);
 1789              		.loc 1 1008 9
 1790 0070 4FF48070 		mov	r0, #256
 1791 0074 FFF7FEFF 		bl	hals_rtc_flag_clear
1009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_ALARM_17;
 1792              		.loc 1 1009 9
 1793 0078 2F4B     		ldr	r3, .L83+4
 1794              		.loc 1 1009 17
 1795 007a 4FF40032 		mov	r2, #131072
 1796 007e 1A60     		str	r2, [r3]
1010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* error callback */
1012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(NULL != (rtc_dev->rtc_irq.rtc_alarm_handle)) {
 1797              		.loc 1 1012 37
 1798 0080 7B68     		ldr	r3, [r7, #4]
 1799 0082 5B68     		ldr	r3, [r3, #4]
 1800              		.loc 1 1012 11
 1801 0084 002B     		cmp	r3, #0
 1802 0086 03D0     		beq	.L77
1013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             rtc_dev->rtc_irq.rtc_alarm_handle(rtc_dev);
 1803              		.loc 1 1013 29
 1804 0088 7B68     		ldr	r3, [r7, #4]
 1805 008a 5B68     		ldr	r3, [r3, #4]
 1806              		.loc 1 1013 13
 1807 008c 7868     		ldr	r0, [r7, #4]
 1808 008e 9847     		blx	r3
 1809              	.LVL1:
 1810              	.L77:
1014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
1015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     int_en = RTC_TAMP & RTC_TAMP_TPIE;
 1811              		.loc 1 1016 14
 1812 0090 2A4B     		ldr	r3, .L83+8
 1813 0092 1B68     		ldr	r3, [r3]
 1814              		.loc 1 1016 12
 1815 0094 03F00403 		and	r3, r3, #4
 1816 0098 FB60     		str	r3, [r7, #12]
1017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((SET == (hals_rtc_flag_get(RTC_FLAG_TAMP0))) && (RESET != int_en)) {
 1817              		.loc 1 1017 17
 1818 009a 4FF40050 		mov	r0, #8192
 1819 009e FFF7FEFF 		bl	hals_rtc_flag_get
 1820 00a2 0346     		mov	r3, r0
 1821              		.loc 1 1017 7
 1822 00a4 012B     		cmp	r3, #1
 1823 00a6 1AD1     		bne	.L78
 1824              		.loc 1 1017 53 discriminator 1
 1825 00a8 FB68     		ldr	r3, [r7, #12]
 1826 00aa 002B     		cmp	r3, #0
 1827 00ac 17D0     		beq	.L78
1018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear interrupt flag */
1019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TAMP0);
 1828              		.loc 1 1019 9
 1829 00ae 4FF40050 		mov	r0, #8192
 1830 00b2 FFF7FEFF 		bl	hals_rtc_flag_clear
1020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* error callback */
1022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(NULL != (rtc_dev->rtc_irq.rtc_tamper0_handle)) {
 1831              		.loc 1 1022 37
 1832 00b6 7B68     		ldr	r3, [r7, #4]
 1833 00b8 9B68     		ldr	r3, [r3, #8]
 1834              		.loc 1 1022 11
 1835 00ba 002B     		cmp	r3, #0
 1836 00bc 03D0     		beq	.L79
1023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             rtc_dev->rtc_irq.rtc_tamper0_handle(rtc_dev);
 1837              		.loc 1 1023 29
 1838 00be 7B68     		ldr	r3, [r7, #4]
 1839 00c0 9B68     		ldr	r3, [r3, #8]
 1840              		.loc 1 1023 13
 1841 00c2 7868     		ldr	r0, [r7, #4]
 1842 00c4 9847     		blx	r3
 1843              	.LVL2:
 1844              	.L79:
1024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
1025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP);
 1845              		.loc 1 1025 9
 1846 00c6 4FF40060 		mov	r0, #2048
 1847 00ca FFF7FEFF 		bl	hals_rtc_flag_clear
1026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP_OVERFLOW);
 1848              		.loc 1 1026 9
 1849 00ce 4FF48050 		mov	r0, #4096
 1850 00d2 FFF7FEFF 		bl	hals_rtc_flag_clear
1027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_TAMPER_TIMESTAMP_19;
 1851              		.loc 1 1027 9
 1852 00d6 184B     		ldr	r3, .L83+4
 1853              		.loc 1 1027 17
 1854 00d8 4FF40022 		mov	r2, #524288
 1855 00dc 1A60     		str	r2, [r3]
 1856              	.L78:
1028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     int_en = RTC_TAMP & RTC_TAMP_TPIE;
 1857              		.loc 1 1029 14
 1858 00de 174B     		ldr	r3, .L83+8
 1859 00e0 1B68     		ldr	r3, [r3]
 1860              		.loc 1 1029 12
 1861 00e2 03F00403 		and	r3, r3, #4
 1862 00e6 FB60     		str	r3, [r7, #12]
1030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((SET == (hals_rtc_flag_get(RTC_FLAG_TAMP1))) && (RESET != int_en)) {
 1863              		.loc 1 1030 17
 1864 00e8 4FF48040 		mov	r0, #16384
 1865 00ec FFF7FEFF 		bl	hals_rtc_flag_get
 1866 00f0 0346     		mov	r3, r0
 1867              		.loc 1 1030 7
 1868 00f2 012B     		cmp	r3, #1
 1869 00f4 1AD1     		bne	.L82
 1870              		.loc 1 1030 53 discriminator 1
 1871 00f6 FB68     		ldr	r3, [r7, #12]
 1872 00f8 002B     		cmp	r3, #0
 1873 00fa 17D0     		beq	.L82
1031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* clear interrupt flag */
1032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TAMP1);
 1874              		.loc 1 1032 9
 1875 00fc 4FF48040 		mov	r0, #16384
 1876 0100 FFF7FEFF 		bl	hals_rtc_flag_clear
1033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* error callback */
1035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(NULL != (rtc_dev->rtc_irq.rtc_tamper0_handle)) {
 1877              		.loc 1 1035 37
 1878 0104 7B68     		ldr	r3, [r7, #4]
 1879 0106 9B68     		ldr	r3, [r3, #8]
 1880              		.loc 1 1035 11
 1881 0108 002B     		cmp	r3, #0
 1882 010a 03D0     		beq	.L81
1036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             rtc_dev->rtc_irq.rtc_tamper0_handle(rtc_dev);
 1883              		.loc 1 1036 29
 1884 010c 7B68     		ldr	r3, [r7, #4]
 1885 010e 9B68     		ldr	r3, [r3, #8]
 1886              		.loc 1 1036 13
 1887 0110 7868     		ldr	r0, [r7, #4]
 1888 0112 9847     		blx	r3
 1889              	.LVL3:
 1890              	.L81:
1037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
1038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP);
 1891              		.loc 1 1038 9
 1892 0114 4FF40060 		mov	r0, #2048
 1893 0118 FFF7FEFF 		bl	hals_rtc_flag_clear
1039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP_OVERFLOW);
 1894              		.loc 1 1039 9
 1895 011c 4FF48050 		mov	r0, #4096
 1896 0120 FFF7FEFF 		bl	hals_rtc_flag_clear
1040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_TAMPER_TIMESTAMP_19;
 1897              		.loc 1 1040 9
 1898 0124 044B     		ldr	r3, .L83+4
 1899              		.loc 1 1040 17
 1900 0126 4FF40022 		mov	r2, #524288
 1901 012a 1A60     		str	r2, [r3]
 1902              	.L82:
1041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 1903              		.loc 1 1042 1
 1904 012c 00BF     		nop
 1905 012e 1037     		adds	r7, r7, #16
 1906              		.cfi_def_cfa_offset 8
 1907 0130 BD46     		mov	sp, r7
 1908              		.cfi_def_cfa_register 13
 1909              		@ sp needed
 1910 0132 80BD     		pop	{r7, pc}
 1911              	.L84:
 1912              		.align	2
 1913              	.L83:
 1914 0134 08280040 		.word	1073752072
 1915 0138 14040140 		.word	1073808404
 1916 013c 40280040 		.word	1073752128
 1917              		.cfi_endproc
 1918              	.LFE130:
 1920              		.section	.text.hal_rtc_irq_handle_set,"ax",%progbits
 1921              		.align	1
 1922              		.global	hal_rtc_irq_handle_set
 1923              		.syntax unified
 1924              		.thumb
 1925              		.thumb_func
 1926              		.fpu softvfp
 1928              	hal_rtc_irq_handle_set:
 1929              	.LFB131:
1043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      set user-defined interrupt callback function
1046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 which will be registered and called when corresponding interrupt be triggered
1047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structrue
1048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
1049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
1050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  p_irq: point to RTC interrupt callback functions structure
1051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   hal_irq_handle_cb: the function is user-defined,
1052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_irq_handle_set(hal_rtc_dev_struct *rtc_dev, hal_rtc_irq_struct *p_irq)
1056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 1930              		.loc 1 1056 1
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 8
 1933              		@ frame_needed = 1, uses_anonymous_args = 0
 1934 0000 80B5     		push	{r7, lr}
 1935              		.cfi_def_cfa_offset 8
 1936              		.cfi_offset 7, -8
 1937              		.cfi_offset 14, -4
 1938 0002 82B0     		sub	sp, sp, #8
 1939              		.cfi_def_cfa_offset 16
 1940 0004 00AF     		add	r7, sp, #0
 1941              		.cfi_def_cfa_register 7
 1942 0006 7860     		str	r0, [r7, #4]
 1943 0008 3960     		str	r1, [r7]
1057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
1058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
1059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL == rtc_dev) || (NULL == p_irq)) {
1060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [rtc_dev] or pointer [p_irq] address is invalid");
1061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
1063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* RTC interrupt handler set */
1064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != p_irq->rtc_timestamp_handle) {
 1944              		.loc 1 1064 21
 1945 000a 3B68     		ldr	r3, [r7]
 1946 000c 1B68     		ldr	r3, [r3]
 1947              		.loc 1 1064 7
 1948 000e 002B     		cmp	r3, #0
 1949 0010 15D0     		beq	.L86
1065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_timestamp_handle = p_irq->rtc_timestamp_handle;
 1950              		.loc 1 1065 54
 1951 0012 3B68     		ldr	r3, [r7]
 1952 0014 1A68     		ldr	r2, [r3]
 1953              		.loc 1 1065 47
 1954 0016 7B68     		ldr	r3, [r7, #4]
 1955 0018 1A60     		str	r2, [r3]
1066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP);
 1956              		.loc 1 1066 9
 1957 001a 4FF40060 		mov	r0, #2048
 1958 001e FFF7FEFF 		bl	hals_rtc_flag_clear
1067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP_OVERFLOW);
 1959              		.loc 1 1067 9
 1960 0022 4FF48050 		mov	r0, #4096
 1961 0026 FFF7FEFF 		bl	hals_rtc_flag_clear
1068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_TIMESTAMP);
 1962              		.loc 1 1068 9
 1963 002a 4FF40040 		mov	r0, #32768
 1964 002e FFF7FEFF 		bl	hals_rtc_interrupt_enable
1069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hal_exti_internal_init(EXTI_LINE_19_RTC_TAMPER_TIMESTAMP, EXTI_INTERRUPT_TRIG_RISING);
 1965              		.loc 1 1069 9
 1966 0032 0921     		movs	r1, #9
 1967 0034 4FF40020 		mov	r0, #524288
 1968 0038 FFF7FEFF 		bl	hal_exti_internal_init
 1969 003c 0AE0     		b	.L87
 1970              	.L86:
1070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_timestamp_handle = NULL;
 1971              		.loc 1 1071 47
 1972 003e 7B68     		ldr	r3, [r7, #4]
 1973 0040 0022     		movs	r2, #0
 1974 0042 1A60     		str	r2, [r3]
1072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_TIMESTAMP);
 1975              		.loc 1 1072 9
 1976 0044 4FF40040 		mov	r0, #32768
 1977 0048 FFF7FEFF 		bl	hals_rtc_interrupt_disable
1073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_TAMPER_TIMESTAMP_19;
 1978              		.loc 1 1073 9
 1979 004c 324B     		ldr	r3, .L97
 1980              		.loc 1 1073 17
 1981 004e 4FF40022 		mov	r2, #524288
 1982 0052 1A60     		str	r2, [r3]
 1983              	.L87:
1074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != p_irq->rtc_alarm_handle) {
 1984              		.loc 1 1075 21
 1985 0054 3B68     		ldr	r3, [r7]
 1986 0056 5B68     		ldr	r3, [r3, #4]
 1987              		.loc 1 1075 7
 1988 0058 002B     		cmp	r3, #0
 1989 005a 13D0     		beq	.L88
1076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_alarm_handle = p_irq->rtc_alarm_handle;
 1990              		.loc 1 1076 50
 1991 005c 3B68     		ldr	r3, [r7]
 1992 005e 5A68     		ldr	r2, [r3, #4]
 1993              		.loc 1 1076 43
 1994 0060 7B68     		ldr	r3, [r7, #4]
 1995 0062 5A60     		str	r2, [r3, #4]
1077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_ALARM0);
 1996              		.loc 1 1077 9
 1997 0064 4FF48070 		mov	r0, #256
 1998 0068 FFF7FEFF 		bl	hals_rtc_flag_clear
1078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_ALARM);
 1999              		.loc 1 1078 9
 2000 006c 4FF48050 		mov	r0, #4096
 2001 0070 FFF7FEFF 		bl	hals_rtc_interrupt_enable
1079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* enable RTC alarm */
1080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hal_exti_internal_init(EXTI_LINE_17_RTC_ALARM, EXTI_INTERRUPT_TRIG_RISING);
 2002              		.loc 1 1080 9
 2003 0074 0921     		movs	r1, #9
 2004 0076 4FF40030 		mov	r0, #131072
 2005 007a FFF7FEFF 		bl	hal_exti_internal_init
1081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_alarm_enable();
 2006              		.loc 1 1081 9
 2007 007e FFF7FEFF 		bl	hals_rtc_alarm_enable
 2008 0082 0CE0     		b	.L89
 2009              	.L88:
1082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_alarm_handle = NULL;
 2010              		.loc 1 1083 43
 2011 0084 7B68     		ldr	r3, [r7, #4]
 2012 0086 0022     		movs	r2, #0
 2013 0088 5A60     		str	r2, [r3, #4]
1084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_ALARM);
 2014              		.loc 1 1084 9
 2015 008a 4FF48050 		mov	r0, #4096
 2016 008e FFF7FEFF 		bl	hals_rtc_interrupt_disable
1085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* disable RTC alarm */
1086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_alarm_disable();
 2017              		.loc 1 1086 9
 2018 0092 FFF7FEFF 		bl	hals_rtc_alarm_disable
1087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_ALARM_17;
 2019              		.loc 1 1087 9
 2020 0096 204B     		ldr	r3, .L97
 2021              		.loc 1 1087 17
 2022 0098 4FF40032 		mov	r2, #131072
 2023 009c 1A60     		str	r2, [r3]
 2024              	.L89:
1088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != p_irq->rtc_tamper0_handle) {
 2025              		.loc 1 1089 21
 2026 009e 3B68     		ldr	r3, [r7]
 2027 00a0 9B68     		ldr	r3, [r3, #8]
 2028              		.loc 1 1089 7
 2029 00a2 002B     		cmp	r3, #0
 2030 00a4 04D0     		beq	.L90
1090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_tamper0_handle = p_irq->rtc_tamper0_handle;
 2031              		.loc 1 1090 52
 2032 00a6 3B68     		ldr	r3, [r7]
 2033 00a8 9A68     		ldr	r2, [r3, #8]
 2034              		.loc 1 1090 45
 2035 00aa 7B68     		ldr	r3, [r7, #4]
 2036 00ac 9A60     		str	r2, [r3, #8]
 2037 00ae 02E0     		b	.L91
 2038              	.L90:
1091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_tamper0_handle = NULL;
 2039              		.loc 1 1092 45
 2040 00b0 7B68     		ldr	r3, [r7, #4]
 2041 00b2 0022     		movs	r2, #0
 2042 00b4 9A60     		str	r2, [r3, #8]
 2043              	.L91:
1093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL != p_irq->rtc_tamper1_handle) {
 2044              		.loc 1 1094 21
 2045 00b6 3B68     		ldr	r3, [r7]
 2046 00b8 DB68     		ldr	r3, [r3, #12]
 2047              		.loc 1 1094 7
 2048 00ba 002B     		cmp	r3, #0
 2049 00bc 04D0     		beq	.L92
1095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_tamper1_handle = p_irq->rtc_tamper1_handle;
 2050              		.loc 1 1095 52
 2051 00be 3B68     		ldr	r3, [r7]
 2052 00c0 DA68     		ldr	r2, [r3, #12]
 2053              		.loc 1 1095 45
 2054 00c2 7B68     		ldr	r3, [r7, #4]
 2055 00c4 DA60     		str	r2, [r3, #12]
 2056 00c6 02E0     		b	.L93
 2057              	.L92:
1096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         rtc_dev->rtc_irq.rtc_tamper1_handle = NULL;
 2058              		.loc 1 1097 45
 2059 00c8 7B68     		ldr	r3, [r7, #4]
 2060 00ca 0022     		movs	r2, #0
 2061 00cc DA60     		str	r2, [r3, #12]
 2062              	.L93:
1098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((NULL != p_irq->rtc_tamper0_handle) || (NULL != p_irq->rtc_tamper1_handle)) {
 2063              		.loc 1 1099 22
 2064 00ce 3B68     		ldr	r3, [r7]
 2065 00d0 9B68     		ldr	r3, [r3, #8]
 2066              		.loc 1 1099 7
 2067 00d2 002B     		cmp	r3, #0
 2068 00d4 03D1     		bne	.L94
 2069              		.loc 1 1099 61 discriminator 1
 2070 00d6 3B68     		ldr	r3, [r7]
 2071 00d8 DB68     		ldr	r3, [r3, #12]
 2072              		.loc 1 1099 44 discriminator 1
 2073 00da 002B     		cmp	r3, #0
 2074 00dc 10D0     		beq	.L95
 2075              	.L94:
1100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TAMP0);
 2076              		.loc 1 1100 9
 2077 00de 4FF40050 		mov	r0, #8192
 2078 00e2 FFF7FEFF 		bl	hals_rtc_flag_clear
1101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_flag_clear(RTC_FLAG_TAMP1);
 2079              		.loc 1 1101 9
 2080 00e6 4FF48040 		mov	r0, #16384
 2081 00ea FFF7FEFF 		bl	hals_rtc_flag_clear
1102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_enable(RTC_INT_TAMP);
 2082              		.loc 1 1102 9
 2083 00ee 0420     		movs	r0, #4
 2084 00f0 FFF7FEFF 		bl	hals_rtc_interrupt_enable
1103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hal_exti_internal_init(EXTI_LINE_19_RTC_TAMPER_TIMESTAMP, EXTI_INTERRUPT_TRIG_RISING);
 2085              		.loc 1 1103 9
 2086 00f4 0921     		movs	r1, #9
 2087 00f6 4FF40020 		mov	r0, #524288
 2088 00fa FFF7FEFF 		bl	hal_exti_internal_init
 2089 00fe 07E0     		b	.L96
 2090              	.L95:
1104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         hals_rtc_interrupt_disable(RTC_INT_TAMP);
 2091              		.loc 1 1105 9
 2092 0100 0420     		movs	r0, #4
 2093 0102 FFF7FEFF 		bl	hals_rtc_interrupt_disable
1106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         EXTI_PD = (uint32_t)EXTI_RTC_TAMPER_TIMESTAMP_19;
 2094              		.loc 1 1106 9
 2095 0106 044B     		ldr	r3, .L97
 2096              		.loc 1 1106 17
 2097 0108 4FF40022 		mov	r2, #524288
 2098 010c 1A60     		str	r2, [r3]
1107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2099              		.loc 1 1108 1
 2100 010e 00BF     		nop
 2101              	.L96:
 2102 0110 00BF     		nop
 2103 0112 0837     		adds	r7, r7, #8
 2104              		.cfi_def_cfa_offset 8
 2105 0114 BD46     		mov	sp, r7
 2106              		.cfi_def_cfa_register 13
 2107              		@ sp needed
 2108 0116 80BD     		pop	{r7, pc}
 2109              	.L98:
 2110              		.align	2
 2111              	.L97:
 2112 0118 14040140 		.word	1073808404
 2113              		.cfi_endproc
 2114              	.LFE131:
 2116              		.section	.text.hal_rtc_irq_handle_all_reset,"ax",%progbits
 2117              		.align	1
 2118              		.global	hal_rtc_irq_handle_all_reset
 2119              		.syntax unified
 2120              		.thumb
 2121              		.thumb_func
 2122              		.fpu softvfp
 2124              	hal_rtc_irq_handle_all_reset:
 2125              	.LFB132:
1109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      reset all user-defined interrupt callback function,
1112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 which will be registered and called when corresponding interrupt be triggered
1113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  rtc_dev: RTC device information structure
1114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure is not necessary to be reconfigured after structrue initialization,
1115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   the structure parameters altering is automatically configured by core
1116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_irq_handle_all_reset(hal_rtc_dev_struct *rtc_dev)
1120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2126              		.loc 1 1120 1
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 8
 2129              		@ frame_needed = 1, uses_anonymous_args = 0
 2130              		@ link register save eliminated.
 2131 0000 80B4     		push	{r7}
 2132              		.cfi_def_cfa_offset 4
 2133              		.cfi_offset 7, -4
 2134 0002 83B0     		sub	sp, sp, #12
 2135              		.cfi_def_cfa_offset 16
 2136 0004 00AF     		add	r7, sp, #0
 2137              		.cfi_def_cfa_register 7
 2138 0006 7860     		str	r0, [r7, #4]
1121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
1122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check the parameters */
1123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(NULL == rtc_dev) {
1124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("pointer [rtc_dev] address is invalid");
1125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 = HAL_PARAMETER_CHECK */
1127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* RTC interrupt handler set */
1128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_timestamp_handle = NULL;
 2139              		.loc 1 1128 43
 2140 0008 7B68     		ldr	r3, [r7, #4]
 2141 000a 0022     		movs	r2, #0
 2142 000c 1A60     		str	r2, [r3]
1129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_alarm_handle = NULL;
 2143              		.loc 1 1129 39
 2144 000e 7B68     		ldr	r3, [r7, #4]
 2145 0010 0022     		movs	r2, #0
 2146 0012 5A60     		str	r2, [r3, #4]
1130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_tamper0_handle = NULL;
 2147              		.loc 1 1130 41
 2148 0014 7B68     		ldr	r3, [r7, #4]
 2149 0016 0022     		movs	r2, #0
 2150 0018 9A60     		str	r2, [r3, #8]
1131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_dev->rtc_irq.rtc_tamper1_handle = NULL;
 2151              		.loc 1 1131 41
 2152 001a 7B68     		ldr	r3, [r7, #4]
 2153 001c 0022     		movs	r2, #0
 2154 001e DA60     		str	r2, [r3, #12]
1132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2155              		.loc 1 1132 1
 2156 0020 00BF     		nop
 2157 0022 0C37     		adds	r7, r7, #12
 2158              		.cfi_def_cfa_offset 4
 2159 0024 BD46     		mov	sp, r7
 2160              		.cfi_def_cfa_register 13
 2161              		@ sp needed
 2162 0026 80BC     		pop	{r7}
 2163              		.cfi_restore 7
 2164              		.cfi_def_cfa_offset 0
 2165 0028 7047     		bx	lr
 2166              		.cfi_endproc
 2167              	.LFE132:
 2169              		.section	.text.hal_rtc_current_time_get,"ax",%progbits
 2170              		.align	1
 2171              		.global	hal_rtc_current_time_get
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2175              		.fpu softvfp
 2177              	hal_rtc_current_time_get:
 2178              	.LFB133:
1133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      get current time and date
1136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] rtc_initpara_struct: pointer to a hal_rtc_init_struct structure which contains
1138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 parameters for initialization of the rtc peripheral
1139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 members of the structure and the member values are shown as below:
1140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_year: 0~99
1141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_month:
1142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_JAN: Janurary
1144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FEB: February
1145:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MAR: March
1146:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_APR: April
1147:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MAY: May
1148:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_JUN: June
1149:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_JUL: July
1150:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_AUG: August
1151:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_SEP: September
1152:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_OCT: October
1153:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_NOV: November
1154:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DEC: December
1155:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_date: 0~31
1156:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_day_of_week:
1157:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1158:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MONDAY: Monday
1159:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_TUESDAY: Tuesday
1160:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_WEDSDAY: Wednesday
1161:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_THURSDAY: Thursday
1162:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_FRIDAY: Friday
1163:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_SATURDAY: Saturday
1164:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_SUNDAY: Sunday
1165:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_hour: 0 - 24 or 1 - 12
1166:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_minute: 0 - 59
1167:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_second: 0 - 59
1168:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_am_pm:
1169:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1170:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_AM: AM format
1171:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_PM: PM format
1172:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_daylight_saving:
1173:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1174:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DAYLIGHT_SAVING_NONE: no daylight saving
1175:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DAYLIGHT_SAVING_ADD_1H: add 1 hour(summer time change)
1176:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_DAYLIGHT_SAVING_SUB_1H: subtract 1 hour(winter time change)
1177:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_clock_format:
1178:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1179:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_24H_FORMAT: 24-hour format
1180:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_12H_FORMAT: 12-hour format
1181:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_psc_factor_s: 0x0 - 0x7FFF
1182:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_psc_factor_a: 0x0 - 0x7F
1183:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1184:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1185:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1186:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_current_time_get(hal_rtc_init_struct *rtc_initpara_struct)
1187:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2179              		.loc 1 1187 1
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 32
 2182              		@ frame_needed = 1, uses_anonymous_args = 0
 2183 0000 80B5     		push	{r7, lr}
 2184              		.cfi_def_cfa_offset 8
 2185              		.cfi_offset 7, -8
 2186              		.cfi_offset 14, -4
 2187 0002 88B0     		sub	sp, sp, #32
 2188              		.cfi_def_cfa_offset 40
 2189 0004 00AF     		add	r7, sp, #0
 2190              		.cfi_def_cfa_register 7
 2191 0006 7860     		str	r0, [r7, #4]
1188:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t temp_tr = 0x00U, temp_dr = 0x00U, temp_pscr = 0x00U, temp_ctlr = 0x00U;
 2192              		.loc 1 1188 14
 2193 0008 0023     		movs	r3, #0
 2194 000a FB61     		str	r3, [r7, #28]
 2195              		.loc 1 1188 31
 2196 000c 0023     		movs	r3, #0
 2197 000e BB61     		str	r3, [r7, #24]
 2198              		.loc 1 1188 48
 2199 0010 0023     		movs	r3, #0
 2200 0012 7B61     		str	r3, [r7, #20]
 2201              		.loc 1 1188 67
 2202 0014 0023     		movs	r3, #0
 2203 0016 3B61     		str	r3, [r7, #16]
1189:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint16_t temp_ss = 0x00U;
 2204              		.loc 1 1189 14
 2205 0018 0023     		movs	r3, #0
 2206 001a FB81     		strh	r3, [r7, #14]	@ movhi
1190:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1191:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* if BPSHAD bit is reset, reading RTC_SS will lock RTC_TIME and RTC_DATE automatically */
1192:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_ss = (uint16_t)RTC_SS;
 2207              		.loc 1 1192 25
 2208 001c 454B     		ldr	r3, .L101
 2209 001e 1B68     		ldr	r3, [r3]
 2210              		.loc 1 1192 13
 2211 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1193:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_tr = (uint32_t)RTC_TIME;
 2212              		.loc 1 1193 15
 2213 0022 454B     		ldr	r3, .L101+4
 2214              		.loc 1 1193 13
 2215 0024 1B68     		ldr	r3, [r3]
 2216 0026 FB61     		str	r3, [r7, #28]
1194:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_dr = (uint32_t)RTC_DATE;
 2217              		.loc 1 1194 15
 2218 0028 444B     		ldr	r3, .L101+8
 2219              		.loc 1 1194 13
 2220 002a 1B68     		ldr	r3, [r3]
 2221 002c BB61     		str	r3, [r7, #24]
1195:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_pscr = (uint32_t)RTC_PSC;
 2222              		.loc 1 1195 17
 2223 002e 444B     		ldr	r3, .L101+12
 2224              		.loc 1 1195 15
 2225 0030 1B68     		ldr	r3, [r3]
 2226 0032 7B61     		str	r3, [r7, #20]
1196:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_ctlr = (uint32_t)RTC_CTL;
 2227              		.loc 1 1196 17
 2228 0034 434B     		ldr	r3, .L101+16
 2229              		.loc 1 1196 15
 2230 0036 1B68     		ldr	r3, [r3]
 2231 0038 3B61     		str	r3, [r7, #16]
1197:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* read RTC_DATE to unlock the 3 shadow registers */
1198:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     (void)(RTC_DATE);
 2232              		.loc 1 1198 5
 2233 003a 404B     		ldr	r3, .L101+8
 2234 003c 1B68     		ldr	r3, [r3]
1199:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1200:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* get current time and construct rtc_parameter_struct structure */
1201:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_year = hals_rtc_bcd_2_normal((uint8_t)GET_DATE_YR(temp_dr));
 2235              		.loc 1 1201 68
 2236 003e BB69     		ldr	r3, [r7, #24]
 2237 0040 1B0C     		lsrs	r3, r3, #16
 2238              		.loc 1 1201 37
 2239 0042 DBB2     		uxtb	r3, r3
 2240 0044 1846     		mov	r0, r3
 2241 0046 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2242 004a 0346     		mov	r3, r0
 2243 004c 1A46     		mov	r2, r3
 2244              		.loc 1 1201 35
 2245 004e 7B68     		ldr	r3, [r7, #4]
 2246 0050 1A70     		strb	r2, [r3]
1202:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_month = hals_rtc_bcd_2_normal(GET_DATE_MON(temp_dr));
 2247              		.loc 1 1202 60
 2248 0052 BB69     		ldr	r3, [r7, #24]
 2249 0054 1B0A     		lsrs	r3, r3, #8
 2250              		.loc 1 1202 38
 2251 0056 DBB2     		uxtb	r3, r3
 2252 0058 03F01F03 		and	r3, r3, #31
 2253 005c DBB2     		uxtb	r3, r3
 2254 005e 1846     		mov	r0, r3
 2255 0060 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2256 0064 0346     		mov	r3, r0
 2257 0066 1A46     		mov	r2, r3
 2258              		.loc 1 1202 36
 2259 0068 7B68     		ldr	r3, [r7, #4]
 2260 006a 5A70     		strb	r2, [r3, #1]
1203:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_date = hals_rtc_bcd_2_normal((uint8_t)GET_DATE_DAY(temp_dr));
 2261              		.loc 1 1203 37
 2262 006c BB69     		ldr	r3, [r7, #24]
 2263 006e DBB2     		uxtb	r3, r3
 2264 0070 03F03F03 		and	r3, r3, #63
 2265 0074 DBB2     		uxtb	r3, r3
 2266 0076 1846     		mov	r0, r3
 2267 0078 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2268 007c 0346     		mov	r3, r0
 2269 007e 1A46     		mov	r2, r3
 2270              		.loc 1 1203 35
 2271 0080 7B68     		ldr	r3, [r7, #4]
 2272 0082 9A70     		strb	r2, [r3, #2]
1204:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_day_of_week = hals_rtc_bcd_2_normal(GET_DATE_DOW(temp_dr));
 2273              		.loc 1 1204 66
 2274 0084 BB69     		ldr	r3, [r7, #24]
 2275 0086 5B0B     		lsrs	r3, r3, #13
 2276              		.loc 1 1204 44
 2277 0088 DBB2     		uxtb	r3, r3
 2278 008a 03F00703 		and	r3, r3, #7
 2279 008e DBB2     		uxtb	r3, r3
 2280 0090 1846     		mov	r0, r3
 2281 0092 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2282 0096 0346     		mov	r3, r0
 2283 0098 1A46     		mov	r2, r3
 2284              		.loc 1 1204 42
 2285 009a 7B68     		ldr	r3, [r7, #4]
 2286 009c DA70     		strb	r2, [r3, #3]
1205:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_hour = hals_rtc_bcd_2_normal((uint8_t)GET_TIME_HR(temp_tr));
 2287              		.loc 1 1205 68
 2288 009e FB69     		ldr	r3, [r7, #28]
 2289 00a0 1B0C     		lsrs	r3, r3, #16
 2290              		.loc 1 1205 59
 2291 00a2 DBB2     		uxtb	r3, r3
 2292              		.loc 1 1205 37
 2293 00a4 03F03F03 		and	r3, r3, #63
 2294 00a8 DBB2     		uxtb	r3, r3
 2295 00aa 1846     		mov	r0, r3
 2296 00ac FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2297 00b0 0346     		mov	r3, r0
 2298 00b2 1A46     		mov	r2, r3
 2299              		.loc 1 1205 35
 2300 00b4 7B68     		ldr	r3, [r7, #4]
 2301 00b6 1A71     		strb	r2, [r3, #4]
1206:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_minute = hals_rtc_bcd_2_normal((uint8_t)GET_TIME_MN(temp_tr));
 2302              		.loc 1 1206 70
 2303 00b8 FB69     		ldr	r3, [r7, #28]
 2304 00ba 1B0A     		lsrs	r3, r3, #8
 2305              		.loc 1 1206 61
 2306 00bc DBB2     		uxtb	r3, r3
 2307              		.loc 1 1206 39
 2308 00be 03F07F03 		and	r3, r3, #127
 2309 00c2 DBB2     		uxtb	r3, r3
 2310 00c4 1846     		mov	r0, r3
 2311 00c6 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2312 00ca 0346     		mov	r3, r0
 2313 00cc 1A46     		mov	r2, r3
 2314              		.loc 1 1206 37
 2315 00ce 7B68     		ldr	r3, [r7, #4]
 2316 00d0 5A71     		strb	r2, [r3, #5]
1207:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_second = hals_rtc_bcd_2_normal((uint8_t)GET_TIME_SC(temp_tr));
 2317              		.loc 1 1207 39
 2318 00d2 FB69     		ldr	r3, [r7, #28]
 2319 00d4 DBB2     		uxtb	r3, r3
 2320 00d6 03F07F03 		and	r3, r3, #127
 2321 00da DBB2     		uxtb	r3, r3
 2322 00dc 1846     		mov	r0, r3
 2323 00de FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2324 00e2 0346     		mov	r3, r0
 2325 00e4 1A46     		mov	r2, r3
 2326              		.loc 1 1207 37
 2327 00e6 7B68     		ldr	r3, [r7, #4]
 2328 00e8 9A71     		strb	r2, [r3, #6]
1208:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_subsecond = temp_ss;
 2329              		.loc 1 1208 40
 2330 00ea 7B68     		ldr	r3, [r7, #4]
 2331 00ec FA89     		ldrh	r2, [r7, #14]	@ movhi
 2332 00ee 1A81     		strh	r2, [r3, #8]	@ movhi
1209:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_daylight_saving = (uint32_t)(temp_ctlr & (RTC_CTL_A1H | RTC_CTL_S1H));
 2333              		.loc 1 1209 48
 2334 00f0 3B69     		ldr	r3, [r7, #16]
 2335 00f2 03F44032 		and	r2, r3, #196608
 2336              		.loc 1 1209 46
 2337 00f6 7B68     		ldr	r3, [r7, #4]
 2338 00f8 1A61     		str	r2, [r3, #16]
1210:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_psc_factor_a = (uint16_t)GET_PSC_FACTOR_A(temp_pscr);
 2339              		.loc 1 1210 55
 2340 00fa 7B69     		ldr	r3, [r7, #20]
 2341 00fc 1B0C     		lsrs	r3, r3, #16
 2342              		.loc 1 1210 45
 2343 00fe 9BB2     		uxth	r3, r3
 2344 0100 03F07F03 		and	r3, r3, #127
 2345 0104 9AB2     		uxth	r2, r3
 2346              		.loc 1 1210 43
 2347 0106 7B68     		ldr	r3, [r7, #4]
 2348 0108 5A83     		strh	r2, [r3, #26]	@ movhi
1211:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_psc_factor_s = (uint16_t)GET_PSC_FACTOR_S(temp_pscr);
 2349              		.loc 1 1211 45
 2350 010a 7B69     		ldr	r3, [r7, #20]
 2351 010c 9BB2     		uxth	r3, r3
 2352 010e C3F30E03 		ubfx	r3, r3, #0, #15
 2353 0112 9AB2     		uxth	r2, r3
 2354              		.loc 1 1211 43
 2355 0114 7B68     		ldr	r3, [r7, #4]
 2356 0116 1A83     		strh	r2, [r3, #24]	@ movhi
1212:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_am_pm = (uint32_t)(temp_pscr & RTC_TIME_PM);
 2357              		.loc 1 1212 38
 2358 0118 7B69     		ldr	r3, [r7, #20]
 2359 011a 03F48002 		and	r2, r3, #4194304
 2360              		.loc 1 1212 36
 2361 011e 7B68     		ldr	r3, [r7, #4]
 2362 0120 DA60     		str	r2, [r3, #12]
1213:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_initpara_struct->rtc_clock_format = (uint32_t)(temp_ctlr & RTC_CTL_CS);
 2363              		.loc 1 1213 45
 2364 0122 3B69     		ldr	r3, [r7, #16]
 2365 0124 03F04002 		and	r2, r3, #64
 2366              		.loc 1 1213 43
 2367 0128 7B68     		ldr	r3, [r7, #4]
 2368 012a 5A61     		str	r2, [r3, #20]
1214:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1215:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2369              		.loc 1 1215 1
 2370 012c 00BF     		nop
 2371 012e 2037     		adds	r7, r7, #32
 2372              		.cfi_def_cfa_offset 8
 2373 0130 BD46     		mov	sp, r7
 2374              		.cfi_def_cfa_register 13
 2375              		@ sp needed
 2376 0132 80BD     		pop	{r7, pc}
 2377              	.L102:
 2378              		.align	2
 2379              	.L101:
 2380 0134 28280040 		.word	1073752104
 2381 0138 00280040 		.word	1073752064
 2382 013c 04280040 		.word	1073752068
 2383 0140 10280040 		.word	1073752080
 2384 0144 08280040 		.word	1073752072
 2385              		.cfi_endproc
 2386              	.LFE133:
 2388              		.section	.text.hal_rtc_alarm_get,"ax",%progbits
 2389              		.align	1
 2390              		.global	hal_rtc_alarm_get
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2394              		.fpu softvfp
 2396              	hal_rtc_alarm_get:
 2397              	.LFB134:
1216:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1217:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1218:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      get RTC alarm
1219:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1220:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] rtc_alarm_time: pointer to a hal_rtc_alarm_struct structure which contains
1221:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 parameters for RTC alarm configuration
1222:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 members of the structure and the member values are shown as below:
1223:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_am_pm:
1224:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1225:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_AM: AM format
1226:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_PM: PM format
1227:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_weekday_mask:
1228:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1229:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_WEEKDAY_MASK_DISABLE: RTC alarm weekday no mask
1230:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_WEEKDAY_MASK_ENABLE: RTC alarm weekday mask
1231:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_hour_mask:
1232:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1233:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_HOUR_MASK_DISABLE: RTC alarm hour no mask
1234:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_HOUR_MASK_ENABLE: RTC alarm hour mask
1235:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_minute_mask:
1236:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1237:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_MINUTE_MASK_DISABLE: RTC alarm minute no mask
1238:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_MINUTE_MASK_ENABLE: RTC alarm minute mask
1239:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_second_mask:
1240:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1241:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SECOND_MASK_DISABLE: RTC alarm second no mask
1242:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SECOND_MASK_ENABLE: RTC alarm second mask
1243:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_subsecond_mask:
1244:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1245:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_0_14: RTC alarm second no mask
1246:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_1_14: RTC alarm second mask
1247:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_2_14: RTC alarm second no mask
1248:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_3_14: RTC alarm second mask
1249:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_4_14: RTC alarm second no mask
1250:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_5_14: RTC alarm second mask
1251:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_6_14: RTC alarm second no mask
1252:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_7_14: RTC alarm second mask
1253:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_8_14: RTC alarm second no mask
1254:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_9_14: RTC alarm second mask
1255:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_10_14: RTC alarm second no mask
1256:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_11_14: RTC alarm second mask
1257:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_12_14: RTC alarm second no mask
1258:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_13_14: RTC alarm second no mask
1259:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_14: RTC alarm second mask
1260:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_MASKSSC_NONE: RTC alarm second mask
1261:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_weekday_or_date:
1262:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1263:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SELECT_WEEKDAY: RTC alarm select weekday
1264:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SELECT_DATE: RTC alarm select date
1265:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_day: 1 - 31 or below
1266:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   only one parameter can be selected which is shown as below:
1267:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_MONDAY: RTC alarm Monday
1268:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_TUESDAY: RTC alarm Tuesday
1269:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_WEDSDAY: RTC alarm Wednesday
1270:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_THURSDAY: RTC alarm Thursday
1271:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_FRIDAY: RTC alarm Friday
1272:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SATURDAY: RTC alarm Saturday
1273:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg          RTC_ALARM_SUNDAY: RTC alarm Sunday
1274:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_hour: 0 - 24 or 1 - 12
1275:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_minute: 0 - 59
1276:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_second: 0 - 59
1277:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_alarm_subsecond: 0x00~0x7FFF
1278:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1279:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1280:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_alarm_get(hal_rtc_alarm_config_struct *rtc_alarm_time)
1281:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2398              		.loc 1 1281 1
 2399              		.cfi_startproc
 2400              		@ args = 0, pretend = 0, frame = 16
 2401              		@ frame_needed = 1, uses_anonymous_args = 0
 2402 0000 80B5     		push	{r7, lr}
 2403              		.cfi_def_cfa_offset 8
 2404              		.cfi_offset 7, -8
 2405              		.cfi_offset 14, -4
 2406 0002 84B0     		sub	sp, sp, #16
 2407              		.cfi_def_cfa_offset 24
 2408 0004 00AF     		add	r7, sp, #0
 2409              		.cfi_def_cfa_register 7
 2410 0006 7860     		str	r0, [r7, #4]
1282:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg_alrm0td = 0x00U, reg_alrm0ss = 0x00U;
 2411              		.loc 1 1282 14
 2412 0008 0023     		movs	r3, #0
 2413 000a FB60     		str	r3, [r7, #12]
 2414              		.loc 1 1282 35
 2415 000c 0023     		movs	r3, #0
 2416 000e BB60     		str	r3, [r7, #8]
1283:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1284:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* get the value of RTC_ALRM0TD and RTC_ALRM0SS register */
1285:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_alrm0td = RTC_ALRM0TD;
 2417              		.loc 1 1285 19
 2418 0010 324B     		ldr	r3, .L104
 2419              		.loc 1 1285 17
 2420 0012 1B68     		ldr	r3, [r3]
 2421 0014 FB60     		str	r3, [r7, #12]
1286:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_alrm0ss = RTC_ALRM0SS;
 2422              		.loc 1 1286 19
 2423 0016 324B     		ldr	r3, .L104+4
 2424              		.loc 1 1286 17
 2425 0018 1B68     		ldr	r3, [r3]
 2426 001a BB60     		str	r3, [r7, #8]
1287:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1288:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* get alarm parameters and construct the rtc_alarm_struct structure */
1289:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_am_pm = (uint32_t)(reg_alrm0td & RTC_ALRM0TD_PM);
 2427              		.loc 1 1289 39
 2428 001c FB68     		ldr	r3, [r7, #12]
 2429 001e 03F48002 		and	r2, r3, #4194304
 2430              		.loc 1 1289 37
 2431 0022 7B68     		ldr	r3, [r7, #4]
 2432 0024 1A60     		str	r2, [r3]
1290:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_weekday_mask = (uint32_t)(reg_alrm0td & RTC_ALARM_WEEKDAY_MASK_ENABLE
 2433              		.loc 1 1290 46
 2434 0026 FB68     		ldr	r3, [r7, #12]
 2435 0028 03F00042 		and	r2, r3, #-2147483648
 2436              		.loc 1 1290 44
 2437 002c 7B68     		ldr	r3, [r7, #4]
 2438 002e 5A60     		str	r2, [r3, #4]
1291:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_hour_mask = reg_alrm0td & RTC_ALARM_HOUR_MASK_ENABLE;
 2439              		.loc 1 1291 55
 2440 0030 FB68     		ldr	r3, [r7, #12]
 2441 0032 03F40002 		and	r2, r3, #8388608
 2442              		.loc 1 1291 41
 2443 0036 7B68     		ldr	r3, [r7, #4]
 2444 0038 9A60     		str	r2, [r3, #8]
1292:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_minute_mask = reg_alrm0td & RTC_ALARM_MINUTE_MASK_ENABLE;
 2445              		.loc 1 1292 57
 2446 003a FB68     		ldr	r3, [r7, #12]
 2447 003c 03F40042 		and	r2, r3, #32768
 2448              		.loc 1 1292 43
 2449 0040 7B68     		ldr	r3, [r7, #4]
 2450 0042 DA60     		str	r2, [r3, #12]
1293:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_second_mask = reg_alrm0td & RTC_ALARM_SECOND_MASK_ENABLE;
 2451              		.loc 1 1293 57
 2452 0044 FB68     		ldr	r3, [r7, #12]
 2453 0046 03F08002 		and	r2, r3, #128
 2454              		.loc 1 1293 43
 2455 004a 7B68     		ldr	r3, [r7, #4]
 2456 004c 1A61     		str	r2, [r3, #16]
1294:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_subsecond_mask = reg_alrm0ss & RTC_ALRM0SS_MASKSSC;
 2457              		.loc 1 1294 60
 2458 004e BB68     		ldr	r3, [r7, #8]
 2459 0050 03F07062 		and	r2, r3, #251658240
 2460              		.loc 1 1294 46
 2461 0054 7B68     		ldr	r3, [r7, #4]
 2462 0056 5A61     		str	r2, [r3, #20]
1295:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_weekday_or_date = (uint32_t)(reg_alrm0td & RTC_ALRM0TD_DOWS);
 2463              		.loc 1 1295 43
 2464 0058 FB68     		ldr	r3, [r7, #12]
 2465 005a 03F08042 		and	r2, r3, #1073741824
 2466              		.loc 1 1295 41
 2467 005e 7B68     		ldr	r3, [r7, #4]
 2468 0060 9A61     		str	r2, [r3, #24]
1296:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_day = hals_rtc_bcd_2_normal((uint8_t)GET_ALRM0TD_DAY(reg_alrm0td));
 2469              		.loc 1 1296 68
 2470 0062 FB68     		ldr	r3, [r7, #12]
 2471 0064 1B0E     		lsrs	r3, r3, #24
 2472              		.loc 1 1296 59
 2473 0066 DBB2     		uxtb	r3, r3
 2474              		.loc 1 1296 37
 2475 0068 03F03F03 		and	r3, r3, #63
 2476 006c DBB2     		uxtb	r3, r3
 2477 006e 1846     		mov	r0, r3
 2478 0070 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2479 0074 0346     		mov	r3, r0
 2480 0076 1A46     		mov	r2, r3
 2481              		.loc 1 1296 35
 2482 0078 7B68     		ldr	r3, [r7, #4]
 2483 007a DA61     		str	r2, [r3, #28]
1297:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_hour = hals_rtc_bcd_2_normal((uint8_t)GET_ALRM0TD_HR(reg_alrm0td));
 2484              		.loc 1 1297 69
 2485 007c FB68     		ldr	r3, [r7, #12]
 2486 007e 1B0C     		lsrs	r3, r3, #16
 2487              		.loc 1 1297 60
 2488 0080 DBB2     		uxtb	r3, r3
 2489              		.loc 1 1297 38
 2490 0082 03F03F03 		and	r3, r3, #63
 2491 0086 DBB2     		uxtb	r3, r3
 2492 0088 1846     		mov	r0, r3
 2493 008a FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2494 008e 0346     		mov	r3, r0
 2495 0090 1A46     		mov	r2, r3
 2496              		.loc 1 1297 36
 2497 0092 7B68     		ldr	r3, [r7, #4]
 2498 0094 1A62     		str	r2, [r3, #32]
1298:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_minute = hals_rtc_bcd_2_normal((uint8_t)GET_ALRM0TD_MN(reg_alrm0td));
 2499              		.loc 1 1298 71
 2500 0096 FB68     		ldr	r3, [r7, #12]
 2501 0098 1B0A     		lsrs	r3, r3, #8
 2502              		.loc 1 1298 62
 2503 009a DBB2     		uxtb	r3, r3
 2504              		.loc 1 1298 40
 2505 009c 03F07F03 		and	r3, r3, #127
 2506 00a0 DBB2     		uxtb	r3, r3
 2507 00a2 1846     		mov	r0, r3
 2508 00a4 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2509 00a8 0346     		mov	r3, r0
 2510 00aa 1A46     		mov	r2, r3
 2511              		.loc 1 1298 38
 2512 00ac 7B68     		ldr	r3, [r7, #4]
 2513 00ae 5A62     		str	r2, [r3, #36]
1299:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_second = hals_rtc_bcd_2_normal((uint8_t)GET_ALRM0TD_SC(reg_alrm0td));
 2514              		.loc 1 1299 40
 2515 00b0 FB68     		ldr	r3, [r7, #12]
 2516 00b2 DBB2     		uxtb	r3, r3
 2517 00b4 03F07F03 		and	r3, r3, #127
 2518 00b8 DBB2     		uxtb	r3, r3
 2519 00ba 1846     		mov	r0, r3
 2520 00bc FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2521 00c0 0346     		mov	r3, r0
 2522 00c2 1A46     		mov	r2, r3
 2523              		.loc 1 1299 38
 2524 00c4 7B68     		ldr	r3, [r7, #4]
 2525 00c6 9A62     		str	r2, [r3, #40]
1300:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_alarm_time->rtc_alarm_subsecond = reg_alrm0ss & RTC_ALRM0SS_SSC;
 2526              		.loc 1 1300 55
 2527 00c8 BB68     		ldr	r3, [r7, #8]
 2528 00ca C3F30E02 		ubfx	r2, r3, #0, #15
 2529              		.loc 1 1300 41
 2530 00ce 7B68     		ldr	r3, [r7, #4]
 2531 00d0 DA62     		str	r2, [r3, #44]
1301:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2532              		.loc 1 1301 1
 2533 00d2 00BF     		nop
 2534 00d4 1037     		adds	r7, r7, #16
 2535              		.cfi_def_cfa_offset 8
 2536 00d6 BD46     		mov	sp, r7
 2537              		.cfi_def_cfa_register 13
 2538              		@ sp needed
 2539 00d8 80BD     		pop	{r7, pc}
 2540              	.L105:
 2541 00da 00BF     		.align	2
 2542              	.L104:
 2543 00dc 1C280040 		.word	1073752092
 2544 00e0 44280040 		.word	1073752132
 2545              		.cfi_endproc
 2546              	.LFE134:
 2548              		.section	.text.hal_rtc_alarm_event_poll,"ax",%progbits
 2549              		.align	1
 2550              		.global	hal_rtc_alarm_event_poll
 2551              		.syntax unified
 2552              		.thumb
 2553              		.thumb_func
 2554              		.fpu softvfp
 2556              	hal_rtc_alarm_event_poll:
 2557              	.LFB135:
1302:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1303:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1304:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      poll for RTC alarm event
1305:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  timeout_ms: the time cost for event polling
1306:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1307:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     error code: HAL_ERR_TIMEOUT, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
1308:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1309:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_alarm_event_poll(uint32_t timeout_ms)
1310:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2558              		.loc 1 1310 1
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 16
 2561              		@ frame_needed = 1, uses_anonymous_args = 0
 2562 0000 80B5     		push	{r7, lr}
 2563              		.cfi_def_cfa_offset 8
 2564              		.cfi_offset 7, -8
 2565              		.cfi_offset 14, -4
 2566 0002 84B0     		sub	sp, sp, #16
 2567              		.cfi_def_cfa_offset 24
 2568 0004 00AF     		add	r7, sp, #0
 2569              		.cfi_def_cfa_register 7
 2570 0006 7860     		str	r0, [r7, #4]
1311:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 2571              		.loc 1 1311 14
 2572 0008 0023     		movs	r3, #0
 2573 000a FB60     		str	r3, [r7, #12]
1312:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t tick_start = 0;
 2574              		.loc 1 1312 14
 2575 000c 0023     		movs	r3, #0
 2576 000e BB60     		str	r3, [r7, #8]
1313:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1314:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     tick_start = hal_sys_basetick_count_get();
 2577              		.loc 1 1314 18
 2578 0010 FFF7FEFF 		bl	hal_sys_basetick_count_get
 2579 0014 B860     		str	r0, [r7, #8]
 2580              	.L108:
1315:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* wait until ALRM0F flag to be set after the alarm is enabled */
1316:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     do {
1317:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_ALRM0F;
 2581              		.loc 1 1317 23 discriminator 2
 2582 0016 0F4B     		ldr	r3, .L111
 2583 0018 1B68     		ldr	r3, [r3]
 2584              		.loc 1 1317 21 discriminator 2
 2585 001a 03F48073 		and	r3, r3, #256
 2586 001e FB60     		str	r3, [r7, #12]
1318:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } while((SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) && ((uint32_t)RESET == 
 2587              		.loc 1 1318 21 discriminator 2
 2588 0020 7968     		ldr	r1, [r7, #4]
 2589 0022 B868     		ldr	r0, [r7, #8]
 2590 0024 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2591 0028 0346     		mov	r3, r0
 2592              		.loc 1 1318 5 discriminator 2
 2593 002a 012B     		cmp	r3, #1
 2594 002c 02D1     		bne	.L107
 2595              		.loc 1 1318 77 discriminator 1
 2596 002e FB68     		ldr	r3, [r7, #12]
 2597 0030 002B     		cmp	r3, #0
 2598 0032 F0D0     		beq	.L108
 2599              	.L107:
1319:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1320:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((uint32_t)RESET == flag_status) {
 2600              		.loc 1 1320 7
 2601 0034 FB68     		ldr	r3, [r7, #12]
 2602 0036 002B     		cmp	r3, #0
 2603 0038 02D1     		bne	.L109
1321:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_TIMEOUT;
 2604              		.loc 1 1321 16
 2605 003a 6FF00403 		mvn	r3, #4
 2606 003e 04E0     		b	.L110
 2607              	.L109:
1322:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1323:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1324:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_flag_clear(RTC_FLAG_ALARM0);
 2608              		.loc 1 1324 5
 2609 0040 4FF48070 		mov	r0, #256
 2610 0044 FFF7FEFF 		bl	hals_rtc_flag_clear
1325:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 2611              		.loc 1 1325 12
 2612 0048 0023     		movs	r3, #0
 2613              	.L110:
1326:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2614              		.loc 1 1326 1
 2615 004a 1846     		mov	r0, r3
 2616 004c 1037     		adds	r7, r7, #16
 2617              		.cfi_def_cfa_offset 8
 2618 004e BD46     		mov	sp, r7
 2619              		.cfi_def_cfa_register 13
 2620              		@ sp needed
 2621 0050 80BD     		pop	{r7, pc}
 2622              	.L112:
 2623 0052 00BF     		.align	2
 2624              	.L111:
 2625 0054 0C280040 		.word	1073752076
 2626              		.cfi_endproc
 2627              	.LFE135:
 2629              		.section	.text.hal_rtc_timestamp_get,"ax",%progbits
 2630              		.align	1
 2631              		.global	hal_rtc_timestamp_get
 2632              		.syntax unified
 2633              		.thumb
 2634              		.thumb_func
 2635              		.fpu softvfp
 2637              	hal_rtc_timestamp_get:
 2638              	.LFB136:
1327:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1328:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1329:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      get RTC timestamp time and date
1330:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1331:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] rtc_timestamp: pointer to a rtc_timestamp_struct structure which contains
1332:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 parameters for RTC time-stamp configuration
1333:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 members of the structure and the member values are shown as below:
1334:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_timestamp_month: RTC_JAN, RTC_FEB, RTC_MAR, RTC_APR, RTC_MAY, RTC_JUN,
1335:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                                        RTC_JUL, RTC_AUG, RTC_SEP, RTC_OCT, RTC_NOV, RTC_DEC
1336:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_timestamp_date: 0x1 - 0x31(BCD format)
1337:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_timestamp_weekday: RTC_MONDAY, RTC_TUESDAY, RTC_WEDSDAY, RTC_THURSDAY, RTC_FR
1338:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                                      RTC_SATURDAY, RTC_SUNDAY if RTC_ALARM_WEEKDAY_SELECTED is set
1339:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_timestamp_hour: 0x0 - 0x12(BCD format) or 0x0 - 0x23(BCD format) depending on
1340:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_timestamp_minute: 0x0 - 0x59(BCD format)
1341:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_timestamp_second: 0x0 - 0x59(BCD format)
1342:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                   rtc_am_pm: RTC_AM, RTC_PM
1343:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1344:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1345:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_timestamp_get(hal_rtc_timestamp_struct *rtc_timestamp)
1346:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2639              		.loc 1 1346 1
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 24
 2642              		@ frame_needed = 1, uses_anonymous_args = 0
 2643 0000 80B5     		push	{r7, lr}
 2644              		.cfi_def_cfa_offset 8
 2645              		.cfi_offset 7, -8
 2646              		.cfi_offset 14, -4
 2647 0002 86B0     		sub	sp, sp, #24
 2648              		.cfi_def_cfa_offset 32
 2649 0004 00AF     		add	r7, sp, #0
 2650              		.cfi_def_cfa_register 7
 2651 0006 7860     		str	r0, [r7, #4]
1347:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t temp_tts = 0x00U, temp_dts = 0x00U, temp_ssts = 0x00U;
 2652              		.loc 1 1347 14
 2653 0008 0023     		movs	r3, #0
 2654 000a 7B61     		str	r3, [r7, #20]
 2655              		.loc 1 1347 32
 2656 000c 0023     		movs	r3, #0
 2657 000e 3B61     		str	r3, [r7, #16]
 2658              		.loc 1 1347 50
 2659 0010 0023     		movs	r3, #0
 2660 0012 FB60     		str	r3, [r7, #12]
1348:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1349:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* get the value of time_stamp registers */
1350:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_tts = (uint32_t)RTC_TTS;
 2661              		.loc 1 1350 16
 2662 0014 2D4B     		ldr	r3, .L114
 2663              		.loc 1 1350 14
 2664 0016 1B68     		ldr	r3, [r3]
 2665 0018 7B61     		str	r3, [r7, #20]
1351:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_dts = (uint32_t)RTC_DTS;
 2666              		.loc 1 1351 16
 2667 001a 2D4B     		ldr	r3, .L114+4
 2668              		.loc 1 1351 14
 2669 001c 1B68     		ldr	r3, [r3]
 2670 001e 3B61     		str	r3, [r7, #16]
1352:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp_ssts = (uint32_t)RTC_SSTS;
 2671              		.loc 1 1352 17
 2672 0020 2C4B     		ldr	r3, .L114+8
 2673              		.loc 1 1352 15
 2674 0022 1B68     		ldr	r3, [r3]
 2675 0024 FB60     		str	r3, [r7, #12]
1353:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1354:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* get timestamp time and construct the rtc_timestamp_struct structure */
1355:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_am_pm = (uint32_t)(temp_tts & RTC_TTS_PM);
 2676              		.loc 1 1355 32
 2677 0026 7B69     		ldr	r3, [r7, #20]
 2678 0028 03F48002 		and	r2, r3, #4194304
 2679              		.loc 1 1355 30
 2680 002c 7B68     		ldr	r3, [r7, #4]
 2681 002e DA60     		str	r2, [r3, #12]
1356:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_month = hals_rtc_bcd_2_normal((uint8_t)GET_DTS_MON(temp_dts));
 2682              		.loc 1 1356 73
 2683 0030 3B69     		ldr	r3, [r7, #16]
 2684 0032 1B0A     		lsrs	r3, r3, #8
 2685              		.loc 1 1356 64
 2686 0034 DBB2     		uxtb	r3, r3
 2687              		.loc 1 1356 42
 2688 0036 03F01F03 		and	r3, r3, #31
 2689 003a DBB2     		uxtb	r3, r3
 2690 003c 1846     		mov	r0, r3
 2691 003e FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2692 0042 0346     		mov	r3, r0
 2693 0044 1A46     		mov	r2, r3
 2694              		.loc 1 1356 40
 2695 0046 7B68     		ldr	r3, [r7, #4]
 2696 0048 1A70     		strb	r2, [r3]
1357:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_date = hals_rtc_bcd_2_normal((uint8_t)GET_DTS_DAY(temp_dts));
 2697              		.loc 1 1357 41
 2698 004a 3B69     		ldr	r3, [r7, #16]
 2699 004c DBB2     		uxtb	r3, r3
 2700 004e 03F03F03 		and	r3, r3, #63
 2701 0052 DBB2     		uxtb	r3, r3
 2702 0054 1846     		mov	r0, r3
 2703 0056 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2704 005a 0346     		mov	r3, r0
 2705 005c 1A46     		mov	r2, r3
 2706              		.loc 1 1357 39
 2707 005e 7B68     		ldr	r3, [r7, #4]
 2708 0060 5A70     		strb	r2, [r3, #1]
1358:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_weekday = (uint8_t)GET_DTS_DOW(temp_dts);
 2709              		.loc 1 1358 53
 2710 0062 3B69     		ldr	r3, [r7, #16]
 2711 0064 5B0B     		lsrs	r3, r3, #13
 2712              		.loc 1 1358 44
 2713 0066 DBB2     		uxtb	r3, r3
 2714 0068 03F00703 		and	r3, r3, #7
 2715 006c DAB2     		uxtb	r2, r3
 2716              		.loc 1 1358 42
 2717 006e 7B68     		ldr	r3, [r7, #4]
 2718 0070 9A70     		strb	r2, [r3, #2]
1359:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_hour = hals_rtc_bcd_2_normal((uint8_t)GET_TTS_HR(temp_tts));
 2719              		.loc 1 1359 72
 2720 0072 7B69     		ldr	r3, [r7, #20]
 2721 0074 1B0C     		lsrs	r3, r3, #16
 2722              		.loc 1 1359 63
 2723 0076 DBB2     		uxtb	r3, r3
 2724              		.loc 1 1359 41
 2725 0078 03F03F03 		and	r3, r3, #63
 2726 007c DBB2     		uxtb	r3, r3
 2727 007e 1846     		mov	r0, r3
 2728 0080 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2729 0084 0346     		mov	r3, r0
 2730 0086 1A46     		mov	r2, r3
 2731              		.loc 1 1359 39
 2732 0088 7B68     		ldr	r3, [r7, #4]
 2733 008a DA70     		strb	r2, [r3, #3]
1360:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_minute = hals_rtc_bcd_2_normal((uint8_t)GET_TTS_MN(temp_tts));
 2734              		.loc 1 1360 74
 2735 008c 7B69     		ldr	r3, [r7, #20]
 2736 008e 1B0A     		lsrs	r3, r3, #8
 2737              		.loc 1 1360 65
 2738 0090 DBB2     		uxtb	r3, r3
 2739              		.loc 1 1360 43
 2740 0092 03F07F03 		and	r3, r3, #127
 2741 0096 DBB2     		uxtb	r3, r3
 2742 0098 1846     		mov	r0, r3
 2743 009a FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2744 009e 0346     		mov	r3, r0
 2745 00a0 1A46     		mov	r2, r3
 2746              		.loc 1 1360 41
 2747 00a2 7B68     		ldr	r3, [r7, #4]
 2748 00a4 1A71     		strb	r2, [r3, #4]
1361:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_second = hals_rtc_bcd_2_normal((uint8_t)GET_TTS_SC(temp_tts));
 2749              		.loc 1 1361 43
 2750 00a6 7B69     		ldr	r3, [r7, #20]
 2751 00a8 DBB2     		uxtb	r3, r3
 2752 00aa 03F07F03 		and	r3, r3, #127
 2753 00ae DBB2     		uxtb	r3, r3
 2754 00b0 1846     		mov	r0, r3
 2755 00b2 FFF7FEFF 		bl	hals_rtc_bcd_2_normal
 2756 00b6 0346     		mov	r3, r0
 2757 00b8 1A46     		mov	r2, r3
 2758              		.loc 1 1361 41
 2759 00ba 7B68     		ldr	r3, [r7, #4]
 2760 00bc 5A71     		strb	r2, [r3, #5]
1362:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     rtc_timestamp->rtc_timestamp_subsecond = temp_ssts;
 2761              		.loc 1 1362 44
 2762 00be 7B68     		ldr	r3, [r7, #4]
 2763 00c0 FA68     		ldr	r2, [r7, #12]
 2764 00c2 9A60     		str	r2, [r3, #8]
1363:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1364:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2765              		.loc 1 1364 1
 2766 00c4 00BF     		nop
 2767 00c6 1837     		adds	r7, r7, #24
 2768              		.cfi_def_cfa_offset 8
 2769 00c8 BD46     		mov	sp, r7
 2770              		.cfi_def_cfa_register 13
 2771              		@ sp needed
 2772 00ca 80BD     		pop	{r7, pc}
 2773              	.L115:
 2774              		.align	2
 2775              	.L114:
 2776 00cc 30280040 		.word	1073752112
 2777 00d0 34280040 		.word	1073752116
 2778 00d4 38280040 		.word	1073752120
 2779              		.cfi_endproc
 2780              	.LFE136:
 2782              		.section	.text.hal_rtc_timestamp_event_poll,"ax",%progbits
 2783              		.align	1
 2784              		.global	hal_rtc_timestamp_event_poll
 2785              		.syntax unified
 2786              		.thumb
 2787              		.thumb_func
 2788              		.fpu softvfp
 2790              	hal_rtc_timestamp_event_poll:
 2791              	.LFB137:
1365:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1366:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1367:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      poll for RTC timestamp event
1368:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  timeout_ms: the time cost for event polling
1369:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1370:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     error code: HAL_ERR_TIMEOUT, HAL_ERR_HARDWARE, HAL_ERR_NONE,
1371:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 details refer to gd32f3x0_hal.h
1372:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1373:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_timestamp_event_poll(uint32_t timeout_ms)
1374:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2792              		.loc 1 1374 1
 2793              		.cfi_startproc
 2794              		@ args = 0, pretend = 0, frame = 16
 2795              		@ frame_needed = 1, uses_anonymous_args = 0
 2796 0000 80B5     		push	{r7, lr}
 2797              		.cfi_def_cfa_offset 8
 2798              		.cfi_offset 7, -8
 2799              		.cfi_offset 14, -4
 2800 0002 84B0     		sub	sp, sp, #16
 2801              		.cfi_def_cfa_offset 24
 2802 0004 00AF     		add	r7, sp, #0
 2803              		.cfi_def_cfa_register 7
 2804 0006 7860     		str	r0, [r7, #4]
1375:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 2805              		.loc 1 1375 14
 2806 0008 0023     		movs	r3, #0
 2807 000a FB60     		str	r3, [r7, #12]
1376:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t tick_start = 0;
 2808              		.loc 1 1376 14
 2809 000c 0023     		movs	r3, #0
 2810 000e BB60     		str	r3, [r7, #8]
1377:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1378:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* wait until TSF flag to be set */
1379:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     flag_status = RTC_STAT & RTC_STAT_TSF;
 2811              		.loc 1 1379 19
 2812 0010 194B     		ldr	r3, .L122
 2813 0012 1B68     		ldr	r3, [r3]
 2814              		.loc 1 1379 17
 2815 0014 03F40063 		and	r3, r3, #2048
 2816 0018 FB60     		str	r3, [r7, #12]
1380:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     tick_start = hal_sys_basetick_count_get();
 2817              		.loc 1 1380 18
 2818 001a FFF7FEFF 		bl	hal_sys_basetick_count_get
 2819 001e B860     		str	r0, [r7, #8]
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     while((SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) && ((uint32_t)RESET == fl
 2820              		.loc 1 1381 10
 2821 0020 0DE0     		b	.L117
 2822              	.L120:
1382:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_TSF;
 2823              		.loc 1 1382 23
 2824 0022 154B     		ldr	r3, .L122
 2825 0024 1B68     		ldr	r3, [r3]
 2826              		.loc 1 1382 21
 2827 0026 03F40063 		and	r3, r3, #2048
 2828 002a FB60     		str	r3, [r7, #12]
1383:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if((uint32_t)RESET != (RTC_STAT & RTC_STAT_TSOVRF)) {
 2829              		.loc 1 1383 32
 2830 002c 124B     		ldr	r3, .L122
 2831 002e 1B68     		ldr	r3, [r3]
 2832              		.loc 1 1383 41
 2833 0030 03F48053 		and	r3, r3, #4096
 2834              		.loc 1 1383 11
 2835 0034 002B     		cmp	r3, #0
 2836 0036 02D0     		beq	.L117
1384:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             return HAL_ERR_HARDWARE;
 2837              		.loc 1 1384 20
 2838 0038 6FF00703 		mvn	r3, #7
 2839 003c 18E0     		b	.L118
 2840              	.L117:
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_TSF;
 2841              		.loc 1 1381 19
 2842 003e 7968     		ldr	r1, [r7, #4]
 2843 0040 B868     		ldr	r0, [r7, #8]
 2844 0042 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2845 0046 0346     		mov	r3, r0
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_TSF;
 2846              		.loc 1 1381 10
 2847 0048 012B     		cmp	r3, #1
 2848 004a 02D1     		bne	.L119
1381:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_TSF;
 2849              		.loc 1 1381 75 discriminator 1
 2850 004c FB68     		ldr	r3, [r7, #12]
 2851 004e 002B     		cmp	r3, #0
 2852 0050 E7D0     		beq	.L120
 2853              	.L119:
1385:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
1386:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1387:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1388:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((uint32_t)RESET == flag_status) {
 2854              		.loc 1 1388 7
 2855 0052 FB68     		ldr	r3, [r7, #12]
 2856 0054 002B     		cmp	r3, #0
 2857 0056 02D1     		bne	.L121
1389:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_TIMEOUT;
 2858              		.loc 1 1389 16
 2859 0058 6FF00403 		mvn	r3, #4
 2860 005c 08E0     		b	.L118
 2861              	.L121:
1390:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1391:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1392:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP);
 2862              		.loc 1 1392 5
 2863 005e 4FF40060 		mov	r0, #2048
 2864 0062 FFF7FEFF 		bl	hals_rtc_flag_clear
1393:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_flag_clear(RTC_FLAG_TIMESTAMP_OVERFLOW);
 2865              		.loc 1 1393 5
 2866 0066 4FF48050 		mov	r0, #4096
 2867 006a FFF7FEFF 		bl	hals_rtc_flag_clear
1394:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1395:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 2868              		.loc 1 1395 12
 2869 006e 0023     		movs	r3, #0
 2870              	.L118:
1396:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2871              		.loc 1 1396 1
 2872 0070 1846     		mov	r0, r3
 2873 0072 1037     		adds	r7, r7, #16
 2874              		.cfi_def_cfa_offset 8
 2875 0074 BD46     		mov	sp, r7
 2876              		.cfi_def_cfa_register 13
 2877              		@ sp needed
 2878 0076 80BD     		pop	{r7, pc}
 2879              	.L123:
 2880              		.align	2
 2881              	.L122:
 2882 0078 0C280040 		.word	1073752076
 2883              		.cfi_endproc
 2884              	.LFE137:
 2886              		.section	.text.hal_rtc_tamper0_event_poll,"ax",%progbits
 2887              		.align	1
 2888              		.global	hal_rtc_tamper0_event_poll
 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2892              		.fpu softvfp
 2894              	hal_rtc_tamper0_event_poll:
 2895              	.LFB138:
1397:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1398:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1399:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      poll for RTC tamper0 event
1400:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  timeout_ms: the time cost for event polling
1401:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1402:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     error code: HAL_ERR_TIMEOUT, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
1403:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1404:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_tamper0_event_poll(uint32_t timeout_ms)
1405:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2896              		.loc 1 1405 1
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 16
 2899              		@ frame_needed = 1, uses_anonymous_args = 0
 2900 0000 80B5     		push	{r7, lr}
 2901              		.cfi_def_cfa_offset 8
 2902              		.cfi_offset 7, -8
 2903              		.cfi_offset 14, -4
 2904 0002 84B0     		sub	sp, sp, #16
 2905              		.cfi_def_cfa_offset 24
 2906 0004 00AF     		add	r7, sp, #0
 2907              		.cfi_def_cfa_register 7
 2908 0006 7860     		str	r0, [r7, #4]
1406:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 2909              		.loc 1 1406 14
 2910 0008 0023     		movs	r3, #0
 2911 000a FB60     		str	r3, [r7, #12]
1407:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t tick_start = 0;
 2912              		.loc 1 1407 14
 2913 000c 0023     		movs	r3, #0
 2914 000e BB60     		str	r3, [r7, #8]
1408:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1409:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     tick_start = hal_sys_basetick_count_get();
 2915              		.loc 1 1409 18
 2916 0010 FFF7FEFF 		bl	hal_sys_basetick_count_get
 2917 0014 B860     		str	r0, [r7, #8]
 2918              	.L126:
1410:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* wait until TP0F flag to be set */
1411:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     do {
1412:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_TP0F;
 2919              		.loc 1 1412 23 discriminator 2
 2920 0016 0F4B     		ldr	r3, .L129
 2921 0018 1B68     		ldr	r3, [r3]
 2922              		.loc 1 1412 21 discriminator 2
 2923 001a 03F40053 		and	r3, r3, #8192
 2924 001e FB60     		str	r3, [r7, #12]
1413:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } while((SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) && ((uint32_t)RESET == 
 2925              		.loc 1 1413 21 discriminator 2
 2926 0020 7968     		ldr	r1, [r7, #4]
 2927 0022 B868     		ldr	r0, [r7, #8]
 2928 0024 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 2929 0028 0346     		mov	r3, r0
 2930              		.loc 1 1413 5 discriminator 2
 2931 002a 012B     		cmp	r3, #1
 2932 002c 02D1     		bne	.L125
 2933              		.loc 1 1413 77 discriminator 1
 2934 002e FB68     		ldr	r3, [r7, #12]
 2935 0030 002B     		cmp	r3, #0
 2936 0032 F0D0     		beq	.L126
 2937              	.L125:
1414:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1415:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((uint32_t)RESET == flag_status) {
 2938              		.loc 1 1415 7
 2939 0034 FB68     		ldr	r3, [r7, #12]
 2940 0036 002B     		cmp	r3, #0
 2941 0038 02D1     		bne	.L127
1416:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_TIMEOUT;
 2942              		.loc 1 1416 16
 2943 003a 6FF00403 		mvn	r3, #4
 2944 003e 04E0     		b	.L128
 2945              	.L127:
1417:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1418:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1419:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_flag_clear(RTC_FLAG_TAMP0);
 2946              		.loc 1 1419 5
 2947 0040 4FF40050 		mov	r0, #8192
 2948 0044 FFF7FEFF 		bl	hals_rtc_flag_clear
1420:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1421:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 2949              		.loc 1 1421 12
 2950 0048 0023     		movs	r3, #0
 2951              	.L128:
1422:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 2952              		.loc 1 1422 1
 2953 004a 1846     		mov	r0, r3
 2954 004c 1037     		adds	r7, r7, #16
 2955              		.cfi_def_cfa_offset 8
 2956 004e BD46     		mov	sp, r7
 2957              		.cfi_def_cfa_register 13
 2958              		@ sp needed
 2959 0050 80BD     		pop	{r7, pc}
 2960              	.L130:
 2961 0052 00BF     		.align	2
 2962              	.L129:
 2963 0054 0C280040 		.word	1073752076
 2964              		.cfi_endproc
 2965              	.LFE138:
 2967              		.section	.text.hal_rtc_tamper1_event_poll,"ax",%progbits
 2968              		.align	1
 2969              		.global	hal_rtc_tamper1_event_poll
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2973              		.fpu softvfp
 2975              	hal_rtc_tamper1_event_poll:
 2976              	.LFB139:
1423:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1424:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1425:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      poll for RTC tamper1 event
1426:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  timeout_ms: the time cost for event polling
1427:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1428:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     error code: HAL_ERR_TIMEOUT, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
1429:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1430:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hal_rtc_tamper1_event_poll(uint32_t timeout_ms)
1431:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 2977              		.loc 1 1431 1
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 16
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981 0000 80B5     		push	{r7, lr}
 2982              		.cfi_def_cfa_offset 8
 2983              		.cfi_offset 7, -8
 2984              		.cfi_offset 14, -4
 2985 0002 84B0     		sub	sp, sp, #16
 2986              		.cfi_def_cfa_offset 24
 2987 0004 00AF     		add	r7, sp, #0
 2988              		.cfi_def_cfa_register 7
 2989 0006 7860     		str	r0, [r7, #4]
1432:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 2990              		.loc 1 1432 14
 2991 0008 0023     		movs	r3, #0
 2992 000a FB60     		str	r3, [r7, #12]
1433:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t tick_start = 0;
 2993              		.loc 1 1433 14
 2994 000c 0023     		movs	r3, #0
 2995 000e BB60     		str	r3, [r7, #8]
1434:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1435:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     tick_start = hal_sys_basetick_count_get();
 2996              		.loc 1 1435 18
 2997 0010 FFF7FEFF 		bl	hal_sys_basetick_count_get
 2998 0014 B860     		str	r0, [r7, #8]
 2999              	.L133:
1436:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* wait until TP1F flag to be set */
1437:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     do {
1438:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_TP1F;
 3000              		.loc 1 1438 23 discriminator 2
 3001 0016 0F4B     		ldr	r3, .L136
 3002 0018 1B68     		ldr	r3, [r3]
 3003              		.loc 1 1438 21 discriminator 2
 3004 001a 03F48043 		and	r3, r3, #16384
 3005 001e FB60     		str	r3, [r7, #12]
1439:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } while((SET == hal_sys_basetick_timeout_check(tick_start, timeout_ms)) && ((uint32_t)RESET == 
 3006              		.loc 1 1439 21 discriminator 2
 3007 0020 7968     		ldr	r1, [r7, #4]
 3008 0022 B868     		ldr	r0, [r7, #8]
 3009 0024 FFF7FEFF 		bl	hal_sys_basetick_timeout_check
 3010 0028 0346     		mov	r3, r0
 3011              		.loc 1 1439 5 discriminator 2
 3012 002a 012B     		cmp	r3, #1
 3013 002c 02D1     		bne	.L132
 3014              		.loc 1 1439 77 discriminator 1
 3015 002e FB68     		ldr	r3, [r7, #12]
 3016 0030 002B     		cmp	r3, #0
 3017 0032 F0D0     		beq	.L133
 3018              	.L132:
1440:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1441:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((uint32_t)RESET == flag_status) {
 3019              		.loc 1 1441 7
 3020 0034 FB68     		ldr	r3, [r7, #12]
 3021 0036 002B     		cmp	r3, #0
 3022 0038 02D1     		bne	.L134
1442:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_TIMEOUT;
 3023              		.loc 1 1442 16
 3024 003a 6FF00403 		mvn	r3, #4
 3025 003e 04E0     		b	.L135
 3026              	.L134:
1443:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1444:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1445:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     hals_rtc_flag_clear(RTC_FLAG_TAMP1);
 3027              		.loc 1 1445 5
 3028 0040 4FF48040 		mov	r0, #16384
 3029 0044 FFF7FEFF 		bl	hals_rtc_flag_clear
1446:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1447:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 3030              		.loc 1 1447 12
 3031 0048 0023     		movs	r3, #0
 3032              	.L135:
1448:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3033              		.loc 1 1448 1
 3034 004a 1846     		mov	r0, r3
 3035 004c 1037     		adds	r7, r7, #16
 3036              		.cfi_def_cfa_offset 8
 3037 004e BD46     		mov	sp, r7
 3038              		.cfi_def_cfa_register 13
 3039              		@ sp needed
 3040 0050 80BD     		pop	{r7, pc}
 3041              	.L137:
 3042 0052 00BF     		.align	2
 3043              	.L136:
 3044 0054 0C280040 		.word	1073752076
 3045              		.cfi_endproc
 3046              	.LFE139:
 3048              		.section	.text.hal_rtc_daylight_saving_time_adjust,"ax",%progbits
 3049              		.align	1
 3050              		.global	hal_rtc_daylight_saving_time_adjust
 3051              		.syntax unified
 3052              		.thumb
 3053              		.thumb_func
 3054              		.fpu softvfp
 3056              	hal_rtc_daylight_saving_time_adjust:
 3057              	.LFB140:
1449:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1450:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1451:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      ajust the daylight saving time by adding or substracting one hour from the current 
1452:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  operation: hour ajustment operation
1453:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1454:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_DAYLIGHT_SAVING_ADD_1H: add one hour
1455:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_DAYLIGHT_SAVING_SUB_1H: substract one hour
1456:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_DAYLIGHT_SAVING_NONE: no add or subtract one hour
1457:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  record: daylight saving mark operation
1458:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1459:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_RECORD_DAYLIGHTSAVING_SET: set daylight saving mark
1460:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_RECORD_DAYLIGHTSAVING_RESET: reset daylight saving mark
1461:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1462:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1463:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1464:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hal_rtc_daylight_saving_time_adjust(uint32_t operation, uint32_t record)
1465:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3058              		.loc 1 1465 1
 3059              		.cfi_startproc
 3060              		@ args = 0, pretend = 0, frame = 8
 3061              		@ frame_needed = 1, uses_anonymous_args = 0
 3062              		@ link register save eliminated.
 3063 0000 80B4     		push	{r7}
 3064              		.cfi_def_cfa_offset 4
 3065              		.cfi_offset 7, -4
 3066 0002 83B0     		sub	sp, sp, #12
 3067              		.cfi_def_cfa_offset 16
 3068 0004 00AF     		add	r7, sp, #0
 3069              		.cfi_def_cfa_register 7
 3070 0006 7860     		str	r0, [r7, #4]
 3071 0008 3960     		str	r1, [r7]
1466:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1467:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3072              		.loc 1 1467 5
 3073 000a 0E4B     		ldr	r3, .L139
 3074              		.loc 1 1467 13
 3075 000c CA22     		movs	r2, #202
 3076 000e 1A60     		str	r2, [r3]
1468:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3077              		.loc 1 1468 5
 3078 0010 0C4B     		ldr	r3, .L139
 3079              		.loc 1 1468 13
 3080 0012 5322     		movs	r2, #83
 3081 0014 1A60     		str	r2, [r3]
1469:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1470:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)(~(RTC_CTL_A1H | RTC_CTL_S1H | RTC_CTL_DSM));
 3082              		.loc 1 1470 13
 3083 0016 0C4B     		ldr	r3, .L139+4
 3084 0018 1B68     		ldr	r3, [r3]
 3085 001a 0B4A     		ldr	r2, .L139+4
 3086 001c 23F4E023 		bic	r3, r3, #458752
 3087 0020 1360     		str	r3, [r2]
1471:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= (uint32_t)(operation | record);
 3088              		.loc 1 1471 13
 3089 0022 094B     		ldr	r3, .L139+4
 3090 0024 1A68     		ldr	r2, [r3]
 3091              		.loc 1 1471 37
 3092 0026 7968     		ldr	r1, [r7, #4]
 3093 0028 3B68     		ldr	r3, [r7]
 3094 002a 0B43     		orrs	r3, r3, r1
 3095              		.loc 1 1471 13
 3096 002c 0649     		ldr	r1, .L139+4
 3097 002e 1343     		orrs	r3, r3, r2
 3098 0030 0B60     		str	r3, [r1]
1472:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1473:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1474:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3099              		.loc 1 1474 5
 3100 0032 044B     		ldr	r3, .L139
 3101              		.loc 1 1474 13
 3102 0034 FF22     		movs	r2, #255
 3103 0036 1A60     		str	r2, [r3]
1475:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3104              		.loc 1 1475 1
 3105 0038 00BF     		nop
 3106 003a 0C37     		adds	r7, r7, #12
 3107              		.cfi_def_cfa_offset 4
 3108 003c BD46     		mov	sp, r7
 3109              		.cfi_def_cfa_register 13
 3110              		@ sp needed
 3111 003e 80BC     		pop	{r7}
 3112              		.cfi_restore 7
 3113              		.cfi_def_cfa_offset 0
 3114 0040 7047     		bx	lr
 3115              	.L140:
 3116 0042 00BF     		.align	2
 3117              	.L139:
 3118 0044 24280040 		.word	1073752100
 3119 0048 08280040 		.word	1073752072
 3120              		.cfi_endproc
 3121              	.LFE140:
 3123              		.section	.text.hals_rtc_deinit,"ax",%progbits
 3124              		.align	1
 3125              		.global	hals_rtc_deinit
 3126              		.syntax unified
 3127              		.thumb
 3128              		.thumb_func
 3129              		.fpu softvfp
 3131              	hals_rtc_deinit:
 3132              	.LFB141:
1476:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1477:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1478:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      reset most of the RTC registers
1479:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1480:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1481:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     ErrStatus: ERROR or SUCCESS
1482:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1483:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ErrStatus hals_rtc_deinit(void)
1484:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3133              		.loc 1 1484 1
 3134              		.cfi_startproc
 3135              		@ args = 0, pretend = 0, frame = 8
 3136              		@ frame_needed = 1, uses_anonymous_args = 0
 3137 0000 80B5     		push	{r7, lr}
 3138              		.cfi_def_cfa_offset 8
 3139              		.cfi_offset 7, -8
 3140              		.cfi_offset 14, -4
 3141 0002 82B0     		sub	sp, sp, #8
 3142              		.cfi_def_cfa_offset 16
 3143 0004 00AF     		add	r7, sp, #0
 3144              		.cfi_def_cfa_register 7
1485:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 3145              		.loc 1 1485 15
 3146 0006 0023     		movs	r3, #0
 3147 0008 FB71     		strb	r3, [r7, #7]
1486:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1487:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* RTC_TAMP register is not under write protection */
1488:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP = RTC_REGISTER_RESET;
 3148              		.loc 1 1488 5
 3149 000a 1D4B     		ldr	r3, .L144
 3150              		.loc 1 1488 14
 3151 000c 0022     		movs	r2, #0
 3152 000e 1A60     		str	r2, [r3]
1489:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1490:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1491:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3153              		.loc 1 1491 5
 3154 0010 1C4B     		ldr	r3, .L144+4
 3155              		.loc 1 1491 13
 3156 0012 CA22     		movs	r2, #202
 3157 0014 1A60     		str	r2, [r3]
1492:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3158              		.loc 1 1492 5
 3159 0016 1B4B     		ldr	r3, .L144+4
 3160              		.loc 1 1492 13
 3161 0018 5322     		movs	r2, #83
 3162 001a 1A60     		str	r2, [r3]
1493:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1494:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* reset RTC_CTL register, this can be done without the init mode */
1495:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= RTC_REGISTER_RESET;
 3163              		.loc 1 1495 13
 3164 001c 1A4B     		ldr	r3, .L144+8
 3165 001e 1B68     		ldr	r3, [r3]
 3166 0020 194B     		ldr	r3, .L144+8
 3167 0022 0022     		movs	r2, #0
 3168 0024 1A60     		str	r2, [r3]
1496:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1497:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enter init mode */
1498:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     error_status = hals_rtc_init_mode_enter();
 3169              		.loc 1 1498 20
 3170 0026 FFF7FEFF 		bl	hals_rtc_init_mode_enter
 3171 002a 0346     		mov	r3, r0
 3172 002c FB71     		strb	r3, [r7, #7]
1499:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1500:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(ERROR != error_status) {
 3173              		.loc 1 1500 7
 3174 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3175 0030 002B     		cmp	r3, #0
 3176 0032 1CD0     		beq	.L142
1501:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* before reset RTC_TIME and RTC_DATE, BPSHAD bit in RTC_CTL should be reset as the conditi
1502:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****            in order to read calendar from shadow register, not the real registers being reset */
1503:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TIME = RTC_REGISTER_RESET;
 3177              		.loc 1 1503 9
 3178 0034 154B     		ldr	r3, .L144+12
 3179              		.loc 1 1503 18
 3180 0036 0022     		movs	r2, #0
 3181 0038 1A60     		str	r2, [r3]
1504:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_DATE = RTC_DATE_RESET;
 3182              		.loc 1 1504 9
 3183 003a 154B     		ldr	r3, .L144+16
 3184              		.loc 1 1504 18
 3185 003c 42F20112 		movw	r2, #8449
 3186 0040 1A60     		str	r2, [r3]
1505:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1506:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_PSC = RTC_PSC_RESET;
 3187              		.loc 1 1506 9
 3188 0042 144B     		ldr	r3, .L144+20
 3189              		.loc 1 1506 17
 3190 0044 144A     		ldr	r2, .L144+24
 3191 0046 1A60     		str	r2, [r3]
1507:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1508:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* reset RTC_STAT register, also exit init mode.
1509:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****            at the same time, RTC_STAT_SOPF bit is reset, as the condition to reset RTC_SHIFTCTL reg
1510:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_STAT = RTC_STAT_RESET;
 3192              		.loc 1 1510 9
 3193 0048 144B     		ldr	r3, .L144+28
 3194              		.loc 1 1510 18
 3195 004a 0722     		movs	r2, #7
 3196 004c 1A60     		str	r2, [r3]
1511:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1512:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* to write RTC_ALRM0SS register, ALRM0EN bit in RTC_CTL register should be reset as the co
1513:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_ALRM0TD = RTC_REGISTER_RESET;
 3197              		.loc 1 1513 9
 3198 004e 144B     		ldr	r3, .L144+32
 3199              		.loc 1 1513 21
 3200 0050 0022     		movs	r2, #0
 3201 0052 1A60     		str	r2, [r3]
1514:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_ALRM0SS = RTC_REGISTER_RESET;
 3202              		.loc 1 1514 9
 3203 0054 134B     		ldr	r3, .L144+36
 3204              		.loc 1 1514 21
 3205 0056 0022     		movs	r2, #0
 3206 0058 1A60     		str	r2, [r3]
1515:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1516:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* reset RTC_SHIFTCTL and RTC_HRFC register, this can be done without the init mode */
1517:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_SHIFTCTL = RTC_REGISTER_RESET;
 3207              		.loc 1 1517 9
 3208 005a 134B     		ldr	r3, .L144+40
 3209              		.loc 1 1517 22
 3210 005c 0022     		movs	r2, #0
 3211 005e 1A60     		str	r2, [r3]
1518:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_HRFC = RTC_REGISTER_RESET;
 3212              		.loc 1 1518 9
 3213 0060 124B     		ldr	r3, .L144+44
 3214              		.loc 1 1518 18
 3215 0062 0022     		movs	r2, #0
 3216 0064 1A60     		str	r2, [r3]
1519:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1520:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = hals_rtc_register_sync_wait();
 3217              		.loc 1 1520 24
 3218 0066 FFF7FEFF 		bl	hals_rtc_register_sync_wait
 3219 006a 0346     		mov	r3, r0
 3220 006c FB71     		strb	r3, [r7, #7]
 3221              	.L142:
1521:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1522:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1523:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1524:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3222              		.loc 1 1524 5
 3223 006e 054B     		ldr	r3, .L144+4
 3224              		.loc 1 1524 13
 3225 0070 FF22     		movs	r2, #255
 3226 0072 1A60     		str	r2, [r3]
1525:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1526:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return error_status;
 3227              		.loc 1 1526 12
 3228 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1527:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3229              		.loc 1 1527 1
 3230 0076 1846     		mov	r0, r3
 3231 0078 0837     		adds	r7, r7, #8
 3232              		.cfi_def_cfa_offset 8
 3233 007a BD46     		mov	sp, r7
 3234              		.cfi_def_cfa_register 13
 3235              		@ sp needed
 3236 007c 80BD     		pop	{r7, pc}
 3237              	.L145:
 3238 007e 00BF     		.align	2
 3239              	.L144:
 3240 0080 40280040 		.word	1073752128
 3241 0084 24280040 		.word	1073752100
 3242 0088 08280040 		.word	1073752072
 3243 008c 00280040 		.word	1073752064
 3244 0090 04280040 		.word	1073752068
 3245 0094 10280040 		.word	1073752080
 3246 0098 FF007F00 		.word	8323327
 3247 009c 0C280040 		.word	1073752076
 3248 00a0 1C280040 		.word	1073752092
 3249 00a4 44280040 		.word	1073752132
 3250 00a8 2C280040 		.word	1073752108
 3251 00ac 3C280040 		.word	1073752124
 3252              		.cfi_endproc
 3253              	.LFE141:
 3255              		.section	.text.hals_rtc_init_mode_enter,"ax",%progbits
 3256              		.align	1
 3257              		.global	hals_rtc_init_mode_enter
 3258              		.syntax unified
 3259              		.thumb
 3260              		.thumb_func
 3261              		.fpu softvfp
 3263              	hals_rtc_init_mode_enter:
 3264              	.LFB142:
1528:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1529:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1530:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enter RTC init mode
1531:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1532:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1533:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     ErrStatus: ERROR or SUCCESS
1534:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1535:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ErrStatus hals_rtc_init_mode_enter(void)
1536:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3265              		.loc 1 1536 1
 3266              		.cfi_startproc
 3267              		@ args = 0, pretend = 0, frame = 16
 3268              		@ frame_needed = 1, uses_anonymous_args = 0
 3269              		@ link register save eliminated.
 3270 0000 80B4     		push	{r7}
 3271              		.cfi_def_cfa_offset 4
 3272              		.cfi_offset 7, -4
 3273 0002 85B0     		sub	sp, sp, #20
 3274              		.cfi_def_cfa_offset 24
 3275 0004 00AF     		add	r7, sp, #0
 3276              		.cfi_def_cfa_register 7
1537:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t time_index = RTC_INITM_TIMEOUT;
 3277              		.loc 1 1537 14
 3278 0006 4FF48043 		mov	r3, #16384
 3279 000a FB60     		str	r3, [r7, #12]
1538:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 3280              		.loc 1 1538 14
 3281 000c 0023     		movs	r3, #0
 3282 000e 7B60     		str	r3, [r7, #4]
1539:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 3283              		.loc 1 1539 15
 3284 0010 0023     		movs	r3, #0
 3285 0012 FB72     		strb	r3, [r7, #11]
1540:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1541:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check whether it has been in init mode */
1542:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RESET == (RTC_STAT & RTC_STAT_INITF)) {
 3286              		.loc 1 1542 18
 3287 0014 134B     		ldr	r3, .L152
 3288 0016 1B68     		ldr	r3, [r3]
 3289              		.loc 1 1542 27
 3290 0018 03F04003 		and	r3, r3, #64
 3291              		.loc 1 1542 7
 3292 001c 002B     		cmp	r3, #0
 3293 001e 19D1     		bne	.L147
1543:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_STAT |= RTC_STAT_INITM;
 3294              		.loc 1 1543 18
 3295 0020 104B     		ldr	r3, .L152
 3296 0022 1B68     		ldr	r3, [r3]
 3297 0024 0F4A     		ldr	r2, .L152
 3298 0026 43F08003 		orr	r3, r3, #128
 3299 002a 1360     		str	r3, [r2]
 3300              	.L149:
1544:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1545:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* wait until the INITF flag to be set */
1546:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         do {
1547:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             flag_status = RTC_STAT & RTC_STAT_INITF;
 3301              		.loc 1 1547 27 discriminator 2
 3302 002c 0D4B     		ldr	r3, .L152
 3303 002e 1B68     		ldr	r3, [r3]
 3304              		.loc 1 1547 25 discriminator 2
 3305 0030 03F04003 		and	r3, r3, #64
 3306 0034 7B60     		str	r3, [r7, #4]
1548:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         } while((--time_index > 0x00U) && (RESET == flag_status));
 3307              		.loc 1 1548 9 discriminator 2
 3308 0036 FB68     		ldr	r3, [r7, #12]
 3309 0038 013B     		subs	r3, r3, #1
 3310 003a FB60     		str	r3, [r7, #12]
 3311 003c FB68     		ldr	r3, [r7, #12]
 3312 003e 002B     		cmp	r3, #0
 3313 0040 02D0     		beq	.L148
 3314              		.loc 1 1548 40 discriminator 1
 3315 0042 7B68     		ldr	r3, [r7, #4]
 3316 0044 002B     		cmp	r3, #0
 3317 0046 F1D0     		beq	.L149
 3318              	.L148:
1549:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1550:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(RESET != flag_status) {
 3319              		.loc 1 1550 11
 3320 0048 7B68     		ldr	r3, [r7, #4]
 3321 004a 002B     		cmp	r3, #0
 3322 004c 04D0     		beq	.L150
1551:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             error_status = SUCCESS;
 3323              		.loc 1 1551 26
 3324 004e 0123     		movs	r3, #1
 3325 0050 FB72     		strb	r3, [r7, #11]
 3326 0052 01E0     		b	.L150
 3327              	.L147:
1552:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
1553:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1554:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = SUCCESS;
 3328              		.loc 1 1554 22
 3329 0054 0123     		movs	r3, #1
 3330 0056 FB72     		strb	r3, [r7, #11]
 3331              	.L150:
1555:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1556:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return error_status;
 3332              		.loc 1 1556 12
 3333 0058 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1557:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3334              		.loc 1 1557 1
 3335 005a 1846     		mov	r0, r3
 3336 005c 1437     		adds	r7, r7, #20
 3337              		.cfi_def_cfa_offset 4
 3338 005e BD46     		mov	sp, r7
 3339              		.cfi_def_cfa_register 13
 3340              		@ sp needed
 3341 0060 80BC     		pop	{r7}
 3342              		.cfi_restore 7
 3343              		.cfi_def_cfa_offset 0
 3344 0062 7047     		bx	lr
 3345              	.L153:
 3346              		.align	2
 3347              	.L152:
 3348 0064 0C280040 		.word	1073752076
 3349              		.cfi_endproc
 3350              	.LFE142:
 3352              		.section	.text.hals_rtc_init_mode_exit,"ax",%progbits
 3353              		.align	1
 3354              		.global	hals_rtc_init_mode_exit
 3355              		.syntax unified
 3356              		.thumb
 3357              		.thumb_func
 3358              		.fpu softvfp
 3360              	hals_rtc_init_mode_exit:
 3361              	.LFB143:
1558:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1559:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1560:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      exit RTC init mode
1561:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1562:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1563:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1564:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1565:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_init_mode_exit(void)
1566:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3362              		.loc 1 1566 1
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 1, uses_anonymous_args = 0
 3366              		@ link register save eliminated.
 3367 0000 80B4     		push	{r7}
 3368              		.cfi_def_cfa_offset 4
 3369              		.cfi_offset 7, -4
 3370 0002 00AF     		add	r7, sp, #0
 3371              		.cfi_def_cfa_register 7
1567:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_STAT &= (uint32_t)(~RTC_STAT_INITM);
 3372              		.loc 1 1567 14
 3373 0004 044B     		ldr	r3, .L155
 3374 0006 1B68     		ldr	r3, [r3]
 3375 0008 034A     		ldr	r2, .L155
 3376 000a 23F08003 		bic	r3, r3, #128
 3377 000e 1360     		str	r3, [r2]
1568:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3378              		.loc 1 1568 1
 3379 0010 00BF     		nop
 3380 0012 BD46     		mov	sp, r7
 3381              		.cfi_def_cfa_register 13
 3382              		@ sp needed
 3383 0014 80BC     		pop	{r7}
 3384              		.cfi_restore 7
 3385              		.cfi_def_cfa_offset 0
 3386 0016 7047     		bx	lr
 3387              	.L156:
 3388              		.align	2
 3389              	.L155:
 3390 0018 0C280040 		.word	1073752076
 3391              		.cfi_endproc
 3392              	.LFE143:
 3394              		.section	.text.hals_rtc_register_sync_wait,"ax",%progbits
 3395              		.align	1
 3396              		.global	hals_rtc_register_sync_wait
 3397              		.syntax unified
 3398              		.thumb
 3399              		.thumb_func
 3400              		.fpu softvfp
 3402              	hals_rtc_register_sync_wait:
 3403              	.LFB144:
1569:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1570:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1571:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      wait until RTC_TIME and RTC_DATE registers are synchronized with APB clock, and the
1572:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 registers are updated
1573:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1574:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1575:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     ErrStatus: ERROR or SUCCESS
1576:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1577:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ErrStatus hals_rtc_register_sync_wait(void)
1578:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3404              		.loc 1 1578 1
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 16
 3407              		@ frame_needed = 1, uses_anonymous_args = 0
 3408              		@ link register save eliminated.
 3409 0000 80B4     		push	{r7}
 3410              		.cfi_def_cfa_offset 4
 3411              		.cfi_offset 7, -4
 3412 0002 85B0     		sub	sp, sp, #20
 3413              		.cfi_def_cfa_offset 24
 3414 0004 00AF     		add	r7, sp, #0
 3415              		.cfi_def_cfa_register 7
1579:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     volatile uint32_t time_index = RTC_RSYNF_TIMEOUT;
 3416              		.loc 1 1579 23
 3417 0006 4FF40043 		mov	r3, #32768
 3418 000a 7B60     		str	r3, [r7, #4]
1580:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 3419              		.loc 1 1580 14
 3420 000c 0023     		movs	r3, #0
 3421 000e BB60     		str	r3, [r7, #8]
1581:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 3422              		.loc 1 1581 15
 3423 0010 0023     		movs	r3, #0
 3424 0012 FB73     		strb	r3, [r7, #15]
1582:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1583:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RESET == (RTC_CTL & RTC_CTL_BPSHAD)) {
 3425              		.loc 1 1583 18
 3426 0014 174B     		ldr	r3, .L164
 3427 0016 1B68     		ldr	r3, [r3]
 3428              		.loc 1 1583 26
 3429 0018 03F02003 		and	r3, r3, #32
 3430              		.loc 1 1583 7
 3431 001c 002B     		cmp	r3, #0
 3432 001e 21D1     		bne	.L158
1584:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* disable the write protection */
1585:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_WPK = RTC_UNLOCK_KEY1;
 3433              		.loc 1 1585 9
 3434 0020 154B     		ldr	r3, .L164+4
 3435              		.loc 1 1585 17
 3436 0022 CA22     		movs	r2, #202
 3437 0024 1A60     		str	r2, [r3]
1586:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_WPK = RTC_UNLOCK_KEY2;
 3438              		.loc 1 1586 9
 3439 0026 144B     		ldr	r3, .L164+4
 3440              		.loc 1 1586 17
 3441 0028 5322     		movs	r2, #83
 3442 002a 1A60     		str	r2, [r3]
1587:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1588:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* firstly clear RSYNF flag */
1589:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_STAT &= (uint32_t)(~RTC_STAT_RSYNF);
 3443              		.loc 1 1589 18
 3444 002c 134B     		ldr	r3, .L164+8
 3445 002e 1B68     		ldr	r3, [r3]
 3446 0030 124A     		ldr	r2, .L164+8
 3447 0032 23F02003 		bic	r3, r3, #32
 3448 0036 1360     		str	r3, [r2]
 3449              	.L160:
1590:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1591:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* wait until RSYNF flag to be set */
1592:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         do {
1593:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             flag_status = RTC_STAT & RTC_STAT_RSYNF;
 3450              		.loc 1 1593 27 discriminator 2
 3451 0038 104B     		ldr	r3, .L164+8
 3452 003a 1B68     		ldr	r3, [r3]
 3453              		.loc 1 1593 25 discriminator 2
 3454 003c 03F02003 		and	r3, r3, #32
 3455 0040 BB60     		str	r3, [r7, #8]
1594:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         } while((--time_index > 0x00U) && (RESET == flag_status));
 3456              		.loc 1 1594 18 discriminator 2
 3457 0042 7B68     		ldr	r3, [r7, #4]
 3458 0044 013B     		subs	r3, r3, #1
 3459              		.loc 1 1594 9 discriminator 2
 3460 0046 7B60     		str	r3, [r7, #4]
 3461 0048 002B     		cmp	r3, #0
 3462 004a 02D0     		beq	.L159
 3463              		.loc 1 1594 40 discriminator 1
 3464 004c BB68     		ldr	r3, [r7, #8]
 3465 004e 002B     		cmp	r3, #0
 3466 0050 F2D0     		beq	.L160
 3467              	.L159:
1595:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1596:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         if(RESET != flag_status) {
 3468              		.loc 1 1596 11
 3469 0052 BB68     		ldr	r3, [r7, #8]
 3470 0054 002B     		cmp	r3, #0
 3471 0056 01D0     		beq	.L161
1597:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****             error_status = SUCCESS;
 3472              		.loc 1 1597 26
 3473 0058 0123     		movs	r3, #1
 3474 005a FB73     		strb	r3, [r7, #15]
 3475              	.L161:
1598:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         }
1599:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1600:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         /* enable the write protection */
1601:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_WPK = RTC_LOCK_KEY;
 3476              		.loc 1 1601 9
 3477 005c 064B     		ldr	r3, .L164+4
 3478              		.loc 1 1601 17
 3479 005e FF22     		movs	r2, #255
 3480 0060 1A60     		str	r2, [r3]
 3481 0062 01E0     		b	.L162
 3482              	.L158:
1602:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } else {
1603:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = SUCCESS;
 3483              		.loc 1 1603 22
 3484 0064 0123     		movs	r3, #1
 3485 0066 FB73     		strb	r3, [r7, #15]
 3486              	.L162:
1604:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1605:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1606:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return error_status;
 3487              		.loc 1 1606 12
 3488 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1607:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3489              		.loc 1 1607 1
 3490 006a 1846     		mov	r0, r3
 3491 006c 1437     		adds	r7, r7, #20
 3492              		.cfi_def_cfa_offset 4
 3493 006e BD46     		mov	sp, r7
 3494              		.cfi_def_cfa_register 13
 3495              		@ sp needed
 3496 0070 80BC     		pop	{r7}
 3497              		.cfi_restore 7
 3498              		.cfi_def_cfa_offset 0
 3499 0072 7047     		bx	lr
 3500              	.L165:
 3501              		.align	2
 3502              	.L164:
 3503 0074 08280040 		.word	1073752072
 3504 0078 24280040 		.word	1073752100
 3505 007c 0C280040 		.word	1073752076
 3506              		.cfi_endproc
 3507              	.LFE144:
 3509              		.section	.text.hals_rtc_subsecond_get,"ax",%progbits
 3510              		.align	1
 3511              		.global	hals_rtc_subsecond_get
 3512              		.syntax unified
 3513              		.thumb
 3514              		.thumb_func
 3515              		.fpu softvfp
 3517              	hals_rtc_subsecond_get:
 3518              	.LFB145:
1608:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1609:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1610:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      get current subsecond value
1611:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1612:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1613:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     current subsecond value
1614:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1615:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** uint32_t hals_rtc_subsecond_get(void)
1616:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3519              		.loc 1 1616 1
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 8
 3522              		@ frame_needed = 1, uses_anonymous_args = 0
 3523              		@ link register save eliminated.
 3524 0000 80B4     		push	{r7}
 3525              		.cfi_def_cfa_offset 4
 3526              		.cfi_offset 7, -4
 3527 0002 83B0     		sub	sp, sp, #12
 3528              		.cfi_def_cfa_offset 16
 3529 0004 00AF     		add	r7, sp, #0
 3530              		.cfi_def_cfa_register 7
1617:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg = 0x00U;
 3531              		.loc 1 1617 14
 3532 0006 0023     		movs	r3, #0
 3533 0008 7B60     		str	r3, [r7, #4]
1618:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* if BPSHAD bit is reset, reading RTC_SS will lock RTC_TIME and RTC_DATE automatically */
1619:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg = (uint32_t)RTC_SS;
 3534              		.loc 1 1619 11
 3535 000a 054B     		ldr	r3, .L168
 3536              		.loc 1 1619 9
 3537 000c 1B68     		ldr	r3, [r3]
 3538 000e 7B60     		str	r3, [r7, #4]
1620:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* read RTC_DATE to unlock the 3 shadow registers */
1621:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     (void)(RTC_DATE);
 3539              		.loc 1 1621 5
 3540 0010 044B     		ldr	r3, .L168+4
 3541 0012 1B68     		ldr	r3, [r3]
1622:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1623:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return reg;
 3542              		.loc 1 1623 12
 3543 0014 7B68     		ldr	r3, [r7, #4]
1624:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3544              		.loc 1 1624 1
 3545 0016 1846     		mov	r0, r3
 3546 0018 0C37     		adds	r7, r7, #12
 3547              		.cfi_def_cfa_offset 4
 3548 001a BD46     		mov	sp, r7
 3549              		.cfi_def_cfa_register 13
 3550              		@ sp needed
 3551 001c 80BC     		pop	{r7}
 3552              		.cfi_restore 7
 3553              		.cfi_def_cfa_offset 0
 3554 001e 7047     		bx	lr
 3555              	.L169:
 3556              		.align	2
 3557              	.L168:
 3558 0020 28280040 		.word	1073752104
 3559 0024 04280040 		.word	1073752068
 3560              		.cfi_endproc
 3561              	.LFE145:
 3563              		.section	.text.hals_rtc_alarm_subsecond_config,"ax",%progbits
 3564              		.align	1
 3565              		.global	hals_rtc_alarm_subsecond_config
 3566              		.syntax unified
 3567              		.thumb
 3568              		.thumb_func
 3569              		.fpu softvfp
 3571              	hals_rtc_alarm_subsecond_config:
 3572              	.LFB146:
1625:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1626:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1627:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure subsecond of RTC alarm
1628:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  mask_subsecond: alarm subsecond mask
1629:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1630:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_0_14: mask alarm subsecond configuration
1631:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_1_14: mask RTC_ALRM0SS_SSC[14:1], and RTC_ALRM0SS_SSC[0] is to be com
1632:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_2_14: mask RTC_ALRM0SS_SSC[14:2], and RTC_ALRM0SS_SSC[1:0] is to be c
1633:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_3_14: mask RTC_ALRM0SS_SSC[14:3], and RTC_ALRM0SS_SSC[2:0] is to be c
1634:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_4_14: mask RTC_ALRM0SS_SSC[14:4], and RTC_ALRM0SS_SSC[3:0] is to be c
1635:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_5_14: mask RTC_ALRM0SS_SSC[14:5], and RTC_ALRM0SS_SSC[4:0] is to be c
1636:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_6_14: mask RTC_ALRM0SS_SSC[14:6], and RTC_ALRM0SS_SSC[5:0] is to be c
1637:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_7_14: mask RTC_ALRM0SS_SSC[14:7], and RTC_ALRM0SS_SSC[6:0] is to be c
1638:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_8_14: mask RTC_ALRM0SS_SSC[14:8], and RTC_ALRM0SS_SSC[7:0] is to be c
1639:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_9_14: mask RTC_ALRM0SS_SSC[14:9], and RTC_ALRM0SS_SSC[8:0] is to be c
1640:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_10_14: mask RTC_ALRM0SS_SSC[14:10], and RTC_ALRM0SS_SSC[9:0] is to be
1641:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_11_14: mask RTC_ALRM0SS_SSC[14:11], and RTC_ALRM0SS_SSC[10:0] is to b
1642:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_12_14: mask RTC_ALRM0SS_SSC[14:12], and RTC_ALRM0SS_SSC[11:0] is to b
1643:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_13_14: mask RTC_ALRM0SS_SSC[14:13], and RTC_ALRM0SS_SSC[12:0] is to b
1644:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_14: mask RTC_ALRM0SS_SSC[14], and RTC_ALRM0SS_SSC[13:0] is to be comp
1645:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_MASKSSC_NONE: mask none, and RTC_ALRM0SS_SSC[14:0] is to be compared
1646:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  subsecond: alarm subsecond value(0x000 - 0x7FFF)
1647:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1648:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1649:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1650:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_alarm_subsecond_config(uint32_t mask_subsecond, uint32_t subsecond)
1651:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3573              		.loc 1 1651 1
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 8
 3576              		@ frame_needed = 1, uses_anonymous_args = 0
 3577              		@ link register save eliminated.
 3578 0000 80B4     		push	{r7}
 3579              		.cfi_def_cfa_offset 4
 3580              		.cfi_offset 7, -4
 3581 0002 83B0     		sub	sp, sp, #12
 3582              		.cfi_def_cfa_offset 16
 3583 0004 00AF     		add	r7, sp, #0
 3584              		.cfi_def_cfa_register 7
 3585 0006 7860     		str	r0, [r7, #4]
 3586 0008 3960     		str	r1, [r7]
1652:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1653:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3587              		.loc 1 1653 5
 3588 000a 094B     		ldr	r3, .L171
 3589              		.loc 1 1653 13
 3590 000c CA22     		movs	r2, #202
 3591 000e 1A60     		str	r2, [r3]
1654:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3592              		.loc 1 1654 5
 3593 0010 074B     		ldr	r3, .L171
 3594              		.loc 1 1654 13
 3595 0012 5322     		movs	r2, #83
 3596 0014 1A60     		str	r2, [r3]
1655:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1656:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_ALRM0SS = mask_subsecond | subsecond;
 3597              		.loc 1 1656 5
 3598 0016 0749     		ldr	r1, .L171+4
 3599              		.loc 1 1656 34
 3600 0018 7A68     		ldr	r2, [r7, #4]
 3601 001a 3B68     		ldr	r3, [r7]
 3602 001c 1343     		orrs	r3, r3, r2
 3603              		.loc 1 1656 17
 3604 001e 0B60     		str	r3, [r1]
1657:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1658:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1659:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3605              		.loc 1 1659 5
 3606 0020 034B     		ldr	r3, .L171
 3607              		.loc 1 1659 13
 3608 0022 FF22     		movs	r2, #255
 3609 0024 1A60     		str	r2, [r3]
1660:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3610              		.loc 1 1660 1
 3611 0026 00BF     		nop
 3612 0028 0C37     		adds	r7, r7, #12
 3613              		.cfi_def_cfa_offset 4
 3614 002a BD46     		mov	sp, r7
 3615              		.cfi_def_cfa_register 13
 3616              		@ sp needed
 3617 002c 80BC     		pop	{r7}
 3618              		.cfi_restore 7
 3619              		.cfi_def_cfa_offset 0
 3620 002e 7047     		bx	lr
 3621              	.L172:
 3622              		.align	2
 3623              	.L171:
 3624 0030 24280040 		.word	1073752100
 3625 0034 44280040 		.word	1073752132
 3626              		.cfi_endproc
 3627              	.LFE146:
 3629              		.section	.text.hals_rtc_alarm_subsecond_get,"ax",%progbits
 3630              		.align	1
 3631              		.global	hals_rtc_alarm_subsecond_get
 3632              		.syntax unified
 3633              		.thumb
 3634              		.thumb_func
 3635              		.fpu softvfp
 3637              	hals_rtc_alarm_subsecond_get:
 3638              	.LFB147:
1661:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1662:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1663:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      get RTC alarm subsecond
1664:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1665:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1666:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     RTC alarm subsecond value
1667:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1668:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** uint32_t hals_rtc_alarm_subsecond_get(void)
1669:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3639              		.loc 1 1669 1
 3640              		.cfi_startproc
 3641              		@ args = 0, pretend = 0, frame = 0
 3642              		@ frame_needed = 1, uses_anonymous_args = 0
 3643              		@ link register save eliminated.
 3644 0000 80B4     		push	{r7}
 3645              		.cfi_def_cfa_offset 4
 3646              		.cfi_offset 7, -4
 3647 0002 00AF     		add	r7, sp, #0
 3648              		.cfi_def_cfa_register 7
1670:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return ((uint32_t)(RTC_ALRM0SS & RTC_ALRM0SS_SSC));
 3649              		.loc 1 1670 13
 3650 0004 034B     		ldr	r3, .L175
 3651 0006 1B68     		ldr	r3, [r3]
 3652 0008 C3F30E03 		ubfx	r3, r3, #0, #15
1671:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3653              		.loc 1 1671 1
 3654 000c 1846     		mov	r0, r3
 3655 000e BD46     		mov	sp, r7
 3656              		.cfi_def_cfa_register 13
 3657              		@ sp needed
 3658 0010 80BC     		pop	{r7}
 3659              		.cfi_restore 7
 3660              		.cfi_def_cfa_offset 0
 3661 0012 7047     		bx	lr
 3662              	.L176:
 3663              		.align	2
 3664              	.L175:
 3665 0014 44280040 		.word	1073752132
 3666              		.cfi_endproc
 3667              	.LFE147:
 3669              		.section	.text.hals_rtc_alarm_enable,"ax",%progbits
 3670              		.align	1
 3671              		.global	hals_rtc_alarm_enable
 3672              		.syntax unified
 3673              		.thumb
 3674              		.thumb_func
 3675              		.fpu softvfp
 3677              	hals_rtc_alarm_enable:
 3678              	.LFB148:
1672:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1673:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1674:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enable RTC alarm
1675:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1676:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1677:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1678:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1679:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_alarm_enable(void)
1680:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3679              		.loc 1 1680 1
 3680              		.cfi_startproc
 3681              		@ args = 0, pretend = 0, frame = 0
 3682              		@ frame_needed = 1, uses_anonymous_args = 0
 3683              		@ link register save eliminated.
 3684 0000 80B4     		push	{r7}
 3685              		.cfi_def_cfa_offset 4
 3686              		.cfi_offset 7, -4
 3687 0002 00AF     		add	r7, sp, #0
 3688              		.cfi_def_cfa_register 7
1681:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1682:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3689              		.loc 1 1682 5
 3690 0004 094B     		ldr	r3, .L178
 3691              		.loc 1 1682 13
 3692 0006 CA22     		movs	r2, #202
 3693 0008 1A60     		str	r2, [r3]
1683:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3694              		.loc 1 1683 5
 3695 000a 084B     		ldr	r3, .L178
 3696              		.loc 1 1683 13
 3697 000c 5322     		movs	r2, #83
 3698 000e 1A60     		str	r2, [r3]
1684:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1685:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= RTC_CTL_ALRM0EN;
 3699              		.loc 1 1685 13
 3700 0010 074B     		ldr	r3, .L178+4
 3701 0012 1B68     		ldr	r3, [r3]
 3702 0014 064A     		ldr	r2, .L178+4
 3703 0016 43F48073 		orr	r3, r3, #256
 3704 001a 1360     		str	r3, [r2]
1686:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1687:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1688:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3705              		.loc 1 1688 5
 3706 001c 034B     		ldr	r3, .L178
 3707              		.loc 1 1688 13
 3708 001e FF22     		movs	r2, #255
 3709 0020 1A60     		str	r2, [r3]
1689:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3710              		.loc 1 1689 1
 3711 0022 00BF     		nop
 3712 0024 BD46     		mov	sp, r7
 3713              		.cfi_def_cfa_register 13
 3714              		@ sp needed
 3715 0026 80BC     		pop	{r7}
 3716              		.cfi_restore 7
 3717              		.cfi_def_cfa_offset 0
 3718 0028 7047     		bx	lr
 3719              	.L179:
 3720 002a 00BF     		.align	2
 3721              	.L178:
 3722 002c 24280040 		.word	1073752100
 3723 0030 08280040 		.word	1073752072
 3724              		.cfi_endproc
 3725              	.LFE148:
 3727              		.section	.text.hals_rtc_alarm_disable,"ax",%progbits
 3728              		.align	1
 3729              		.global	hals_rtc_alarm_disable
 3730              		.syntax unified
 3731              		.thumb
 3732              		.thumb_func
 3733              		.fpu softvfp
 3735              	hals_rtc_alarm_disable:
 3736              	.LFB149:
1690:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1691:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1692:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      disable RTC alarm
1693:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1694:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1695:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     ErrStatus: ERROR or SUCCESS
1696:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1697:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ErrStatus hals_rtc_alarm_disable(void)
1698:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3737              		.loc 1 1698 1
 3738              		.cfi_startproc
 3739              		@ args = 0, pretend = 0, frame = 16
 3740              		@ frame_needed = 1, uses_anonymous_args = 0
 3741              		@ link register save eliminated.
 3742 0000 80B4     		push	{r7}
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 7, -4
 3745 0002 85B0     		sub	sp, sp, #20
 3746              		.cfi_def_cfa_offset 24
 3747 0004 00AF     		add	r7, sp, #0
 3748              		.cfi_def_cfa_register 7
1699:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     volatile uint32_t time_index = RTC_ALRM0WF_TIMEOUT;
 3749              		.loc 1 1699 23
 3750 0006 4FF40043 		mov	r3, #32768
 3751 000a 7B60     		str	r3, [r7, #4]
1700:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 3752              		.loc 1 1700 15
 3753 000c 0023     		movs	r3, #0
 3754 000e FB73     		strb	r3, [r7, #15]
1701:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 3755              		.loc 1 1701 14
 3756 0010 0023     		movs	r3, #0
 3757 0012 BB60     		str	r3, [r7, #8]
1702:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1703:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1704:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3758              		.loc 1 1704 5
 3759 0014 134B     		ldr	r3, .L185
 3760              		.loc 1 1704 13
 3761 0016 CA22     		movs	r2, #202
 3762 0018 1A60     		str	r2, [r3]
1705:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3763              		.loc 1 1705 5
 3764 001a 124B     		ldr	r3, .L185
 3765              		.loc 1 1705 13
 3766 001c 5322     		movs	r2, #83
 3767 001e 1A60     		str	r2, [r3]
1706:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1707:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* clear the state of alarm */
1708:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)(~RTC_CTL_ALRM0EN);
 3768              		.loc 1 1708 13
 3769 0020 114B     		ldr	r3, .L185+4
 3770 0022 1B68     		ldr	r3, [r3]
 3771 0024 104A     		ldr	r2, .L185+4
 3772 0026 23F48073 		bic	r3, r3, #256
 3773 002a 1360     		str	r3, [r2]
 3774              	.L182:
1709:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1710:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* wait until ALRM0WF flag to be set after the alarm is disabled */
1711:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     do {
1712:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_ALRM0WF;
 3775              		.loc 1 1712 23 discriminator 2
 3776 002c 0F4B     		ldr	r3, .L185+8
 3777 002e 1B68     		ldr	r3, [r3]
 3778              		.loc 1 1712 21 discriminator 2
 3779 0030 03F00103 		and	r3, r3, #1
 3780 0034 BB60     		str	r3, [r7, #8]
1713:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } while((--time_index > 0x00U) && (RESET == flag_status));
 3781              		.loc 1 1713 14 discriminator 2
 3782 0036 7B68     		ldr	r3, [r7, #4]
 3783 0038 013B     		subs	r3, r3, #1
 3784              		.loc 1 1713 5 discriminator 2
 3785 003a 7B60     		str	r3, [r7, #4]
 3786 003c 002B     		cmp	r3, #0
 3787 003e 02D0     		beq	.L181
 3788              		.loc 1 1713 36 discriminator 1
 3789 0040 BB68     		ldr	r3, [r7, #8]
 3790 0042 002B     		cmp	r3, #0
 3791 0044 F2D0     		beq	.L182
 3792              	.L181:
1714:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1715:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RESET != flag_status) {
 3793              		.loc 1 1715 7
 3794 0046 BB68     		ldr	r3, [r7, #8]
 3795 0048 002B     		cmp	r3, #0
 3796 004a 01D0     		beq	.L183
1716:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = SUCCESS;
 3797              		.loc 1 1716 22
 3798 004c 0123     		movs	r3, #1
 3799 004e FB73     		strb	r3, [r7, #15]
 3800              	.L183:
1717:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1718:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1719:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1720:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3801              		.loc 1 1720 5
 3802 0050 044B     		ldr	r3, .L185
 3803              		.loc 1 1720 13
 3804 0052 FF22     		movs	r2, #255
 3805 0054 1A60     		str	r2, [r3]
1721:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1722:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return error_status;
 3806              		.loc 1 1722 12
 3807 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1723:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3808              		.loc 1 1723 1
 3809 0058 1846     		mov	r0, r3
 3810 005a 1437     		adds	r7, r7, #20
 3811              		.cfi_def_cfa_offset 4
 3812 005c BD46     		mov	sp, r7
 3813              		.cfi_def_cfa_register 13
 3814              		@ sp needed
 3815 005e 80BC     		pop	{r7}
 3816              		.cfi_restore 7
 3817              		.cfi_def_cfa_offset 0
 3818 0060 7047     		bx	lr
 3819              	.L186:
 3820 0062 00BF     		.align	2
 3821              	.L185:
 3822 0064 24280040 		.word	1073752100
 3823 0068 08280040 		.word	1073752072
 3824 006c 0C280040 		.word	1073752076
 3825              		.cfi_endproc
 3826              	.LFE149:
 3828              		.section	.text.hals_rtc_timestamp_enable,"ax",%progbits
 3829              		.align	1
 3830              		.global	hals_rtc_timestamp_enable
 3831              		.syntax unified
 3832              		.thumb
 3833              		.thumb_func
 3834              		.fpu softvfp
 3836              	hals_rtc_timestamp_enable:
 3837              	.LFB150:
1724:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1725:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1726:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enable RTC time-stamp
1727:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  edge: specify which edge to detect of time-stamp
1728:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1729:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_TIMESTAMP_RISING_EDGE: rising edge is valid event edge for timestamp event
1730:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_TIMESTAMP_FALLING_EDGE: falling edge is valid event edge for timestamp event
1731:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1732:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1733:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1734:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_timestamp_enable(uint32_t edge)
1735:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3838              		.loc 1 1735 1
 3839              		.cfi_startproc
 3840              		@ args = 0, pretend = 0, frame = 16
 3841              		@ frame_needed = 1, uses_anonymous_args = 0
 3842              		@ link register save eliminated.
 3843 0000 80B4     		push	{r7}
 3844              		.cfi_def_cfa_offset 4
 3845              		.cfi_offset 7, -4
 3846 0002 85B0     		sub	sp, sp, #20
 3847              		.cfi_def_cfa_offset 24
 3848 0004 00AF     		add	r7, sp, #0
 3849              		.cfi_def_cfa_register 7
 3850 0006 7860     		str	r0, [r7, #4]
1736:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg_ctl = 0x00U;
 3851              		.loc 1 1736 14
 3852 0008 0023     		movs	r3, #0
 3853 000a FB60     		str	r3, [r7, #12]
1737:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1738:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* clear the bits to be configured in RTC_CTL */
1739:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_ctl = (uint32_t)(RTC_CTL & (uint32_t)(~(RTC_CTL_TSEG | RTC_CTL_TSEN)));
 3854              		.loc 1 1739 26
 3855 000c 0E4B     		ldr	r3, .L188
 3856 000e 1B68     		ldr	r3, [r3]
 3857              		.loc 1 1739 13
 3858 0010 23F40063 		bic	r3, r3, #2048
 3859 0014 23F00803 		bic	r3, r3, #8
 3860 0018 FB60     		str	r3, [r7, #12]
1740:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1741:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* new configuration */
1742:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg_ctl |= (uint32_t)(edge | RTC_CTL_TSEN);
 3861              		.loc 1 1742 13
 3862 001a 7A68     		ldr	r2, [r7, #4]
 3863 001c FB68     		ldr	r3, [r7, #12]
 3864 001e 1343     		orrs	r3, r3, r2
 3865 0020 43F40063 		orr	r3, r3, #2048
 3866 0024 FB60     		str	r3, [r7, #12]
1743:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1744:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1745:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3867              		.loc 1 1745 5
 3868 0026 094B     		ldr	r3, .L188+4
 3869              		.loc 1 1745 13
 3870 0028 CA22     		movs	r2, #202
 3871 002a 1A60     		str	r2, [r3]
1746:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3872              		.loc 1 1746 5
 3873 002c 074B     		ldr	r3, .L188+4
 3874              		.loc 1 1746 13
 3875 002e 5322     		movs	r2, #83
 3876 0030 1A60     		str	r2, [r3]
1747:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1748:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL = (uint32_t)reg_ctl;
 3877              		.loc 1 1748 5
 3878 0032 054A     		ldr	r2, .L188
 3879              		.loc 1 1748 13
 3880 0034 FB68     		ldr	r3, [r7, #12]
 3881 0036 1360     		str	r3, [r2]
1749:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1750:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1751:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3882              		.loc 1 1751 5
 3883 0038 044B     		ldr	r3, .L188+4
 3884              		.loc 1 1751 13
 3885 003a FF22     		movs	r2, #255
 3886 003c 1A60     		str	r2, [r3]
1752:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3887              		.loc 1 1752 1
 3888 003e 00BF     		nop
 3889 0040 1437     		adds	r7, r7, #20
 3890              		.cfi_def_cfa_offset 4
 3891 0042 BD46     		mov	sp, r7
 3892              		.cfi_def_cfa_register 13
 3893              		@ sp needed
 3894 0044 80BC     		pop	{r7}
 3895              		.cfi_restore 7
 3896              		.cfi_def_cfa_offset 0
 3897 0046 7047     		bx	lr
 3898              	.L189:
 3899              		.align	2
 3900              	.L188:
 3901 0048 08280040 		.word	1073752072
 3902 004c 24280040 		.word	1073752100
 3903              		.cfi_endproc
 3904              	.LFE150:
 3906              		.section	.text.hals_rtc_timestamp_disable,"ax",%progbits
 3907              		.align	1
 3908              		.global	hals_rtc_timestamp_disable
 3909              		.syntax unified
 3910              		.thumb
 3911              		.thumb_func
 3912              		.fpu softvfp
 3914              	hals_rtc_timestamp_disable:
 3915              	.LFB151:
1753:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1754:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1755:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      disable RTC time-stamp
1756:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1757:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1758:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1759:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1760:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_timestamp_disable(void)
1761:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3916              		.loc 1 1761 1
 3917              		.cfi_startproc
 3918              		@ args = 0, pretend = 0, frame = 0
 3919              		@ frame_needed = 1, uses_anonymous_args = 0
 3920              		@ link register save eliminated.
 3921 0000 80B4     		push	{r7}
 3922              		.cfi_def_cfa_offset 4
 3923              		.cfi_offset 7, -4
 3924 0002 00AF     		add	r7, sp, #0
 3925              		.cfi_def_cfa_register 7
1762:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1763:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 3926              		.loc 1 1763 5
 3927 0004 094B     		ldr	r3, .L191
 3928              		.loc 1 1763 13
 3929 0006 CA22     		movs	r2, #202
 3930 0008 1A60     		str	r2, [r3]
1764:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 3931              		.loc 1 1764 5
 3932 000a 084B     		ldr	r3, .L191
 3933              		.loc 1 1764 13
 3934 000c 5322     		movs	r2, #83
 3935 000e 1A60     		str	r2, [r3]
1765:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1766:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* clear the TSEN bit */
1767:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)(~ RTC_CTL_TSEN);
 3936              		.loc 1 1767 13
 3937 0010 074B     		ldr	r3, .L191+4
 3938 0012 1B68     		ldr	r3, [r3]
 3939 0014 064A     		ldr	r2, .L191+4
 3940 0016 23F40063 		bic	r3, r3, #2048
 3941 001a 1360     		str	r3, [r2]
1768:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1769:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1770:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 3942              		.loc 1 1770 5
 3943 001c 034B     		ldr	r3, .L191
 3944              		.loc 1 1770 13
 3945 001e FF22     		movs	r2, #255
 3946 0020 1A60     		str	r2, [r3]
1771:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3947              		.loc 1 1771 1
 3948 0022 00BF     		nop
 3949 0024 BD46     		mov	sp, r7
 3950              		.cfi_def_cfa_register 13
 3951              		@ sp needed
 3952 0026 80BC     		pop	{r7}
 3953              		.cfi_restore 7
 3954              		.cfi_def_cfa_offset 0
 3955 0028 7047     		bx	lr
 3956              	.L192:
 3957 002a 00BF     		.align	2
 3958              	.L191:
 3959 002c 24280040 		.word	1073752100
 3960 0030 08280040 		.word	1073752072
 3961              		.cfi_endproc
 3962              	.LFE151:
 3964              		.section	.text.hals_rtc_timestamp_subsecond_get,"ax",%progbits
 3965              		.align	1
 3966              		.global	hals_rtc_timestamp_subsecond_get
 3967              		.syntax unified
 3968              		.thumb
 3969              		.thumb_func
 3970              		.fpu softvfp
 3972              	hals_rtc_timestamp_subsecond_get:
 3973              	.LFB152:
1772:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1773:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1774:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      get RTC time-stamp subsecond
1775:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
1776:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1777:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     RTC time-stamp subsecond value
1778:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1779:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** uint32_t hals_rtc_timestamp_subsecond_get(void)
1780:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 3974              		.loc 1 1780 1
 3975              		.cfi_startproc
 3976              		@ args = 0, pretend = 0, frame = 0
 3977              		@ frame_needed = 1, uses_anonymous_args = 0
 3978              		@ link register save eliminated.
 3979 0000 80B4     		push	{r7}
 3980              		.cfi_def_cfa_offset 4
 3981              		.cfi_offset 7, -4
 3982 0002 00AF     		add	r7, sp, #0
 3983              		.cfi_def_cfa_register 7
1781:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return ((uint32_t)RTC_SSTS);
 3984              		.loc 1 1781 13
 3985 0004 024B     		ldr	r3, .L195
 3986 0006 1B68     		ldr	r3, [r3]
1782:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 3987              		.loc 1 1782 1
 3988 0008 1846     		mov	r0, r3
 3989 000a BD46     		mov	sp, r7
 3990              		.cfi_def_cfa_register 13
 3991              		@ sp needed
 3992 000c 80BC     		pop	{r7}
 3993              		.cfi_restore 7
 3994              		.cfi_def_cfa_offset 0
 3995 000e 7047     		bx	lr
 3996              	.L196:
 3997              		.align	2
 3998              	.L195:
 3999 0010 38280040 		.word	1073752120
 4000              		.cfi_endproc
 4001              	.LFE152:
 4003              		.section	.text.hals_rtc_tamper_enable,"ax",%progbits
 4004              		.align	1
 4005              		.global	hals_rtc_tamper_enable
 4006              		.syntax unified
 4007              		.thumb
 4008              		.thumb_func
 4009              		.fpu softvfp
 4011              	hals_rtc_tamper_enable:
 4012              	.LFB153:
1783:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1784:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1785:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enable RTC tamper
1786:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  source: specify which tamper source to be disabled
1787:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1788:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_TAMPER0
1789:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_TAMPER1
1790:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1791:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1792:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1793:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_tamper_enable(uint32_t source)
1794:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4013              		.loc 1 1794 1
 4014              		.cfi_startproc
 4015              		@ args = 0, pretend = 0, frame = 8
 4016              		@ frame_needed = 1, uses_anonymous_args = 0
 4017              		@ link register save eliminated.
 4018 0000 80B4     		push	{r7}
 4019              		.cfi_def_cfa_offset 4
 4020              		.cfi_offset 7, -4
 4021 0002 83B0     		sub	sp, sp, #12
 4022              		.cfi_def_cfa_offset 16
 4023 0004 00AF     		add	r7, sp, #0
 4024              		.cfi_def_cfa_register 7
 4025 0006 7860     		str	r0, [r7, #4]
1795:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable tamper */
1796:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP |= (uint32_t)source;
 4026              		.loc 1 1796 14
 4027 0008 054B     		ldr	r3, .L198
 4028 000a 1A68     		ldr	r2, [r3]
 4029 000c 0449     		ldr	r1, .L198
 4030 000e 7B68     		ldr	r3, [r7, #4]
 4031 0010 1343     		orrs	r3, r3, r2
 4032 0012 0B60     		str	r3, [r1]
1797:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4033              		.loc 1 1797 1
 4034 0014 00BF     		nop
 4035 0016 0C37     		adds	r7, r7, #12
 4036              		.cfi_def_cfa_offset 4
 4037 0018 BD46     		mov	sp, r7
 4038              		.cfi_def_cfa_register 13
 4039              		@ sp needed
 4040 001a 80BC     		pop	{r7}
 4041              		.cfi_restore 7
 4042              		.cfi_def_cfa_offset 0
 4043 001c 7047     		bx	lr
 4044              	.L199:
 4045 001e 00BF     		.align	2
 4046              	.L198:
 4047 0020 40280040 		.word	1073752128
 4048              		.cfi_endproc
 4049              	.LFE153:
 4051              		.section	.text.hals_rtc_tamper_disable,"ax",%progbits
 4052              		.align	1
 4053              		.global	hals_rtc_tamper_disable
 4054              		.syntax unified
 4055              		.thumb
 4056              		.thumb_func
 4057              		.fpu softvfp
 4059              	hals_rtc_tamper_disable:
 4060              	.LFB154:
1798:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1799:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1800:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      disable RTC tamper
1801:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  source: specify which tamper source to be disabled
1802:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1803:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_TAMPER0
1804:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_TAMPER1
1805:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1806:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1807:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1808:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_tamper_disable(uint32_t source)
1809:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4061              		.loc 1 1809 1
 4062              		.cfi_startproc
 4063              		@ args = 0, pretend = 0, frame = 8
 4064              		@ frame_needed = 1, uses_anonymous_args = 0
 4065              		@ link register save eliminated.
 4066 0000 80B4     		push	{r7}
 4067              		.cfi_def_cfa_offset 4
 4068              		.cfi_offset 7, -4
 4069 0002 83B0     		sub	sp, sp, #12
 4070              		.cfi_def_cfa_offset 16
 4071 0004 00AF     		add	r7, sp, #0
 4072              		.cfi_def_cfa_register 7
 4073 0006 7860     		str	r0, [r7, #4]
1810:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable tamper */
1811:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP &= (uint32_t)~source;
 4074              		.loc 1 1811 14
 4075 0008 054B     		ldr	r3, .L201
 4076 000a 1A68     		ldr	r2, [r3]
 4077              		.loc 1 1811 27
 4078 000c 7B68     		ldr	r3, [r7, #4]
 4079 000e DB43     		mvns	r3, r3
 4080              		.loc 1 1811 14
 4081 0010 0349     		ldr	r1, .L201
 4082 0012 1340     		ands	r3, r3, r2
 4083 0014 0B60     		str	r3, [r1]
1812:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4084              		.loc 1 1812 1
 4085 0016 00BF     		nop
 4086 0018 0C37     		adds	r7, r7, #12
 4087              		.cfi_def_cfa_offset 4
 4088 001a BD46     		mov	sp, r7
 4089              		.cfi_def_cfa_register 13
 4090              		@ sp needed
 4091 001c 80BC     		pop	{r7}
 4092              		.cfi_restore 7
 4093              		.cfi_def_cfa_offset 0
 4094 001e 7047     		bx	lr
 4095              	.L202:
 4096              		.align	2
 4097              	.L201:
 4098 0020 40280040 		.word	1073752128
 4099              		.cfi_endproc
 4100              	.LFE154:
 4102              		.section	.text.hals_rtc_interrupt_enable,"ax",%progbits
 4103              		.align	1
 4104              		.global	hals_rtc_interrupt_enable
 4105              		.syntax unified
 4106              		.thumb
 4107              		.thumb_func
 4108              		.fpu softvfp
 4110              	hals_rtc_interrupt_enable:
 4111              	.LFB155:
1813:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1814:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1815:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enable specified RTC interrupt
1816:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  interrupt: specify which interrupt source to be enabled
1817:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1818:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_INT_TIMESTAMP: timestamp interrupt
1819:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_INT_ALARM: alarm interrupt
1820:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_INT_TAMP: tamp interrupt
1821:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1822:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1823:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1824:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_interrupt_enable(uint32_t interrupt)
1825:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4112              		.loc 1 1825 1
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 8
 4115              		@ frame_needed = 1, uses_anonymous_args = 0
 4116              		@ link register save eliminated.
 4117 0000 80B4     		push	{r7}
 4118              		.cfi_def_cfa_offset 4
 4119              		.cfi_offset 7, -4
 4120 0002 83B0     		sub	sp, sp, #12
 4121              		.cfi_def_cfa_offset 16
 4122 0004 00AF     		add	r7, sp, #0
 4123              		.cfi_def_cfa_register 7
 4124 0006 7860     		str	r0, [r7, #4]
1826:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1827:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4125              		.loc 1 1827 5
 4126 0008 0E4B     		ldr	r3, .L204
 4127              		.loc 1 1827 13
 4128 000a CA22     		movs	r2, #202
 4129 000c 1A60     		str	r2, [r3]
1828:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4130              		.loc 1 1828 5
 4131 000e 0D4B     		ldr	r3, .L204
 4132              		.loc 1 1828 13
 4133 0010 5322     		movs	r2, #83
 4134 0012 1A60     		str	r2, [r3]
1829:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1830:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the interrupts in RTC_CTL register */
1831:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= (uint32_t)(interrupt & (uint32_t)~RTC_TAMP_TPIE);
 4135              		.loc 1 1831 13
 4136 0014 0C4B     		ldr	r3, .L204+4
 4137 0016 1A68     		ldr	r2, [r3]
 4138              		.loc 1 1831 16
 4139 0018 7B68     		ldr	r3, [r7, #4]
 4140 001a 23F00403 		bic	r3, r3, #4
 4141              		.loc 1 1831 13
 4142 001e 0A49     		ldr	r1, .L204+4
 4143 0020 1343     		orrs	r3, r3, r2
 4144 0022 0B60     		str	r3, [r1]
1832:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the interrupts in RTC_TAMP register */
1833:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP |= (uint32_t)(interrupt & RTC_TAMP_TPIE);
 4145              		.loc 1 1833 14
 4146 0024 094B     		ldr	r3, .L204+8
 4147 0026 1A68     		ldr	r2, [r3]
 4148              		.loc 1 1833 17
 4149 0028 7B68     		ldr	r3, [r7, #4]
 4150 002a 03F00403 		and	r3, r3, #4
 4151              		.loc 1 1833 14
 4152 002e 0749     		ldr	r1, .L204+8
 4153 0030 1343     		orrs	r3, r3, r2
 4154 0032 0B60     		str	r3, [r1]
1834:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1835:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1836:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4155              		.loc 1 1836 5
 4156 0034 034B     		ldr	r3, .L204
 4157              		.loc 1 1836 13
 4158 0036 FF22     		movs	r2, #255
 4159 0038 1A60     		str	r2, [r3]
1837:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4160              		.loc 1 1837 1
 4161 003a 00BF     		nop
 4162 003c 0C37     		adds	r7, r7, #12
 4163              		.cfi_def_cfa_offset 4
 4164 003e BD46     		mov	sp, r7
 4165              		.cfi_def_cfa_register 13
 4166              		@ sp needed
 4167 0040 80BC     		pop	{r7}
 4168              		.cfi_restore 7
 4169              		.cfi_def_cfa_offset 0
 4170 0042 7047     		bx	lr
 4171              	.L205:
 4172              		.align	2
 4173              	.L204:
 4174 0044 24280040 		.word	1073752100
 4175 0048 08280040 		.word	1073752072
 4176 004c 40280040 		.word	1073752128
 4177              		.cfi_endproc
 4178              	.LFE155:
 4180              		.section	.text.hals_rtc_interrupt_disable,"ax",%progbits
 4181              		.align	1
 4182              		.global	hals_rtc_interrupt_disable
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4186              		.fpu softvfp
 4188              	hals_rtc_interrupt_disable:
 4189              	.LFB156:
1838:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1839:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1840:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      disble specified RTC interrupt
1841:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  interrupt: specify which interrupt source to be disabled
1842:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1843:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_INT_TIMESTAMP: timestamp interrupt
1844:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_INT_ALARM: alarm interrupt
1845:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_INT_TAMP: tamp interrupt
1846:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1847:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1848:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1849:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_interrupt_disable(uint32_t interrupt)
1850:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4190              		.loc 1 1850 1
 4191              		.cfi_startproc
 4192              		@ args = 0, pretend = 0, frame = 8
 4193              		@ frame_needed = 1, uses_anonymous_args = 0
 4194              		@ link register save eliminated.
 4195 0000 80B4     		push	{r7}
 4196              		.cfi_def_cfa_offset 4
 4197              		.cfi_offset 7, -4
 4198 0002 83B0     		sub	sp, sp, #12
 4199              		.cfi_def_cfa_offset 16
 4200 0004 00AF     		add	r7, sp, #0
 4201              		.cfi_def_cfa_register 7
 4202 0006 7860     		str	r0, [r7, #4]
1851:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1852:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4203              		.loc 1 1852 5
 4204 0008 0F4B     		ldr	r3, .L207
 4205              		.loc 1 1852 13
 4206 000a CA22     		movs	r2, #202
 4207 000c 1A60     		str	r2, [r3]
1853:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4208              		.loc 1 1853 5
 4209 000e 0E4B     		ldr	r3, .L207
 4210              		.loc 1 1853 13
 4211 0010 5322     		movs	r2, #83
 4212 0012 1A60     		str	r2, [r3]
1854:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1855:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the interrupts in RTC_CTL register */
1856:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)~(interrupt & (uint32_t)~RTC_TAMP_TPIE);
 4213              		.loc 1 1856 13
 4214 0014 0D4B     		ldr	r3, .L207+4
 4215 0016 1A68     		ldr	r2, [r3]
 4216              		.loc 1 1856 38
 4217 0018 7B68     		ldr	r3, [r7, #4]
 4218 001a 23F00403 		bic	r3, r3, #4
 4219              		.loc 1 1856 16
 4220 001e DB43     		mvns	r3, r3
 4221              		.loc 1 1856 13
 4222 0020 0A49     		ldr	r1, .L207+4
 4223 0022 1340     		ands	r3, r3, r2
 4224 0024 0B60     		str	r3, [r1]
1857:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the interrupts in RTC_TAMP register */
1858:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_TAMP &= (uint32_t)~(interrupt & RTC_TAMP_TPIE);
 4225              		.loc 1 1858 14
 4226 0026 0A4B     		ldr	r3, .L207+8
 4227 0028 1A68     		ldr	r2, [r3]
 4228              		.loc 1 1858 39
 4229 002a 7B68     		ldr	r3, [r7, #4]
 4230 002c 03F00403 		and	r3, r3, #4
 4231              		.loc 1 1858 17
 4232 0030 DB43     		mvns	r3, r3
 4233              		.loc 1 1858 14
 4234 0032 0749     		ldr	r1, .L207+8
 4235 0034 1340     		ands	r3, r3, r2
 4236 0036 0B60     		str	r3, [r1]
1859:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1860:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1861:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4237              		.loc 1 1861 5
 4238 0038 034B     		ldr	r3, .L207
 4239              		.loc 1 1861 13
 4240 003a FF22     		movs	r2, #255
 4241 003c 1A60     		str	r2, [r3]
1862:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4242              		.loc 1 1862 1
 4243 003e 00BF     		nop
 4244 0040 0C37     		adds	r7, r7, #12
 4245              		.cfi_def_cfa_offset 4
 4246 0042 BD46     		mov	sp, r7
 4247              		.cfi_def_cfa_register 13
 4248              		@ sp needed
 4249 0044 80BC     		pop	{r7}
 4250              		.cfi_restore 7
 4251              		.cfi_def_cfa_offset 0
 4252 0046 7047     		bx	lr
 4253              	.L208:
 4254              		.align	2
 4255              	.L207:
 4256 0048 24280040 		.word	1073752100
 4257 004c 08280040 		.word	1073752072
 4258 0050 40280040 		.word	1073752128
 4259              		.cfi_endproc
 4260              	.LFE156:
 4262              		.section	.text.hals_rtc_flag_get,"ax",%progbits
 4263              		.align	1
 4264              		.global	hals_rtc_flag_get
 4265              		.syntax unified
 4266              		.thumb
 4267              		.thumb_func
 4268              		.fpu softvfp
 4270              	hals_rtc_flag_get:
 4271              	.LFB157:
1863:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1864:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1865:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      check specified flag
1866:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  flag: specify which flag to check
1867:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1868:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_RECALIBRATION: recalibration pending flag
1869:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TAMP1: tamper 1 event flag
1870:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TAMP0: tamper 0 event flag
1871:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TIMESTAMP_OVERFLOW: time-stamp overflow event flag
1872:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TIMESTAMP: time-stamp event flag
1873:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_ALARM0: alarm event flag
1874:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_INIT: init mode event flag
1875:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_RSYN: time and date registers synchronized event flag
1876:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_YCM: year parameter configured event flag
1877:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_SHIFT: shift operation pending flag
1878:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_ALARM0_WRITTEN: alarm writen available flag
1879:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1880:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     FlagStatus: SET or RESET
1881:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1882:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** FlagStatus hals_rtc_flag_get(uint32_t flag)
1883:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4272              		.loc 1 1883 1
 4273              		.cfi_startproc
 4274              		@ args = 0, pretend = 0, frame = 16
 4275              		@ frame_needed = 1, uses_anonymous_args = 0
 4276              		@ link register save eliminated.
 4277 0000 80B4     		push	{r7}
 4278              		.cfi_def_cfa_offset 4
 4279              		.cfi_offset 7, -4
 4280 0002 85B0     		sub	sp, sp, #20
 4281              		.cfi_def_cfa_offset 24
 4282 0004 00AF     		add	r7, sp, #0
 4283              		.cfi_def_cfa_register 7
 4284 0006 7860     		str	r0, [r7, #4]
1884:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     FlagStatus flag_state = RESET;
 4285              		.loc 1 1884 16
 4286 0008 0023     		movs	r3, #0
 4287 000a FB73     		strb	r3, [r7, #15]
1885:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1886:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RESET != (RTC_STAT & flag)) {
 4288              		.loc 1 1886 18
 4289 000c 064B     		ldr	r3, .L212
 4290 000e 1A68     		ldr	r2, [r3]
 4291              		.loc 1 1886 27
 4292 0010 7B68     		ldr	r3, [r7, #4]
 4293 0012 1340     		ands	r3, r3, r2
 4294              		.loc 1 1886 7
 4295 0014 002B     		cmp	r3, #0
 4296 0016 01D0     		beq	.L210
1887:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_state = SET;
 4297              		.loc 1 1887 20
 4298 0018 0123     		movs	r3, #1
 4299 001a FB73     		strb	r3, [r7, #15]
 4300              	.L210:
1888:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1889:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return flag_state;
 4301              		.loc 1 1889 12
 4302 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1890:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4303              		.loc 1 1890 1
 4304 001e 1846     		mov	r0, r3
 4305 0020 1437     		adds	r7, r7, #20
 4306              		.cfi_def_cfa_offset 4
 4307 0022 BD46     		mov	sp, r7
 4308              		.cfi_def_cfa_register 13
 4309              		@ sp needed
 4310 0024 80BC     		pop	{r7}
 4311              		.cfi_restore 7
 4312              		.cfi_def_cfa_offset 0
 4313 0026 7047     		bx	lr
 4314              	.L213:
 4315              		.align	2
 4316              	.L212:
 4317 0028 0C280040 		.word	1073752076
 4318              		.cfi_endproc
 4319              	.LFE157:
 4321              		.section	.text.hals_rtc_flag_clear,"ax",%progbits
 4322              		.align	1
 4323              		.global	hals_rtc_flag_clear
 4324              		.syntax unified
 4325              		.thumb
 4326              		.thumb_func
 4327              		.fpu softvfp
 4329              	hals_rtc_flag_clear:
 4330              	.LFB158:
1891:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1892:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1893:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      clear specified flag
1894:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  flag: specify which flag to clear
1895:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TAMP1: tamper 1 event flag
1896:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TAMP0: tamper 0 event flag
1897:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TIMESTAMP_OVERFLOW: time-stamp overflow event flag
1898:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_TIMESTAMP: time-stamp event flag
1899:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_ALARM0: alarm event flag
1900:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_FLAG_RSYN: time and date registers synchronized event flag
1901:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1902:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1903:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1904:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_flag_clear(uint32_t flag)
1905:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4331              		.loc 1 1905 1
 4332              		.cfi_startproc
 4333              		@ args = 0, pretend = 0, frame = 8
 4334              		@ frame_needed = 1, uses_anonymous_args = 0
 4335              		@ link register save eliminated.
 4336 0000 80B4     		push	{r7}
 4337              		.cfi_def_cfa_offset 4
 4338              		.cfi_offset 7, -4
 4339 0002 83B0     		sub	sp, sp, #12
 4340              		.cfi_def_cfa_offset 16
 4341 0004 00AF     		add	r7, sp, #0
 4342              		.cfi_def_cfa_register 7
 4343 0006 7860     		str	r0, [r7, #4]
1906:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_STAT &= (uint32_t)(~flag);
 4344              		.loc 1 1906 14
 4345 0008 054B     		ldr	r3, .L215
 4346 000a 1A68     		ldr	r2, [r3]
 4347              		.loc 1 1906 28
 4348 000c 7B68     		ldr	r3, [r7, #4]
 4349 000e DB43     		mvns	r3, r3
 4350              		.loc 1 1906 14
 4351 0010 0349     		ldr	r1, .L215
 4352 0012 1340     		ands	r3, r3, r2
 4353 0014 0B60     		str	r3, [r1]
1907:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4354              		.loc 1 1907 1
 4355 0016 00BF     		nop
 4356 0018 0C37     		adds	r7, r7, #12
 4357              		.cfi_def_cfa_offset 4
 4358 001a BD46     		mov	sp, r7
 4359              		.cfi_def_cfa_register 13
 4360              		@ sp needed
 4361 001c 80BC     		pop	{r7}
 4362              		.cfi_restore 7
 4363              		.cfi_def_cfa_offset 0
 4364 001e 7047     		bx	lr
 4365              	.L216:
 4366              		.align	2
 4367              	.L215:
 4368 0020 0C280040 		.word	1073752076
 4369              		.cfi_endproc
 4370              	.LFE158:
 4372              		.section	.text.hals_rtc_alter_output_config,"ax",%progbits
 4373              		.align	1
 4374              		.global	hals_rtc_alter_output_config
 4375              		.syntax unified
 4376              		.thumb
 4377              		.thumb_func
 4378              		.fpu softvfp
 4380              	hals_rtc_alter_output_config:
 4381              	.LFB159:
1908:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1909:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1910:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure rtc alternate output source
1911:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  source: specify signal to output
1912:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1913:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_512HZ: when the LSE freqency is 32768Hz and the RTC_PSC
1914:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                                          is the default value, output 512Hz signal
1915:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_1HZ: when the LSE freqency is 32768Hz and the RTC_PSC
1916:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                                        is the default value, output 1Hz signal
1917:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_ALARM_HIGH: when the  alarm flag is set, the output pin is high
1918:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_ALARM_LOW: when the  Alarm flag is set, the output pin is low
1919:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  mode: specify the output pin (PC13) mode when output alarm signal
1920:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1921:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_ALARM_OUTPUT_OD: open drain mode
1922:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_ALARM_OUTPUT_PP: push pull mode
1923:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1924:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
1925:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1926:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_alter_output_config(uint32_t source, uint32_t mode)
1927:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4382              		.loc 1 1927 1
 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 8
 4385              		@ frame_needed = 1, uses_anonymous_args = 0
 4386              		@ link register save eliminated.
 4387 0000 80B4     		push	{r7}
 4388              		.cfi_def_cfa_offset 4
 4389              		.cfi_offset 7, -4
 4390 0002 83B0     		sub	sp, sp, #12
 4391              		.cfi_def_cfa_offset 16
 4392 0004 00AF     		add	r7, sp, #0
 4393              		.cfi_def_cfa_register 7
 4394 0006 7860     		str	r0, [r7, #4]
 4395 0008 3960     		str	r1, [r7]
1928:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1929:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4396              		.loc 1 1929 5
 4397 000a 154B     		ldr	r3, .L219
 4398              		.loc 1 1929 13
 4399 000c CA22     		movs	r2, #202
 4400 000e 1A60     		str	r2, [r3]
1930:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4401              		.loc 1 1930 5
 4402 0010 134B     		ldr	r3, .L219
 4403              		.loc 1 1930 13
 4404 0012 5322     		movs	r2, #83
 4405 0014 1A60     		str	r2, [r3]
1931:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1932:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint32_t)~(RTC_CTL_COEN | RTC_CTL_OS | RTC_CTL_OPOL | RTC_CTL_COS);
 4406              		.loc 1 1932 13
 4407 0016 134B     		ldr	r3, .L219+4
 4408 0018 1B68     		ldr	r3, [r3]
 4409 001a 124A     		ldr	r2, .L219+4
 4410 001c 23F47803 		bic	r3, r3, #16252928
 4411 0020 1360     		str	r3, [r2]
1933:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1934:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= (uint32_t)(source);
 4412              		.loc 1 1934 13
 4413 0022 104B     		ldr	r3, .L219+4
 4414 0024 1A68     		ldr	r2, [r3]
 4415 0026 0F49     		ldr	r1, .L219+4
 4416 0028 7B68     		ldr	r3, [r7, #4]
 4417 002a 1343     		orrs	r3, r3, r2
 4418 002c 0B60     		str	r3, [r1]
1935:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1936:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* alarm output */
1937:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RESET != (source & RTC_OS_ENABLE)) {
 4419              		.loc 1 1937 25
 4420 002e 7B68     		ldr	r3, [r7, #4]
 4421 0030 03F40013 		and	r3, r3, #2097152
 4422              		.loc 1 1937 7
 4423 0034 002B     		cmp	r3, #0
 4424 0036 0BD0     		beq	.L218
1938:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TAMP &= (uint32_t)~(RTC_TAMP_PC13VAL);
 4425              		.loc 1 1938 18
 4426 0038 0B4B     		ldr	r3, .L219+8
 4427 003a 1B68     		ldr	r3, [r3]
 4428 003c 0A4A     		ldr	r2, .L219+8
 4429 003e 23F48023 		bic	r3, r3, #262144
 4430 0042 1360     		str	r3, [r2]
1939:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_TAMP |= (uint32_t)(mode);
 4431              		.loc 1 1939 18
 4432 0044 084B     		ldr	r3, .L219+8
 4433 0046 1A68     		ldr	r2, [r3]
 4434 0048 0749     		ldr	r1, .L219+8
 4435 004a 3B68     		ldr	r3, [r7]
 4436 004c 1343     		orrs	r3, r3, r2
 4437 004e 0B60     		str	r3, [r1]
 4438              	.L218:
1940:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1941:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1942:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1943:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4439              		.loc 1 1943 5
 4440 0050 034B     		ldr	r3, .L219
 4441              		.loc 1 1943 13
 4442 0052 FF22     		movs	r2, #255
 4443 0054 1A60     		str	r2, [r3]
1944:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4444              		.loc 1 1944 1
 4445 0056 00BF     		nop
 4446 0058 0C37     		adds	r7, r7, #12
 4447              		.cfi_def_cfa_offset 4
 4448 005a BD46     		mov	sp, r7
 4449              		.cfi_def_cfa_register 13
 4450              		@ sp needed
 4451 005c 80BC     		pop	{r7}
 4452              		.cfi_restore 7
 4453              		.cfi_def_cfa_offset 0
 4454 005e 7047     		bx	lr
 4455              	.L220:
 4456              		.align	2
 4457              	.L219:
 4458 0060 24280040 		.word	1073752100
 4459 0064 08280040 		.word	1073752072
 4460 0068 40280040 		.word	1073752128
 4461              		.cfi_endproc
 4462              	.LFE159:
 4464              		.section	.text.hals_rtc_calibration_config,"ax",%progbits
 4465              		.align	1
 4466              		.global	hals_rtc_calibration_config
 4467              		.syntax unified
 4468              		.thumb
 4469              		.thumb_func
 4470              		.fpu softvfp
 4472              	hals_rtc_calibration_config:
 4473              	.LFB160:
1945:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1946:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1947:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      configure RTC calibration register
1948:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  window: select calibration window
1949:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1950:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_WINDOW_32S: 2exp20 RTCCLK cycles, 32s if RTCCLK = 32768 Hz
1951:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_WINDOW_16S: 2exp19 RTCCLK cycles, 16s if RTCCLK = 32768 Hz
1952:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_WINDOW_8S: 2exp18 RTCCLK cycles, 8s if RTCCLK = 32768 Hz
1953:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  plus: add RTC clock or not
1954:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1955:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_PLUS_SET: add one RTC clock every 2048 rtc clock
1956:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_CALIBRATION_PLUS_RESET: no effect
1957:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  minus: the RTC clock to minus during the calibration window(0x0 - 0x1FF)
1958:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1959:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     ErrStatus: ERROR or SUCCESS
1960:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1961:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ErrStatus hals_rtc_calibration_config(uint32_t window, uint32_t plus, uint32_t minus)
1962:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4474              		.loc 1 1962 1
 4475              		.cfi_startproc
 4476              		@ args = 0, pretend = 0, frame = 32
 4477              		@ frame_needed = 1, uses_anonymous_args = 0
 4478              		@ link register save eliminated.
 4479 0000 80B4     		push	{r7}
 4480              		.cfi_def_cfa_offset 4
 4481              		.cfi_offset 7, -4
 4482 0002 89B0     		sub	sp, sp, #36
 4483              		.cfi_def_cfa_offset 40
 4484 0004 00AF     		add	r7, sp, #0
 4485              		.cfi_def_cfa_register 7
 4486 0006 F860     		str	r0, [r7, #12]
 4487 0008 B960     		str	r1, [r7, #8]
 4488 000a 7A60     		str	r2, [r7, #4]
1963:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t time_index = RTC_HRFC_TIMEOUT;
 4489              		.loc 1 1963 14
 4490 000c 4FF48053 		mov	r3, #4096
 4491 0010 FB61     		str	r3, [r7, #28]
1964:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 4492              		.loc 1 1964 15
 4493 0012 0023     		movs	r3, #0
 4494 0014 FB76     		strb	r3, [r7, #27]
1965:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 4495              		.loc 1 1965 14
 4496 0016 0023     		movs	r3, #0
 4497 0018 7B61     		str	r3, [r7, #20]
1966:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1967:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
1968:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4498              		.loc 1 1968 5
 4499 001a 154B     		ldr	r3, .L226
 4500              		.loc 1 1968 13
 4501 001c CA22     		movs	r2, #202
 4502 001e 1A60     		str	r2, [r3]
1969:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4503              		.loc 1 1969 5
 4504 0020 134B     		ldr	r3, .L226
 4505              		.loc 1 1969 13
 4506 0022 5322     		movs	r2, #83
 4507 0024 1A60     		str	r2, [r3]
 4508              	.L223:
1970:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1971:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check if a calibration operation is ongoing */
1972:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     do {
1973:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_SCPF;
 4509              		.loc 1 1973 23 discriminator 2
 4510 0026 134B     		ldr	r3, .L226+4
 4511 0028 1B68     		ldr	r3, [r3]
 4512              		.loc 1 1973 21 discriminator 2
 4513 002a 03F48033 		and	r3, r3, #65536
 4514 002e 7B61     		str	r3, [r7, #20]
1974:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } while((--time_index > 0x00U) && (RESET != flag_status));
 4515              		.loc 1 1974 5 discriminator 2
 4516 0030 FB69     		ldr	r3, [r7, #28]
 4517 0032 013B     		subs	r3, r3, #1
 4518 0034 FB61     		str	r3, [r7, #28]
 4519 0036 FB69     		ldr	r3, [r7, #28]
 4520 0038 002B     		cmp	r3, #0
 4521 003a 02D0     		beq	.L222
 4522              		.loc 1 1974 36 discriminator 1
 4523 003c 7B69     		ldr	r3, [r7, #20]
 4524 003e 002B     		cmp	r3, #0
 4525 0040 F1D1     		bne	.L223
 4526              	.L222:
1975:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1976:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(RESET == flag_status) {
 4527              		.loc 1 1976 7
 4528 0042 7B69     		ldr	r3, [r7, #20]
 4529 0044 002B     		cmp	r3, #0
 4530 0046 0AD1     		bne	.L224
1977:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_HRFC = (uint32_t)(window | plus | HRFC_CMSK(minus));
 4531              		.loc 1 1977 38
 4532 0048 FA68     		ldr	r2, [r7, #12]
 4533 004a BB68     		ldr	r3, [r7, #8]
 4534 004c 1A43     		orrs	r2, r2, r3
 4535              		.loc 1 1977 47
 4536 004e 7B68     		ldr	r3, [r7, #4]
 4537 0050 C3F30803 		ubfx	r3, r3, #0, #9
 4538              		.loc 1 1977 9
 4539 0054 0849     		ldr	r1, .L226+8
 4540              		.loc 1 1977 20
 4541 0056 1343     		orrs	r3, r3, r2
 4542              		.loc 1 1977 18
 4543 0058 0B60     		str	r3, [r1]
1978:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = SUCCESS;
 4544              		.loc 1 1978 22
 4545 005a 0123     		movs	r3, #1
 4546 005c FB76     		strb	r3, [r7, #27]
 4547              	.L224:
1979:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
1980:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1981:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
1982:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4548              		.loc 1 1982 5
 4549 005e 044B     		ldr	r3, .L226
 4550              		.loc 1 1982 13
 4551 0060 FF22     		movs	r2, #255
 4552 0062 1A60     		str	r2, [r3]
1983:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1984:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return error_status;
 4553              		.loc 1 1984 12
 4554 0064 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
1985:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4555              		.loc 1 1985 1
 4556 0066 1846     		mov	r0, r3
 4557 0068 2437     		adds	r7, r7, #36
 4558              		.cfi_def_cfa_offset 4
 4559 006a BD46     		mov	sp, r7
 4560              		.cfi_def_cfa_register 13
 4561              		@ sp needed
 4562 006c 80BC     		pop	{r7}
 4563              		.cfi_restore 7
 4564              		.cfi_def_cfa_offset 0
 4565 006e 7047     		bx	lr
 4566              	.L227:
 4567              		.align	2
 4568              	.L226:
 4569 0070 24280040 		.word	1073752100
 4570 0074 0C280040 		.word	1073752076
 4571 0078 3C280040 		.word	1073752124
 4572              		.cfi_endproc
 4573              	.LFE160:
 4575              		.section	.text.hals_rtc_second_adjust,"ax",%progbits
 4576              		.align	1
 4577              		.global	hals_rtc_second_adjust
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu softvfp
 4583              	hals_rtc_second_adjust:
 4584              	.LFB161:
1986:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
1987:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
1988:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      ajust RTC second or subsecond value of current time
1989:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  add: add 1s to current time or not
1990:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****                 only one parameter can be selected which is shown as below:
1991:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_SHIFT_ADD1S_RESET: no effect
1992:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        RTC_SHIFT_ADD1S_SET: add 1s to current time
1993:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  minus: number of subsecond to minus from current time(0x0 - 0x7FFF)
1994:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
1995:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     ErrStatus: ERROR or SUCCESS
1996:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
1997:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** ErrStatus hals_rtc_second_adjust(uint32_t add, uint32_t minus)
1998:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4585              		.loc 1 1998 1
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 24
 4588              		@ frame_needed = 1, uses_anonymous_args = 0
 4589 0000 80B5     		push	{r7, lr}
 4590              		.cfi_def_cfa_offset 8
 4591              		.cfi_offset 7, -8
 4592              		.cfi_offset 14, -4
 4593 0002 86B0     		sub	sp, sp, #24
 4594              		.cfi_def_cfa_offset 32
 4595 0004 00AF     		add	r7, sp, #0
 4596              		.cfi_def_cfa_register 7
 4597 0006 7860     		str	r0, [r7, #4]
 4598 0008 3960     		str	r1, [r7]
1999:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t time_index = RTC_SHIFTCTL_TIMEOUT;
 4599              		.loc 1 1999 14
 4600 000a 4FF48053 		mov	r3, #4096
 4601 000e 7B61     		str	r3, [r7, #20]
2000:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     ErrStatus error_status = ERROR;
 4602              		.loc 1 2000 15
 4603 0010 0023     		movs	r3, #0
 4604 0012 FB74     		strb	r3, [r7, #19]
2001:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t flag_status = RESET;
 4605              		.loc 1 2001 14
 4606 0014 0023     		movs	r3, #0
 4607 0016 FB60     		str	r3, [r7, #12]
2002:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t temp = 0U;
 4608              		.loc 1 2002 14
 4609 0018 0023     		movs	r3, #0
 4610 001a BB60     		str	r3, [r7, #8]
2003:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2004:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
2005:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4611              		.loc 1 2005 5
 4612 001c 184B     		ldr	r3, .L233
 4613              		.loc 1 2005 13
 4614 001e CA22     		movs	r2, #202
 4615 0020 1A60     		str	r2, [r3]
2006:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4616              		.loc 1 2006 5
 4617 0022 174B     		ldr	r3, .L233
 4618              		.loc 1 2006 13
 4619 0024 5322     		movs	r2, #83
 4620 0026 1A60     		str	r2, [r3]
 4621              	.L230:
2007:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2008:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check if a shift operation is ongoing */
2009:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     do {
2010:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         flag_status = RTC_STAT & RTC_STAT_SOPF;
 4622              		.loc 1 2010 23 discriminator 2
 4623 0028 164B     		ldr	r3, .L233+4
 4624 002a 1B68     		ldr	r3, [r3]
 4625              		.loc 1 2010 21 discriminator 2
 4626 002c 03F00803 		and	r3, r3, #8
 4627 0030 FB60     		str	r3, [r7, #12]
2011:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     } while((--time_index > 0x00U) && (RESET != flag_status));
 4628              		.loc 1 2011 5 discriminator 2
 4629 0032 7B69     		ldr	r3, [r7, #20]
 4630 0034 013B     		subs	r3, r3, #1
 4631 0036 7B61     		str	r3, [r7, #20]
 4632 0038 7B69     		ldr	r3, [r7, #20]
 4633 003a 002B     		cmp	r3, #0
 4634 003c 02D0     		beq	.L229
 4635              		.loc 1 2011 36 discriminator 1
 4636 003e FB68     		ldr	r3, [r7, #12]
 4637 0040 002B     		cmp	r3, #0
 4638 0042 F1D1     		bne	.L230
 4639              	.L229:
2012:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2013:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp = RTC_CTL & RTC_CTL_REFEN;
 4640              		.loc 1 2013 12
 4641 0044 104B     		ldr	r3, .L233+8
 4642 0046 1B68     		ldr	r3, [r3]
 4643              		.loc 1 2013 10
 4644 0048 03F01003 		and	r3, r3, #16
 4645 004c BB60     		str	r3, [r7, #8]
2014:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check if the function of reference clock detection is disabled */
2015:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if((RESET == flag_status) && (RESET == temp)) {
 4646              		.loc 1 2015 7
 4647 004e FB68     		ldr	r3, [r7, #12]
 4648 0050 002B     		cmp	r3, #0
 4649 0052 0DD1     		bne	.L231
 4650              		.loc 1 2015 31 discriminator 1
 4651 0054 BB68     		ldr	r3, [r7, #8]
 4652 0056 002B     		cmp	r3, #0
 4653 0058 0AD1     		bne	.L231
2016:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         RTC_SHIFTCTL = (uint32_t)(add | SHIFTCTL_SFS(minus));
 4654              		.loc 1 2016 41
 4655 005a 3B68     		ldr	r3, [r7]
 4656 005c C3F30E02 		ubfx	r2, r3, #0, #15
 4657              		.loc 1 2016 9
 4658 0060 0A49     		ldr	r1, .L233+12
 4659              		.loc 1 2016 24
 4660 0062 7B68     		ldr	r3, [r7, #4]
 4661 0064 1343     		orrs	r3, r3, r2
 4662              		.loc 1 2016 22
 4663 0066 0B60     		str	r3, [r1]
2017:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         error_status = hals_rtc_register_sync_wait();
 4664              		.loc 1 2017 24
 4665 0068 FFF7FEFF 		bl	hals_rtc_register_sync_wait
 4666 006c 0346     		mov	r3, r0
 4667 006e FB74     		strb	r3, [r7, #19]
 4668              	.L231:
2018:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
2019:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2020:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
2021:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4669              		.loc 1 2021 5
 4670 0070 034B     		ldr	r3, .L233
 4671              		.loc 1 2021 13
 4672 0072 FF22     		movs	r2, #255
 4673 0074 1A60     		str	r2, [r3]
2022:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2023:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return error_status;
 4674              		.loc 1 2023 12
 4675 0076 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2024:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4676              		.loc 1 2024 1
 4677 0078 1846     		mov	r0, r3
 4678 007a 1837     		adds	r7, r7, #24
 4679              		.cfi_def_cfa_offset 8
 4680 007c BD46     		mov	sp, r7
 4681              		.cfi_def_cfa_register 13
 4682              		@ sp needed
 4683 007e 80BD     		pop	{r7, pc}
 4684              	.L234:
 4685              		.align	2
 4686              	.L233:
 4687 0080 24280040 		.word	1073752100
 4688 0084 0C280040 		.word	1073752076
 4689 0088 08280040 		.word	1073752072
 4690 008c 2C280040 		.word	1073752108
 4691              		.cfi_endproc
 4692              	.LFE161:
 4694              		.section	.text.hals_rtc_bypass_shadow_enable,"ax",%progbits
 4695              		.align	1
 4696              		.global	hals_rtc_bypass_shadow_enable
 4697              		.syntax unified
 4698              		.thumb
 4699              		.thumb_func
 4700              		.fpu softvfp
 4702              	hals_rtc_bypass_shadow_enable:
 4703              	.LFB162:
2025:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2026:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
2027:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      enable RTC bypass shadow registers function
2028:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
2029:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
2030:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
2031:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
2032:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_bypass_shadow_enable(void)
2033:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4704              		.loc 1 2033 1
 4705              		.cfi_startproc
 4706              		@ args = 0, pretend = 0, frame = 0
 4707              		@ frame_needed = 1, uses_anonymous_args = 0
 4708              		@ link register save eliminated.
 4709 0000 80B4     		push	{r7}
 4710              		.cfi_def_cfa_offset 4
 4711              		.cfi_offset 7, -4
 4712 0002 00AF     		add	r7, sp, #0
 4713              		.cfi_def_cfa_register 7
2034:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
2035:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4714              		.loc 1 2035 5
 4715 0004 094B     		ldr	r3, .L236
 4716              		.loc 1 2035 13
 4717 0006 CA22     		movs	r2, #202
 4718 0008 1A60     		str	r2, [r3]
2036:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4719              		.loc 1 2036 5
 4720 000a 084B     		ldr	r3, .L236
 4721              		.loc 1 2036 13
 4722 000c 5322     		movs	r2, #83
 4723 000e 1A60     		str	r2, [r3]
2037:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2038:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL |= (uint8_t)RTC_CTL_BPSHAD;
 4724              		.loc 1 2038 13
 4725 0010 074B     		ldr	r3, .L236+4
 4726 0012 1B68     		ldr	r3, [r3]
 4727 0014 064A     		ldr	r2, .L236+4
 4728 0016 43F02003 		orr	r3, r3, #32
 4729 001a 1360     		str	r3, [r2]
2039:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2040:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
2041:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4730              		.loc 1 2041 5
 4731 001c 034B     		ldr	r3, .L236
 4732              		.loc 1 2041 13
 4733 001e FF22     		movs	r2, #255
 4734 0020 1A60     		str	r2, [r3]
2042:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4735              		.loc 1 2042 1
 4736 0022 00BF     		nop
 4737 0024 BD46     		mov	sp, r7
 4738              		.cfi_def_cfa_register 13
 4739              		@ sp needed
 4740 0026 80BC     		pop	{r7}
 4741              		.cfi_restore 7
 4742              		.cfi_def_cfa_offset 0
 4743 0028 7047     		bx	lr
 4744              	.L237:
 4745 002a 00BF     		.align	2
 4746              	.L236:
 4747 002c 24280040 		.word	1073752100
 4748 0030 08280040 		.word	1073752072
 4749              		.cfi_endproc
 4750              	.LFE162:
 4752              		.section	.text.hals_rtc_bypass_shadow_disable,"ax",%progbits
 4753              		.align	1
 4754              		.global	hals_rtc_bypass_shadow_disable
 4755              		.syntax unified
 4756              		.thumb
 4757              		.thumb_func
 4758              		.fpu softvfp
 4760              	hals_rtc_bypass_shadow_disable:
 4761              	.LFB163:
2043:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2044:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
2045:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      disable RTC bypass shadow registers function
2046:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  none
2047:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
2048:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     none
2049:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
2050:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** void hals_rtc_bypass_shadow_disable(void)
2051:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4762              		.loc 1 2051 1
 4763              		.cfi_startproc
 4764              		@ args = 0, pretend = 0, frame = 0
 4765              		@ frame_needed = 1, uses_anonymous_args = 0
 4766              		@ link register save eliminated.
 4767 0000 80B4     		push	{r7}
 4768              		.cfi_def_cfa_offset 4
 4769              		.cfi_offset 7, -4
 4770 0002 00AF     		add	r7, sp, #0
 4771              		.cfi_def_cfa_register 7
2052:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* disable the write protection */
2053:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY1;
 4772              		.loc 1 2053 5
 4773 0004 094B     		ldr	r3, .L239
 4774              		.loc 1 2053 13
 4775 0006 CA22     		movs	r2, #202
 4776 0008 1A60     		str	r2, [r3]
2054:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_UNLOCK_KEY2;
 4777              		.loc 1 2054 5
 4778 000a 084B     		ldr	r3, .L239
 4779              		.loc 1 2054 13
 4780 000c 5322     		movs	r2, #83
 4781 000e 1A60     		str	r2, [r3]
2055:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2056:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_CTL &= (uint8_t)~RTC_CTL_BPSHAD;
 4782              		.loc 1 2056 13
 4783 0010 074B     		ldr	r3, .L239+4
 4784 0012 1B68     		ldr	r3, [r3]
 4785 0014 064A     		ldr	r2, .L239+4
 4786 0016 03F0DF03 		and	r3, r3, #223
 4787 001a 1360     		str	r3, [r2]
2057:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2058:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* enable the write protection */
2059:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     RTC_WPK = RTC_LOCK_KEY;
 4788              		.loc 1 2059 5
 4789 001c 034B     		ldr	r3, .L239
 4790              		.loc 1 2059 13
 4791 001e FF22     		movs	r2, #255
 4792 0020 1A60     		str	r2, [r3]
2060:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4793              		.loc 1 2060 1
 4794 0022 00BF     		nop
 4795 0024 BD46     		mov	sp, r7
 4796              		.cfi_def_cfa_register 13
 4797              		@ sp needed
 4798 0026 80BC     		pop	{r7}
 4799              		.cfi_restore 7
 4800              		.cfi_def_cfa_offset 0
 4801 0028 7047     		bx	lr
 4802              	.L240:
 4803 002a 00BF     		.align	2
 4804              	.L239:
 4805 002c 24280040 		.word	1073752100
 4806 0030 08280040 		.word	1073752072
 4807              		.cfi_endproc
 4808              	.LFE163:
 4810              		.section	.text.hals_rtc_backup_data_write,"ax",%progbits
 4811              		.align	1
 4812              		.global	hals_rtc_backup_data_write
 4813              		.syntax unified
 4814              		.thumb
 4815              		.thumb_func
 4816              		.fpu softvfp
 4818              	hals_rtc_backup_data_write:
 4819              	.LFB164:
2061:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2062:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
2063:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      write data to backup register
2064:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  backup_index: the index of backup register
2065:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        0 - 4
2066:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  data: the data to be written to backup register
2067:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        0x0 - 0xFFFFFFFF
2068:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
2069:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     error code: HAL_ERR_VAL, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
2070:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
2071:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hals_rtc_backup_data_write(uint32_t backup_index, uint32_t data)
2072:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4820              		.loc 1 2072 1
 4821              		.cfi_startproc
 4822              		@ args = 0, pretend = 0, frame = 16
 4823              		@ frame_needed = 1, uses_anonymous_args = 0
 4824              		@ link register save eliminated.
 4825 0000 80B4     		push	{r7}
 4826              		.cfi_def_cfa_offset 4
 4827              		.cfi_offset 7, -4
 4828 0002 85B0     		sub	sp, sp, #20
 4829              		.cfi_def_cfa_offset 24
 4830 0004 00AF     		add	r7, sp, #0
 4831              		.cfi_def_cfa_register 7
 4832 0006 7860     		str	r0, [r7, #4]
 4833 0008 3960     		str	r1, [r7]
2073:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg = 0x00U;
 4834              		.loc 1 2073 14
 4835 000a 0023     		movs	r3, #0
 4836 000c FB60     		str	r3, [r7, #12]
2074:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2075:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
2076:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter backup_index */
2077:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(backup_index > 4U) {
2078:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [backup_index] value is invalid");
2079:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
2080:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
2081:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
2082:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2083:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg = RTC_BKP0 + (backup_index << 2);
 4837              		.loc 1 2083 11
 4838 000e 074B     		ldr	r3, .L243
 4839 0010 1A68     		ldr	r2, [r3]
 4840              		.loc 1 2083 36
 4841 0012 7B68     		ldr	r3, [r7, #4]
 4842 0014 9B00     		lsls	r3, r3, #2
 4843              		.loc 1 2083 9
 4844 0016 1344     		add	r3, r3, r2
 4845 0018 FB60     		str	r3, [r7, #12]
2084:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     *(__IO uint32_t *)reg = data;
 4846              		.loc 1 2084 6
 4847 001a FB68     		ldr	r3, [r7, #12]
 4848              		.loc 1 2084 27
 4849 001c 3A68     		ldr	r2, [r7]
 4850 001e 1A60     		str	r2, [r3]
2085:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2086:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 4851              		.loc 1 2086 12
 4852 0020 0023     		movs	r3, #0
2087:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4853              		.loc 1 2087 1
 4854 0022 1846     		mov	r0, r3
 4855 0024 1437     		adds	r7, r7, #20
 4856              		.cfi_def_cfa_offset 4
 4857 0026 BD46     		mov	sp, r7
 4858              		.cfi_def_cfa_register 13
 4859              		@ sp needed
 4860 0028 80BC     		pop	{r7}
 4861              		.cfi_restore 7
 4862              		.cfi_def_cfa_offset 0
 4863 002a 7047     		bx	lr
 4864              	.L244:
 4865              		.align	2
 4866              	.L243:
 4867 002c 50280040 		.word	1073752144
 4868              		.cfi_endproc
 4869              	.LFE164:
 4871              		.section	.text.hals_rtc_backup_data_read,"ax",%progbits
 4872              		.align	1
 4873              		.global	hals_rtc_backup_data_read
 4874              		.syntax unified
 4875              		.thumb
 4876              		.thumb_func
 4877              		.fpu softvfp
 4879              	hals_rtc_backup_data_read:
 4880              	.LFB165:
2088:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2089:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
2090:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      read data from backup register
2091:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  backup_index: the index of backup register
2092:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        0 - 4
2093:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] data: the data read from backup register
2094:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****       \arg        0x0 - 0xFFFFFFFF
2095:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     error code: HAL_ERR_VAL, HAL_ERR_NONE, details refer to gd32f3x0_hal.h
2096:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
2097:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** int32_t hals_rtc_backup_data_read(uint32_t backup_index, uint32_t *data)
2098:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4881              		.loc 1 2098 1
 4882              		.cfi_startproc
 4883              		@ args = 0, pretend = 0, frame = 16
 4884              		@ frame_needed = 1, uses_anonymous_args = 0
 4885              		@ link register save eliminated.
 4886 0000 80B4     		push	{r7}
 4887              		.cfi_def_cfa_offset 4
 4888              		.cfi_offset 7, -4
 4889 0002 85B0     		sub	sp, sp, #20
 4890              		.cfi_def_cfa_offset 24
 4891 0004 00AF     		add	r7, sp, #0
 4892              		.cfi_def_cfa_register 7
 4893 0006 7860     		str	r0, [r7, #4]
 4894 0008 3960     		str	r1, [r7]
2099:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint32_t reg = 0x00U;
 4895              		.loc 1 2099 14
 4896 000a 0023     		movs	r3, #0
 4897 000c FB60     		str	r3, [r7, #12]
2100:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2101:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #if (1 == HAL_PARAMETER_CHECK)
2102:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     /* check parameter backup_index */
2103:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     if(backup_index > 4U) {
2104:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         HAL_DEBUGE("parameter [backup_index] value is invalid");
2105:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         return HAL_ERR_VAL;
2106:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
2107:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** #endif /* 1 == HAL_PARAMETER_CHECK */
2108:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2109:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     reg = RTC_BKP0 + (backup_index << 2);
 4898              		.loc 1 2109 11
 4899 000e 084B     		ldr	r3, .L247
 4900 0010 1A68     		ldr	r2, [r3]
 4901              		.loc 1 2109 36
 4902 0012 7B68     		ldr	r3, [r7, #4]
 4903 0014 9B00     		lsls	r3, r3, #2
 4904              		.loc 1 2109 9
 4905 0016 1344     		add	r3, r3, r2
 4906 0018 FB60     		str	r3, [r7, #12]
2110:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     *data = (*(__IO uint32_t *)reg);
 4907              		.loc 1 2110 15
 4908 001a FB68     		ldr	r3, [r7, #12]
 4909              		.loc 1 2110 14
 4910 001c 1A68     		ldr	r2, [r3]
 4911              		.loc 1 2110 11
 4912 001e 3B68     		ldr	r3, [r7]
 4913 0020 1A60     		str	r2, [r3]
2111:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2112:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return HAL_ERR_NONE;
 4914              		.loc 1 2112 12
 4915 0022 0023     		movs	r3, #0
2113:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4916              		.loc 1 2113 1
 4917 0024 1846     		mov	r0, r3
 4918 0026 1437     		adds	r7, r7, #20
 4919              		.cfi_def_cfa_offset 4
 4920 0028 BD46     		mov	sp, r7
 4921              		.cfi_def_cfa_register 13
 4922              		@ sp needed
 4923 002a 80BC     		pop	{r7}
 4924              		.cfi_restore 7
 4925              		.cfi_def_cfa_offset 0
 4926 002c 7047     		bx	lr
 4927              	.L248:
 4928 002e 00BF     		.align	2
 4929              	.L247:
 4930 0030 50280040 		.word	1073752144
 4931              		.cfi_endproc
 4932              	.LFE165:
 4934              		.section	.text.hals_rtc_bcd_2_normal,"ax",%progbits
 4935              		.align	1
 4936              		.global	hals_rtc_bcd_2_normal
 4937              		.syntax unified
 4938              		.thumb
 4939              		.thumb_func
 4940              		.fpu softvfp
 4942              	hals_rtc_bcd_2_normal:
 4943              	.LFB166:
2114:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2115:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
2116:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      convert from  BCD format to binary format
2117:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  data: data to be converted
2118:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
2119:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     converted data
2120:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
2121:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** uint8_t hals_rtc_bcd_2_normal(uint8_t data)
2122:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 4944              		.loc 1 2122 1
 4945              		.cfi_startproc
 4946              		@ args = 0, pretend = 0, frame = 16
 4947              		@ frame_needed = 1, uses_anonymous_args = 0
 4948              		@ link register save eliminated.
 4949 0000 80B4     		push	{r7}
 4950              		.cfi_def_cfa_offset 4
 4951              		.cfi_offset 7, -4
 4952 0002 85B0     		sub	sp, sp, #20
 4953              		.cfi_def_cfa_offset 24
 4954 0004 00AF     		add	r7, sp, #0
 4955              		.cfi_def_cfa_register 7
 4956 0006 0346     		mov	r3, r0
 4957 0008 FB71     		strb	r3, [r7, #7]
2123:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint8_t temp = 0U;
 4958              		.loc 1 2123 13
 4959 000a 0023     		movs	r3, #0
 4960 000c FB73     		strb	r3, [r7, #15]
2124:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     temp = ((uint8_t)(data & (uint8_t)0xF0) >> (uint8_t)0x4) * 10;
 4961              		.loc 1 2124 45
 4962 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4963 0010 1B09     		lsrs	r3, r3, #4
 4964 0012 DBB2     		uxtb	r3, r3
 4965              		.loc 1 2124 10
 4966 0014 1A46     		mov	r2, r3
 4967 0016 9200     		lsls	r2, r2, #2
 4968 0018 1344     		add	r3, r3, r2
 4969 001a 5B00     		lsls	r3, r3, #1
 4970 001c FB73     		strb	r3, [r7, #15]
2125:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return (temp + (data & (uint8_t)0x0F));
 4971              		.loc 1 2125 26
 4972 001e FB79     		ldrb	r3, [r7, #7]
 4973 0020 03F00F03 		and	r3, r3, #15
 4974 0024 DAB2     		uxtb	r2, r3
 4975              		.loc 1 2125 18
 4976 0026 FB7B     		ldrb	r3, [r7, #15]
 4977 0028 1344     		add	r3, r3, r2
 4978 002a DBB2     		uxtb	r3, r3
2126:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 4979              		.loc 1 2126 1
 4980 002c 1846     		mov	r0, r3
 4981 002e 1437     		adds	r7, r7, #20
 4982              		.cfi_def_cfa_offset 4
 4983 0030 BD46     		mov	sp, r7
 4984              		.cfi_def_cfa_register 13
 4985              		@ sp needed
 4986 0032 80BC     		pop	{r7}
 4987              		.cfi_restore 7
 4988              		.cfi_def_cfa_offset 0
 4989 0034 7047     		bx	lr
 4990              		.cfi_endproc
 4991              	.LFE166:
 4993              		.section	.text.hals_rtc_normal_2_bcd,"ax",%progbits
 4994              		.align	1
 4995              		.global	hals_rtc_normal_2_bcd
 4996              		.syntax unified
 4997              		.thumb
 4998              		.thumb_func
 4999              		.fpu softvfp
 5001              	hals_rtc_normal_2_bcd:
 5002              	.LFB167:
2127:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2128:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** /*!
2129:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \brief      convert from  BCD format to binary format
2130:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[in]  data: data to be converted
2131:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \param[out] none
2132:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     \retval     converted data
2133:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** */
2134:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** uint8_t hals_rtc_normal_2_bcd(uint8_t data)
2135:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** {
 5003              		.loc 1 2135 1
 5004              		.cfi_startproc
 5005              		@ args = 0, pretend = 0, frame = 16
 5006              		@ frame_needed = 1, uses_anonymous_args = 0
 5007              		@ link register save eliminated.
 5008 0000 80B4     		push	{r7}
 5009              		.cfi_def_cfa_offset 4
 5010              		.cfi_offset 7, -4
 5011 0002 85B0     		sub	sp, sp, #20
 5012              		.cfi_def_cfa_offset 24
 5013 0004 00AF     		add	r7, sp, #0
 5014              		.cfi_def_cfa_register 7
 5015 0006 0346     		mov	r3, r0
 5016 0008 FB71     		strb	r3, [r7, #7]
2136:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     uint8_t bcd_high = 0;
 5017              		.loc 1 2136 13
 5018 000a 0023     		movs	r3, #0
 5019 000c FB73     		strb	r3, [r7, #15]
2137:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     while(data >= 10) {
 5020              		.loc 1 2138 10
 5021 000e 05E0     		b	.L252
 5022              	.L253:
2139:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         bcd_high++;
 5023              		.loc 1 2139 17
 5024 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5025 0012 0133     		adds	r3, r3, #1
 5026 0014 FB73     		strb	r3, [r7, #15]
2140:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         data -= 10;
 5027              		.loc 1 2140 14
 5028 0016 FB79     		ldrb	r3, [r7, #7]
 5029 0018 0A3B     		subs	r3, r3, #10
 5030 001a FB71     		strb	r3, [r7, #7]
 5031              	.L252:
2138:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****         bcd_high++;
 5032              		.loc 1 2138 10
 5033 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5034 001e 092B     		cmp	r3, #9
 5035 0020 F6D8     		bhi	.L253
2141:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     }
2142:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** 
2143:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c ****     return ((uint8_t)(bcd_high << 4) | data);
 5036              		.loc 1 2143 13
 5037 0022 FB7B     		ldrb	r3, [r7, #15]
 5038 0024 1B01     		lsls	r3, r3, #4
 5039 0026 DAB2     		uxtb	r2, r3
 5040              		.loc 1 2143 38
 5041 0028 FB79     		ldrb	r3, [r7, #7]
 5042 002a 1343     		orrs	r3, r3, r2
 5043 002c DBB2     		uxtb	r3, r3
2144:../firmware/gd32f3x0_hal_peripheral/Source/gd32f3x0_hal_rtc.c **** }
 5044              		.loc 1 2144 1
 5045 002e 1846     		mov	r0, r3
 5046 0030 1437     		adds	r7, r7, #20
 5047              		.cfi_def_cfa_offset 4
 5048 0032 BD46     		mov	sp, r7
 5049              		.cfi_def_cfa_register 13
 5050              		@ sp needed
 5051 0034 80BC     		pop	{r7}
 5052              		.cfi_restore 7
 5053              		.cfi_def_cfa_offset 0
 5054 0036 7047     		bx	lr
 5055              		.cfi_endproc
 5056              	.LFE167:
 5058              		.text
 5059              	.Letext0:
 5060              		.file 2 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 5061              		.file 3 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 5062              		.file 4 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 5063              		.file 5 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 5064              		.file 6 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 5065              		.file 7 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-arm
 5066              		.file 8 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal.h"
 5067              		.file 9 "../firmware/cmsis/inc/core_cm4.h"
 5068              		.file 10 "../firmware/cmsis/inc/system_gd32f3x0.h"
 5069              		.file 11 "../firmware/cmsis/inc/gd32f3x0.h"
 5070              		.file 12 "c:\\program files\\embeddedbuilder_v1.1.0.18805\\tools\\gnu tools arm embedded\\xpack-ar
 5071              		.file 13 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_exti.h"
 5072              		.file 14 "../firmware/GD32f3x0_hal_peripheral/Include/gd32f3x0_hal_rtc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gd32f3x0_hal_rtc.c
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:16     .text.hal_rtc_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:24     .text.hal_rtc_init:00000000 hal_rtc_init
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3263   .text.hals_rtc_init_mode_enter:00000000 hals_rtc_init_mode_enter
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:5001   .text.hals_rtc_normal_2_bcd:00000000 hals_rtc_normal_2_bcd
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3360   .text.hals_rtc_init_mode_exit:00000000 hals_rtc_init_mode_exit
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3402   .text.hals_rtc_register_sync_wait:00000000 hals_rtc_register_sync_wait
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:259    .text.hal_rtc_init:0000016c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:268    .text.hal_rtc_alarm_output_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:275    .text.hal_rtc_alarm_output_config:00000000 hal_rtc_alarm_output_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:366    .text.hal_rtc_alarm_output_config:00000070 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:373    .text.hal_rtc_alarm_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:380    .text.hal_rtc_alarm_config:00000000 hal_rtc_alarm_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3735   .text.hals_rtc_alarm_disable:00000000 hals_rtc_alarm_disable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:546    .text.hal_rtc_alarm_config:000000e8 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:553    .text.hal_rtc_tamp_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:560    .text.hal_rtc_tamp_config:00000000 hal_rtc_tamp_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:681    .text.hal_rtc_tamp_config:00000098 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:686    .text.hal_rtc_timestamp_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:693    .text.hal_rtc_timestamp_config:00000000 hal_rtc_timestamp_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:766    .text.hal_rtc_timestamp_config:00000058 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:772    .text.hal_rtc_calib_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:779    .text.hal_rtc_calib_config:00000000 hal_rtc_calib_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:884    .text.hal_rtc_calib_config:00000088 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:890    .text.hal_rtc_refclock_detection_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:897    .text.hal_rtc_refclock_detection_config:00000000 hal_rtc_refclock_detection_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1004   .text.hal_rtc_refclock_detection_config:00000088 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1010   .text.hal_rtc_struct_init:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1017   .text.hal_rtc_struct_init:00000000 hal_rtc_struct_init
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1042   .text.hal_rtc_struct_init:0000001c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1049   .text.hal_rtc_struct_init:00000038 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1310   .text.hal_rtc_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1317   .text.hal_rtc_deinit:00000000 hal_rtc_deinit
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1449   .text.hal_rtc_deinit:000000a4 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1463   .text.hal_rtc_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1470   .text.hal_rtc_interrupt_enable:00000000 hal_rtc_interrupt_enable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4329   .text.hals_rtc_flag_clear:00000000 hals_rtc_flag_clear
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4110   .text.hals_rtc_interrupt_enable:00000000 hals_rtc_interrupt_enable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4188   .text.hals_rtc_interrupt_disable:00000000 hals_rtc_interrupt_disable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1618   .text.hal_rtc_interrupt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1625   .text.hal_rtc_interrupt_disable:00000000 hal_rtc_interrupt_disable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1704   .text.hal_rtc_irq:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1711   .text.hal_rtc_irq:00000000 hal_rtc_irq
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4270   .text.hals_rtc_flag_get:00000000 hals_rtc_flag_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1914   .text.hal_rtc_irq:00000134 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1921   .text.hal_rtc_irq_handle_set:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:1928   .text.hal_rtc_irq_handle_set:00000000 hal_rtc_irq_handle_set
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3677   .text.hals_rtc_alarm_enable:00000000 hals_rtc_alarm_enable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2112   .text.hal_rtc_irq_handle_set:00000118 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2117   .text.hal_rtc_irq_handle_all_reset:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2124   .text.hal_rtc_irq_handle_all_reset:00000000 hal_rtc_irq_handle_all_reset
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2170   .text.hal_rtc_current_time_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2177   .text.hal_rtc_current_time_get:00000000 hal_rtc_current_time_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4942   .text.hals_rtc_bcd_2_normal:00000000 hals_rtc_bcd_2_normal
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2380   .text.hal_rtc_current_time_get:00000134 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2389   .text.hal_rtc_alarm_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2396   .text.hal_rtc_alarm_get:00000000 hal_rtc_alarm_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2543   .text.hal_rtc_alarm_get:000000dc $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2549   .text.hal_rtc_alarm_event_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2556   .text.hal_rtc_alarm_event_poll:00000000 hal_rtc_alarm_event_poll
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2625   .text.hal_rtc_alarm_event_poll:00000054 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2630   .text.hal_rtc_timestamp_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2637   .text.hal_rtc_timestamp_get:00000000 hal_rtc_timestamp_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2776   .text.hal_rtc_timestamp_get:000000cc $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2783   .text.hal_rtc_timestamp_event_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2790   .text.hal_rtc_timestamp_event_poll:00000000 hal_rtc_timestamp_event_poll
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2882   .text.hal_rtc_timestamp_event_poll:00000078 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2887   .text.hal_rtc_tamper0_event_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2894   .text.hal_rtc_tamper0_event_poll:00000000 hal_rtc_tamper0_event_poll
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2963   .text.hal_rtc_tamper0_event_poll:00000054 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2968   .text.hal_rtc_tamper1_event_poll:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:2975   .text.hal_rtc_tamper1_event_poll:00000000 hal_rtc_tamper1_event_poll
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3044   .text.hal_rtc_tamper1_event_poll:00000054 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3049   .text.hal_rtc_daylight_saving_time_adjust:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3056   .text.hal_rtc_daylight_saving_time_adjust:00000000 hal_rtc_daylight_saving_time_adjust
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3118   .text.hal_rtc_daylight_saving_time_adjust:00000044 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3124   .text.hals_rtc_deinit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3131   .text.hals_rtc_deinit:00000000 hals_rtc_deinit
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3240   .text.hals_rtc_deinit:00000080 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3256   .text.hals_rtc_init_mode_enter:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3348   .text.hals_rtc_init_mode_enter:00000064 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3353   .text.hals_rtc_init_mode_exit:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3390   .text.hals_rtc_init_mode_exit:00000018 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3395   .text.hals_rtc_register_sync_wait:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3503   .text.hals_rtc_register_sync_wait:00000074 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3510   .text.hals_rtc_subsecond_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3517   .text.hals_rtc_subsecond_get:00000000 hals_rtc_subsecond_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3558   .text.hals_rtc_subsecond_get:00000020 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3564   .text.hals_rtc_alarm_subsecond_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3571   .text.hals_rtc_alarm_subsecond_config:00000000 hals_rtc_alarm_subsecond_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3624   .text.hals_rtc_alarm_subsecond_config:00000030 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3630   .text.hals_rtc_alarm_subsecond_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3637   .text.hals_rtc_alarm_subsecond_get:00000000 hals_rtc_alarm_subsecond_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3665   .text.hals_rtc_alarm_subsecond_get:00000014 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3670   .text.hals_rtc_alarm_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3722   .text.hals_rtc_alarm_enable:0000002c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3728   .text.hals_rtc_alarm_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3822   .text.hals_rtc_alarm_disable:00000064 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3829   .text.hals_rtc_timestamp_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3836   .text.hals_rtc_timestamp_enable:00000000 hals_rtc_timestamp_enable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3901   .text.hals_rtc_timestamp_enable:00000048 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3907   .text.hals_rtc_timestamp_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3914   .text.hals_rtc_timestamp_disable:00000000 hals_rtc_timestamp_disable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3959   .text.hals_rtc_timestamp_disable:0000002c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3965   .text.hals_rtc_timestamp_subsecond_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3972   .text.hals_rtc_timestamp_subsecond_get:00000000 hals_rtc_timestamp_subsecond_get
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:3999   .text.hals_rtc_timestamp_subsecond_get:00000010 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4004   .text.hals_rtc_tamper_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4011   .text.hals_rtc_tamper_enable:00000000 hals_rtc_tamper_enable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4047   .text.hals_rtc_tamper_enable:00000020 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4052   .text.hals_rtc_tamper_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4059   .text.hals_rtc_tamper_disable:00000000 hals_rtc_tamper_disable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4098   .text.hals_rtc_tamper_disable:00000020 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4103   .text.hals_rtc_interrupt_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4174   .text.hals_rtc_interrupt_enable:00000044 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4181   .text.hals_rtc_interrupt_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4256   .text.hals_rtc_interrupt_disable:00000048 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4263   .text.hals_rtc_flag_get:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4317   .text.hals_rtc_flag_get:00000028 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4322   .text.hals_rtc_flag_clear:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4368   .text.hals_rtc_flag_clear:00000020 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4373   .text.hals_rtc_alter_output_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4380   .text.hals_rtc_alter_output_config:00000000 hals_rtc_alter_output_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4458   .text.hals_rtc_alter_output_config:00000060 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4465   .text.hals_rtc_calibration_config:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4472   .text.hals_rtc_calibration_config:00000000 hals_rtc_calibration_config
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4569   .text.hals_rtc_calibration_config:00000070 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4576   .text.hals_rtc_second_adjust:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4583   .text.hals_rtc_second_adjust:00000000 hals_rtc_second_adjust
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4687   .text.hals_rtc_second_adjust:00000080 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4695   .text.hals_rtc_bypass_shadow_enable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4702   .text.hals_rtc_bypass_shadow_enable:00000000 hals_rtc_bypass_shadow_enable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4747   .text.hals_rtc_bypass_shadow_enable:0000002c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4753   .text.hals_rtc_bypass_shadow_disable:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4760   .text.hals_rtc_bypass_shadow_disable:00000000 hals_rtc_bypass_shadow_disable
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4805   .text.hals_rtc_bypass_shadow_disable:0000002c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4811   .text.hals_rtc_backup_data_write:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4818   .text.hals_rtc_backup_data_write:00000000 hals_rtc_backup_data_write
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4867   .text.hals_rtc_backup_data_write:0000002c $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4872   .text.hals_rtc_backup_data_read:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4879   .text.hals_rtc_backup_data_read:00000000 hals_rtc_backup_data_read
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4930   .text.hals_rtc_backup_data_read:00000030 $d
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4935   .text.hals_rtc_bcd_2_normal:00000000 $t
C:\Users\peter\AppData\Local\Temp\cck8N8Ik.s:4994   .text.hals_rtc_normal_2_bcd:00000000 $t
                           .group:00000000 wm4.0.b316ac8f61e0e6e0285f1e03e5bd3513
                           .group:00000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:00000000 wm4._newlib_version.h.4.9ba035841e762c3308916a0ce96032e7
                           .group:00000000 wm4.newlib.h.18.ac66930cc5dc086504ebba5cc05ab7f1
                           .group:00000000 wm4.ieeefp.h.77.d5685ba212d3ed6e914898d045f873e3
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:00000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:00000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:00000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:00000000 wm4.gd32f3x0_hal.h.52.43337a488df56bad1a66550eb74593ea
                           .group:00000000 wm4.gd32f3x0.h.36.5dfcb46b6e5e152feffb6039fee007e2
                           .group:00000000 wm4.core_cm4.h.47.434d5634a5df7142236685d6945e71d7
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.7d82f39a4c9e2de723b837137e6ae289
                           .group:00000000 wm4.gd32f3x0.h.180.82f67477079136206c5871e7542ee564
                           .group:00000000 wm4.gd32f3x0_libopt.h.36.45b869ab1209cc1a50f3dfc76a311cb9
                           .group:00000000 wm4.gd32f3x0_hal_dma.h.41.ca879783be1737b965b3ae4e7f93f872
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:00000000 wm4.gd32f3x0_hal_fmc.h.43.2987de260e370bf3f5b8a24cb7cf3bf8
                           .group:00000000 wm4.gd32f3x0_hal_pmu.h.36.5635520c461bb7aaf91bffd9cbfc72ad
                           .group:00000000 wm4.gd32f3x0_hal_gpio.h.36.a12be1408d39f193128846456cde3d37
                           .group:00000000 wm4.gd32f3x0_hal_rcu.h.38.87d0c22ec8715f857cfeeefdccb19c2d
                           .group:00000000 wm4.gd32f3x0_hal_exti.h.36.1ea5944bb2717abba6eb4f5f2b24bf84
                           .group:00000000 wm4.gd32f3x0_hal_sys.h.35.2ceb07a2f85f308445b52768bbccb36f
                           .group:00000000 wm4.gd32f3x0_hal_syscfg.h.36.72a727ef72a22345530b3ff53cbe3ce3
                           .group:00000000 wm4.gd32f3x0_hal_nvic.h.36.4aa8cd20672a0a2c198d8567b1de409e
                           .group:00000000 wm4.gd32f3x0_hal_cmp.h.36.f85d9d5e9ce0d5ec5a6c328e83b87368
                           .group:00000000 wm4.gd32f3x0_hal_crc.h.36.1900d76e2c07c18b1ef1c9b856f287b8
                           .group:00000000 wm4.gd32f3x0_hal_adc.h.36.8c3322d47f1ee3cab423f686efb96e34
                           .group:00000000 wm4.gd32f3x0_hal_ctc.h.36.847bc0cba62101d5ce7e8bf46a1d8bff
                           .group:00000000 wm4.gd32f3x0_hal_fwdgt.h.37.9a77d48f0ebb1bea9efac8306d3abfa3
                           .group:00000000 wm4.gd32f3x0_hal_wwdgt.h.36.19843a8487f7f073536e58bdf0d3f2d3
                           .group:00000000 wm4.gd32f3x0_hal_spi_com.h.36.6baebef46bf9bda5babad635e2a47342
                           .group:00000000 wm4.gd32f3x0_hal_spi.h.36.c5af6148e40a30fadbbdd1f06ceea13d
                           .group:00000000 wm4.gd32f3x0_hal_i2s.h.36.e903082eeeee8f5fb4aff85df922f163
                           .group:00000000 wm4.gd32f3x0_hal_usart_com.h.36.69752e97184d87492213ad2f277017fc
                           .group:00000000 wm4.gd32f3x0_hal_uart.h.36.cbee0c6c192eff6011d6338977fcd04b
                           .group:00000000 wm4.gd32f3x0_hal_usrt.h.36.ffd63cfab4e0501d677bc717158e43a6
                           .group:00000000 wm4.gd32f3x0_hal_irda.h.36.3910de0ccf8d5623643304fed3f81eb2
                           .group:00000000 wm4.gd32f3x0_hal_smartcard.h.36.ab9bc113f17ef2e0fb1ebed69f0678d8
                           .group:00000000 wm4.gd32f3x0_hal_rtc.h.36.5e01e9f7c643662797b76c8fb127db6a
                           .group:00000000 wm4.gd32f3x0_hal_i2c_com.h.36.93c032b15c0ba33e15ba767e036a725b
                           .group:00000000 wm4.gd32f3x0_hal_i2c.h.36.5070b63e35481aadf06d643445a9b538
                           .group:00000000 wm4.gd32f3x0_hal_smbus.h.36.ff84c1a5256828a88dd698d2f412ded9
                           .group:00000000 wm4.gd32f3x0_hal_timer.h.36.1cc370b1b382cdb697c16ab5f59079f9
                           .group:00000000 wm4.gd32f3x0_hal.h.138.6420920baed40fecd6e3a38f9485824a

UNDEFINED SYMBOLS
hal_exti_internal_init
hal_sys_basetick_count_get
hal_sys_basetick_timeout_check
